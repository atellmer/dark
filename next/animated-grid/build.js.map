{"version":3,"file":"build.js","mappings":"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","sources":["webpack://dark-animated-grid/../../packages/core/src/constants.ts","webpack://dark-animated-grid/../../packages/core/src/component/component.ts","webpack://dark-animated-grid/../../packages/core/src/utils/utils.ts","webpack://dark-animated-grid/../../packages/core/src/view/view.ts","webpack://dark-animated-grid/../../packages/core/src/platform/platform.ts","webpack://dark-animated-grid/../../packages/core/src/emitter/emitter.ts","webpack://dark-animated-grid/../../packages/core/src/scope/scope.ts","webpack://dark-animated-grid/../../packages/core/src/memo/memo.ts","webpack://dark-animated-grid/../../packages/core/src/use-memo/use-memo.ts","webpack://dark-animated-grid/../../packages/core/src/fiber/fiber.ts","webpack://dark-animated-grid/../../packages/core/src/walk/walk.ts","webpack://dark-animated-grid/../../packages/core/src/fragment/fragment.ts","webpack://dark-animated-grid/../../packages/core/src/use-effect/use-effect.ts","webpack://dark-animated-grid/../../packages/core/src/use-layout-effect/use-layout-effect.ts","webpack://dark-animated-grid/../../packages/core/src/use-insertion-effect/use-insertion-effect.ts","webpack://dark-animated-grid/../../packages/core/src/unmount/unmount.ts","webpack://dark-animated-grid/../../packages/core/src/workloop/workloop.ts","webpack://dark-animated-grid/../../packages/core/src/scheduler/scheduler.ts","webpack://dark-animated-grid/../../packages/core/src/use-update/use-update.ts","webpack://dark-animated-grid/../../packages/core/src/batch/batch.ts","webpack://dark-animated-grid/../../packages/core/src/use-state/use-state.ts","webpack://dark-animated-grid/../../packages/core/src/use-callback/use-callback.ts","webpack://dark-animated-grid/../../packages/core/src/ref/ref.ts","webpack://dark-animated-grid/../../packages/core/src/element/element.ts","webpack://dark-animated-grid/../../packages/platform-browser/src/portal/portal.ts","webpack://dark-animated-grid/../../packages/platform-browser/src/events/events.ts","webpack://dark-animated-grid/../../packages/platform-browser/src/constants.ts","webpack://dark-animated-grid/../../packages/platform-browser/src/dom/dom.ts","webpack://dark-animated-grid/../../packages/platform-browser/src/render/render.ts","webpack://dark-animated-grid/./index.tsx","webpack://dark-animated-grid/../../packages/platform-browser/src/create-root/create-root.tsx"],"sourcesContent":["export const VERSION = '0.25.1';\r\nexport const ROOT = 'dark:root';\r\nexport const REPLACER = 'dark:matter';\r\nexport const INDEX_KEY = 'dark:idx';\r\nexport const KEY_ATTR = 'key';\r\nexport const REF_ATTR = 'ref';\r\nexport const CREATE_EFFECT_TAG = 'C';\r\nexport const UPDATE_EFFECT_TAG = 'U';\r\nexport const DELETE_EFFECT_TAG = 'D';\r\nexport const SKIP_EFFECT_TAG = 'S';\r\nexport const INSERTION_EFFECT_HOST_MASK = 1;\r\nexport const LAYOUT_EFFECT_HOST_MASK = 2;\r\nexport const ASYNC_EFFECT_HOST_MASK = 4;\r\nexport const ATOM_HOST_MASK = 8;\r\nexport const PORTAL_HOST_MASK = 16;\r\nexport const SHADOW_MASK = 32;\r\nexport const FLUSH_MASK = 64;\r\nexport const MOVE_MASK = 128;\r\nexport const HOOK_DELIMETER = ':';\r\nexport const YIELD_INTERVAL = 6;\r\nexport const APP_STATE_ATTR = 'dark-app-state';\r\n\r\nexport enum TaskPriority {\r\n  LOW = 0,\r\n  NORMAL = 1,\r\n  HIGH = 2,\r\n}\r\n\r\nexport enum Flag {\r\n  SKIP_SCAN_OPT = '__skipScanOpt',\r\n  MEMO_SLOT_OPT = '__memoSlotOpt',\r\n  STATIC_SLOT_OPT = '__staticSlotOpt',\r\n}\r\n\r\nexport const FLAGS = {\r\n  __skipScanOpt: true,\r\n  __memoSlotOpt: true,\r\n  __staticSlotOpt: true,\r\n};\r\n\r\nexport const ATTR_BLACK_LIST = {\r\n  [KEY_ATTR]: true,\r\n  [REF_ATTR]: true,\r\n  [Flag.SKIP_SCAN_OPT]: true,\r\n  [Flag.MEMO_SLOT_OPT]: true,\r\n  [Flag.STATIC_SLOT_OPT]: true,\r\n};\r\n","import type { ElementKey, Instance, DarkElement, RefProps, KeyProps, FlagProps } from '../shared';\r\nimport { KEY_ATTR } from '../constants';\r\nimport { error } from '../utils';\r\nimport { type Ref } from '../ref';\r\n\r\nconst $$inject = Symbol('inject');\r\nclass Component<P extends StandardComponentProps = any, R = any> {\r\n  type: CreateElement<P>;\r\n  props: P;\r\n  ref?: Ref<R>;\r\n  token?: Symbol;\r\n  displayName?: string;\r\n  shouldUpdate?: ShouldUpdate<P>;\r\n  children: Array<Instance> = [];\r\n\r\n  constructor(\r\n    type: CreateElement<P>,\r\n    token: Symbol,\r\n    props: P,\r\n    ref: Ref<R>,\r\n    shouldUpdate: ShouldUpdate<P>,\r\n    displayName: string,\r\n  ) {\r\n    this.type = type;\r\n    this.props = props;\r\n    ref && (this.ref = ref);\r\n    token && (this.token = token);\r\n    shouldUpdate && (this.shouldUpdate = shouldUpdate);\r\n    displayName && (this.displayName = displayName);\r\n  }\r\n}\r\n\r\nfunction component<P extends object, R = unknown>(type: CreateElement<P, R>, options: ComponentOptions = {}) {\r\n  const { token: $token, displayName } = options;\r\n  type Props = P & StandardComponentProps;\r\n  const factory: ComponentFactoryWithPossiblyInject<Props, R> = (props = {} as Props, ref?: Ref<R>) => {\r\n    const { token = $token, shouldUpdate } = factory[$$inject] || defaultInject;\r\n\r\n    if (props.ref) {\r\n      delete props.ref;\r\n\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        process.env.NODE_ENV === 'development' &&\r\n          error(`[Dark]: To use ref you need to wrap the component with forwardRef!`);\r\n      }\r\n    }\r\n\r\n    return new Component(type, token, props, ref, shouldUpdate, displayName);\r\n  };\r\n\r\n  return factory as ComponentFactory<Props, R>;\r\n}\r\n\r\nconst defaultInject: ComponentInject = {};\r\n\r\nconst detectIsComponent = (x: unknown): x is Component => x instanceof Component;\r\n\r\nconst getComponentKey = (x: Component): ElementKey => x.props[KEY_ATTR] ?? null;\r\n\r\nconst hasComponentFlag = (inst: Component, flag: string) => Boolean(inst.props[flag]);\r\n\r\ntype ComponentOptions = Readonly<{\r\n  displayName?: string;\r\n  token?: Symbol;\r\n}>;\r\n\r\ntype ComponentFactoryWithPossiblyInject<P extends object = {}, R = unknown> = {\r\n  (props?: P, ref?: Ref<R>): Component<P, R>;\r\n  [$$inject]?: ComponentInject<P>;\r\n};\r\n\r\ntype CreateElement<P extends StandardComponentProps, R = unknown> = (props: P, ref?: Ref<R>) => DarkElement;\r\n\r\nexport type ComponentInject<P extends object = {}> = Readonly<{\r\n  token?: Symbol;\r\n  shouldUpdate?: ShouldUpdate<P>;\r\n}>;\r\n\r\nexport type ShouldUpdate<P> = (prevProps: P, nextProps: P) => boolean;\r\n\r\nexport type StandardComponentProps = KeyProps & RefProps & FlagProps;\r\n\r\nexport type ComponentFactory<P extends object = {}, R = unknown> = (props?: P, ref?: Ref<R>) => Component<P, R>;\r\n\r\nexport { Component, component, $$inject, detectIsComponent, getComponentKey, hasComponentFlag };\r\n","import type { NestedArray } from '../shared';\r\nimport { INDEX_KEY } from '../constants';\r\n\r\nconst detectIsFunction = (o: any): o is Function => typeof o === 'function';\r\n\r\nconst detectIsUndefined = (o: any): o is undefined => typeof o === 'undefined';\r\n\r\nconst detectIsNumber = (o: any): o is number => typeof o === 'number';\r\n\r\nconst detectIsString = (o: any): o is string => typeof o === 'string';\r\n\r\nconst detectIsTextBased = (o: any): o is string | number => typeof o === 'string' || typeof o === 'number';\r\n\r\nconst detectIsObject = (o: any): o is object => typeof o === 'object';\r\n\r\nconst detectIsBoolean = (o: any): o is boolean => typeof o === 'boolean';\r\n\r\nconst detectIsArray = (o: any): o is Array<any> => Array.isArray(o);\r\n\r\nconst detectIsNull = (o: any): o is null => o === null;\r\n\r\nconst detectIsEmpty = (o: any) => detectIsNull(o) || detectIsUndefined(o);\r\n\r\nconst detectIsFalsy = (o: any) => detectIsEmpty(o) || o === false;\r\n\r\nconst getTime = () => Date.now();\r\n\r\nconst dummyFn = () => {};\r\n\r\nconst trueFn = () => true;\r\n\r\nconst falseFn = () => false;\r\n\r\nconst sameFn = <T = any>(x: T) => x;\r\n\r\nconst error = (...args: Array<any>) => !detectIsUndefined(console) && console.error(...args);\r\n\r\nfunction flatten<T = any>(source: Array<NestedArray<T>>, transform: (x: T) => any = sameFn): Array<T> {\r\n  if (detectIsArray(source)) {\r\n    if (source.length === 0) return [];\r\n  } else {\r\n    return [transform(source)];\r\n  }\r\n  const list: Array<T> = [];\r\n  const stack = [source[0]];\r\n  let idx = 0;\r\n\r\n  while (stack.length > 0) {\r\n    const x = stack.pop();\r\n\r\n    if (detectIsArray(x)) {\r\n      for (let i = x.length - 1; i >= 0; i--) {\r\n        stack.push(x[i]);\r\n      }\r\n    } else {\r\n      list.push(transform(x));\r\n\r\n      if (stack.length === 0 && idx < source.length - 1) {\r\n        idx++;\r\n        stack.push(source[idx]);\r\n      }\r\n    }\r\n  }\r\n\r\n  return list;\r\n}\r\n\r\nfunction keyBy<T = any>(\r\n  list: Array<T>,\r\n  fn: (o: T) => string | number,\r\n  value = false,\r\n): Record<string | number, T | boolean> {\r\n  return list.reduce((acc, x) => ((acc[fn(x)] = value ? x : true), acc), {});\r\n}\r\n\r\nfunction detectAreDepsDifferent(prevDeps: Array<unknown>, nextDeps: Array<unknown>): boolean {\r\n  if (prevDeps === nextDeps) return false;\r\n  const max = Math.max(prevDeps.length, nextDeps.length);\r\n\r\n  for (let i = 0; i < max; i++) {\r\n    if (!Object.is(prevDeps[i], nextDeps[i])) return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nfunction nextTick(callback: () => void) {\r\n  Promise.resolve().then(callback);\r\n}\r\n\r\nconst createIndexKey = (idx: number) => `${INDEX_KEY}:${idx}`;\r\n\r\nexport {\r\n  detectIsFunction,\r\n  detectIsUndefined,\r\n  detectIsNumber,\r\n  detectIsString,\r\n  detectIsTextBased,\r\n  detectIsObject,\r\n  detectIsBoolean,\r\n  detectIsArray,\r\n  detectIsNull,\r\n  detectIsEmpty,\r\n  detectIsFalsy,\r\n  getTime,\r\n  dummyFn,\r\n  trueFn,\r\n  falseFn,\r\n  error,\r\n  flatten,\r\n  keyBy,\r\n  detectAreDepsDifferent,\r\n  nextTick,\r\n  createIndexKey,\r\n};\r\n","import type { ElementKey, DarkElement, Instance, SlotProps, RefProps, KeyProps, FlagProps } from '../shared';\r\nimport { type Component, detectIsComponent, getComponentKey, hasComponentFlag } from '../component';\r\nimport { detectIsArray, detectIsFunction } from '../utils';\r\nimport { REPLACER, KEY_ATTR } from '../constants';\r\nimport { $$scope } from '../scope';\r\n\r\nconst $$vNode = Symbol('vNode');\r\nconst ATTR_TYPE = 'type';\r\n\r\nclass VirtualNode {\r\n  type: NodeType = null;\r\n\r\n  constructor(type: NodeType) {\r\n    this.type = type;\r\n  }\r\n}\r\n\r\nclass TagVirtualNode extends VirtualNode {\r\n  name: string;\r\n  attrs: Record<string, any>;\r\n  children: Array<TextVirtualNode | CommentVirtualNode | TagVirtualNode | VirtualNodeFactory | Component>;\r\n\r\n  constructor(name: string, attrs: TagVirtualNode['attrs'], children: TagVirtualNode['children']) {\r\n    super(NodeType.TAG);\r\n    this.name = name;\r\n    this.attrs = attrs;\r\n    this.children = children;\r\n  }\r\n}\r\n\r\nclass TextVirtualNode extends VirtualNode {\r\n  value: string;\r\n\r\n  constructor(source: TextSource) {\r\n    super(NodeType.TEXT);\r\n    this.value = String(source);\r\n  }\r\n}\r\n\r\nclass CommentVirtualNode extends VirtualNode {\r\n  value = '';\r\n\r\n  constructor(text: string) {\r\n    super(NodeType.COMMENT);\r\n    this.value = text;\r\n  }\r\n}\r\n\r\nfunction View(options: ViewOptions) {\r\n  const factory: TagVirtualNodeFactory = () => {\r\n    const { as: name, slot, _void = false, ...attrs } = options;\r\n    const children = (_void ? [] : detectIsArray(slot) ? slot : slot ? [slot] : []) as TagVirtualNode['children'];\r\n\r\n    return new TagVirtualNode(name, attrs, children);\r\n  };\r\n\r\n  factory[$$vNode] = true;\r\n  factory[ATTR_TYPE] = options.as;\r\n  factory[KEY_ATTR] = options.key;\r\n\r\n  return factory;\r\n}\r\n\r\nconst Text = (source: TextSource) => new TextVirtualNode(source);\r\n\r\nText.from = (source: DarkElement) => (detectIsTextVirtualNode(source) ? source.value : String(source));\r\n\r\nconst Comment = (text: string) => new CommentVirtualNode(text);\r\n\r\nconst detectIsVirtualNode = (vNode: unknown): vNode is VirtualNode => vNode instanceof VirtualNode;\r\n\r\nconst detectIsTagVirtualNode = (vNode: unknown): vNode is TagVirtualNode => vNode instanceof TagVirtualNode;\r\n\r\nconst detectIsCommentVirtualNode = (vNode: unknown): vNode is CommentVirtualNode => vNode instanceof CommentVirtualNode;\r\n\r\nconst detectIsTextVirtualNode = (vNode: unknown): vNode is TextVirtualNode => vNode instanceof TextVirtualNode;\r\n\r\nconst detectIsVirtualNodeFactory = (factory: unknown): factory is VirtualNodeFactory =>\r\n  detectIsFunction(factory) && factory[$$vNode] === true;\r\n\r\nconst getTagVirtualNodeKey = (vNode: TagVirtualNode): ElementKey | null =>\r\n  vNode.attrs ? vNode.attrs[KEY_ATTR] ?? null : null;\r\n\r\nconst hasTagVirtualNodeFlag = (vNode: TagVirtualNode, flag: string) => Boolean(vNode.attrs && vNode.attrs[flag]);\r\n\r\nconst getVirtualNodeFactoryKey = (factory: VirtualNodeFactory): ElementKey | null => factory[KEY_ATTR] ?? null;\r\n\r\nconst hasVirtualNodeFactoryFlag = (factory: VirtualNodeFactory, flag: string) => Boolean(factory[flag]);\r\n\r\nconst detectIsPlainVirtualNode = (vNode: unknown): vNode is PlainVirtualNode =>\r\n  detectIsTextVirtualNode(vNode) || detectIsCommentVirtualNode(vNode);\r\n\r\nconst createReplacer = () => new CommentVirtualNode(REPLACER);\r\n\r\nconst detectIsReplacer = (vNode: unknown) => detectIsCommentVirtualNode(vNode) && vNode.value === REPLACER;\r\n\r\nfunction getElementKey(inst: Instance): ElementKey | null {\r\n  return detectIsComponent(inst)\r\n    ? getComponentKey(inst)\r\n    : detectIsVirtualNodeFactory(inst)\r\n    ? getVirtualNodeFactoryKey(inst)\r\n    : detectIsTagVirtualNode(inst)\r\n    ? getTagVirtualNodeKey(inst)\r\n    : null;\r\n}\r\n\r\nfunction hasElementFlag(inst: Instance, flag: string) {\r\n  return detectIsComponent(inst)\r\n    ? hasComponentFlag(inst, flag)\r\n    : detectIsVirtualNodeFactory(inst)\r\n    ? hasVirtualNodeFactoryFlag(inst, flag)\r\n    : detectIsTagVirtualNode(inst)\r\n    ? hasTagVirtualNodeFlag(inst, flag)\r\n    : false;\r\n}\r\n\r\nfunction getElementType(inst: Instance): string | Function {\r\n  return detectIsComponent(inst)\r\n    ? inst.type\r\n    : detectIsVirtualNodeFactory(inst)\r\n    ? inst[ATTR_TYPE]\r\n    : detectIsTagVirtualNode(inst)\r\n    ? inst.name\r\n    : detectIsVirtualNode(inst)\r\n    ? inst.type\r\n    : null;\r\n}\r\n\r\nfunction hasChildrenProp(inst: Instance): inst is TagVirtualNode | Component {\r\n  return detectIsTagVirtualNode(inst) || detectIsComponent(inst);\r\n}\r\n\r\nfunction detectAreSameInstanceTypes(prevInst: Instance, nextInst: Instance, isComponentFactories = false) {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    if (process.env.NODE_ENV === 'development' && $$scope().getIsHot()) {\r\n      if (detectIsComponent(prevInst) && detectIsComponent(nextInst)) {\r\n        return prevInst.displayName === nextInst.displayName;\r\n      }\r\n    }\r\n  }\r\n\r\n  if (isComponentFactories) {\r\n    const pc = prevInst as Component;\r\n    const nc = nextInst as Component;\r\n\r\n    return pc.type === nc.type;\r\n  }\r\n\r\n  return getElementType(prevInst) === getElementType(nextInst);\r\n}\r\n\r\nfunction detectAreSameComponentTypesWithSameKeys(prevInst: Instance | null, nextInst: Instance | null) {\r\n  if (\r\n    prevInst &&\r\n    nextInst &&\r\n    detectIsComponent(prevInst) &&\r\n    detectIsComponent(nextInst) &&\r\n    detectAreSameInstanceTypes(prevInst, nextInst, true)\r\n  ) {\r\n    return getElementKey(prevInst) === getElementKey(nextInst);\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\ntype TextSource = string | number;\r\n\r\nexport type VirtualNodeFactory = () => VirtualNode;\r\n\r\nexport type TagVirtualNodeFactory = () => TagVirtualNode;\r\n\r\nexport type PlainVirtualNode = TextVirtualNode | CommentVirtualNode;\r\n\r\nexport type ViewOptions = {\r\n  as: string;\r\n  _void?: boolean;\r\n  [prop: string]: any;\r\n} & Partial<SlotProps> &\r\n  RefProps &\r\n  KeyProps &\r\n  FlagProps;\r\n\r\nexport enum NodeType {\r\n  TAG = 'TAG',\r\n  TEXT = 'TEXT',\r\n  COMMENT = 'COMMENT',\r\n}\r\n\r\nexport {\r\n  View,\r\n  Text,\r\n  Comment,\r\n  VirtualNode,\r\n  TagVirtualNode,\r\n  TextVirtualNode,\r\n  CommentVirtualNode,\r\n  createReplacer,\r\n  detectIsReplacer,\r\n  getElementKey,\r\n  hasElementFlag,\r\n  getElementType,\r\n  hasChildrenProp,\r\n  detectIsVirtualNode,\r\n  detectIsTagVirtualNode,\r\n  detectIsCommentVirtualNode,\r\n  detectIsTextVirtualNode,\r\n  detectIsPlainVirtualNode,\r\n  detectIsVirtualNodeFactory,\r\n  detectAreSameInstanceTypes,\r\n  detectAreSameComponentTypesWithSameKeys,\r\n};\r\n","import { type Fiber } from '../fiber';\r\nimport { type VirtualNode } from '../view';\r\nimport { type Callback } from '../shared';\r\n\r\nexport type Platform = {\r\n  createElement: <N>(vNode: VirtualNode) => N;\r\n  insertElement: <N>(node: N, idx: number, parent: N) => void;\r\n  raf: typeof requestAnimationFrame;\r\n  caf: typeof cancelAnimationFrame;\r\n  spawn: (callback: Callback) => void;\r\n  commit: (fiber: Fiber) => void;\r\n  finishCommit: () => void;\r\n  detectIsDynamic: () => boolean;\r\n  detectIsPortal: (instance: unknown) => boolean;\r\n  unmountPortal: (fiber: Fiber) => void;\r\n  chunk: (fiber: Fiber) => void;\r\n};\r\n\r\nconst defaultRealisation = () => {\r\n  throw new Error('Function not installed by renderer!');\r\n};\r\n\r\nconst platform: Platform = {\r\n  createElement: defaultRealisation,\r\n  insertElement: defaultRealisation,\r\n  raf: defaultRealisation,\r\n  caf: defaultRealisation,\r\n  spawn: defaultRealisation,\r\n  commit: defaultRealisation,\r\n  finishCommit: defaultRealisation,\r\n  detectIsDynamic: defaultRealisation,\r\n  detectIsPortal: defaultRealisation,\r\n  unmountPortal: defaultRealisation,\r\n  chunk: defaultRealisation,\r\n};\r\n\r\nconst detectIsServer = () => !platform.detectIsDynamic();\r\n\r\nexport { platform, detectIsServer };\r\n","import { type SubscriberWithValue } from '../shared';\r\n\r\ntype EventName = 'finish' | 'chunk';\r\n\r\nclass EventEmitter<E extends string = EventName, T = unknown> {\r\n  private subscribers: Map<Partial<E>, Set<SubscriberWithValue<unknown>>> = new Map();\r\n\r\n  on<T>(e: E, fn: SubscriberWithValue<T>) {\r\n    !this.subscribers.has(e) && this.subscribers.set(e, new Set());\r\n    this.subscribers.get(e).add(fn);\r\n\r\n    return () => this.subscribers.has(e) && this.subscribers.get(e).delete(fn);\r\n  }\r\n\r\n  emit(e: E, data?: T) {\r\n    this.subscribers.has(e) && this.subscribers.get(e).forEach(x => x(data));\r\n  }\r\n\r\n  kill() {\r\n    this.subscribers = new Map();\r\n  }\r\n\r\n  __getSize() {\r\n    return this.subscribers.size;\r\n  }\r\n}\r\n\r\nexport { EventEmitter };\r\n","import type { Callback, ElementKey, AppResources, AppResource } from '../shared';\r\nimport { type SetPendingStatus } from '../start-transition';\r\nimport { platform, detectIsServer } from '../platform';\r\nimport { EventEmitter } from '../emitter';\r\nimport { type Fiber } from '../fiber';\r\n\r\nclass Scope {\r\n  private root: Fiber = null;\r\n  private wip: Fiber = null;\r\n  private cursor: Fiber = null;\r\n  private unit: Fiber = null;\r\n  private mountDeep = true;\r\n  private mountLevel = 0;\r\n  private mountNav: Record<number, number> = {};\r\n  private events: Map<string, WeakMap<object, Function>> = new Map();\r\n  private unsubs: Set<Callback> = new Set();\r\n  private actions: Actions = {};\r\n  private candidates: Set<Fiber> = new Set();\r\n  private deletions: Set<Fiber> = new Set();\r\n  private cancels: Array<Callback> = [];\r\n  private asyncEffects: Set<Callback> = new Set();\r\n  private layoutEffects: Set<Callback> = new Set();\r\n  private insertionEffects: Set<Callback> = new Set();\r\n  private resourceId = 0;\r\n  private resources: AppResources = new Map();\r\n  private defers: Array<() => Promise<unknown>> = [];\r\n  private setPendingStatus: SetPendingStatus = null;\r\n  private isLayoutEffectsZone = false;\r\n  private isInsertionEffectsZone = false;\r\n  private isUpdateZone = false;\r\n  private isBatchZone = false;\r\n  private isHydrateZone = false;\r\n  private isStreamZone = false;\r\n  private isTransitionZone = false;\r\n  private isEventZone = false;\r\n  private isHot = false;\r\n  private isDynamic = platform.detectIsDynamic();\r\n  private isServer = detectIsServer();\r\n  private emitter = new EventEmitter();\r\n\r\n  private resetActions() {\r\n    this.actions = {};\r\n  }\r\n\r\n  getActionsById(id: number) {\r\n    return this.actions[id];\r\n  }\r\n\r\n  addActionMap(id: number, map: Record<ElementKey, Fiber>) {\r\n    this.actions[id] = {\r\n      map,\r\n      replace: null,\r\n      insert: null,\r\n      remove: null,\r\n      move: null,\r\n      stable: null,\r\n    };\r\n  }\r\n\r\n  addReplaceAction(id: number, nextKey: ElementKey) {\r\n    !this.actions[id].replace && (this.actions[id].replace = {});\r\n    this.actions[id].replace[nextKey] = true;\r\n  }\r\n\r\n  addInsertAction(id: number, nextKey: ElementKey) {\r\n    !this.actions[id].insert && (this.actions[id].insert = {});\r\n    this.actions[id].insert[nextKey] = true;\r\n  }\r\n\r\n  addRemoveAction(id: number, prevKey: ElementKey) {\r\n    !this.actions[id].remove && (this.actions[id].remove = {});\r\n    this.actions[id].remove[prevKey] = true;\r\n  }\r\n\r\n  addMoveAction(id: number, nextKey: ElementKey) {\r\n    !this.actions[id].move && (this.actions[id].move = {});\r\n    this.actions[id].move[nextKey] = true;\r\n  }\r\n\r\n  addStableAction(id: number, nextKey: ElementKey) {\r\n    !this.actions[id].stable && (this.actions[id].stable = {});\r\n    this.actions[id].stable[nextKey] = true;\r\n  }\r\n\r\n  copy() {\r\n    const scope = new Scope();\r\n\r\n    scope.root = null;\r\n    scope.wip = null;\r\n    scope.cursor = null;\r\n    scope.unit = this.unit;\r\n    scope.mountDeep = this.mountDeep;\r\n    scope.mountLevel = this.mountLevel;\r\n    scope.mountNav = { ...this.mountNav };\r\n    scope.events = this.events;\r\n    scope.unsubs = this.unsubs;\r\n    scope.actions = { ...this.actions };\r\n    scope.candidates = new Set([...this.candidates]);\r\n    scope.deletions = new Set([...this.deletions]);\r\n    scope.asyncEffects = new Set([...this.asyncEffects]);\r\n    scope.layoutEffects = new Set([...this.layoutEffects]);\r\n    scope.insertionEffects = new Set([...this.insertionEffects]);\r\n    scope.isUpdateZone = this.isUpdateZone;\r\n    scope.emitter = this.emitter;\r\n\r\n    return scope;\r\n  }\r\n\r\n  getRoot() {\r\n    return this.root;\r\n  }\r\n\r\n  setRoot(fiber: Fiber) {\r\n    this.root = fiber;\r\n  }\r\n\r\n  getWorkInProgress() {\r\n    return this.wip;\r\n  }\r\n\r\n  setWorkInProgress(fiber: Fiber) {\r\n    this.wip = fiber;\r\n  }\r\n\r\n  getNextUnitOfWork() {\r\n    return this.unit;\r\n  }\r\n\r\n  setNextUnitOfWork(fiber: Fiber) {\r\n    this.unit = fiber;\r\n  }\r\n\r\n  getCursorFiber() {\r\n    return this.cursor;\r\n  }\r\n\r\n  setCursorFiber(fiber: Fiber) {\r\n    this.cursor = fiber;\r\n  }\r\n\r\n  navToChild() {\r\n    this.mountLevel = this.mountLevel + 1;\r\n    this.mountNav[this.mountLevel] = 0;\r\n  }\r\n\r\n  navToSibling() {\r\n    this.mountNav[this.mountLevel] = this.mountNav[this.mountLevel] + 1;\r\n  }\r\n\r\n  navToParent() {\r\n    this.mountLevel = this.mountLevel - 1;\r\n  }\r\n\r\n  navToPrev() {\r\n    const idx = this.getMountIndex();\r\n\r\n    if (idx === 0) {\r\n      this.navToParent();\r\n      this.setMountDeep(true);\r\n    } else {\r\n      this.mountNav[this.mountLevel] = this.mountNav[this.mountLevel] - 1;\r\n      this.setMountDeep(false);\r\n    }\r\n  }\r\n\r\n  getMountIndex() {\r\n    return this.mountNav[this.mountLevel];\r\n  }\r\n\r\n  getMountDeep() {\r\n    return this.mountDeep;\r\n  }\r\n\r\n  setMountDeep(value: boolean) {\r\n    this.mountDeep = value;\r\n  }\r\n\r\n  resetMount() {\r\n    this.mountLevel = 0;\r\n    this.mountNav = {};\r\n    this.mountDeep = true;\r\n  }\r\n\r\n  getEvents() {\r\n    return this.events;\r\n  }\r\n\r\n  addEventUnsubscriber(fn: Callback) {\r\n    this.unsubs.add(fn);\r\n  }\r\n\r\n  unsubscribeEvents() {\r\n    this.unsubs.forEach(x => x());\r\n    this.unsubs = new Set();\r\n  }\r\n\r\n  getCandidates() {\r\n    return this.candidates;\r\n  }\r\n\r\n  addCandidate(fiber: Fiber) {\r\n    this.candidates.add(fiber);\r\n  }\r\n\r\n  resetCandidates() {\r\n    this.candidates = new Set();\r\n  }\r\n\r\n  getDeletions() {\r\n    return this.deletions;\r\n  }\r\n\r\n  hasDeletion(fiber: Fiber) {\r\n    let nextFiber = fiber;\r\n\r\n    while (nextFiber) {\r\n      if (this.deletions.has(nextFiber)) return true;\r\n      nextFiber = nextFiber.parent;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  addDeletion(fiber: Fiber) {\r\n    !this.hasDeletion(fiber) && this.deletions.add(fiber);\r\n  }\r\n\r\n  resetDeletions() {\r\n    this.deletions = new Set();\r\n  }\r\n\r\n  addAsyncEffect(fn: Callback) {\r\n    this.asyncEffects.add(fn);\r\n  }\r\n\r\n  resetAsyncEffects() {\r\n    this.asyncEffects = new Set();\r\n  }\r\n\r\n  runAsyncEffects() {\r\n    if (!this.isDynamic) return;\r\n    const effects = this.asyncEffects;\r\n    effects.size > 0 && setTimeout(() => effects.forEach(fn => fn()));\r\n  }\r\n\r\n  addLayoutEffect(fn: Callback) {\r\n    this.layoutEffects.add(fn);\r\n  }\r\n\r\n  resetLayoutEffects() {\r\n    this.layoutEffects = new Set();\r\n  }\r\n\r\n  runLayoutEffects() {\r\n    if (!this.isDynamic) return;\r\n    this.setIsLayoutEffectsZone(true);\r\n    this.layoutEffects.forEach(fn => fn());\r\n    this.setIsLayoutEffectsZone(false);\r\n  }\r\n\r\n  addInsertionEffect(fn: Callback) {\r\n    this.insertionEffects.add(fn);\r\n  }\r\n\r\n  resetInsertionEffects() {\r\n    this.insertionEffects = new Set();\r\n  }\r\n\r\n  runInsertionEffects() {\r\n    if (!this.isDynamic) return;\r\n    this.setIsInsertionEffectsZone(true);\r\n    this.insertionEffects.forEach(fn => fn());\r\n    this.setIsInsertionEffectsZone(false);\r\n  }\r\n\r\n  addCancel(fn: Callback) {\r\n    this.cancels.push(fn);\r\n  }\r\n\r\n  applyCancels() {\r\n    for (let i = this.cancels.length - 1; i >= 0; i--) {\r\n      this.cancels[i]();\r\n    }\r\n  }\r\n\r\n  resetCancels() {\r\n    this.cancels = [];\r\n  }\r\n\r\n  getIsLayoutEffectsZone() {\r\n    return this.isLayoutEffectsZone;\r\n  }\r\n\r\n  setIsLayoutEffectsZone(value: boolean) {\r\n    this.isLayoutEffectsZone = value;\r\n  }\r\n\r\n  getIsInsertionEffectsZone() {\r\n    return this.isInsertionEffectsZone;\r\n  }\r\n\r\n  setIsInsertionEffectsZone(value: boolean) {\r\n    this.isInsertionEffectsZone = value;\r\n  }\r\n\r\n  getIsUpdateZone() {\r\n    return this.isUpdateZone;\r\n  }\r\n\r\n  setIsUpdateZone(value: boolean) {\r\n    this.isUpdateZone = value;\r\n  }\r\n\r\n  getIsBatchZone() {\r\n    return this.isBatchZone;\r\n  }\r\n\r\n  setIsBatchZone(value: boolean) {\r\n    this.isBatchZone = value;\r\n  }\r\n\r\n  getIsHydrateZone() {\r\n    return this.isHydrateZone;\r\n  }\r\n\r\n  setIsHydrateZone(value: boolean) {\r\n    this.isHydrateZone = value;\r\n  }\r\n\r\n  getIsStreamZone() {\r\n    return this.isStreamZone;\r\n  }\r\n\r\n  setIsStreamZone(value: boolean) {\r\n    this.isStreamZone = value;\r\n  }\r\n\r\n  getIsTransitionZone() {\r\n    return this.isTransitionZone;\r\n  }\r\n\r\n  setIsTransitionZone(value: boolean) {\r\n    this.isTransitionZone = value;\r\n  }\r\n\r\n  getIsEventZone() {\r\n    return this.isEventZone;\r\n  }\r\n\r\n  setIsEventZone(value: boolean) {\r\n    this.isEventZone = value;\r\n  }\r\n\r\n  getIsHot() {\r\n    return this.isHot;\r\n  }\r\n\r\n  setIsHot(value: boolean) {\r\n    this.isHot = value;\r\n  }\r\n\r\n  getPendingStatusSetter() {\r\n    return this.setPendingStatus;\r\n  }\r\n\r\n  setPendingStatusSetter(fn: SetPendingStatus) {\r\n    this.setPendingStatus = fn;\r\n  }\r\n\r\n  flush() {\r\n    !this.isUpdateZone && this.setRoot(this.wip); // !\r\n    this.setWorkInProgress(null);\r\n    this.setNextUnitOfWork(null);\r\n    this.setCursorFiber(null);\r\n    this.resetMount();\r\n    this.resetCandidates();\r\n    this.resetDeletions();\r\n    this.resetCancels();\r\n    this.resetInsertionEffects();\r\n    this.resetLayoutEffects();\r\n    this.resetAsyncEffects();\r\n    this.setIsHydrateZone(false);\r\n    this.setIsUpdateZone(false);\r\n    this.resetActions();\r\n  }\r\n\r\n  getEmitter() {\r\n    return this.emitter;\r\n  }\r\n\r\n  defer(fn: () => Promise<unknown>) {\r\n    this.defers.push(fn);\r\n  }\r\n\r\n  getDefers() {\r\n    return this.defers;\r\n  }\r\n\r\n  resetDefers() {\r\n    this.defers = [];\r\n  }\r\n\r\n  getResource(id: number) {\r\n    return this.resources.get(id);\r\n  }\r\n\r\n  setResource(id: number, res: AppResource) {\r\n    this.resources.set(id, res);\r\n  }\r\n\r\n  getResources() {\r\n    return this.resources;\r\n  }\r\n\r\n  getResourceId() {\r\n    return this.resourceId;\r\n  }\r\n\r\n  setResourceId(id: number) {\r\n    this.resourceId = id;\r\n  }\r\n\r\n  getNextResourceId() {\r\n    return ++this.resourceId;\r\n  }\r\n\r\n  runAfterCommit() {\r\n    this.resources = new Map();\r\n    this.isServer && (this.resourceId = 0);\r\n  }\r\n}\r\n\r\ntype Actions = Record<\r\n  number,\r\n  {\r\n    map: Record<ElementKey, Fiber>;\r\n    replace: Record<ElementKey, true>;\r\n    insert: Record<ElementKey, true>;\r\n    remove: Record<ElementKey, true>;\r\n    move: Record<ElementKey, true>;\r\n    stable: Record<ElementKey, true>;\r\n  }\r\n>;\r\n\r\nlet rootId: number = null;\r\nconst scopes = new Map<number, Scope>();\r\n\r\nconst getRootId = () => rootId;\r\n\r\nconst setRootId = (id: number) => {\r\n  rootId = id;\r\n  !scopes.has(rootId) && scopes.set(rootId, new Scope());\r\n};\r\n\r\nconst removeScope = (id: number) => scopes.delete(id);\r\n\r\nconst replaceScope = (scope: Scope, id: number = rootId) => {\r\n  Object.assign(scopes.get(id), scope);\r\n};\r\n\r\nconst $$scope = (id: number = rootId) => scopes.get(id);\r\n\r\nexport { type Scope, getRootId, setRootId, removeScope, replaceScope, $$scope };\r\n","import {\r\n  type ComponentFactory,\r\n  type StandardComponentProps,\r\n  type ShouldUpdate,\r\n  type ComponentInject,\r\n  $$inject,\r\n  detectIsComponent,\r\n} from '../component';\r\nimport type { SlotProps, RefProps } from '../shared';\r\n\r\nconst $$memo = Symbol('memo');\r\n\r\nconst defaultShouldUpdate = (props: {}, nextProps: {}): boolean => {\r\n  const keys = Object.keys(nextProps);\r\n\r\n  for (const key of keys) {\r\n    if (key !== 'slot' && nextProps[key] !== props[key]) return true;\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\nfunction memo<P extends object, R = unknown>(\r\n  factory: ComponentFactory<P, R>,\r\n  shouldUpdate: ShouldUpdate<P & SlotProps> = defaultShouldUpdate,\r\n) {\r\n  type P1 = P & Omit<StandardComponentProps, 'ref'> & RefProps<R>;\r\n\r\n  factory[$$inject] = {\r\n    token: $$memo,\r\n    shouldUpdate,\r\n  } as ComponentInject<P1>;\r\n\r\n  return factory as ComponentFactory<P1, R>;\r\n}\r\n\r\nconst detectIsMemo = (instance: unknown) => detectIsComponent(instance) && instance.token === $$memo;\r\n\r\nexport { memo, detectIsMemo };\r\n","import { type VirtualNodeFactory, detectIsVirtualNodeFactory } from '../view';\r\nimport { type Component, detectIsComponent, component } from '../component';\r\nimport { type Hook, type HookValue } from '../fiber';\r\nimport { detectAreDepsDifferent } from '../utils';\r\nimport { $$scope } from '../scope';\r\nimport { memo } from '../memo';\r\n\r\ntype GetMemoValue = () => Component | VirtualNodeFactory;\r\n\r\ntype MemoProps = {\r\n  deps: Array<any>;\r\n  getValue: GetMemoValue;\r\n};\r\n\r\nconst Memo = memo(\r\n  component<MemoProps>(({ getValue }) => getValue()),\r\n  (p, n) => detectAreDepsDifferent(p.deps, n.deps),\r\n);\r\n\r\nfunction detectIsElement<T>(value: T) {\r\n  return detectIsComponent(value) || detectIsVirtualNodeFactory(value);\r\n}\r\n\r\nfunction useMemo<T>(getValue: () => T, deps: Array<any>): T {\r\n  const fiber = $$scope().getCursorFiber();\r\n  const { hook } = fiber;\r\n  const { idx, values } = hook as Hook<HookValue<T>>;\r\n  const state =\r\n    values[idx] ||\r\n    (values[idx] = {\r\n      deps,\r\n      value: getValue(),\r\n    });\r\n  let value: T = null;\r\n  let $value: T = null;\r\n\r\n  if (detectIsElement(state.value)) {\r\n    value = state.value;\r\n    $value = Memo({ getValue: getValue as GetMemoValue, deps }) as unknown as T;\r\n  } else {\r\n    value = detectAreDepsDifferent(state.deps, deps) ? getValue() : state.value;\r\n    $value = value;\r\n  }\r\n\r\n  state.deps = deps;\r\n  state.value = value;\r\n  hook.idx++;\r\n\r\n  return $value;\r\n}\r\n\r\nexport { useMemo };\r\n","import { detectIsTagVirtualNode, detectIsPlainVirtualNode, detectAreSameComponentTypesWithSameKeys } from '../view';\r\nimport { type Instance, type Callback, type TimerId } from '../shared';\r\nimport { type Context, type ContextProviderValue } from '../context';\r\nimport { detectIsComponent } from '../component';\r\nimport { detectIsFunction } from '../utils';\r\nimport { type Atom } from '../atom';\r\nimport { $$scope } from '../scope';\r\n\r\nclass Fiber<N = NativeElement> {\r\n  id = 0;\r\n  cc = 0; // child fibers count\r\n  cec = 0; // child native elements count\r\n  idx = 0; // idx of fiber in the parent fiber\r\n  eidx = 0; // native element idx\r\n  mask = 0; // bit mask\r\n  element: N = null; // native element\r\n  tag: string = null; // effect tag (CREATE, UPDATE, DELETE, SKIP)\r\n  parent: Fiber<N> = null; // parent fiber\r\n  child: Fiber<N> = null; // child fiber\r\n  next: Fiber<N> = null; // next sibling fiber\r\n  alt: Fiber<N> = null; // alternate fiber (previous)\r\n  inst: Instance = null; // instance of component or virtual node\r\n  hook: Hook | null = null; // hook\r\n  provider: Map<Context, ContextProviderValue> = null; // provider of context\r\n  atoms: Map<Atom, Callback> = null;\r\n  marker: string; // for dev\r\n  batch: Batch;\r\n  catch: (error: Error) => void;\r\n\r\n  constructor(hook: Hook = null, provider: Fiber['provider'] = null, idx = 0) {\r\n    this.id = ++Fiber.nextId;\r\n    this.idx = idx;\r\n    hook && (this.hook = hook);\r\n    provider && (this.provider = provider);\r\n  }\r\n\r\n  mutate(fiber: Partial<Fiber<N>>) {\r\n    const keys = Object.keys(fiber);\r\n\r\n    for (const key of keys) {\r\n      this[key] = fiber[key];\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  markHost(mask: number) {\r\n    this.mask |= mask;\r\n    this.parent && !(this.parent.mask & mask) && this.parent.markHost(mask);\r\n  }\r\n\r\n  increment(count = 1, force = false) {\r\n    if (!this.parent) return;\r\n    const $scope = $$scope();\r\n    const isUpdateZone = $scope.getIsUpdateZone();\r\n    const wipFiber = $scope.getWorkInProgress();\r\n    const stop = isUpdateZone && wipFiber.parent === this.parent;\r\n\r\n    if (\r\n      detectIsPlainVirtualNode(this.inst) ||\r\n      (detectIsTagVirtualNode(this.inst) && this.inst.children?.length === 0)\r\n    ) {\r\n      this.cec = 1;\r\n    }\r\n\r\n    if (isUpdateZone && stop && !force) return;\r\n\r\n    this.parent.cec += count;\r\n\r\n    if (!this.parent.element) {\r\n      this.parent.increment(count);\r\n    }\r\n  }\r\n\r\n  setError(error: Error) {\r\n    if (detectIsFunction(this.catch)) {\r\n      this.catch(error);\r\n    } else if (this.parent) {\r\n      this.parent.setError(error);\r\n    }\r\n  }\r\n\r\n  static setNextId(id: number) {\r\n    Fiber.nextId = id;\r\n  }\r\n\r\n  private static nextId = 0;\r\n}\r\n\r\nclass Hook<T = any> {\r\n  id = 0;\r\n  idx = 0;\r\n  values: Array<T> = [];\r\n  owner: Fiber = null;\r\n  private static nextId = 0;\r\n\r\n  constructor() {\r\n    this.id = ++Hook.nextId;\r\n  }\r\n}\r\n\r\nfunction getHook(alt: Fiber, prevInst: Instance, nextInst: Instance): Hook | null {\r\n  if (alt && detectAreSameComponentTypesWithSameKeys(prevInst, nextInst)) return alt.hook;\r\n  if (detectIsComponent(nextInst)) return new Hook();\r\n\r\n  return null;\r\n}\r\n\r\ntype Batch = {\r\n  timer: TimerId;\r\n  changes: Array<Callback>;\r\n};\r\n\r\nexport type NativeElement = unknown;\r\nexport type HookValue<T = any> = { deps: Array<any>; value: T };\r\n\r\nexport { Fiber, Hook, getHook };\r\n","import {\r\n  DELETE_EFFECT_TAG,\r\n  UPDATE_EFFECT_TAG,\r\n  SKIP_EFFECT_TAG,\r\n  INSERTION_EFFECT_HOST_MASK,\r\n  LAYOUT_EFFECT_HOST_MASK,\r\n  ASYNC_EFFECT_HOST_MASK,\r\n  ATOM_HOST_MASK,\r\n  PORTAL_HOST_MASK,\r\n  MOVE_MASK,\r\n  HOOK_DELIMETER,\r\n} from '../constants';\r\nimport { Fiber } from '../fiber';\r\nimport { platform } from '../platform';\r\nimport { type TagVirtualNode, getElementKey, hasChildrenProp } from '../view';\r\nimport { type Scope } from '../scope';\r\nimport { type Component } from '../component';\r\nimport { detectIsMemo } from '../memo';\r\nimport { type Instance, type ElementKey } from '../shared';\r\nimport { createIndexKey } from '../utils';\r\n\r\nfunction walk<T = unknown>(fiber: Fiber<T>, onWalk: (fiber: Fiber<T>, skip: () => void, stop: () => void) => void) {\r\n  let shouldDeep = true;\r\n  let shouldStop = false;\r\n  const skip = () => (shouldDeep = false);\r\n  const stop = () => (shouldStop = true);\r\n  const stack: Array<Fiber<T>> = [fiber];\r\n\r\n  while (stack.length !== 0) {\r\n    const unit = stack.pop();\r\n\r\n    onWalk(unit, skip, stop);\r\n    if (shouldStop) break;\r\n    unit !== fiber && unit.next && stack.push(unit.next);\r\n    shouldDeep && unit.child && stack.push(unit.child);\r\n    shouldDeep = true;\r\n  }\r\n}\r\n\r\nfunction collectElements<T, P = T>(fiber: Fiber<T>, transform: (fiber: Fiber<T>) => P): Array<P> {\r\n  const elements: Array<P> = [];\r\n\r\n  walk<T>(fiber, (fiber, skip) => {\r\n    if (fiber.element) {\r\n      !platform.detectIsPortal(fiber.inst) && elements.push(transform(fiber));\r\n      return skip();\r\n    }\r\n  });\r\n\r\n  return elements;\r\n}\r\n\r\nfunction getFiberWithElement<T1, T2 = T1>(fiber: Fiber<T1>): Fiber<T2> {\r\n  let $fiber = fiber as unknown as Fiber<T2>;\r\n\r\n  while ($fiber) {\r\n    if ($fiber.element) return $fiber;\r\n    $fiber = $fiber.parent;\r\n  }\r\n\r\n  return $fiber;\r\n}\r\n\r\nfunction detectIsFiberAlive(fiber: Fiber) {\r\n  let $fiber = fiber;\r\n\r\n  while ($fiber) {\r\n    if ($fiber.tag === DELETE_EFFECT_TAG) return false;\r\n    $fiber = $fiber.parent;\r\n  }\r\n\r\n  return Boolean(fiber);\r\n}\r\n\r\nfunction createHookLocation(rootId: number, idx: number, fiber: Fiber) {\r\n  let $fiber = fiber;\r\n  let loc = `${fiber.idx}${HOOK_DELIMETER}${idx}`;\r\n\r\n  while ($fiber) {\r\n    $fiber = $fiber.parent;\r\n    $fiber && (loc = `${$fiber.idx}.${loc}`);\r\n  }\r\n\r\n  loc = `[${rootId}]${loc}`;\r\n\r\n  return loc;\r\n}\r\n\r\nfunction detectIsStableMemoTree(fiber: Fiber, $scope: Scope) {\r\n  if (!hasChildrenProp(fiber.inst)) return;\r\n  const actions = $scope.getActionsById(fiber.id);\r\n  const children = fiber.inst.children;\r\n\r\n  for (let i = 0; i < children.length; i++) {\r\n    const inst = children[i];\r\n    const key = getElementKey(inst);\r\n    if (key === null) return false;\r\n    const alt = actions.map[key];\r\n    if (!alt) return false;\r\n    const pc = alt.inst as Component;\r\n    const nc = inst as Component;\r\n    const isStable =\r\n      detectIsMemo(nc) && detectIsMemo(pc) && nc.type === pc.type && !nc.shouldUpdate(pc.props, nc.props);\r\n\r\n    if (!isStable) return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction tryOptStaticSlot(fiber: Fiber, alt: Fiber, $scope: Scope) {\r\n  const actions = $scope.getActionsById(fiber.id);\r\n  const inst = fiber.inst as Component | TagVirtualNode;\r\n\r\n  alt.element && (fiber.element = alt.element); //!\r\n\r\n  for (let i = 0; i < inst.children.length; i++) {\r\n    buildChildNode(inst.children, fiber, actions.map, i, fiber.eidx);\r\n  }\r\n\r\n  fiber.cc = inst.children.length;\r\n  $scope.setMountDeep(false);\r\n}\r\n\r\nfunction tryOptMemoSlot(fiber: Fiber, alt: Fiber, $scope: Scope) {\r\n  const actions = $scope.getActionsById(fiber.id);\r\n  const hasMove = Boolean(actions.move);\r\n  const hasRemove = Boolean(actions.remove);\r\n  const hasInsert = Boolean(actions.insert);\r\n  const hasReplace = Boolean(actions.insert);\r\n  const canOptimize = ((hasMove && !hasRemove) || (hasRemove && !hasMove)) && !hasInsert && !hasReplace;\r\n\r\n  if (!canOptimize || !detectIsStableMemoTree(fiber, $scope)) return;\r\n\r\n  hasMove && tryOptMov(fiber, alt, $scope);\r\n  hasRemove && tryOptRem(fiber, alt, $scope);\r\n}\r\n\r\nfunction tryOptMov(fiber: Fiber, alt: Fiber, $scope: Scope) {\r\n  const actions = $scope.getActionsById(fiber.id);\r\n\r\n  buildChildNodes(fiber, alt, $scope, (fiber, key) => {\r\n    if (!actions.move[key]) return;\r\n    fiber.alt = new Fiber().mutate(fiber);\r\n    fiber.tag = UPDATE_EFFECT_TAG;\r\n    fiber.mask |= MOVE_MASK;\r\n    $scope.addCandidate(fiber);\r\n  });\r\n}\r\n\r\nfunction tryOptRem(fiber: Fiber, alt: Fiber, $scope: Scope) {\r\n  buildChildNodes(fiber, alt, $scope);\r\n}\r\n\r\nfunction buildChildNodes(fiber: Fiber, alt: Fiber, $scope: Scope, onNode?: (fiber: Fiber, key: ElementKey) => void) {\r\n  const actions = $scope.getActionsById(fiber.id);\r\n  const inst = fiber.inst as Component | TagVirtualNode;\r\n  const children = inst.children;\r\n\r\n  alt.element && (fiber.element = alt.element); //!\r\n\r\n  for (let i = 0; i < children.length; i++) {\r\n    const key = getKey(children[i], i);\r\n    const $fiber = actions.map[key];\r\n\r\n    buildChildNode(children, fiber, actions.map, i, fiber.eidx);\r\n    onNode && onNode($fiber, key);\r\n  }\r\n\r\n  fiber.cc = children.length;\r\n  $scope.setMountDeep(false);\r\n}\r\n\r\nfunction buildChildNode(\r\n  children: Array<Instance>,\r\n  parent: Fiber,\r\n  altMap: Record<string, Fiber>,\r\n  idx: number,\r\n  startEidx: number,\r\n) {\r\n  const prevIdx = idx - 1;\r\n  const nextIdx = idx + 1;\r\n  const key = getKey(children[idx], idx);\r\n  const prevKey = getKey(children[prevIdx], prevIdx);\r\n  const nextKey = getKey(children[nextIdx], nextIdx);\r\n  const fiber = altMap[key];\r\n  const left = altMap[prevKey];\r\n  const right = altMap[nextKey];\r\n  const isFirst = idx === 0;\r\n  const isLast = idx === children.length - 1;\r\n\r\n  isFirst && (parent.child = fiber);\r\n  fiber.alt = null;\r\n  fiber.parent = parent;\r\n  fiber.tag = SKIP_EFFECT_TAG;\r\n  fiber.idx = idx;\r\n  left ? (fiber.eidx = left.eidx + (left.element ? 1 : left.cec)) : (fiber.eidx = startEidx);\r\n  right && (fiber.next = right);\r\n  isLast && (fiber.next = null);\r\n  notifyParents(fiber);\r\n}\r\n\r\nfunction getKey(inst: Instance, idx: number) {\r\n  const key = getElementKey(inst);\r\n  return key !== null ? key : createIndexKey(idx);\r\n}\r\n\r\nfunction notifyParents(fiber: Fiber, alt: Fiber = fiber) {\r\n  fiber.increment(alt.element ? 1 : alt.cec);\r\n  alt.mask & INSERTION_EFFECT_HOST_MASK && fiber.markHost(INSERTION_EFFECT_HOST_MASK);\r\n  alt.mask & LAYOUT_EFFECT_HOST_MASK && fiber.markHost(LAYOUT_EFFECT_HOST_MASK);\r\n  alt.mask & ASYNC_EFFECT_HOST_MASK && fiber.markHost(ASYNC_EFFECT_HOST_MASK);\r\n  alt.mask & ATOM_HOST_MASK && fiber.markHost(ATOM_HOST_MASK);\r\n  alt.mask & PORTAL_HOST_MASK && fiber.markHost(PORTAL_HOST_MASK);\r\n}\r\n\r\nexport {\r\n  walk,\r\n  collectElements,\r\n  getFiberWithElement,\r\n  detectIsFiberAlive,\r\n  createHookLocation,\r\n  tryOptStaticSlot,\r\n  tryOptMemoSlot,\r\n  notifyParents,\r\n};\r\n","import { component, detectIsComponent } from '../component';\r\nimport type { KeyProps, SlotProps } from '../shared';\r\n\r\ntype FragmentProps = Required<SlotProps> & KeyProps;\r\n\r\nconst $$fragment = Symbol('fragment');\r\n\r\nconst Fragment = component<FragmentProps>(({ slot }) => slot || null, { token: $$fragment });\r\n\r\nconst detectIsFragment = (instance: unknown) => detectIsComponent(instance) && instance.token === $$fragment;\r\n\r\nexport { Fragment, detectIsFragment };\r\n","import { detectIsFunction } from '../utils';\r\nimport { INSERTION_EFFECT_HOST_MASK, LAYOUT_EFFECT_HOST_MASK, ASYNC_EFFECT_HOST_MASK } from '../constants';\r\nimport { $$scope } from '../scope';\r\nimport { useMemo } from '../use-memo';\r\nimport { type Hook, type HookValue } from '../fiber';\r\n\r\nconst $$useEffect = Symbol('use-effect');\r\n\r\ntype UseEffectValue = {\r\n  token: Symbol;\r\n  cleanup: DropEffect;\r\n};\r\n\r\nfunction createEffect(token: Symbol, type: EffectType) {\r\n  function useEffect(effect: Effect, deps: Array<any> = [{}]) {\r\n    const $scope = $$scope();\r\n    const fiber = $scope.getCursorFiber();\r\n    const scope = useMemo<UseEffectValue>(() => ({ token, cleanup: undefined }), []);\r\n    const isInsertionEffect = type === EffectType.INSERTION;\r\n    const isLayoutEffect = type === EffectType.LAYOUT;\r\n    const isAsyncEffect = type === EffectType.ASYNC;\r\n\r\n    isInsertionEffect && fiber.markHost(INSERTION_EFFECT_HOST_MASK);\r\n    isLayoutEffect && fiber.markHost(LAYOUT_EFFECT_HOST_MASK);\r\n    isAsyncEffect && fiber.markHost(ASYNC_EFFECT_HOST_MASK);\r\n\r\n    useMemo(() => {\r\n      const runEffect = () => (scope.cleanup = effect());\r\n\r\n      isInsertionEffect && $scope.addInsertionEffect(runEffect);\r\n      isLayoutEffect && $scope.addLayoutEffect(runEffect);\r\n      isAsyncEffect && $scope.addAsyncEffect(runEffect);\r\n\r\n      detectIsFunction(scope.cleanup) && scope.cleanup();\r\n\r\n      return null;\r\n    }, deps);\r\n  }\r\n\r\n  function dropEffects(hook: Hook<HookValue<UseEffectValue>>) {\r\n    for (const { value: effect } of hook.values) {\r\n      effect && effect.token === token && detectIsFunction(effect.cleanup) && effect.cleanup();\r\n    }\r\n  }\r\n\r\n  return {\r\n    useEffect,\r\n    dropEffects,\r\n  };\r\n}\r\n\r\nexport type DropEffect = void | (() => void);\r\n\r\nexport type Effect = () => DropEffect;\r\n\r\nexport enum EffectType {\r\n  ASYNC = 'ASYNC',\r\n  LAYOUT = 'LAYOUT',\r\n  INSERTION = 'INSERTION',\r\n}\r\n\r\nconst { useEffect, dropEffects } = createEffect($$useEffect, EffectType.ASYNC);\r\n\r\nexport { useEffect, dropEffects, createEffect };\r\n","import { createEffect, EffectType } from '../use-effect';\r\n\r\nconst $$useLayoutEffect = Symbol('use-layout-effect');\r\nconst { useEffect: useLayoutEffect, dropEffects: dropLayoutEffects } = createEffect(\r\n  $$useLayoutEffect,\r\n  EffectType.LAYOUT,\r\n);\r\n\r\nexport { useLayoutEffect, dropLayoutEffects };\r\n","import { createEffect, EffectType } from '../use-effect';\r\n\r\nconst $$useInsertionEffect = Symbol('use-insertion-effect');\r\nconst { useEffect: useInsertionEffect, dropEffects: dropInsertionEffects } = createEffect(\r\n  $$useInsertionEffect,\r\n  EffectType.INSERTION,\r\n);\r\n\r\nexport { useInsertionEffect, dropInsertionEffects };\r\n","import { type Fiber } from '../fiber';\r\nimport { platform } from '../platform';\r\nimport { dropEffects } from '../use-effect';\r\nimport { dropLayoutEffects } from '../use-layout-effect';\r\nimport { dropInsertionEffects } from '../use-insertion-effect';\r\nimport { walk } from '../walk';\r\nimport { detectIsUndefined } from '../utils';\r\nimport { removeScope, $$scope } from '../scope';\r\nimport {\r\n  INSERTION_EFFECT_HOST_MASK,\r\n  LAYOUT_EFFECT_HOST_MASK,\r\n  ASYNC_EFFECT_HOST_MASK,\r\n  ATOM_HOST_MASK,\r\n  PORTAL_HOST_MASK,\r\n} from '../constants';\r\n\r\nconst combinedMask =\r\n  INSERTION_EFFECT_HOST_MASK | LAYOUT_EFFECT_HOST_MASK | ASYNC_EFFECT_HOST_MASK | ATOM_HOST_MASK | PORTAL_HOST_MASK;\r\n\r\nconst shouldUnmountFiber = (fiber: Fiber) => fiber.mask & combinedMask;\r\n\r\nfunction unmountFiber(fiber: Fiber) {\r\n  if (!shouldUnmountFiber(fiber)) return;\r\n  walk(fiber, (fiber, skip) => {\r\n    if (!shouldUnmountFiber(fiber)) return skip();\r\n\r\n    if (fiber.hook && fiber.hook.values.length > 0) {\r\n      fiber.mask & INSERTION_EFFECT_HOST_MASK && dropInsertionEffects(fiber.hook);\r\n      fiber.mask & LAYOUT_EFFECT_HOST_MASK && dropLayoutEffects(fiber.hook);\r\n      fiber.mask & ASYNC_EFFECT_HOST_MASK && dropEffects(fiber.hook);\r\n    }\r\n\r\n    if (fiber.atoms) {\r\n      for (const [_, cleanup] of fiber.atoms) {\r\n        cleanup();\r\n      }\r\n      fiber.atoms = null;\r\n    }\r\n\r\n    fiber.mask & PORTAL_HOST_MASK && platform.unmountPortal(fiber);\r\n  });\r\n}\r\n\r\nfunction unmountRoot(rootId: number, onCompleted: () => void) {\r\n  if (detectIsUndefined(rootId)) return;\r\n  const $scope = $$scope(rootId);\r\n\r\n  unmountFiber($scope.getRoot());\r\n  $scope.unsubscribeEvents();\r\n  removeScope(rootId);\r\n  onCompleted();\r\n}\r\n\r\nexport { unmountFiber, unmountRoot };\r\n","import { platform } from '../platform';\r\nimport {\r\n  CREATE_EFFECT_TAG,\r\n  UPDATE_EFFECT_TAG,\r\n  DELETE_EFFECT_TAG,\r\n  SKIP_EFFECT_TAG,\r\n  INSERTION_EFFECT_HOST_MASK,\r\n  LAYOUT_EFFECT_HOST_MASK,\r\n  ASYNC_EFFECT_HOST_MASK,\r\n  ATOM_HOST_MASK,\r\n  PORTAL_HOST_MASK,\r\n  MOVE_MASK,\r\n  FLUSH_MASK,\r\n  SHADOW_MASK,\r\n  Flag,\r\n} from '../constants';\r\nimport {\r\n  flatten,\r\n  error,\r\n  detectIsEmpty,\r\n  detectIsFalsy,\r\n  detectIsArray,\r\n  detectIsFunction,\r\n  detectIsTextBased,\r\n  createIndexKey,\r\n  trueFn,\r\n} from '../utils';\r\nimport { type Scope, setRootId, $$scope, replaceScope } from '../scope';\r\nimport { type Component, detectIsComponent } from '../component';\r\nimport { type ElementKey, type Instance } from '../shared';\r\nimport { Fiber, getHook, Hook } from '../fiber';\r\nimport {\r\n  Text,\r\n  detectIsVirtualNode,\r\n  detectIsVirtualNodeFactory,\r\n  getElementKey,\r\n  hasElementFlag,\r\n  hasChildrenProp,\r\n  detectIsReplacer,\r\n  createReplacer,\r\n  detectAreSameInstanceTypes,\r\n} from '../view';\r\nimport { detectIsMemo } from '../memo';\r\nimport {\r\n  walk,\r\n  getFiberWithElement,\r\n  detectIsFiberAlive,\r\n  notifyParents,\r\n  tryOptStaticSlot,\r\n  tryOptMemoSlot,\r\n} from '../walk';\r\nimport { type RestoreOptions, scheduler } from '../scheduler';\r\nimport { Fragment, detectIsFragment } from '../fragment';\r\nimport { unmountFiber } from '../unmount';\r\n\r\nlet hasPendingPromise = false;\r\nlet hasRenderError = false;\r\n\r\nexport type WorkLoop = (isAsync: boolean) => boolean;\r\n\r\nfunction workLoop(isAsync: boolean): boolean | null {\r\n  if (hasPendingPromise) return null;\r\n  if (hasRenderError) return false;\r\n  const $scope = $$scope();\r\n  const wipFiber = $scope.getWorkInProgress();\r\n  let unit = $scope.getNextUnitOfWork();\r\n  let shouldYield = false;\r\n  let hasMoreWork = Boolean(unit);\r\n\r\n  try {\r\n    while (unit && !shouldYield) {\r\n      unit = performUnitOfWork(unit, $scope);\r\n      $scope.setNextUnitOfWork(unit);\r\n      hasMoreWork = Boolean(unit);\r\n      shouldYield = isAsync && scheduler.shouldYield();\r\n      if (shouldYield && scheduler.hasPrimaryTask()) return fork($scope);\r\n    }\r\n\r\n    if (!unit && wipFiber) {\r\n      commit($scope);\r\n    }\r\n  } catch (err) {\r\n    if (err instanceof Promise) {\r\n      hasPendingPromise = true;\r\n      err.finally(() => {\r\n        hasPendingPromise = false;\r\n        !isAsync && workLoop(false);\r\n      });\r\n    } else {\r\n      hasRenderError = true;\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  return hasMoreWork;\r\n}\r\n\r\nfunction performUnitOfWork(fiber: Fiber, $scope: Scope): Fiber | null {\r\n  const wipFiber = $scope.getWorkInProgress();\r\n  const isDeepWalking = $scope.getMountDeep();\r\n  const isStream = $scope.getIsStreamZone();\r\n  const hasChildren = isDeepWalking && hasChildrenProp(fiber.inst) && fiber.inst.children.length > 0;\r\n\r\n  fiber.hook && (fiber.hook.idx = 0);\r\n\r\n  if (hasChildren) {\r\n    const child = mountChild(fiber, $scope);\r\n\r\n    isStream && platform.chunk(child);\r\n\r\n    return child;\r\n  } else {\r\n    while (fiber.parent && fiber !== wipFiber) {\r\n      const next = mountSibling(fiber, $scope);\r\n\r\n      isStream && platform.chunk(fiber);\r\n\r\n      if (next) {\r\n        isStream && platform.chunk(next);\r\n        return next;\r\n      }\r\n\r\n      fiber = fiber.parent;\r\n    }\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nfunction mountChild(parent: Fiber, $scope: Scope) {\r\n  $scope.navToChild();\r\n  const $inst = parent.inst;\r\n  const idx = 0;\r\n  const inst = hasChildrenProp($inst) ? $inst.children[idx] : null;\r\n  const alt = getAlternate(parent, inst, true, $scope);\r\n  const fiber = createFiber(alt, inst, idx);\r\n\r\n  fiber.parent = parent;\r\n  parent.child = fiber;\r\n  fiber.eidx = parent.element ? 0 : parent.eidx;\r\n\r\n  share(fiber, parent, inst, $scope);\r\n\r\n  return fiber;\r\n}\r\n\r\nfunction mountSibling(left: Fiber, $scope: Scope) {\r\n  $scope.navToSibling();\r\n  const $inst = left.parent.inst;\r\n  const idx = $scope.getMountIndex();\r\n  const inst = hasChildrenProp($inst) && $inst.children ? $inst.children[idx] : null;\r\n  const hasSibling = Boolean(inst);\r\n\r\n  if (!hasSibling) {\r\n    $scope.navToParent();\r\n    $scope.setMountDeep(false);\r\n\r\n    return null;\r\n  }\r\n\r\n  $scope.setMountDeep(true);\r\n  const alt = getAlternate(left, inst, false, $scope);\r\n  const fiber = createFiber(alt, inst, idx);\r\n\r\n  fiber.parent = left.parent;\r\n  left.next = fiber;\r\n  fiber.eidx = left.eidx + (left.element ? 1 : left.cec);\r\n\r\n  share(fiber, left, inst, $scope);\r\n\r\n  return fiber;\r\n}\r\n\r\nfunction share(fiber: Fiber, prev: Fiber, inst: Instance, $scope: Scope) {\r\n  const { alt } = fiber;\r\n  const shouldMount = alt && detectIsMemo(inst) ? shouldUpdate(fiber, inst, $scope) : true;\r\n\r\n  $scope.setCursorFiber(fiber);\r\n  fiber.inst = inst;\r\n\r\n  if (alt && alt.mask & MOVE_MASK) {\r\n    fiber.mask |= MOVE_MASK;\r\n    alt.mask &= ~MOVE_MASK;\r\n  }\r\n\r\n  fiber.hook && (fiber.hook.owner = fiber); // !\r\n\r\n  if (shouldMount) {\r\n    fiber.inst = mount(fiber, prev, $scope);\r\n    alt && reconcile(fiber, alt, $scope);\r\n    setup(fiber, alt);\r\n  } else if (fiber.mask & MOVE_MASK) {\r\n    fiber.tag = UPDATE_EFFECT_TAG;\r\n  }\r\n\r\n  $scope.addCandidate(fiber); // !\r\n}\r\n\r\nfunction createFiber(alt: Fiber, inst: Instance, idx: number) {\r\n  const fiber = new Fiber(getHook(alt, alt ? alt.inst : null, inst), alt ? alt.provider : null, idx);\r\n\r\n  fiber.alt = alt || null;\r\n\r\n  return fiber;\r\n}\r\n\r\nfunction getAlternate(fiber: Fiber, inst: Instance, fromChild: boolean, $scope: Scope) {\r\n  const key = getElementKey(inst);\r\n\r\n  if (key !== null) {\r\n    const parentId = fromChild ? fiber.id : fiber.parent.id;\r\n    const actions = $scope.getActionsById(parentId);\r\n\r\n    if (actions) {\r\n      const isMove = actions.move && Boolean(actions.move[key]);\r\n      const isStable = actions.stable && Boolean(actions.stable[key]);\r\n\r\n      if (isMove || isStable) {\r\n        const alt = actions.map[key];\r\n\r\n        isMove && (alt.mask |= MOVE_MASK);\r\n\r\n        return alt;\r\n      }\r\n\r\n      return null;\r\n    }\r\n  }\r\n\r\n  const alt = fiber.alt ? (fromChild ? fiber.alt.child || null : fiber.alt.next || null) : null;\r\n\r\n  return alt;\r\n}\r\n\r\nfunction reconcile(fiber: Fiber, alt: Fiber, $scope: Scope) {\r\n  const { id, inst } = fiber;\r\n  const areSameTypes = detectAreSameInstanceTypes(alt.inst, inst);\r\n\r\n  if (!areSameTypes) {\r\n    $scope.addDeletion(alt);\r\n  } else if (hasChildrenProp(alt.inst) && hasChildrenProp(inst) && alt.cc !== 0) {\r\n    const hasSameCount = alt.cc === inst.children.length;\r\n    const check = hasElementFlag(inst, Flag.SKIP_SCAN_OPT) ? !hasSameCount : true;\r\n\r\n    if (check) {\r\n      const { prevKeys, nextKeys, prevKeysMap, nextKeysMap, keyedFibersMap } = extractKeys(alt.child, inst.children);\r\n      const flush = nextKeys.length === 0;\r\n      let size = Math.max(prevKeys.length, nextKeys.length);\r\n      let p = 0;\r\n      let n = 0;\r\n\r\n      $scope.addActionMap(id, keyedFibersMap);\r\n\r\n      for (let i = 0; i < size; i++) {\r\n        const nextKey = nextKeys[i - n] ?? null;\r\n        const prevKey = prevKeys[i - p] ?? null;\r\n        const prevKeyFiber = keyedFibersMap[prevKey] || null;\r\n\r\n        if (nextKey !== prevKey) {\r\n          if (nextKey !== null && !prevKeysMap[nextKey]) {\r\n            if (prevKey !== null && !nextKeysMap[prevKey]) {\r\n              $scope.addReplaceAction(id, nextKey);\r\n              $scope.addDeletion(prevKeyFiber);\r\n            } else {\r\n              $scope.addInsertAction(id, nextKey);\r\n              p++;\r\n              size++;\r\n            }\r\n          } else if (!nextKeysMap[prevKey]) {\r\n            $scope.addRemoveAction(id, prevKey);\r\n            $scope.addDeletion(prevKeyFiber);\r\n            flush && (prevKeyFiber.mask |= FLUSH_MASK);\r\n            n++;\r\n            size++;\r\n          } else if (nextKeysMap[prevKey] && nextKeysMap[nextKey]) {\r\n            $scope.addMoveAction(id, nextKey);\r\n          }\r\n        } else if (nextKey !== null) {\r\n          $scope.addStableAction(id, nextKey);\r\n        }\r\n      }\r\n\r\n      hasElementFlag(inst, Flag.STATIC_SLOT_OPT) && tryOptStaticSlot(fiber, alt, $scope);\r\n      hasElementFlag(inst, Flag.MEMO_SLOT_OPT) && tryOptMemoSlot(fiber, alt, $scope);\r\n    }\r\n  }\r\n}\r\n\r\nfunction setup(fiber: Fiber, alt: Fiber) {\r\n  const inst = fiber.inst;\r\n  let isUpdate = false;\r\n\r\n  fiber.parent.tag === CREATE_EFFECT_TAG && (fiber.tag = fiber.parent.tag);\r\n  fiber.parent.mask & SHADOW_MASK && !fiber.parent.element && !detectIsReplacer(inst) && (fiber.mask |= SHADOW_MASK);\r\n  isUpdate =\r\n    alt &&\r\n    fiber.tag !== CREATE_EFFECT_TAG &&\r\n    detectAreSameInstanceTypes(alt.inst, inst) &&\r\n    getElementKey(alt.inst) === getElementKey(inst);\r\n  isUpdate && !fiber.element && alt.element && (fiber.element = alt.element);\r\n  fiber.tag = isUpdate ? UPDATE_EFFECT_TAG : CREATE_EFFECT_TAG;\r\n  hasChildrenProp(fiber.inst) && (fiber.cc = fiber.inst.children.length);\r\n  !fiber.element && detectIsVirtualNode(fiber.inst) && (fiber.element = platform.createElement(fiber.inst));\r\n  fiber.element && fiber.increment();\r\n}\r\n\r\nfunction shouldUpdate(fiber: Fiber, inst: Instance, $scope: Scope) {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    if ($scope.getIsHot()) return true;\r\n  }\r\n\r\n  const alt = fiber.alt;\r\n  const pc = alt.inst as Component;\r\n  const nc = inst as Component;\r\n\r\n  if (nc.type !== pc.type || nc.shouldUpdate(pc.props, nc.props)) return true;\r\n\r\n  $scope.setMountDeep(false);\r\n  fiber.tag = SKIP_EFFECT_TAG;\r\n  fiber.child = alt.child;\r\n  fiber.child.parent = fiber;\r\n  fiber.hook = alt.hook;\r\n  fiber.cc = alt.cc;\r\n  fiber.cec = alt.cec;\r\n  alt.element && (fiber.element = alt.element);\r\n  alt.provider && (fiber.provider = alt.provider);\r\n  alt.catch && (fiber.catch = alt.catch);\r\n  alt.atoms && (fiber.atoms = alt.atoms);\r\n\r\n  const diff = fiber.eidx - alt.eidx;\r\n  const deep = diff !== 0;\r\n\r\n  if (deep) {\r\n    walk(fiber.child, ($fiber, skip) => {\r\n      $fiber.eidx += diff;\r\n      if ($fiber.element) return skip();\r\n    });\r\n  }\r\n\r\n  notifyParents(fiber, alt);\r\n\r\n  return false;\r\n}\r\n\r\nfunction mount(fiber: Fiber, prev: Fiber, $scope: Scope) {\r\n  let inst = fiber.inst;\r\n  const isComponent = detectIsComponent(inst);\r\n  const component = inst as Component;\r\n\r\n  if (isComponent) {\r\n    try {\r\n      const id = $scope.getResourceId();\r\n      let result = component.type(component.props, component.ref);\r\n      const defers = $scope.getDefers();\r\n\r\n      if (defers.length > 0) {\r\n        const promise = Promise.all(defers.map(x => x()));\r\n\r\n        $scope.setResourceId(id);\r\n        $scope.resetDefers();\r\n        $scope.navToPrev();\r\n        $scope.setNextUnitOfWork(prev);\r\n        Fiber.setNextId(prev.id);\r\n\r\n        throw promise;\r\n      }\r\n\r\n      if (detectIsArray(result)) {\r\n        !detectIsFragment(component) && (result = Fragment({ slot: result }));\r\n      } else if (detectIsTextBased(result)) {\r\n        result = Text(result);\r\n      }\r\n\r\n      component.children = result as Array<Instance>;\r\n      platform.detectIsPortal(inst) && fiber.markHost(PORTAL_HOST_MASK);\r\n    } catch (err) {\r\n      if (err instanceof Promise) throw err;\r\n      component.children = [];\r\n      fiber.setError(err);\r\n      error(err);\r\n    }\r\n  } else if (detectIsVirtualNodeFactory(inst)) {\r\n    inst = inst();\r\n  }\r\n\r\n  if (hasChildrenProp(inst)) {\r\n    inst.children = flatten(inst.children, x => (detectIsTextBased(x) ? Text(x) : x || supportConditional(x)));\r\n    isComponent && component.children.length === 0 && component.children.push(createReplacer());\r\n  }\r\n\r\n  return inst;\r\n}\r\n\r\nfunction extractKeys(alt: Fiber, children: Array<Instance>) {\r\n  let nextFiber = alt;\r\n  let idx = 0;\r\n  const prevKeys: Array<ElementKey> = [];\r\n  const nextKeys: Array<ElementKey> = [];\r\n  const prevKeysMap: Record<ElementKey, boolean> = {};\r\n  const nextKeysMap: Record<ElementKey, boolean> = {};\r\n  const keyedFibersMap: Record<ElementKey, Fiber> = {};\r\n  const usedKeysMap: Record<ElementKey, boolean> = {};\r\n\r\n  while (nextFiber || idx < children.length) {\r\n    if (nextFiber) {\r\n      const key = getElementKey(nextFiber.inst);\r\n      const prevKey = detectIsEmpty(key) ? createIndexKey(idx) : key;\r\n\r\n      if (!prevKeysMap[prevKey]) {\r\n        prevKeysMap[prevKey] = true; // !\r\n        prevKeys.push(prevKey);\r\n      }\r\n\r\n      keyedFibersMap[prevKey] = nextFiber;\r\n    }\r\n\r\n    if (children[idx]) {\r\n      const inst = children[idx];\r\n      const key = getElementKey(inst);\r\n      const nextKey = detectIsEmpty(key) ? createIndexKey(idx) : key;\r\n\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        if (usedKeysMap[nextKey]) {\r\n          error(`[Dark]: The key of node [${nextKey}] already has been used!`, [inst]);\r\n        }\r\n      }\r\n\r\n      if (!nextKeysMap[nextKey]) {\r\n        nextKeysMap[nextKey] = true; // !\r\n        nextKeys.push(nextKey);\r\n      }\r\n\r\n      usedKeysMap[nextKey] = true;\r\n    }\r\n\r\n    nextFiber = nextFiber ? nextFiber.next : null;\r\n    idx++;\r\n  }\r\n\r\n  return {\r\n    prevKeys,\r\n    nextKeys,\r\n    prevKeysMap,\r\n    nextKeysMap,\r\n    keyedFibersMap,\r\n  };\r\n}\r\n\r\nfunction supportConditional(inst: Instance) {\r\n  return detectIsFalsy(inst) ? createReplacer() : inst;\r\n}\r\n\r\nfunction commit($scope: Scope) {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    process.env.NODE_ENV === 'development' && $scope.setIsHot(false);\r\n  }\r\n\r\n  const wipFiber = $scope.getWorkInProgress();\r\n  const deletions = $scope.getDeletions();\r\n  const candidates = $scope.getCandidates();\r\n  const isUpdateZone = $scope.getIsUpdateZone();\r\n  const unmounts: Array<Fiber> = [];\r\n  const combinedMask = INSERTION_EFFECT_HOST_MASK | LAYOUT_EFFECT_HOST_MASK | ASYNC_EFFECT_HOST_MASK | PORTAL_HOST_MASK;\r\n\r\n  // !\r\n  for (const fiber of deletions) {\r\n    const withNextTick = fiber.mask & ATOM_HOST_MASK && !(fiber.mask & combinedMask);\r\n\r\n    withNextTick ? unmounts.push(fiber) : unmountFiber(fiber);\r\n    fiber.tag = DELETE_EFFECT_TAG;\r\n    platform.commit(fiber);\r\n  }\r\n\r\n  isUpdateZone && sync(wipFiber);\r\n  $scope.runInsertionEffects();\r\n\r\n  for (const fiber of candidates) {\r\n    fiber.tag !== SKIP_EFFECT_TAG && platform.commit(fiber);\r\n    fiber.alt = null;\r\n    hasChildrenProp(fiber.inst) && (fiber.inst.children = null);\r\n  }\r\n\r\n  wipFiber.alt = null;\r\n  platform.finishCommit(); // !\r\n  $scope.runLayoutEffects();\r\n  $scope.runAsyncEffects();\r\n  unmounts.length > 0 && setTimeout(() => unmounts.forEach(x => unmountFiber(x)));\r\n  flush($scope);\r\n}\r\n\r\nfunction flush($scope: Scope, cancel = false) {\r\n  $scope.flush();\r\n  !cancel && $scope.getEmitter().emit('finish');\r\n  $scope.runAfterCommit(); // !\r\n}\r\n\r\nfunction sync(fiber: Fiber) {\r\n  const diff = fiber.cec - fiber.alt.cec;\r\n  if (diff === 0) return;\r\n  const parentFiber = getFiberWithElement(fiber.parent);\r\n  let isRight = false;\r\n\r\n  fiber.increment(diff, true);\r\n\r\n  walk(parentFiber.child, ($fiber, skip) => {\r\n    if ($fiber === fiber) {\r\n      isRight = true;\r\n      return skip();\r\n    }\r\n\r\n    $fiber.element && skip();\r\n    isRight && ($fiber.eidx += diff);\r\n  });\r\n}\r\n\r\nfunction fork($scope: Scope): false {\r\n  const $$scope$ = $scope.copy();\r\n  const wipFiber = $scope.getWorkInProgress();\r\n  const child = wipFiber.child;\r\n  child && (child.parent = null);\r\n  const restore = (options: RestoreOptions) => {\r\n    const { fiber: wipFiber, setValue, resetValue } = options;\r\n    const $scope = $$scope();\r\n\r\n    detectIsFunction(setValue) && setValue();\r\n    detectIsFunction(resetValue) && $$scope$.addCancel(resetValue);\r\n\r\n    wipFiber.alt = new Fiber().mutate(wipFiber);\r\n    wipFiber.tag = UPDATE_EFFECT_TAG;\r\n    wipFiber.child = child;\r\n    child && (child.parent = wipFiber);\r\n\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      wipFiber.marker = '✌️';\r\n    }\r\n\r\n    $$scope$.setRoot($scope.getRoot());\r\n    $$scope$.setWorkInProgress(wipFiber);\r\n    replaceScope($$scope$);\r\n  };\r\n\r\n  wipFiber.child = wipFiber.alt.child;\r\n  wipFiber.alt = null;\r\n  $scope.applyCancels();\r\n  flush($scope, true);\r\n  scheduler.cancelTask(restore);\r\n\r\n  return false;\r\n}\r\n\r\nexport type CreateCallbackOptions = {\r\n  rootId: number;\r\n  isTransition?: boolean;\r\n  hook: Hook;\r\n  tools?: () => Tools;\r\n};\r\n\r\nfunction createCallback(options: CreateCallbackOptions) {\r\n  const { rootId, hook, isTransition, tools = $tools } = options;\r\n  const callback = (restore?: (options: RestoreOptions) => void) => {\r\n    setRootId(rootId); // !\r\n    const fromRestore = detectIsFunction(restore);\r\n    const { shouldUpdate, setValue, resetValue } = tools();\r\n    const $scope = $$scope();\r\n    const owner = hook.owner;\r\n    const fiber = owner.alt || owner;\r\n\r\n    if (!shouldUpdate() || !detectIsFiberAlive(fiber) || fromRestore) {\r\n      fromRestore && restore({ fiber, setValue, resetValue });\r\n      return;\r\n    }\r\n\r\n    detectIsFunction(setValue) && setValue();\r\n    detectIsFunction(resetValue) && isTransition && $scope.addCancel(resetValue);\r\n\r\n    fiber.alt = new Fiber().mutate(fiber);\r\n    fiber.tag = UPDATE_EFFECT_TAG;\r\n    fiber.cc = 0;\r\n    fiber.cec = 0;\r\n    fiber.child = null;\r\n\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      fiber.marker = '🔥';\r\n    }\r\n\r\n    $scope.setIsUpdateZone(true);\r\n    $scope.resetMount();\r\n    $scope.setWorkInProgress(fiber);\r\n    $scope.setCursorFiber(fiber);\r\n    fiber.inst = mount(fiber, null, $scope);\r\n    $scope.setNextUnitOfWork(fiber);\r\n  };\r\n\r\n  return callback;\r\n}\r\n\r\nexport type Tools = {\r\n  shouldUpdate: () => boolean;\r\n} & Pick<RestoreOptions, 'setValue' | 'resetValue'>;\r\n\r\nconst $tools = (): Tools => ({\r\n  shouldUpdate: trueFn,\r\n  setValue: null,\r\n  resetValue: null,\r\n});\r\n\r\nconst detectIsBusy = () => Boolean($$scope()?.getWorkInProgress());\r\n\r\nexport { Fiber, workLoop, createCallback, detectIsBusy };\r\n","import { type WorkLoop, workLoop, detectIsBusy } from '../workloop';\r\nimport { type SetPendingStatus } from '../start-transition';\r\nimport { type Callback } from '../shared';\r\nimport { type Fiber } from '../fiber';\r\nimport { ROOT, HOOK_DELIMETER, YIELD_INTERVAL, TaskPriority } from '../constants';\r\nimport { getTime, detectIsFunction, nextTick } from '../utils';\r\nimport { EventEmitter } from '../emitter';\r\nimport { platform } from '../platform';\r\n\r\nclass MessageChannel extends EventEmitter<PortEvent> {\r\n  port1: MessagePort = null;\r\n  port2: MessagePort = null;\r\n\r\n  constructor() {\r\n    super();\r\n    this.port1 = new MessagePort(this);\r\n    this.port2 = new MessagePort(this);\r\n  }\r\n}\r\n\r\nclass MessagePort {\r\n  channel: MessageChannel;\r\n  offs: Array<Callback> = [];\r\n\r\n  constructor(channel: MessageChannel) {\r\n    this.channel = channel;\r\n  }\r\n\r\n  on(event: PortEvent, callback: PortListener) {\r\n    const off = this.channel.on(event, callback);\r\n\r\n    this.offs.push(off);\r\n  }\r\n\r\n  postMessage(value: unknown) {\r\n    platform.spawn(() => {\r\n      this.channel.emit('message', value);\r\n    });\r\n  }\r\n\r\n  unref() {\r\n    this.offs.forEach(x => x());\r\n  }\r\n}\r\n\r\nclass Scheduler {\r\n  private queue: Record<TaskPriority, Array<Task>> = {\r\n    [TaskPriority.HIGH]: [],\r\n    [TaskPriority.NORMAL]: [],\r\n    [TaskPriority.LOW]: [],\r\n  };\r\n  private deadline = 0;\r\n  private task: Task = null;\r\n  private scheduledCallback: WorkLoop = null;\r\n  private isMessageLoopRunning = false;\r\n  private channel: MessageChannel = null;\r\n  private port: MessagePort = null;\r\n\r\n  constructor() {\r\n    this.channel = new MessageChannel();\r\n    this.port = this.channel.port2;\r\n    this.channel.port1.on('message', this.performWorkUntilDeadline.bind(this));\r\n  }\r\n\r\n  reset() {\r\n    this.deadline = 0;\r\n    this.task = null;\r\n    this.scheduledCallback = null;\r\n    this.isMessageLoopRunning = false;\r\n  }\r\n\r\n  shouldYield() {\r\n    return getTime() >= this.deadline;\r\n  }\r\n\r\n  schedule(callback: Callback, options?: ScheduleCallbackOptions) {\r\n    const {\r\n      priority = TaskPriority.NORMAL,\r\n      forceAsync = false,\r\n      isTransition = false,\r\n      createLocation,\r\n      setPendingStatus,\r\n    } = options || {};\r\n    const task = new Task(callback, priority, forceAsync);\r\n\r\n    task.setIsTransition(isTransition);\r\n    task.setPendingSetter(setPendingStatus);\r\n    task.setLocationCreator(createLocation || createRootLocation);\r\n    this.put(task);\r\n    this.execute();\r\n  }\r\n\r\n  hasPrimaryTask() {\r\n    if (!this.task.getIsTransition()) return false;\r\n    const { high, normal, low } = this.getQueues();\r\n    const hasPrimary = high.length > 0 || normal.length > 0;\r\n    const hasLow = low.length > 0;\r\n\r\n    if (hasPrimary || hasLow) {\r\n      const loc = this.task.createLocation();\r\n\r\n      if (hasPrimary) {\r\n        const has = Task.detectHasRelatedUpdate(loc, high, true) || Task.detectHasRelatedUpdate(loc, normal, true);\r\n\r\n        if (has) {\r\n          this.task.markAsUnnecessary();\r\n        }\r\n\r\n        return true;\r\n      }\r\n\r\n      if (hasLow) {\r\n        const has = Task.detectHasRelatedUpdate(loc, low);\r\n\r\n        if (has) {\r\n          this.task.markAsUnnecessary();\r\n\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  cancelTask(fn: TaskRestorer) {\r\n    if (this.task.getIsUnnecessary()) return this.complete(this.task);\r\n    this.task.setTaskRestorer(fn);\r\n    this.defer(this.task);\r\n  }\r\n\r\n  private complete(task: Task) {\r\n    task.pending(false);\r\n  }\r\n\r\n  private put(task: Task) {\r\n    const queue = this.queue[task.getPriority()];\r\n\r\n    if (task.getIsTransition()) {\r\n      const loc = task.createLocation();\r\n      const tasks = queue.filter(x => x.createLocation() !== loc);\r\n\r\n      queue.splice(0, queue.length, ...tasks);\r\n    }\r\n\r\n    queue.push(task);\r\n  }\r\n\r\n  private pick(queue: Array<Task>) {\r\n    if (queue.length === 0) return false;\r\n    this.task = queue.shift();\r\n\r\n    if (this.task.getIsTransition() && this.task.canPending()) {\r\n      const task = this.task;\r\n\r\n      task.markAsPending();\r\n      this.defer(this.task);\r\n      this.task = null;\r\n\r\n      nextTick(() => task.pending(true));\r\n\r\n      return true;\r\n    }\r\n\r\n    this.task.run();\r\n    this.task.getForceAsync() ? this.requestCallbackAsync(workLoop) : this.requestCallback(workLoop);\r\n\r\n    return true;\r\n  }\r\n\r\n  private execute() {\r\n    const isBusy = detectIsBusy();\r\n    const { high, normal, low } = this.getQueues();\r\n\r\n    if (!isBusy && !this.isMessageLoopRunning) {\r\n      this.pick(high) || this.pick(normal) || this.pick(low);\r\n    }\r\n  }\r\n\r\n  private requestCallbackAsync(callback: WorkLoop) {\r\n    this.scheduledCallback = callback;\r\n\r\n    if (!this.isMessageLoopRunning) {\r\n      this.isMessageLoopRunning = true;\r\n      this.port.postMessage(null);\r\n    }\r\n  }\r\n\r\n  private requestCallback(callback: WorkLoop) {\r\n    callback(false);\r\n    this.task = null;\r\n    this.execute();\r\n  }\r\n\r\n  private performWorkUntilDeadline() {\r\n    if (this.scheduledCallback) {\r\n      this.deadline = getTime() + YIELD_INTERVAL;\r\n      const hasMoreWork = this.scheduledCallback(true);\r\n\r\n      if (hasMoreWork) {\r\n        this.port.postMessage(null);\r\n      } else {\r\n        if (hasMoreWork === null) {\r\n          setTimeout(() => this.port.postMessage(null)); // has promise\r\n        } else {\r\n          this.complete(this.task);\r\n          this.reset();\r\n          this.execute();\r\n        }\r\n      }\r\n    } else {\r\n      this.isMessageLoopRunning = false;\r\n    }\r\n  }\r\n\r\n  private defer(task: Task) {\r\n    const { low } = this.getQueues();\r\n\r\n    low.unshift(task);\r\n  }\r\n\r\n  private getQueues() {\r\n    const high = this.queue[TaskPriority.HIGH];\r\n    const normal = this.queue[TaskPriority.NORMAL];\r\n    const low = this.queue[TaskPriority.LOW];\r\n\r\n    return {\r\n      high,\r\n      normal,\r\n      low,\r\n    };\r\n  }\r\n}\r\n\r\ntype TaskCallback = (fn: TaskRestorer) => void;\r\ntype TaskRestorer = (options: RestoreOptions) => void;\r\ntype LocationCreator = () => string;\r\n\r\nclass Task {\r\n  private id: number;\r\n  private priority: TaskPriority;\r\n  private forceAsync: boolean;\r\n  private isTransition: boolean;\r\n  private isPending: boolean;\r\n  private isUnnecessary: boolean;\r\n  private callback: TaskCallback;\r\n  private taskRestorer?: TaskRestorer = null;\r\n  private locationCreator?: LocationCreator;\r\n  private pendingSetter?: SetPendingStatus = null;\r\n  private static nextTaskId = 0;\r\n\r\n  constructor(callback: TaskCallback, priority: TaskPriority, forceAsync: boolean) {\r\n    this.id = ++Task.nextTaskId;\r\n    this.callback = callback;\r\n    this.priority = priority;\r\n    this.forceAsync = forceAsync;\r\n  }\r\n\r\n  getPriority() {\r\n    return this.priority;\r\n  }\r\n\r\n  getForceAsync() {\r\n    return this.forceAsync;\r\n  }\r\n\r\n  setIsTransition(value: boolean) {\r\n    this.isTransition = value;\r\n  }\r\n\r\n  getIsTransition() {\r\n    return this.isTransition;\r\n  }\r\n\r\n  run() {\r\n    this.callback(this.taskRestorer);\r\n    this.taskRestorer = null;\r\n  }\r\n\r\n  pending(value: boolean) {\r\n    this.isTransition && this.pendingSetter && this.pendingSetter(value);\r\n  }\r\n\r\n  markAsPending() {\r\n    this.isPending = true;\r\n  }\r\n\r\n  canPending() {\r\n    return !this.isPending && detectIsFunction(this.pendingSetter);\r\n  }\r\n\r\n  markAsUnnecessary() {\r\n    this.isUnnecessary = true;\r\n  }\r\n\r\n  getIsUnnecessary() {\r\n    return this.isUnnecessary;\r\n  }\r\n\r\n  setTaskRestorer(fn: TaskRestorer) {\r\n    this.taskRestorer = fn;\r\n  }\r\n\r\n  setLocationCreator(fn: LocationCreator) {\r\n    this.locationCreator = fn;\r\n  }\r\n\r\n  createLocation() {\r\n    return this.locationCreator();\r\n  }\r\n\r\n  setPendingSetter(fn: SetPendingStatus) {\r\n    this.pendingSetter = fn;\r\n  }\r\n\r\n  static detectHasRelatedUpdate(loc: string, tasks: Array<Task>, deep = false) {\r\n    const [$loc] = loc.split(HOOK_DELIMETER);\r\n\r\n    return tasks.some(x => {\r\n      const $$loc = x.createLocation();\r\n      const has = $$loc === loc || (deep && $$loc.length > loc.length && $$loc.indexOf($loc) !== -1);\r\n\r\n      return has;\r\n    });\r\n  }\r\n}\r\n\r\nconst createRootLocation: LocationCreator = () => ROOT;\r\n\r\ntype PortEvent = 'message';\r\ntype PortListener = (value: unknown) => void;\r\n\r\nexport type RestoreOptions = {\r\n  fiber: Fiber;\r\n  setValue?: () => void;\r\n  resetValue?: () => void;\r\n};\r\n\r\nexport type ScheduleCallbackOptions = {\r\n  priority?: TaskPriority;\r\n  forceAsync?: boolean;\r\n  isTransition?: boolean;\r\n  createLocation?: () => string;\r\n  setPendingStatus?: SetPendingStatus;\r\n  onCompleted?: () => void;\r\n};\r\n\r\nconst scheduler = new Scheduler();\r\n\r\nexport { scheduler };\r\n","import { type ScheduleCallbackOptions, scheduler } from '../scheduler';\r\nimport { type Tools, createCallback } from '../workloop';\r\nimport { getRootId, $$scope } from '../scope';\r\nimport { createHookLocation } from '../walk';\r\nimport { detectIsFunction } from '../utils';\r\nimport { TaskPriority } from '../constants';\r\nimport { addBatch } from '../batch';\r\nimport { type Hook } from '../fiber';\r\n\r\nfunction createUpdate(rootId: number, hook: Hook) {\r\n  const { idx } = hook;\r\n  const update = (tools?: () => Tools) => {\r\n    const $scope = $$scope();\r\n    if ($scope.getIsInsertionEffectsZone()) return;\r\n    const { owner } = hook;\r\n    const hasTools = detectIsFunction(tools);\r\n    const isTransition = $scope.getIsTransitionZone();\r\n    const isBatch = $scope.getIsBatchZone();\r\n    const isEvent = $scope.getIsEventZone();\r\n    const priority = isTransition ? TaskPriority.LOW : isEvent ? TaskPriority.HIGH : TaskPriority.NORMAL; // !\r\n    const forceAsync = isTransition;\r\n    const setPendingStatus = $scope.getPendingStatusSetter();\r\n    const callback = createCallback({\r\n      rootId,\r\n      hook,\r\n      isTransition,\r\n      tools: hasTools ? tools : undefined,\r\n    });\r\n    const createLocation = () => createHookLocation(rootId, idx, owner);\r\n    const callbackOptions: ScheduleCallbackOptions = {\r\n      priority,\r\n      forceAsync,\r\n      isTransition,\r\n      createLocation,\r\n      setPendingStatus,\r\n    };\r\n\r\n    if (isBatch) {\r\n      addBatch(\r\n        owner,\r\n        () => scheduler.schedule(callback, callbackOptions),\r\n        () => hasTools && tools().setValue(),\r\n      );\r\n    } else {\r\n      scheduler.schedule(callback, callbackOptions);\r\n    }\r\n  };\r\n\r\n  return update;\r\n}\r\n\r\nfunction useUpdate() {\r\n  const rootId = getRootId();\r\n  const fiber = $$scope().getCursorFiber();\r\n\r\n  return createUpdate(rootId, fiber.hook);\r\n}\r\n\r\nexport { createUpdate, useUpdate };\r\n","import { $$scope } from '../scope';\r\nimport { type Fiber } from '../fiber';\r\nimport { type Callback } from '../shared';\r\n\r\nfunction batch(callback: () => void) {\r\n  const $scope = $$scope();\r\n\r\n  $scope.setIsBatchZone(true);\r\n  callback();\r\n  $scope.setIsBatchZone(false);\r\n}\r\n\r\nfunction addBatch(fiber: Fiber, callback: Callback, change: Callback) {\r\n  const $scope = $$scope();\r\n\r\n  if ($scope.getIsTransitionZone()) {\r\n    callback();\r\n  } else {\r\n    const batch = fiber.batch || { timer: null, changes: [] };\r\n\r\n    fiber.batch = batch;\r\n    batch.changes.push(change);\r\n    batch.timer && clearTimeout(batch.timer);\r\n    batch.timer = setTimeout(() => {\r\n      batch.changes.splice(-1);\r\n      batch.changes.forEach(x => x());\r\n      fiber.batch = null;\r\n      callback();\r\n    });\r\n  }\r\n}\r\n\r\nexport { batch, addBatch };\r\n","import { useCallback } from '../use-callback';\r\nimport { detectIsFunction } from '../utils';\r\nimport { useUpdate } from '../use-update';\r\nimport { type Tools } from '../workloop';\r\nimport { useMemo } from '../use-memo';\r\nimport { $$scope } from '../scope';\r\nimport { trueFn } from '../utils';\r\n\r\ntype CreateToolsOptions<T> = {\r\n  next: Value<T>;\r\n  get: () => T;\r\n  set: (x: T) => void;\r\n  reset: (x: T) => void;\r\n  shouldUpdate?: (p: T, n: T) => boolean;\r\n};\r\n\r\nfunction createTools<T>(options: CreateToolsOptions<T>) {\r\n  const { get, set, reset, next, shouldUpdate: $shouldUpdate = trueFn } = options;\r\n  const $scope = $$scope();\r\n  const isBatch = $scope.getIsBatchZone();\r\n  const tools = (): Tools => {\r\n    const prevValue = get();\r\n    const newValue = detectIsFunction(next) ? next(prevValue) : next;\r\n    const shouldUpdate = () => isBatch || $shouldUpdate(prevValue, newValue);\r\n    const setValue = () => set(newValue);\r\n    const resetValue = () => reset(prevValue);\r\n\r\n    return { shouldUpdate, setValue, resetValue };\r\n  };\r\n\r\n  return tools;\r\n}\r\n\r\ntype Value<T> = T | ((prevValue: T) => T);\r\n\r\nfunction useState<T = unknown>(initialValue: T | (() => T)): [T, (value: Value<T>) => void] {\r\n  const update = useUpdate();\r\n  const scope = useMemo(\r\n    () => ({\r\n      value: detectIsFunction(initialValue) ? initialValue() : initialValue,\r\n    }),\r\n    [],\r\n  );\r\n  const setState = useCallback((next: Value<T>) => {\r\n    const tools = createTools({\r\n      next,\r\n      get: () => scope.value,\r\n      set: (x: T) => (scope.value = x),\r\n      reset: (x: T) => (scope.value = x),\r\n      shouldUpdate: (p: T, n: T) => !Object.is(p, n),\r\n    });\r\n\r\n    update(tools);\r\n  }, []);\r\n\r\n  return [scope.value, setState];\r\n}\r\n\r\nexport { createTools, useState };\r\n","import { useMemo } from '../use-memo';\r\n\r\nfunction useCallback<T = Function>(callback: T, deps: Array<any>): T {\r\n  const value = useMemo(() => callback, deps);\r\n\r\n  return value;\r\n}\r\n\r\nexport { useCallback };\r\n","import { detectIsObject, detectIsNull, detectIsFunction } from '../utils';\r\nimport type { Component, ComponentFactory } from '../component';\r\nimport type { RefProps, KeyProps, FlagProps } from '../shared';\r\nimport { useMemo } from '../use-memo';\r\n\r\nfunction forwardRef<P extends object, R>(\r\n  component: ComponentFactory<P, R>,\r\n): ComponentFactory<P & RefProps<R> & KeyProps & FlagProps, R> {\r\n  type Props = P & RefProps<R>;\r\n\r\n  return (props: Props) => {\r\n    const { ref, ...rest } = (props || {}) as Props;\r\n\r\n    return component(rest as P, ref) as Component<P, R>;\r\n  };\r\n}\r\n\r\nfunction detectIsMutableRef(ref: unknown): ref is MutableRef {\r\n  if (!detectIsObject(ref) || detectIsNull(ref)) return false;\r\n  const mutableRef = ref as MutableRef;\r\n\r\n  for (const key in mutableRef) {\r\n    if (key === 'current' && mutableRef.hasOwnProperty(key)) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nfunction applyRef<T>(ref: Ref<T>, current: T) {\r\n  if (detectIsFunction(ref)) {\r\n    ref(current);\r\n  } else if (detectIsMutableRef(ref)) {\r\n    ref.current = current;\r\n  }\r\n}\r\n\r\nfunction useRef<T>(initialValue: T = null): MutableRef<T> {\r\n  const ref = useMemo(() => ({ current: initialValue }), []) as MutableRef<T>;\r\n\r\n  return ref;\r\n}\r\n\r\nexport type MutableRef<T = unknown> = {\r\n  current: T;\r\n};\r\n\r\nexport type FunctionRef<T = unknown> = (ref: T) => void;\r\n\r\nexport type Ref<T = unknown> = MutableRef<T> | FunctionRef<T>;\r\n\r\nexport { forwardRef, detectIsMutableRef, applyRef, useRef };\r\n","import { detectIsString, detectIsFunction } from '../utils';\r\nimport { type TagVirtualNodeFactory, type ViewOptions, View } from '../view';\r\nimport { type ComponentFactory } from '../component';\r\n\r\nfunction createElement(\r\n  element: string | Function,\r\n  props: object,\r\n  ...slot: Array<any>\r\n): ComponentFactory | TagVirtualNodeFactory | null {\r\n  if (detectIsString(element)) {\r\n    const options = (props || {}) as ViewOptions;\r\n\r\n    options.as = element;\r\n    options.slot = slot;\r\n\r\n    return View(options);\r\n  }\r\n\r\n  if (detectIsFunction(element)) {\r\n    const options = (props || {}) as { slot: unknown };\r\n\r\n    options.slot = slot.length === 1 ? slot[0] : slot;\r\n\r\n    return element(options);\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nexport { createElement, createElement as h };\r\n","import { type DarkElement, type Fiber, component, useMemo, $$scope, detectIsComponent } from '@dark-engine/core';\r\n\r\nimport type { TagNativeElement } from '../native-element';\r\n\r\nconst $$portal = Symbol('portal');\r\n\r\nfunction createPortal(slot: DarkElement, container: TagNativeElement) {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    if (!(container instanceof Element)) {\r\n      throw new Error(`[Dark]: createPortal receives only Element as container!`);\r\n    }\r\n  }\r\n\r\n  return Portal({ container, slot });\r\n}\r\n\r\ntype PortalProps = {\r\n  container: TagNativeElement;\r\n  slot: DarkElement;\r\n};\r\n\r\nconst Portal = component<PortalProps>(\r\n  props => {\r\n    const element = props.container;\r\n    const fiber = $$scope().getCursorFiber();\r\n\r\n    useMemo(() => (element.innerHTML = ''), []);\r\n\r\n    fiber.element = element;\r\n    props.container = null;\r\n\r\n    return props.slot;\r\n  },\r\n  { token: $$portal },\r\n);\r\n\r\nconst detectIsPortal = (instance: unknown) => detectIsComponent(instance) && instance.token === $$portal;\r\n\r\nconst getPortalContainer = (fiber: Fiber<TagNativeElement>): TagNativeElement | null =>\r\n  detectIsPortal(fiber.inst) ? fiber.element : null;\r\n\r\nfunction unmountPortal(fiber: Fiber<TagNativeElement>) {\r\n  const element = getPortalContainer(fiber);\r\n\r\n  element && (element.innerHTML = '');\r\n}\r\n\r\nexport { createPortal, unmountPortal, detectIsPortal };\r\n","import { detectIsFunction, $$scope, detectIsArray } from '@dark-engine/core';\r\n\r\nimport type { TagNativeElement } from '../native-element';\r\n\r\nexport type EventHandler<E extends Event = Event, T = unknown> =\r\n  | ((e: SyntheticEvent<E, T>) => void)\r\n  | [(...args: Array<any>) => void, ...args: Array<any>];\r\n\r\ntype BrowserEventConstructor = (type: string, event: Event) => void;\r\n\r\nclass SyntheticEvent<E extends Event, T = TagNativeElement> {\r\n  type = '';\r\n  sourceEvent: E = null;\r\n  target: T = null;\r\n  private propagation = true;\r\n\r\n  constructor(options: Pick<SyntheticEvent<E, T>, 'sourceEvent' | 'target'>) {\r\n    this.type = options.sourceEvent.type;\r\n    this.sourceEvent = options.sourceEvent;\r\n    this.target = options.target;\r\n  }\r\n\r\n  stopPropagation() {\r\n    this.propagation = false;\r\n    this.sourceEvent.stopPropagation();\r\n  }\r\n\r\n  preventDefault() {\r\n    this.sourceEvent.preventDefault();\r\n  }\r\n\r\n  getPropagation() {\r\n    return this.propagation;\r\n  }\r\n}\r\n\r\nfunction delegateEvent(target: Element, eventName: string, handler: EventHandler) {\r\n  const $scope = $$scope();\r\n  const eventsMap = $scope.getEvents();\r\n  const handlersMap = eventsMap.get(eventName);\r\n  const $handler = detectIsArray(handler) ? (e: Event) => handler[0](...handler.slice(1), e) : handler;\r\n\r\n  if (!handlersMap) {\r\n    const rootHandler = (event: Event) => {\r\n      const handler = eventsMap.get(eventName).get(event.target);\r\n      const target = event.target as TagNativeElement;\r\n      let $event: SyntheticEvent<Event> = null;\r\n\r\n      if (detectIsFunction(handler)) {\r\n        $event = new SyntheticEvent({ sourceEvent: event, target });\r\n\r\n        $scope.setIsEventZone(true);\r\n        handler($event);\r\n        $scope.setIsEventZone(false);\r\n      }\r\n\r\n      if (target.parentElement) {\r\n        const shouldPropagate = $event ? $event.getPropagation() : true;\r\n\r\n        if (shouldPropagate) {\r\n          const constructor = event.constructor as BrowserEventConstructor;\r\n\r\n          target.parentElement.dispatchEvent(new constructor(event.type, event));\r\n        }\r\n      }\r\n    };\r\n\r\n    eventsMap.set(eventName, new WeakMap([[target, $handler]]));\r\n    document.addEventListener(eventName, rootHandler, true);\r\n    $scope.addEventUnsubscriber(() => document.removeEventListener(eventName, rootHandler, true));\r\n  } else {\r\n    handlersMap.set(target, $handler);\r\n  }\r\n}\r\n\r\nconst detectIsEvent = (attrName: string) => attrName.startsWith('on');\r\n\r\nconst getEventName = (attrName: string) => attrName.slice(2, attrName.length).toLowerCase();\r\n\r\nexport { SyntheticEvent, delegateEvent, detectIsEvent, getEventName };\r\n","export const VERSION = '0.25.1';\r\nexport const STYLE_ATTR = 'style';\r\nexport const CLASS_ATTR = 'class';\r\nexport const CLASS_NAME_ATTR = 'className';\r\nexport const EXCLUDE_ATTR_MARK = '$';\r\n","import {\r\n  type Fiber,\r\n  type VirtualNode,\r\n  type TagVirtualNode,\r\n  type TextVirtualNode,\r\n  type CommentVirtualNode,\r\n  type PlainVirtualNode,\r\n  type Callback,\r\n  REF_ATTR,\r\n  ATTR_BLACK_LIST,\r\n  CREATE_EFFECT_TAG,\r\n  UPDATE_EFFECT_TAG,\r\n  DELETE_EFFECT_TAG,\r\n  SKIP_EFFECT_TAG,\r\n  MOVE_MASK,\r\n  FLUSH_MASK,\r\n  SHADOW_MASK,\r\n  detectIsUndefined,\r\n  detectIsBoolean,\r\n  detectIsObject,\r\n  NodeType,\r\n  detectIsTagVirtualNode,\r\n  detectIsTextVirtualNode,\r\n  detectIsPlainVirtualNode,\r\n  getFiberWithElement,\r\n  collectElements,\r\n  walk,\r\n  dummyFn,\r\n  $$scope,\r\n  applyRef,\r\n} from '@dark-engine/core';\r\n\r\nimport { detectIsPortal } from '../portal';\r\nimport { delegateEvent, detectIsEvent, getEventName } from '../events';\r\nimport { STYLE_ATTR, CLASS_ATTR, CLASS_NAME_ATTR, EXCLUDE_ATTR_MARK } from '../constants';\r\nimport type {\r\n  NativeElement,\r\n  TagNativeElement,\r\n  TextNativeElement,\r\n  CommentNativeElement,\r\n  NativeNode,\r\n  AttributeValue,\r\n} from '../native-element';\r\n\r\nexport type CSSProperties = Record<string, string | number>;\r\n\r\nlet moves: Array<Callback> = [];\r\nlet patches: Array<Callback> = [];\r\nlet trackUpdate: (nativeElement: NativeElement) => void = null;\r\nconst svgTagNames = new Set([\r\n  'svg',\r\n  'animate',\r\n  'animateMotion',\r\n  'animateTransform',\r\n  'circle',\r\n  'clipPath',\r\n  'defs',\r\n  'desc',\r\n  'ellipse',\r\n  'feBlend',\r\n  'feColorMatrix',\r\n  'feComponentTransfer',\r\n  'feComposite',\r\n  'feConvolveMatrix',\r\n  'feDiffuseLighting',\r\n  'feDisplacementMap',\r\n  'feDistantLight',\r\n  'feDropShadow',\r\n  'feFlood',\r\n  'feFuncA',\r\n  'feFuncB',\r\n  'feFuncG',\r\n  'feFuncR',\r\n  'feGaussianBlur',\r\n  'feImage',\r\n  'feMerge',\r\n  'feMergeNode',\r\n  'feMorphology',\r\n  'feOffset',\r\n  'fePointLight',\r\n  'feSpecularLighting',\r\n  'feSpotLight',\r\n  'feTile',\r\n  'feTurbulence',\r\n  'filter',\r\n  'foreignObject',\r\n  'g',\r\n  'image',\r\n  'line',\r\n  'linearGradient',\r\n  'marker',\r\n  'mask',\r\n  'metadata',\r\n  'mpath',\r\n  'path',\r\n  'pattern',\r\n  'polygon',\r\n  'polyline',\r\n  'radialGradient',\r\n  'rect',\r\n  'stop',\r\n  'switch',\r\n  'symbol',\r\n  'text',\r\n  'textPath',\r\n  'tspan',\r\n  'use',\r\n  'view',\r\n]);\r\nconst voidTagNames = new Set([\r\n  'area',\r\n  'base',\r\n  'br',\r\n  'col',\r\n  'embed',\r\n  'hr',\r\n  'img',\r\n  'input',\r\n  'link',\r\n  'meta',\r\n  'param',\r\n  'source',\r\n  'track',\r\n  'wbr',\r\n]);\r\n\r\nconst createNativeElementMap = {\r\n  [NodeType.TAG]: (vNode: VirtualNode): TagNativeElement => {\r\n    const tagNode = vNode as TagVirtualNode;\r\n    const name = tagNode.name;\r\n\r\n    return detectIsSvgElement(name)\r\n      ? document.createElementNS('http://www.w3.org/2000/svg', name)\r\n      : document.createElement(name);\r\n  },\r\n  [NodeType.TEXT]: (vNode: VirtualNode): TextNativeElement => {\r\n    return document.createTextNode((vNode as TextVirtualNode).value);\r\n  },\r\n  [NodeType.COMMENT]: (vNode: VirtualNode): CommentNativeElement => {\r\n    return document.createComment((vNode as CommentVirtualNode).value);\r\n  },\r\n};\r\n\r\nfunction createNativeElement(node: VirtualNode): NativeElement {\r\n  return createNativeElementMap[node.type](node);\r\n}\r\n\r\nfunction detectIsSvgElement(name: string) {\r\n  return svgTagNames.has(name);\r\n}\r\n\r\nfunction detectIsVoidElement(name: string) {\r\n  return voidTagNames.has(name);\r\n}\r\n\r\nfunction setObjectStyle(element: TagNativeElement, style: CSSProperties) {\r\n  const keys = Object.keys(style);\r\n\r\n  for (const key of keys) {\r\n    element.style.setProperty(key, String(style[key]));\r\n  }\r\n}\r\n\r\nfunction addAttributes(element: NativeElement, node: TagVirtualNode, isHydrateZone: boolean) {\r\n  const attrNames = Object.keys(node.attrs);\r\n  const tagElement = element as TagNativeElement;\r\n\r\n  for (const attrName of attrNames) {\r\n    const attrValue = node.attrs[attrName];\r\n\r\n    if (attrName[0] === EXCLUDE_ATTR_MARK) continue;\r\n\r\n    if (attrName === REF_ATTR) {\r\n      applyRef(attrValue, element);\r\n      continue;\r\n    }\r\n\r\n    if (attrName === CLASS_ATTR || attrName === CLASS_NAME_ATTR) {\r\n      toggleAttribute(tagElement, CLASS_ATTR, attrValue);\r\n      continue;\r\n    }\r\n\r\n    if (attrName === STYLE_ATTR && attrValue && detectIsObject(attrValue)) {\r\n      setObjectStyle(tagElement, attrValue as CSSProperties);\r\n      continue;\r\n    }\r\n\r\n    if (detectIsEvent(attrName)) {\r\n      delegateEvent(tagElement, getEventName(attrName), attrValue);\r\n    } else if (!isHydrateZone && !detectIsUndefined(attrValue) && !ATTR_BLACK_LIST[attrName]) {\r\n      const stop = patchProperties({\r\n        tagName: node.name,\r\n        element: tagElement,\r\n        attrValue,\r\n        attrName,\r\n      });\r\n\r\n      !stop && tagElement.setAttribute(attrName, attrValue);\r\n    }\r\n  }\r\n}\r\n\r\nfunction updateAttributes(element: NativeElement, prevNode: TagVirtualNode, nextNode: TagVirtualNode) {\r\n  const attrNames = getAttributeNames(prevNode, nextNode);\r\n  const tagElement = element as TagNativeElement;\r\n\r\n  for (const attrName of attrNames) {\r\n    const prevAttrValue = prevNode.attrs[attrName];\r\n    const nextAttrValue = nextNode.attrs[attrName];\r\n\r\n    if (attrName[0] === EXCLUDE_ATTR_MARK) continue;\r\n\r\n    if (attrName === REF_ATTR) {\r\n      applyRef(prevAttrValue, element);\r\n      continue;\r\n    }\r\n\r\n    if ((attrName === CLASS_ATTR || attrName === CLASS_NAME_ATTR) && prevAttrValue !== nextAttrValue) {\r\n      toggleAttribute(tagElement, CLASS_ATTR, nextAttrValue);\r\n      continue;\r\n    }\r\n\r\n    if (attrName === STYLE_ATTR && nextAttrValue && prevAttrValue !== nextAttrValue && detectIsObject(nextAttrValue)) {\r\n      setObjectStyle(tagElement, nextAttrValue as CSSProperties);\r\n      continue;\r\n    }\r\n\r\n    if (!detectIsUndefined(nextAttrValue)) {\r\n      if (detectIsEvent(attrName)) {\r\n        prevAttrValue !== nextAttrValue && delegateEvent(tagElement, getEventName(attrName), nextAttrValue);\r\n      } else if (!ATTR_BLACK_LIST[attrName] && prevAttrValue !== nextAttrValue) {\r\n        const stop = patchProperties({\r\n          tagName: nextNode.name,\r\n          element: tagElement,\r\n          attrValue: nextAttrValue,\r\n          attrName,\r\n        });\r\n\r\n        !stop && tagElement.setAttribute(attrName, nextAttrValue);\r\n      }\r\n    } else {\r\n      tagElement.removeAttribute(attrName);\r\n    }\r\n  }\r\n}\r\n\r\nfunction toggleAttribute(element: TagNativeElement, name: string, value: string) {\r\n  value ? element.setAttribute(name, value) : element.removeAttribute(name);\r\n}\r\n\r\nfunction getAttributeNames(prevNode: TagVirtualNode, nextNode: TagVirtualNode) {\r\n  const attrNames = new Set<string>();\r\n  const prevAttrs = Object.keys(prevNode.attrs);\r\n  const nextAttrs = Object.keys(nextNode.attrs);\r\n  const size = Math.max(prevAttrs.length, nextAttrs.length);\r\n\r\n  for (let i = 0; i < size; i++) {\r\n    attrNames.add(prevAttrs[i] || nextAttrs[i]);\r\n  }\r\n\r\n  return attrNames;\r\n}\r\n\r\ntype PatchPropertiesOptions = {\r\n  tagName: string;\r\n  element: TagNativeElement;\r\n  attrName: string;\r\n  attrValue: AttributeValue;\r\n};\r\n\r\nfunction patchProperties(options: PatchPropertiesOptions): boolean {\r\n  const { tagName, element, attrName, attrValue } = options;\r\n  const fn = patchPropertiesSpecialCasesMap[tagName];\r\n  let stop = fn ? fn(element, attrName, attrValue) : false;\r\n\r\n  if (canSetProperty(element, attrName)) {\r\n    element[attrName] = attrValue;\r\n  }\r\n\r\n  if (!stop && detectIsBoolean(attrValue)) {\r\n    stop = !attrName.includes('-');\r\n  }\r\n\r\n  return stop;\r\n}\r\n\r\nfunction canSetProperty(element: TagNativeElement, key: string) {\r\n  const prototype = Object.getPrototypeOf(element);\r\n  const descriptor = Object.getOwnPropertyDescriptor(prototype, key);\r\n\r\n  return Boolean(descriptor?.set);\r\n}\r\n\r\nconst patchPropertiesSpecialCasesMap: Record<\r\n  string,\r\n  (element: NativeElement, attrName: string, attrValue: AttributeValue) => boolean\r\n> = {\r\n  input: (element: HTMLInputElement, attrName: string, attrValue: AttributeValue) => {\r\n    if (attrName === 'value') {\r\n      patches.push(() => {\r\n        detectIsBoolean(attrValue) ? (element.checked = attrValue) : (element.value = String(attrValue));\r\n      });\r\n    } else if (attrName === 'autoFocus') {\r\n      patches.push(() => {\r\n        element.autofocus = Boolean(attrValue);\r\n        element.autofocus && element.focus();\r\n      });\r\n    }\r\n\r\n    return false;\r\n  },\r\n  textarea: (element: HTMLTextAreaElement, attrName: string, attrValue: AttributeValue) => {\r\n    if (attrName === 'value') {\r\n      element.innerText = String(attrValue);\r\n\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  },\r\n};\r\n\r\nfunction commitCreation(fiber: Fiber<NativeElement>) {\r\n  const parentFiber = getFiberWithElement<NativeElement, TagNativeElement>(fiber.parent);\r\n  const parentElement = parentFiber.element;\r\n  const childNodes = parentElement.childNodes;\r\n  const isHydrateZone = $$scope().getIsHydrateZone();\r\n\r\n  if (isHydrateZone) {\r\n    const nativeElement = childNodes[fiber.eidx] as NativeElement;\r\n\r\n    if (\r\n      detectIsTextVirtualNode(fiber.inst) &&\r\n      nativeElement instanceof Text &&\r\n      fiber.inst.value.length !== nativeElement.length\r\n    ) {\r\n      nativeElement.splitText(fiber.inst.value.length);\r\n    }\r\n\r\n    fiber.element = nativeElement;\r\n  } else {\r\n    if (!(fiber.mask & SHADOW_MASK)) {\r\n      if (childNodes.length === 0 || fiber.eidx > childNodes.length - 1) {\r\n        !detectIsVoidElement((parentFiber.inst as TagVirtualNode).name) &&\r\n          appendNativeElement(fiber.element, parentElement);\r\n      } else {\r\n        insertNativeElement(fiber.element, parentElement.childNodes[fiber.eidx], parentElement);\r\n      }\r\n    }\r\n  }\r\n\r\n  detectIsTagVirtualNode(fiber.inst) && addAttributes(fiber.element, fiber.inst, isHydrateZone);\r\n}\r\n\r\nfunction commitUpdate(fiber: Fiber<NativeElement>) {\r\n  const element = fiber.element;\r\n  const prevInstance = fiber.alt.inst as VirtualNode;\r\n  const nextInstance = fiber.inst as VirtualNode;\r\n\r\n  detectIsPlainVirtualNode(nextInstance)\r\n    ? (prevInstance as PlainVirtualNode).value !== nextInstance.value && (element.textContent = nextInstance.value)\r\n    : updateAttributes(element, prevInstance as TagVirtualNode, nextInstance as TagVirtualNode);\r\n}\r\n\r\nfunction commitDeletion(fiber: Fiber<NativeElement>) {\r\n  const parentFiber = getFiberWithElement<NativeElement, TagNativeElement>(fiber.parent);\r\n\r\n  if (fiber.mask & FLUSH_MASK) {\r\n    parentFiber.element.innerHTML && (parentFiber.element.innerHTML = '');\r\n    return;\r\n  }\r\n\r\n  walk<NativeElement>(fiber, (fiber, skip) => {\r\n    if (fiber.element) {\r\n      !detectIsPortal(fiber.inst) &&\r\n        canRemoveNativeElement(fiber.element, parentFiber.element) &&\r\n        removeNativeElement(fiber.element, parentFiber.element);\r\n      return skip();\r\n    }\r\n  });\r\n}\r\n\r\nfunction move(fiber: Fiber<NativeElement>) {\r\n  const sourceNodes = collectElements(fiber, x => x.element);\r\n  const sourceNode = sourceNodes[0];\r\n  const parentElement = sourceNode.parentElement;\r\n  const sourceFragment = new DocumentFragment();\r\n  const elementIdx = fiber.eidx;\r\n  let idx = 0;\r\n  const move = () => {\r\n    for (let i = 1; i < sourceNodes.length; i++) {\r\n      removeNativeElement(parentElement.childNodes[elementIdx + 1], parentElement);\r\n    }\r\n\r\n    replaceNativeElement(sourceFragment, parentElement.childNodes[elementIdx], parentElement);\r\n  };\r\n\r\n  for (const node of sourceNodes) {\r\n    insertNativeElement(document.createComment(`${elementIdx}:${idx}`), node, parentElement);\r\n    appendNativeElement(node, sourceFragment);\r\n    idx++;\r\n  }\r\n\r\n  moves.push(move);\r\n}\r\n\r\nconst commitMap: Record<string, (fiber: Fiber<NativeElement>) => void> = {\r\n  [CREATE_EFFECT_TAG]: (fiber: Fiber<NativeElement>) => {\r\n    if (!fiber.element || detectIsPortal(fiber.inst)) return;\r\n    trackUpdate && trackUpdate(fiber.element);\r\n    commitCreation(fiber);\r\n  },\r\n  [UPDATE_EFFECT_TAG]: (fiber: Fiber<NativeElement>) => {\r\n    fiber.mask & MOVE_MASK && (move(fiber), (fiber.mask &= ~MOVE_MASK));\r\n    if (!fiber.element || detectIsPortal(fiber.inst)) return;\r\n    trackUpdate && trackUpdate(fiber.element);\r\n    commitUpdate(fiber);\r\n  },\r\n  [DELETE_EFFECT_TAG]: commitDeletion,\r\n  [SKIP_EFFECT_TAG]: dummyFn,\r\n};\r\n\r\nfunction finishCommit() {\r\n  moves.forEach(x => x());\r\n  patches.forEach(x => x());\r\n  moves = [];\r\n  patches = [];\r\n}\r\n\r\nconst commit = (fiber: Fiber<NativeElement>) => commitMap[fiber.tag](fiber);\r\n\r\nconst setTrackUpdate = (fn: typeof trackUpdate) => (trackUpdate = fn);\r\n\r\nconst appendNativeElement = (element: NativeNode, parent: NativeNode) => parent.appendChild(element);\r\n\r\nconst insertNativeElement = (element: NativeNode, sibling: NativeNode, parent: TagNativeElement) =>\r\n  parent.insertBefore(element, sibling);\r\n\r\nconst insertNativeElementByIndex = (element: NativeNode, idx: number, parent: TagNativeElement) =>\r\n  parent.insertBefore(element, parent.childNodes[idx]);\r\n\r\nconst replaceNativeElement = (element: NativeNode, candidate: NativeNode, parent: TagNativeElement) =>\r\n  parent.replaceChild(element, candidate);\r\n\r\nconst canRemoveNativeElement = (element: NativeNode, parent: NativeNode) => element.parentElement === parent;\r\n\r\nconst removeNativeElement = (element: NativeNode, parent: TagNativeElement) => parent.removeChild(element);\r\n\r\nexport { createNativeElement, commit, finishCommit, setTrackUpdate, insertNativeElementByIndex };\r\n","import {\r\n  type DarkElement,\r\n  type Callback,\r\n  ROOT,\r\n  Fiber,\r\n  CREATE_EFFECT_TAG,\r\n  UPDATE_EFFECT_TAG,\r\n  platform,\r\n  flatten,\r\n  detectIsUndefined,\r\n  detectIsFunction,\r\n  trueFn,\r\n  TagVirtualNode,\r\n  TaskPriority,\r\n  createReplacer,\r\n  setRootId,\r\n  $$scope,\r\n  dummyFn,\r\n  scheduler,\r\n} from '@dark-engine/core';\r\n\r\nimport { createNativeElement, insertNativeElementByIndex, commit, finishCommit } from '../dom';\r\nimport { detectIsPortal, unmountPortal } from '../portal';\r\nimport type { TagNativeElement } from '../native-element';\r\n\r\nconst roots = new Map<Element, number>();\r\nconst raf = requestAnimationFrame.bind(this);\r\nconst caf = cancelAnimationFrame.bind(this);\r\nconst spawn = raf;\r\nlet isInjected = false;\r\n\r\nfunction inject() {\r\n  platform.createElement = createNativeElement as typeof platform.createElement;\r\n  platform.insertElement = insertNativeElementByIndex as typeof platform.insertElement;\r\n  platform.raf = raf;\r\n  platform.caf = caf;\r\n  platform.spawn = spawn;\r\n  platform.commit = commit;\r\n  platform.finishCommit = finishCommit;\r\n  platform.detectIsDynamic = trueFn;\r\n  platform.detectIsPortal = detectIsPortal;\r\n  platform.unmountPortal = unmountPortal;\r\n  platform.chunk = dummyFn;\r\n  isInjected = true;\r\n}\r\n\r\nfunction render(element: DarkElement, container: TagNativeElement, hydrate?: Callback) {\r\n  !isInjected && inject();\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    if (!(container instanceof Element)) {\r\n      throw new Error(`[Dark]: render receives only Element as container!`);\r\n    }\r\n  }\r\n\r\n  const isMounted = !detectIsUndefined(roots.get(container));\r\n  const isHydrate = detectIsFunction(hydrate);\r\n  let rootId: number = null;\r\n\r\n  if (!isMounted) {\r\n    rootId = roots.size;\r\n    roots.set(container, rootId);\r\n    !isHydrate && (container.innerHTML = '');\r\n  } else {\r\n    rootId = roots.get(container);\r\n  }\r\n\r\n  const $scope = $$scope(rootId);\r\n\r\n  // insertion effect can't schedule renders\r\n  if ($scope?.getIsInsertionEffectsZone()) return;\r\n\r\n  const callback = () => {\r\n    setRootId(rootId); // !\r\n    const $scope = $$scope();\r\n    const rootFiber = $scope.getRoot();\r\n    const isUpdate = Boolean(rootFiber);\r\n    const fiber = new Fiber().mutate({\r\n      element: container,\r\n      inst: new TagVirtualNode(ROOT, {}, flatten([element || createReplacer()]) as TagVirtualNode['children']),\r\n      alt: rootFiber,\r\n      tag: isUpdate ? UPDATE_EFFECT_TAG : CREATE_EFFECT_TAG,\r\n    });\r\n\r\n    $scope.resetMount();\r\n    $scope.setWorkInProgress(fiber);\r\n    $scope.setIsHydrateZone(isHydrate);\r\n    $scope.setNextUnitOfWork(fiber);\r\n    isHydrate && hydrate();\r\n  };\r\n\r\n  scheduler.schedule(callback, { priority: TaskPriority.NORMAL });\r\n}\r\n\r\nexport { render, roots, inject };\r\n","import {\r\n  type DarkElement,\r\n  type MutableRef,\r\n  type Ref,\r\n  type Component,\r\n  type StandardComponentProps,\r\n  h,\r\n  Fragment,\r\n  component,\r\n  useEffect,\r\n  useLayoutEffect,\r\n  useMemo,\r\n  useState,\r\n  useRef,\r\n} from '@dark-engine/core';\r\nimport { createRoot } from '@dark-engine/platform-browser';\r\n\r\ntype Item = {\r\n  id: number;\r\n  name: string;\r\n};\r\n\r\nfunction randomize(list: Array<Item>) {\r\n  let currentIndex = list.length;\r\n  let randomIndex: number;\r\n\r\n  while (currentIndex != 0) {\r\n    randomIndex = Math.floor(Math.random() * currentIndex);\r\n    currentIndex--;\r\n\r\n    [list[currentIndex], list[randomIndex]] = [list[randomIndex], list[currentIndex]];\r\n  }\r\n\r\n  return list;\r\n}\r\n\r\nconst shuffle = (count: number) => {\r\n  let nextId = 0;\r\n  const items = Array(count)\r\n    .fill(0)\r\n    .map(() => ({\r\n      id: ++nextId,\r\n      name: `${nextId}`,\r\n    }));\r\n  const list = randomize(items);\r\n\r\n  return list;\r\n};\r\n\r\nconst forceBrowserReflow = () => document.body.clientHeight;\r\n\r\ntype AnimatedListProps<T = any> = {\r\n  items: Array<T>;\r\n  getKey: (x: T) => Key;\r\n  duration?: number;\r\n  slot: (options: AnimatedListSlotOptions<T>) => DarkElement;\r\n};\r\n\r\ntype Key = string | number;\r\n\r\ntype AnimatedListSlotOptions<T> = {\r\n  items: Array<T>;\r\n  containerRef: MutableRef<HTMLElement>;\r\n  itemRef: (idx: number, key: Key) => (ref: HTMLElement) => void;\r\n};\r\n\r\nconst AnimatedList: AnimatedList = component<AnimatedListProps>(({ items: xItems, getKey, duration = 1000, slot }) => {\r\n  const [items, setItems] = useState(xItems);\r\n  const containerRef = useRef<HTMLElement>(null);\r\n  const scope = useMemo<Scope>(\r\n    () => ({\r\n      refs: { indexed: {}, keyed: {} },\r\n      rects: {},\r\n      items,\r\n      timerId: null,\r\n      timerId2: null,\r\n      firstRender: true,\r\n      isTransition: false,\r\n    }),\r\n    [],\r\n  );\r\n\r\n  useEffect(() => {\r\n    const setRects = () => {\r\n      let idx = 0;\r\n\r\n      for (const node of Array.from(containerRef.current.children)) {\r\n        scope.rects[idx] = node.getBoundingClientRect();\r\n        idx++;\r\n      }\r\n    };\r\n\r\n    setRects();\r\n    window.addEventListener('resize', setRects);\r\n\r\n    return () => window.removeEventListener('resize', setRects);\r\n  }, []);\r\n\r\n  useLayoutEffect(() => {\r\n    if (scope.firstRender) return;\r\n    scope.isTransition = true;\r\n    !scope.timerId && addStyles(items, true);\r\n    scope.items = xItems;\r\n    requestAnimationFrame(() => {\r\n      forceBrowserReflow();\r\n      addStyles(xItems, false);\r\n    });\r\n  }, [xItems]);\r\n\r\n  useEffect(() => {\r\n    if (scope.firstRender) return;\r\n    forceBrowserReflow();\r\n    removeStyles(items);\r\n  }, [items]);\r\n\r\n  useEffect(() => {\r\n    scope.firstRender = false;\r\n  }, [items]);\r\n\r\n  const addStyles = (items: Array<unknown>, mount: boolean) => {\r\n    let idx = 0;\r\n\r\n    for (const item of items) {\r\n      const rect = scope.rects[idx];\r\n      const key = getKey(item);\r\n      const ref = scope.refs.keyed[key];\r\n\r\n      ref.style.setProperty('position', 'absolute');\r\n      ref.style.setProperty('width', `${rect.width}px`);\r\n      ref.style.setProperty('height', `${rect.height}px`);\r\n      ref.style.setProperty('transform', `translate(${rect.left}px, ${rect.top}px)`);\r\n\r\n      if (!mount) {\r\n        ref.style.setProperty(\r\n          'transition',\r\n          `transform ${duration}ms ease-in-out, opacity ${duration / 2}ms ease-in-out`,\r\n        );\r\n        ref.style.setProperty('opacity', `0.5`);\r\n      }\r\n\r\n      idx++;\r\n    }\r\n\r\n    !mount && scope.timerId && window.clearTimeout(scope.timerId);\r\n    scope.timerId = window.setTimeout(() => {\r\n      scope.timerId = null;\r\n      setItems(scope.items);\r\n    }, duration);\r\n  };\r\n\r\n  const removeStyles = (items: Array<unknown>) => {\r\n    for (const item of items) {\r\n      const key = getKey(item);\r\n      const ref = scope.refs.keyed[key];\r\n\r\n      ref.style.setProperty('transition', `opacity ${duration / 2}ms ease-in-out`);\r\n      ref.style.setProperty('opacity', `1`);\r\n      ref.style.removeProperty('position');\r\n      ref.style.removeProperty('width');\r\n      ref.style.removeProperty('height');\r\n      ref.style.removeProperty('transform');\r\n    }\r\n\r\n    scope.isTransition = false;\r\n\r\n    scope.timerId2 && window.clearTimeout(scope.timerId2);\r\n    scope.timerId2 = window.setTimeout(() => {\r\n      scope.timerId2 = null;\r\n      if (scope.isTransition) return;\r\n      for (const item of items) {\r\n        const key = getKey(item);\r\n        const ref = scope.refs.keyed[key];\r\n\r\n        ref.removeAttribute('style');\r\n      }\r\n    }, duration / 2);\r\n  };\r\n\r\n  const itemRef = (idx: number, key: Key) => (ref: HTMLElement) => {\r\n    scope.refs.indexed[idx] = ref;\r\n    scope.refs.keyed[key] = ref;\r\n  };\r\n\r\n  return slot({ items, containerRef, itemRef });\r\n});\r\n\r\ntype Scope<T = unknown> = {\r\n  refs: {\r\n    indexed: Record<number, HTMLElement>;\r\n    keyed: Record<number, HTMLElement>;\r\n  };\r\n  rects: Record<number, DOMRect>;\r\n  items: Array<T>;\r\n  timerId: number;\r\n  timerId2: number;\r\n  firstRender: boolean;\r\n  isTransition: boolean;\r\n};\r\n\r\ntype MergedProps<T> = AnimatedListProps<T> & StandardComponentProps;\r\n\r\ntype AnimatedList = <T>(props?: MergedProps<T>, ref?: Ref) => Component<MergedProps<T>>;\r\n\r\n// usage\r\n\r\nconst App = component(() => {\r\n  const [items, setItems] = useState(() => shuffle(100));\r\n\r\n  const handleShuffle = () => {\r\n    setItems(shuffle(items.length));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div class='content'>\r\n        <AnimatedList items={items} getKey={x => x.id} duration={1000}>\r\n          {({ items, containerRef, itemRef }) => {\r\n            return (\r\n              <div ref={containerRef as MutableRef<HTMLDivElement>} class='grid'>\r\n                {items.map((x, idx) => {\r\n                  const key = x.id;\r\n\r\n                  return (\r\n                    <div ref={itemRef(idx, key)} key={key} class='grid-item'>\r\n                      <span>{x.name}</span>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            );\r\n          }}\r\n        </AnimatedList>\r\n        <div class='button-layout'>\r\n          <button class='button' onClick={handleShuffle}>\r\n            shuffle\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n});\r\n\r\ncreateRoot(document.getElementById('root')).render(<App />);\r\n","import { type DarkElement, unmountRoot } from '@dark-engine/core';\r\n\r\nimport { render, roots } from '../render';\r\nimport type { TagNativeElement } from '../native-element';\r\n\r\nfunction createRoot(container: TagNativeElement) {\r\n  return {\r\n    render: (element: DarkElement) => render(element, container),\r\n    unmount: () => unmount(container),\r\n  };\r\n}\r\n\r\nfunction unmount(container: TagNativeElement) {\r\n  const rootId = roots.get(container);\r\n\r\n  unmountRoot(rootId, () => {\r\n    roots.delete(container);\r\n    container.innerHTML = '';\r\n  });\r\n}\r\n\r\nexport { createRoot, unmount };\r\n"],"names":["ROOT","REPLACER","KEY_ATTR","REF_ATTR","CREATE_EFFECT_TAG","UPDATE_EFFECT_TAG","SKIP_EFFECT_TAG","MOVE_MASK","TaskPriority","Flag","ATTR_BLACK_LIST","SKIP_SCAN_OPT","MEMO_SLOT_OPT","STATIC_SLOT_OPT","$$inject","Symbol","Component","constructor","type","token","props","ref","shouldUpdate","displayName","children","this","component","options","$token","factory","defaultInject","detectIsComponent","x","detectIsFunction","o","detectIsUndefined","detectIsTextBased","detectIsObject","detectIsBoolean","detectIsArray","Array","isArray","detectIsNull","detectIsEmpty","getTime","Date","now","dummyFn","trueFn","sameFn","flatten","source","transform","length","list","stack","idx","pop","i","push","detectAreDepsDifferent","prevDeps","nextDeps","max","Math","Object","is","createIndexKey","$$vNode","ATTR_TYPE","VirtualNode","TagVirtualNode","name","attrs","super","NodeType","TAG","TextVirtualNode","TEXT","value","String","CommentVirtualNode","text","COMMENT","from","detectIsTextVirtualNode","detectIsVirtualNode","vNode","detectIsTagVirtualNode","detectIsCommentVirtualNode","detectIsVirtualNodeFactory","detectIsPlainVirtualNode","createReplacer","getElementKey","inst","hasElementFlag","flag","Boolean","hasComponentFlag","hasVirtualNodeFactoryFlag","hasTagVirtualNodeFlag","getElementType","hasChildrenProp","detectAreSameInstanceTypes","prevInst","nextInst","isComponentFactories","nc","defaultRealisation","Error","platform","createElement","insertElement","raf","caf","spawn","commit","finishCommit","detectIsDynamic","detectIsPortal","unmountPortal","chunk","EventEmitter","subscribers","Map","on","e","fn","has","set","Set","get","add","delete","emit","data","forEach","kill","__getSize","size","Scope","root","wip","cursor","unit","mountDeep","mountLevel","mountNav","events","unsubs","actions","candidates","deletions","cancels","asyncEffects","layoutEffects","insertionEffects","resourceId","resources","defers","setPendingStatus","isLayoutEffectsZone","isInsertionEffectsZone","isUpdateZone","isBatchZone","isHydrateZone","isStreamZone","isTransitionZone","isEventZone","isHot","isDynamic","isServer","emitter","resetActions","getActionsById","id","addActionMap","map","replace","insert","remove","move","stable","addReplaceAction","nextKey","addInsertAction","addRemoveAction","prevKey","addMoveAction","addStableAction","copy","scope","getRoot","setRoot","fiber","getWorkInProgress","setWorkInProgress","getNextUnitOfWork","setNextUnitOfWork","getCursorFiber","setCursorFiber","navToChild","navToSibling","navToParent","navToPrev","getMountIndex","setMountDeep","getMountDeep","resetMount","getEvents","addEventUnsubscriber","unsubscribeEvents","getCandidates","addCandidate","resetCandidates","getDeletions","hasDeletion","nextFiber","parent","addDeletion","resetDeletions","addAsyncEffect","resetAsyncEffects","runAsyncEffects","effects","setTimeout","addLayoutEffect","resetLayoutEffects","runLayoutEffects","setIsLayoutEffectsZone","addInsertionEffect","resetInsertionEffects","runInsertionEffects","setIsInsertionEffectsZone","addCancel","applyCancels","resetCancels","getIsLayoutEffectsZone","getIsInsertionEffectsZone","getIsUpdateZone","setIsUpdateZone","getIsBatchZone","setIsBatchZone","getIsHydrateZone","setIsHydrateZone","getIsStreamZone","setIsStreamZone","getIsTransitionZone","setIsTransitionZone","getIsEventZone","setIsEventZone","getIsHot","setIsHot","getPendingStatusSetter","setPendingStatusSetter","flush","getEmitter","defer","getDefers","resetDefers","getResource","setResource","res","getResources","getResourceId","setResourceId","getNextResourceId","runAfterCommit","rootId","scopes","setRootId","$$memo","defaultShouldUpdate","nextProps","keys","key","detectIsMemo","instance","Memo","memo","getValue","p","n","deps","useMemo","hook","values","state","$value","detectIsElement","Fiber","provider","cc","cec","eidx","mask","element","tag","child","next","alt","atoms","nextId","mutate","markHost","increment","count","force","$scope","wipFiber","stop","setError","error","catch","static","Hook","owner","walk","onWalk","shouldDeep","shouldStop","skip","getFiberWithElement","$fiber","buildChildNodes","onNode","getKey","buildChildNode","altMap","startEidx","prevIdx","nextIdx","left","right","isFirst","isLast","notifyParents","$$fragment","Fragment","slot","$$useEffect","createEffect","useEffect","effect","cleanup","undefined","isInsertionEffect","EffectType","INSERTION","isLayoutEffect","LAYOUT","isAsyncEffect","ASYNC","runEffect","dropEffects","$$useLayoutEffect","useLayoutEffect","dropLayoutEffects","$$useInsertionEffect","useInsertionEffect","dropInsertionEffects","shouldUnmountFiber","INSERTION_EFFECT_HOST_MASK","unmountFiber","_","hasPendingPromise","hasRenderError","workLoop","isAsync","shouldYield","hasMoreWork","performUnitOfWork","scheduler","hasPrimaryTask","fork","unmounts","diff","parentFiber","isRight","sync","err","Promise","finally","isDeepWalking","isStream","hasChildren","$inst","createFiber","getAlternate","share","mountChild","mountSibling","prev","shouldMount","pc","mount","hasSameCount","prevKeys","nextKeys","prevKeysMap","nextKeysMap","keyedFibersMap","usedKeysMap","extractKeys","prevKeyFiber","tryOptStaticSlot","hasMove","hasRemove","hasInsert","hasReplace","detectIsStableMemoTree","tryOptMov","tryOptRem","tryOptMemoSlot","reconcile","isUpdate","setup","detectAreSameComponentTypesWithSameKeys","getHook","fromChild","parentId","isMove","isStable","isComponent","result","promise","all","setNextId","args","console","supportConditional","cancel","$$scope$","cancelTask","setValue","resetValue","assign","replaceScope","$tools","MessageChannel","port1","port2","MessagePort","channel","offs","event","callback","off","postMessage","unref","Task","priority","forceAsync","taskRestorer","pendingSetter","nextTaskId","getPriority","getForceAsync","setIsTransition","isTransition","getIsTransition","run","pending","markAsPending","isPending","canPending","markAsUnnecessary","isUnnecessary","getIsUnnecessary","setTaskRestorer","setLocationCreator","locationCreator","createLocation","setPendingSetter","loc","tasks","deep","$loc","split","some","$$loc","indexOf","createRootLocation","queue","HIGH","NORMAL","LOW","deadline","task","scheduledCallback","isMessageLoopRunning","port","performWorkUntilDeadline","bind","reset","schedule","put","execute","high","normal","low","getQueues","hasPrimary","hasLow","detectHasRelatedUpdate","complete","filter","splice","pick","shift","resolve","then","requestCallbackAsync","requestCallback","isBusy","unshift","createUpdate","tools","hasTools","isBatch","isEvent","restore","fromRestore","detectIsFiberAlive","createCallback","callbackOptions","createHookLocation","change","batch","timer","changes","clearTimeout","addBatch","useState","initialValue","update","setState","$shouldUpdate","prevValue","newValue","createTools","applyRef","current","mutableRef","hasOwnProperty","detectIsMutableRef","as","_void","View","$$portal","container","innerHTML","getPortalContainer","SyntheticEvent","sourceEvent","target","propagation","stopPropagation","preventDefault","getPropagation","delegateEvent","eventName","handler","eventsMap","handlersMap","$handler","slice","rootHandler","$event","parentElement","dispatchEvent","WeakMap","document","addEventListener","removeEventListener","detectIsEvent","attrName","startsWith","getEventName","toLowerCase","STYLE_ATTR","CLASS_ATTR","CLASS_NAME_ATTR","moves","patches","svgTagNames","voidTagNames","createNativeElementMap","detectIsSvgElement","createElementNS","createTextNode","createComment","createNativeElement","node","setObjectStyle","style","setProperty","toggleAttribute","setAttribute","removeAttribute","patchProperties","tagName","attrValue","patchPropertiesSpecialCasesMap","prototype","getPrototypeOf","descriptor","getOwnPropertyDescriptor","canSetProperty","includes","input","checked","autofocus","focus","textarea","innerText","commitMap","childNodes","nativeElement","Text","splitText","appendNativeElement","insertNativeElement","attrNames","tagElement","addAttributes","commitCreation","sourceNodes","elements","collectElements","sourceFragment","DocumentFragment","elementIdx","removeNativeElement","replaceNativeElement","prevInstance","nextInstance","textContent","prevNode","nextNode","prevAttrs","nextAttrs","getAttributeNames","prevAttrValue","nextAttrValue","updateAttributes","commitUpdate","canRemoveNativeElement","appendChild","sibling","insertBefore","insertNativeElementByIndex","candidate","replaceChild","removeChild","roots","requestAnimationFrame","cancelAnimationFrame","isInjected","shuffle","randomIndex","currentIndex","floor","random","randomize","fill","forceBrowserReflow","body","clientHeight","AnimatedList","items","xItems","duration","setItems","containerRef","useRef","refs","indexed","keyed","rects","timerId","timerId2","firstRender","setRects","getBoundingClientRect","window","addStyles","removeStyles","item","rect","width","height","top","removeProperty","itemRef","App","class","onClick","getElementById","render","hydrate","isMounted","isHydrate","rootFiber","unmount","onCompleted","unmountRoot"],"sourceRoot":""}