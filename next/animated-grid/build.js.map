{"version":3,"file":"build.js","mappings":"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","sources":["webpack://dark-animated-grid/../../packages/core/src/constants.ts","webpack://dark-animated-grid/../../packages/core/src/component/component.ts","webpack://dark-animated-grid/../../packages/core/src/utils/utils.ts","webpack://dark-animated-grid/../../packages/core/src/platform/platform.ts","webpack://dark-animated-grid/../../packages/core/src/emitter/emitter.ts","webpack://dark-animated-grid/../../packages/core/src/scope/scope.ts","webpack://dark-animated-grid/../../packages/core/src/view/view.ts","webpack://dark-animated-grid/../../packages/core/src/fiber/fiber.ts","webpack://dark-animated-grid/../../packages/core/src/memo/memo.ts","webpack://dark-animated-grid/../../packages/core/src/walk/walk.ts","webpack://dark-animated-grid/../../packages/core/src/fragment/fragment.ts","webpack://dark-animated-grid/../../packages/core/src/use-memo/use-memo.ts","webpack://dark-animated-grid/../../packages/core/src/use-effect/use-effect.ts","webpack://dark-animated-grid/../../packages/core/src/use-layout-effect/use-layout-effect.ts","webpack://dark-animated-grid/../../packages/core/src/use-insertion-effect/use-insertion-effect.ts","webpack://dark-animated-grid/../../packages/core/src/unmount/unmount.ts","webpack://dark-animated-grid/../../packages/core/src/workloop/workloop.ts","webpack://dark-animated-grid/../../packages/core/src/scheduler/scheduler.ts","webpack://dark-animated-grid/../../packages/core/src/use-update/use-update.ts","webpack://dark-animated-grid/../../packages/core/src/batch/batch.ts","webpack://dark-animated-grid/../../packages/core/src/use-state/use-state.ts","webpack://dark-animated-grid/../../packages/core/src/use-callback/use-callback.ts","webpack://dark-animated-grid/../../packages/core/src/ref/ref.ts","webpack://dark-animated-grid/../../packages/core/src/element/element.ts","webpack://dark-animated-grid/../../packages/platform-browser/src/portal/portal.ts","webpack://dark-animated-grid/../../packages/platform-browser/src/events/events.ts","webpack://dark-animated-grid/../../packages/platform-browser/src/constants.ts","webpack://dark-animated-grid/../../packages/platform-browser/src/dom/dom.ts","webpack://dark-animated-grid/../../packages/platform-browser/src/render/render.ts","webpack://dark-animated-grid/./index.tsx","webpack://dark-animated-grid/../../packages/platform-browser/src/create-root/create-root.tsx"],"sourcesContent":["export const VERSION = '0.25.1';\r\nexport const ROOT = 'dark:root';\r\nexport const REPLACER = 'dark:matter';\r\nexport const INDEX_KEY = 'dark:idx';\r\nexport const KEY_ATTR = 'key';\r\nexport const REF_ATTR = 'ref';\r\nexport const CREATE_EFFECT_TAG = 'C';\r\nexport const UPDATE_EFFECT_TAG = 'U';\r\nexport const DELETE_EFFECT_TAG = 'D';\r\nexport const SKIP_EFFECT_TAG = 'S';\r\nexport const INSERTION_EFFECT_HOST_MASK = 1;\r\nexport const LAYOUT_EFFECT_HOST_MASK = 2;\r\nexport const ASYNC_EFFECT_HOST_MASK = 4;\r\nexport const ATOM_HOST_MASK = 8;\r\nexport const PORTAL_HOST_MASK = 16;\r\nexport const SHADOW_MASK = 32;\r\nexport const FLUSH_MASK = 64;\r\nexport const MOVE_MASK = 128;\r\nexport const HOOK_DELIMETER = ':';\r\nexport const YIELD_INTERVAL = 6;\r\nexport const APP_STATE_ATTR = 'dark-app-state';\r\n\r\nexport enum TaskPriority {\r\n  LOW = 0,\r\n  NORMAL = 1,\r\n  HIGH = 2,\r\n}\r\n\r\nexport enum Flag {\r\n  SKIP_SCAN_OPT = '__skipScanOpt',\r\n  MEMO_SLOT_OPT = '__memoSlotOpt',\r\n  STATIC_SLOT_OPT = '__staticSlotOpt',\r\n}\r\n\r\nexport const FLAGS = {\r\n  __skipScanOpt: true,\r\n  __memoSlotOpt: true,\r\n  __staticSlotOpt: true,\r\n};\r\n\r\nexport const ATTR_BLACK_LIST = {\r\n  [KEY_ATTR]: true,\r\n  [REF_ATTR]: true,\r\n  [Flag.SKIP_SCAN_OPT]: true,\r\n  [Flag.MEMO_SLOT_OPT]: true,\r\n  [Flag.STATIC_SLOT_OPT]: true,\r\n};\r\n","import type { ElementKey, Instance, DarkElement, RefProps, KeyProps, FlagProps } from '../shared';\r\nimport { KEY_ATTR } from '../constants';\r\nimport { error } from '../utils';\r\nimport { type Ref } from '../ref';\r\n\r\nconst $$inject = Symbol('inject');\r\nclass Component<P extends StandardComponentProps = any, R = any> {\r\n  public type: CreateElement<P>;\r\n  public props: P;\r\n  public ref?: Ref<R>;\r\n  public token?: Symbol;\r\n  public displayName?: string;\r\n  public shouldUpdate?: ShouldUpdate<P>;\r\n  public children: Array<Instance> = [];\r\n\r\n  constructor(\r\n    type: CreateElement<P>,\r\n    token: Symbol,\r\n    props: P,\r\n    ref: Ref<R>,\r\n    shouldUpdate: ShouldUpdate<P>,\r\n    displayName: string,\r\n  ) {\r\n    this.type = type;\r\n    this.props = props;\r\n    ref && (this.ref = ref);\r\n    token && (this.token = token);\r\n    shouldUpdate && (this.shouldUpdate = shouldUpdate);\r\n    displayName && (this.displayName = displayName);\r\n  }\r\n}\r\n\r\nfunction component<P extends object, R = unknown>(type: CreateElement<P, R>, options: ComponentOptions = {}) {\r\n  const { token: $token, displayName } = options;\r\n  type Props = P & StandardComponentProps;\r\n  const factory: ComponentFactoryWithPossiblyInject<Props, R> = (props = {} as Props, ref?: Ref<R>) => {\r\n    const { token = $token, shouldUpdate } = factory[$$inject] || defaultInject;\r\n\r\n    if (props.ref) {\r\n      delete props.ref;\r\n\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        process.env.NODE_ENV === 'development' &&\r\n          error(`[Dark]: To use ref you need to wrap the component with forwardRef!`);\r\n      }\r\n    }\r\n\r\n    return new Component(type, token, props, ref, shouldUpdate, displayName);\r\n  };\r\n\r\n  return factory as ComponentFactory<Props, R>;\r\n}\r\n\r\nconst defaultInject: ComponentInject = {};\r\n\r\nconst detectIsComponent = (x: unknown): x is Component => x instanceof Component;\r\n\r\nconst getComponentKey = (x: Component): ElementKey => x.props[KEY_ATTR] ?? null;\r\n\r\nconst hasComponentFlag = (inst: Component, flag: string) => Boolean(inst.props[flag]);\r\n\r\ntype ComponentOptions = Readonly<{\r\n  displayName?: string;\r\n  token?: Symbol;\r\n}>;\r\n\r\ntype ComponentFactoryWithPossiblyInject<P extends object = {}, R = unknown> = {\r\n  (props?: P, ref?: Ref<R>): Component<P, R>;\r\n  [$$inject]?: ComponentInject<P>;\r\n};\r\n\r\ntype CreateElement<P extends StandardComponentProps, R = unknown> = (props: P, ref?: Ref<R>) => DarkElement;\r\n\r\nexport type ComponentInject<P extends object = {}> = Readonly<{\r\n  token?: Symbol;\r\n  shouldUpdate?: ShouldUpdate<P>;\r\n}>;\r\n\r\nexport type ShouldUpdate<P> = (prevProps: P, nextProps: P) => boolean;\r\n\r\nexport type StandardComponentProps = KeyProps & RefProps & FlagProps;\r\n\r\nexport type ComponentFactory<P extends object = {}, R = unknown> = (props?: P, ref?: Ref<R>) => Component<P, R>;\r\n\r\nexport { Component, component, $$inject, detectIsComponent, getComponentKey, hasComponentFlag };\r\n","import type { NestedArray } from '../shared';\r\nimport { INDEX_KEY } from '../constants';\r\n\r\nconst detectIsFunction = (o: any): o is Function => typeof o === 'function';\r\n\r\nconst detectIsUndefined = (o: any): o is undefined => typeof o === 'undefined';\r\n\r\nconst detectIsNumber = (o: any): o is number => typeof o === 'number';\r\n\r\nconst detectIsString = (o: any): o is string => typeof o === 'string';\r\n\r\nconst detectIsTextBased = (o: any): o is string | number => typeof o === 'string' || typeof o === 'number';\r\n\r\nconst detectIsObject = (o: any): o is object => typeof o === 'object';\r\n\r\nconst detectIsBoolean = (o: any): o is boolean => typeof o === 'boolean';\r\n\r\nconst detectIsArray = (o: any): o is Array<any> => Array.isArray(o);\r\n\r\nconst detectIsNull = (o: any): o is null => o === null;\r\n\r\nconst detectIsEmpty = (o: any) => detectIsNull(o) || detectIsUndefined(o);\r\n\r\nconst detectIsFalsy = (o: any) => detectIsEmpty(o) || o === false;\r\n\r\nconst getTime = () => Date.now();\r\n\r\nconst dummyFn = () => {};\r\n\r\nconst trueFn = () => true;\r\n\r\nconst falseFn = () => false;\r\n\r\nconst sameFn = <T = any>(x: T) => x;\r\n\r\nconst error = (...args: Array<any>) => !detectIsUndefined(console) && console.error(...args);\r\n\r\nfunction flatten<T = any>(source: Array<NestedArray<T>>, transform: (x: T) => any = sameFn): Array<T> {\r\n  if (detectIsArray(source)) {\r\n    if (source.length === 0) return [];\r\n  } else {\r\n    return [transform(source)];\r\n  }\r\n  const list: Array<T> = [];\r\n  const stack = [source[0]];\r\n  let idx = 0;\r\n\r\n  while (stack.length > 0) {\r\n    const x = stack.pop();\r\n\r\n    if (detectIsArray(x)) {\r\n      for (let i = x.length - 1; i >= 0; i--) {\r\n        stack.push(x[i]);\r\n      }\r\n    } else {\r\n      list.push(transform(x));\r\n\r\n      if (stack.length === 0 && idx < source.length - 1) {\r\n        idx++;\r\n        stack.push(source[idx]);\r\n      }\r\n    }\r\n  }\r\n\r\n  return list;\r\n}\r\n\r\nfunction keyBy<T = any>(\r\n  list: Array<T>,\r\n  fn: (o: T) => string | number,\r\n  value = false,\r\n): Record<string | number, T | boolean> {\r\n  return list.reduce((acc, x) => ((acc[fn(x)] = value ? x : true), acc), {});\r\n}\r\n\r\nfunction detectAreDepsDifferent(prevDeps: Array<unknown>, nextDeps: Array<unknown>): boolean {\r\n  if (prevDeps === nextDeps) return false;\r\n  const max = Math.max(prevDeps.length, nextDeps.length);\r\n\r\n  for (let i = 0; i < max; i++) {\r\n    if (!Object.is(prevDeps[i], nextDeps[i])) return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nfunction nextTick(callback: () => void) {\r\n  Promise.resolve().then(callback);\r\n}\r\n\r\nconst createIndexKey = (idx: number) => `${INDEX_KEY}:${idx}`;\r\n\r\nexport {\r\n  detectIsFunction,\r\n  detectIsUndefined,\r\n  detectIsNumber,\r\n  detectIsString,\r\n  detectIsTextBased,\r\n  detectIsObject,\r\n  detectIsBoolean,\r\n  detectIsArray,\r\n  detectIsNull,\r\n  detectIsEmpty,\r\n  detectIsFalsy,\r\n  getTime,\r\n  dummyFn,\r\n  trueFn,\r\n  falseFn,\r\n  error,\r\n  flatten,\r\n  keyBy,\r\n  detectAreDepsDifferent,\r\n  nextTick,\r\n  createIndexKey,\r\n};\r\n","import { type Fiber } from '../fiber';\r\nimport { type VirtualNode } from '../view';\r\nimport { type Callback } from '../shared';\r\n\r\nexport type Platform = {\r\n  createElement: <N>(vNode: VirtualNode) => N;\r\n  insertElement: <N>(node: N, idx: number, parent: N) => void;\r\n  raf: typeof requestAnimationFrame;\r\n  caf: typeof cancelAnimationFrame;\r\n  spawn: (callback: Callback) => void;\r\n  commit: (fiber: Fiber) => void;\r\n  finishCommit: () => void;\r\n  detectIsDynamic: () => boolean;\r\n  detectIsPortal: (instance: unknown) => boolean;\r\n  unmountPortal: (fiber: Fiber) => void;\r\n  chunk: (fiber: Fiber) => void;\r\n};\r\n\r\nconst defaultRealisation = () => {\r\n  throw new Error('Function not installed by renderer!');\r\n};\r\n\r\nconst platform: Platform = {\r\n  createElement: defaultRealisation,\r\n  insertElement: defaultRealisation,\r\n  raf: defaultRealisation,\r\n  caf: defaultRealisation,\r\n  spawn: defaultRealisation,\r\n  commit: defaultRealisation,\r\n  finishCommit: defaultRealisation,\r\n  detectIsDynamic: defaultRealisation,\r\n  detectIsPortal: defaultRealisation,\r\n  unmountPortal: defaultRealisation,\r\n  chunk: defaultRealisation,\r\n};\r\n\r\nconst detectIsServer = () => !platform.detectIsDynamic();\r\n\r\nexport { platform, detectIsServer };\r\n","import { type SubscriberWithValue } from '../shared';\r\n\r\ntype EventName = 'finish' | 'chunk';\r\n\r\nclass EventEmitter<E extends string = EventName, T = unknown> {\r\n  private subscribers: Map<Partial<E>, Set<SubscriberWithValue<unknown>>> = new Map();\r\n\r\n  on<T>(e: E, fn: SubscriberWithValue<T>) {\r\n    !this.subscribers.has(e) && this.subscribers.set(e, new Set());\r\n    this.subscribers.get(e).add(fn);\r\n\r\n    return () => this.subscribers.has(e) && this.subscribers.get(e).delete(fn);\r\n  }\r\n\r\n  emit(e: E, data?: T) {\r\n    this.subscribers.has(e) && this.subscribers.get(e).forEach(x => x(data));\r\n  }\r\n\r\n  kill() {\r\n    this.subscribers = new Map();\r\n  }\r\n\r\n  __getSize() {\r\n    return this.subscribers.size;\r\n  }\r\n}\r\n\r\nexport { EventEmitter };\r\n","import type { Callback, ElementKey, AppResources, AppResource } from '../shared';\r\nimport { type SetPendingStatus } from '../start-transition';\r\nimport { platform, detectIsServer } from '../platform';\r\nimport { EventEmitter } from '../emitter';\r\nimport { type Fiber } from '../fiber';\r\n\r\nclass Scope {\r\n  private root: Fiber = null;\r\n  private wip: Fiber = null;\r\n  private cursor: Fiber = null;\r\n  private unit: Fiber = null;\r\n  private mountDeep = true;\r\n  private mountLevel = 0;\r\n  private mountNav: Record<number, number> = {};\r\n  private events: Map<string, WeakMap<object, Function>> = new Map();\r\n  private unsubs: Set<Callback> = new Set();\r\n  private actions: Actions = {};\r\n  private candidates: Set<Fiber> = new Set();\r\n  private deletions: Set<Fiber> = new Set();\r\n  private cancels: Array<Callback> = [];\r\n  private asyncEffects: Set<Callback> = new Set();\r\n  private layoutEffects: Set<Callback> = new Set();\r\n  private insertionEffects: Set<Callback> = new Set();\r\n  private resourceId = 0;\r\n  private resources: AppResources = new Map();\r\n  private defers: Array<() => Promise<unknown>> = [];\r\n  private setPendingStatus: SetPendingStatus = null;\r\n  private isLayoutEffectsZone = false;\r\n  private isInsertionEffectsZone = false;\r\n  private isUpdateZone = false;\r\n  private isBatchZone = false;\r\n  private isHydrateZone = false;\r\n  private isStreamZone = false;\r\n  private isTransitionZone = false;\r\n  private isEventZone = false;\r\n  private isHot = false;\r\n  private isDynamic = platform.detectIsDynamic();\r\n  private isServer = detectIsServer();\r\n  private emitter = new EventEmitter();\r\n\r\n  private resetActions() {\r\n    this.actions = {};\r\n  }\r\n\r\n  getActionsById(id: number) {\r\n    return this.actions[id];\r\n  }\r\n\r\n  addActionMap(id: number, map: Record<ElementKey, Fiber>) {\r\n    this.actions[id] = {\r\n      map,\r\n      replace: null,\r\n      insert: null,\r\n      remove: null,\r\n      move: null,\r\n      stable: null,\r\n    };\r\n  }\r\n\r\n  addReplaceAction(id: number, nextKey: ElementKey) {\r\n    !this.actions[id].replace && (this.actions[id].replace = {});\r\n    this.actions[id].replace[nextKey] = true;\r\n  }\r\n\r\n  addInsertAction(id: number, nextKey: ElementKey) {\r\n    !this.actions[id].insert && (this.actions[id].insert = {});\r\n    this.actions[id].insert[nextKey] = true;\r\n  }\r\n\r\n  addRemoveAction(id: number, prevKey: ElementKey) {\r\n    !this.actions[id].remove && (this.actions[id].remove = {});\r\n    this.actions[id].remove[prevKey] = true;\r\n  }\r\n\r\n  addMoveAction(id: number, nextKey: ElementKey) {\r\n    !this.actions[id].move && (this.actions[id].move = {});\r\n    this.actions[id].move[nextKey] = true;\r\n  }\r\n\r\n  addStableAction(id: number, nextKey: ElementKey) {\r\n    !this.actions[id].stable && (this.actions[id].stable = {});\r\n    this.actions[id].stable[nextKey] = true;\r\n  }\r\n\r\n  copy() {\r\n    const scope = new Scope();\r\n\r\n    scope.root = null;\r\n    scope.wip = null;\r\n    scope.cursor = null;\r\n    scope.unit = this.unit;\r\n    scope.mountDeep = this.mountDeep;\r\n    scope.mountLevel = this.mountLevel;\r\n    scope.mountNav = { ...this.mountNav };\r\n    scope.events = this.events;\r\n    scope.unsubs = this.unsubs;\r\n    scope.actions = { ...this.actions };\r\n    scope.candidates = new Set([...this.candidates]);\r\n    scope.deletions = new Set([...this.deletions]);\r\n    scope.asyncEffects = new Set([...this.asyncEffects]);\r\n    scope.layoutEffects = new Set([...this.layoutEffects]);\r\n    scope.insertionEffects = new Set([...this.insertionEffects]);\r\n    scope.isUpdateZone = this.isUpdateZone;\r\n    scope.emitter = this.emitter;\r\n\r\n    return scope;\r\n  }\r\n\r\n  getRoot() {\r\n    return this.root;\r\n  }\r\n\r\n  setRoot(fiber: Fiber) {\r\n    this.root = fiber;\r\n  }\r\n\r\n  getWorkInProgress() {\r\n    return this.wip;\r\n  }\r\n\r\n  setWorkInProgress(fiber: Fiber) {\r\n    this.wip = fiber;\r\n  }\r\n\r\n  getNextUnitOfWork() {\r\n    return this.unit;\r\n  }\r\n\r\n  setNextUnitOfWork(fiber: Fiber) {\r\n    this.unit = fiber;\r\n  }\r\n\r\n  getCursorFiber() {\r\n    return this.cursor;\r\n  }\r\n\r\n  setCursorFiber(fiber: Fiber) {\r\n    this.cursor = fiber;\r\n  }\r\n\r\n  navToChild() {\r\n    this.mountLevel = this.mountLevel + 1;\r\n    this.mountNav[this.mountLevel] = 0;\r\n  }\r\n\r\n  navToSibling() {\r\n    this.mountNav[this.mountLevel] = this.mountNav[this.mountLevel] + 1;\r\n  }\r\n\r\n  navToParent() {\r\n    this.mountLevel = this.mountLevel - 1;\r\n  }\r\n\r\n  navToPrev() {\r\n    const idx = this.getMountIndex();\r\n\r\n    if (idx === 0) {\r\n      this.navToParent();\r\n      this.setMountDeep(true);\r\n    } else {\r\n      this.mountNav[this.mountLevel] = this.mountNav[this.mountLevel] - 1;\r\n      this.setMountDeep(false);\r\n    }\r\n  }\r\n\r\n  getMountIndex() {\r\n    return this.mountNav[this.mountLevel];\r\n  }\r\n\r\n  getMountDeep() {\r\n    return this.mountDeep;\r\n  }\r\n\r\n  setMountDeep(value: boolean) {\r\n    this.mountDeep = value;\r\n  }\r\n\r\n  resetMount() {\r\n    this.mountLevel = 0;\r\n    this.mountNav = {};\r\n    this.mountDeep = true;\r\n  }\r\n\r\n  getEvents() {\r\n    return this.events;\r\n  }\r\n\r\n  addEventUnsubscriber(fn: Callback) {\r\n    this.unsubs.add(fn);\r\n  }\r\n\r\n  unsubscribeEvents() {\r\n    this.unsubs.forEach(x => x());\r\n    this.unsubs = new Set();\r\n  }\r\n\r\n  getCandidates() {\r\n    return this.candidates;\r\n  }\r\n\r\n  addCandidate(fiber: Fiber) {\r\n    this.candidates.add(fiber);\r\n  }\r\n\r\n  resetCandidates() {\r\n    this.candidates = new Set();\r\n  }\r\n\r\n  getDeletions() {\r\n    return this.deletions;\r\n  }\r\n\r\n  hasDeletion(fiber: Fiber) {\r\n    let nextFiber = fiber;\r\n\r\n    while (nextFiber) {\r\n      if (this.deletions.has(nextFiber)) return true;\r\n      nextFiber = nextFiber.parent;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  addDeletion(fiber: Fiber) {\r\n    !this.hasDeletion(fiber) && this.deletions.add(fiber);\r\n  }\r\n\r\n  resetDeletions() {\r\n    this.deletions = new Set();\r\n  }\r\n\r\n  addAsyncEffect(fn: Callback) {\r\n    this.asyncEffects.add(fn);\r\n  }\r\n\r\n  resetAsyncEffects() {\r\n    this.asyncEffects = new Set();\r\n  }\r\n\r\n  runAsyncEffects() {\r\n    if (!this.isDynamic) return;\r\n    const effects = this.asyncEffects;\r\n    effects.size > 0 && setTimeout(() => effects.forEach(fn => fn()));\r\n  }\r\n\r\n  addLayoutEffect(fn: Callback) {\r\n    this.layoutEffects.add(fn);\r\n  }\r\n\r\n  resetLayoutEffects() {\r\n    this.layoutEffects = new Set();\r\n  }\r\n\r\n  runLayoutEffects() {\r\n    if (!this.isDynamic) return;\r\n    this.setIsLayoutEffectsZone(true);\r\n    this.layoutEffects.forEach(fn => fn());\r\n    this.setIsLayoutEffectsZone(false);\r\n  }\r\n\r\n  addInsertionEffect(fn: Callback) {\r\n    this.insertionEffects.add(fn);\r\n  }\r\n\r\n  resetInsertionEffects() {\r\n    this.insertionEffects = new Set();\r\n  }\r\n\r\n  runInsertionEffects() {\r\n    if (!this.isDynamic) return;\r\n    this.setIsInsertionEffectsZone(true);\r\n    this.insertionEffects.forEach(fn => fn());\r\n    this.setIsInsertionEffectsZone(false);\r\n  }\r\n\r\n  addCancel(fn: Callback) {\r\n    this.cancels.push(fn);\r\n  }\r\n\r\n  applyCancels() {\r\n    for (let i = this.cancels.length - 1; i >= 0; i--) {\r\n      this.cancels[i]();\r\n    }\r\n  }\r\n\r\n  resetCancels() {\r\n    this.cancels = [];\r\n  }\r\n\r\n  getIsLayoutEffectsZone() {\r\n    return this.isLayoutEffectsZone;\r\n  }\r\n\r\n  setIsLayoutEffectsZone(value: boolean) {\r\n    this.isLayoutEffectsZone = value;\r\n  }\r\n\r\n  getIsInsertionEffectsZone() {\r\n    return this.isInsertionEffectsZone;\r\n  }\r\n\r\n  setIsInsertionEffectsZone(value: boolean) {\r\n    this.isInsertionEffectsZone = value;\r\n  }\r\n\r\n  getIsUpdateZone() {\r\n    return this.isUpdateZone;\r\n  }\r\n\r\n  setIsUpdateZone(value: boolean) {\r\n    this.isUpdateZone = value;\r\n  }\r\n\r\n  getIsBatchZone() {\r\n    return this.isBatchZone;\r\n  }\r\n\r\n  setIsBatchZone(value: boolean) {\r\n    this.isBatchZone = value;\r\n  }\r\n\r\n  getIsHydrateZone() {\r\n    return this.isHydrateZone;\r\n  }\r\n\r\n  setIsHydrateZone(value: boolean) {\r\n    this.isHydrateZone = value;\r\n  }\r\n\r\n  getIsStreamZone() {\r\n    return this.isStreamZone;\r\n  }\r\n\r\n  setIsStreamZone(value: boolean) {\r\n    this.isStreamZone = value;\r\n  }\r\n\r\n  getIsTransitionZone() {\r\n    return this.isTransitionZone;\r\n  }\r\n\r\n  setIsTransitionZone(value: boolean) {\r\n    this.isTransitionZone = value;\r\n  }\r\n\r\n  getIsEventZone() {\r\n    return this.isEventZone;\r\n  }\r\n\r\n  setIsEventZone(value: boolean) {\r\n    this.isEventZone = value;\r\n  }\r\n\r\n  getIsHot() {\r\n    return this.isHot;\r\n  }\r\n\r\n  setIsHot(value: boolean) {\r\n    this.isHot = value;\r\n  }\r\n\r\n  getPendingStatusSetter() {\r\n    return this.setPendingStatus;\r\n  }\r\n\r\n  setPendingStatusSetter(fn: SetPendingStatus) {\r\n    this.setPendingStatus = fn;\r\n  }\r\n\r\n  flush() {\r\n    !this.isUpdateZone && this.setRoot(this.wip); // !\r\n    this.setWorkInProgress(null);\r\n    this.setNextUnitOfWork(null);\r\n    this.setCursorFiber(null);\r\n    this.resetMount();\r\n    this.resetCandidates();\r\n    this.resetDeletions();\r\n    this.resetCancels();\r\n    this.resetInsertionEffects();\r\n    this.resetLayoutEffects();\r\n    this.resetAsyncEffects();\r\n    this.setIsHydrateZone(false);\r\n    this.setIsUpdateZone(false);\r\n    this.resetActions();\r\n  }\r\n\r\n  getEmitter() {\r\n    return this.emitter;\r\n  }\r\n\r\n  defer(fn: () => Promise<unknown>) {\r\n    this.defers.push(fn);\r\n  }\r\n\r\n  getDefers() {\r\n    return this.defers;\r\n  }\r\n\r\n  resetDefers() {\r\n    this.defers = [];\r\n  }\r\n\r\n  getResource(id: number) {\r\n    return this.resources.get(id);\r\n  }\r\n\r\n  setResource(id: number, res: AppResource) {\r\n    this.resources.set(id, res);\r\n  }\r\n\r\n  getResources() {\r\n    return this.resources;\r\n  }\r\n\r\n  getResourceId() {\r\n    return this.resourceId;\r\n  }\r\n\r\n  setResourceId(id: number) {\r\n    this.resourceId = id;\r\n  }\r\n\r\n  getNextResourceId() {\r\n    return ++this.resourceId;\r\n  }\r\n\r\n  runAfterCommit() {\r\n    this.resources = new Map();\r\n    this.isServer && (this.resourceId = 0);\r\n  }\r\n}\r\n\r\ntype Actions = Record<\r\n  number,\r\n  {\r\n    map: Record<ElementKey, Fiber>;\r\n    replace: Record<ElementKey, true>;\r\n    insert: Record<ElementKey, true>;\r\n    remove: Record<ElementKey, true>;\r\n    move: Record<ElementKey, true>;\r\n    stable: Record<ElementKey, true>;\r\n  }\r\n>;\r\n\r\nlet rootId: number = null;\r\nconst scopes = new Map<number, Scope>();\r\n\r\nconst getRootId = () => rootId;\r\n\r\nconst setRootId = (id: number) => {\r\n  rootId = id;\r\n  !scopes.has(rootId) && scopes.set(rootId, new Scope());\r\n};\r\n\r\nconst removeScope = (id: number) => scopes.delete(id);\r\n\r\nconst replaceScope = (scope: Scope, id: number = rootId) => {\r\n  Object.assign(scopes.get(id), scope);\r\n};\r\n\r\nconst $$scope = (id: number = rootId) => scopes.get(id);\r\n\r\nexport { type Scope, getRootId, setRootId, removeScope, replaceScope, $$scope };\r\n","import type { ElementKey, DarkElement, Instance, SlotProps, RefProps, KeyProps, FlagProps } from '../shared';\r\nimport { type Component, detectIsComponent, getComponentKey, hasComponentFlag } from '../component';\r\nimport { detectIsArray, detectIsFunction } from '../utils';\r\nimport { REPLACER, KEY_ATTR } from '../constants';\r\nimport { $$scope } from '../scope';\r\n\r\nconst $$vNode = Symbol('vNode');\r\nconst ATTR_TYPE = 'type';\r\n\r\nclass VirtualNode {\r\n  public type: NodeType = null;\r\n\r\n  constructor(type: NodeType) {\r\n    this.type = type;\r\n  }\r\n}\r\n\r\nclass TagVirtualNode extends VirtualNode {\r\n  public name: string;\r\n  public attrs: Record<string, any>;\r\n  public children: Array<TextVirtualNode | CommentVirtualNode | TagVirtualNode | VirtualNodeFactory | Component>;\r\n\r\n  constructor(name: string, attrs: TagVirtualNode['attrs'], children: TagVirtualNode['children']) {\r\n    super(NodeType.TAG);\r\n    this.name = name;\r\n    this.attrs = attrs;\r\n    this.children = children;\r\n  }\r\n}\r\n\r\nclass TextVirtualNode extends VirtualNode {\r\n  public value: string;\r\n\r\n  constructor(source: TextSource) {\r\n    super(NodeType.TEXT);\r\n    this.value = String(source);\r\n  }\r\n}\r\n\r\nclass CommentVirtualNode extends VirtualNode {\r\n  public value = '';\r\n\r\n  constructor(text: string) {\r\n    super(NodeType.COMMENT);\r\n    this.value = text;\r\n  }\r\n}\r\n\r\nfunction View(options: ViewOptions) {\r\n  const factory: TagVirtualNodeFactory = () => {\r\n    const { as: name, slot, _void = false, ...attrs } = options;\r\n    const children = (_void ? [] : detectIsArray(slot) ? slot : slot ? [slot] : []) as TagVirtualNode['children'];\r\n\r\n    return new TagVirtualNode(name, attrs, children);\r\n  };\r\n\r\n  factory[$$vNode] = true;\r\n  factory[ATTR_TYPE] = options.as;\r\n  factory[KEY_ATTR] = options.key;\r\n\r\n  return factory;\r\n}\r\n\r\nconst Text = (source: TextSource) => new TextVirtualNode(source);\r\n\r\nText.from = (source: DarkElement) => (detectIsTextVirtualNode(source) ? source.value : source + '');\r\n\r\nconst Comment = (text: string) => new CommentVirtualNode(text);\r\n\r\nconst detectIsVirtualNode = (vNode: unknown): vNode is VirtualNode => vNode instanceof VirtualNode;\r\n\r\nconst detectIsTagVirtualNode = (vNode: unknown): vNode is TagVirtualNode => vNode instanceof TagVirtualNode;\r\n\r\nconst detectIsCommentVirtualNode = (vNode: unknown): vNode is CommentVirtualNode => vNode instanceof CommentVirtualNode;\r\n\r\nconst detectIsTextVirtualNode = (vNode: unknown): vNode is TextVirtualNode => vNode instanceof TextVirtualNode;\r\n\r\nconst detectIsVirtualNodeFactory = (factory: unknown): factory is VirtualNodeFactory =>\r\n  detectIsFunction(factory) && factory[$$vNode] === true;\r\n\r\nconst getTagVirtualNodeKey = (vNode: TagVirtualNode): ElementKey | null =>\r\n  vNode.attrs ? vNode.attrs[KEY_ATTR] ?? null : null;\r\n\r\nconst hasTagVirtualNodeFlag = (vNode: TagVirtualNode, flag: string) => Boolean(vNode.attrs && vNode.attrs[flag]);\r\n\r\nconst getVirtualNodeFactoryKey = (factory: VirtualNodeFactory): ElementKey | null => factory[KEY_ATTR] ?? null;\r\n\r\nconst hasVirtualNodeFactoryFlag = (factory: VirtualNodeFactory, flag: string) => Boolean(factory[flag]);\r\n\r\nconst detectIsPlainVirtualNode = (vNode: unknown): vNode is PlainVirtualNode =>\r\n  detectIsTextVirtualNode(vNode) || detectIsCommentVirtualNode(vNode);\r\n\r\nconst createReplacer = () => new CommentVirtualNode(REPLACER);\r\n\r\nconst detectIsReplacer = (vNode: unknown) => detectIsCommentVirtualNode(vNode) && vNode.value === REPLACER;\r\n\r\nfunction getElementKey(inst: Instance): ElementKey | null {\r\n  return detectIsComponent(inst)\r\n    ? getComponentKey(inst)\r\n    : detectIsVirtualNodeFactory(inst)\r\n    ? getVirtualNodeFactoryKey(inst)\r\n    : detectIsTagVirtualNode(inst)\r\n    ? getTagVirtualNodeKey(inst)\r\n    : null;\r\n}\r\n\r\nfunction hasElementFlag(inst: Instance, flag: string) {\r\n  return detectIsComponent(inst)\r\n    ? hasComponentFlag(inst, flag)\r\n    : detectIsVirtualNodeFactory(inst)\r\n    ? hasVirtualNodeFactoryFlag(inst, flag)\r\n    : detectIsTagVirtualNode(inst)\r\n    ? hasTagVirtualNodeFlag(inst, flag)\r\n    : false;\r\n}\r\n\r\nfunction getElementType(inst: Instance): string | Function {\r\n  return detectIsComponent(inst)\r\n    ? inst.type\r\n    : detectIsVirtualNodeFactory(inst)\r\n    ? inst[ATTR_TYPE]\r\n    : detectIsTagVirtualNode(inst)\r\n    ? inst.name\r\n    : detectIsVirtualNode(inst)\r\n    ? inst.type\r\n    : null;\r\n}\r\n\r\nfunction hasChildrenProp(inst: Instance): inst is TagVirtualNode | Component {\r\n  return detectIsTagVirtualNode(inst) || detectIsComponent(inst);\r\n}\r\n\r\nfunction detectAreSameInstanceTypes(prevInst: Instance, nextInst: Instance, isComponentFactories = false) {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    if (process.env.NODE_ENV === 'development' && $$scope().getIsHot()) {\r\n      if (detectIsComponent(prevInst) && detectIsComponent(nextInst)) {\r\n        return prevInst.displayName === nextInst.displayName;\r\n      }\r\n    }\r\n  }\r\n\r\n  if (isComponentFactories) {\r\n    const pc = prevInst as Component;\r\n    const nc = nextInst as Component;\r\n\r\n    return pc.type === nc.type;\r\n  }\r\n\r\n  return getElementType(prevInst) === getElementType(nextInst);\r\n}\r\n\r\nfunction detectAreSameComponentTypesWithSameKeys(prevInst: Instance | null, nextInst: Instance | null) {\r\n  if (\r\n    prevInst &&\r\n    nextInst &&\r\n    detectIsComponent(prevInst) &&\r\n    detectIsComponent(nextInst) &&\r\n    detectAreSameInstanceTypes(prevInst, nextInst, true)\r\n  ) {\r\n    return getElementKey(prevInst) === getElementKey(nextInst);\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\ntype TextSource = string | number;\r\n\r\nexport type VirtualNodeFactory = () => VirtualNode;\r\n\r\nexport type TagVirtualNodeFactory = () => TagVirtualNode;\r\n\r\nexport type PlainVirtualNode = TextVirtualNode | CommentVirtualNode;\r\n\r\nexport type ViewOptions = {\r\n  as: string;\r\n  _void?: boolean;\r\n  [prop: string]: any;\r\n} & Partial<SlotProps> &\r\n  RefProps &\r\n  KeyProps &\r\n  FlagProps;\r\n\r\nexport enum NodeType {\r\n  TAG = 'TAG',\r\n  TEXT = 'TEXT',\r\n  COMMENT = 'COMMENT',\r\n}\r\n\r\nexport {\r\n  View,\r\n  Text,\r\n  Comment,\r\n  VirtualNode,\r\n  TagVirtualNode,\r\n  TextVirtualNode,\r\n  CommentVirtualNode,\r\n  createReplacer,\r\n  detectIsReplacer,\r\n  getElementKey,\r\n  hasElementFlag,\r\n  getElementType,\r\n  hasChildrenProp,\r\n  detectIsVirtualNode,\r\n  detectIsTagVirtualNode,\r\n  detectIsCommentVirtualNode,\r\n  detectIsTextVirtualNode,\r\n  detectIsPlainVirtualNode,\r\n  detectIsVirtualNodeFactory,\r\n  detectAreSameInstanceTypes,\r\n  detectAreSameComponentTypesWithSameKeys,\r\n};\r\n","import { detectIsTagVirtualNode, detectIsPlainVirtualNode, detectAreSameComponentTypesWithSameKeys } from '../view';\r\nimport { type Instance, type Callback, type TimerId } from '../shared';\r\nimport { type Context, type ContextProviderValue } from '../context';\r\nimport { detectIsComponent } from '../component';\r\nimport { detectIsFunction } from '../utils';\r\nimport { type Atom } from '../atom';\r\nimport { $$scope } from '../scope';\r\n\r\nclass Fiber<N = NativeElement> {\r\n  id = 0;\r\n  cc = 0; // child fibers count\r\n  cec = 0; // child native elements count\r\n  idx = 0; // idx of fiber in the parent fiber\r\n  eidx = 0; // native element idx\r\n  mask = 0; // bit mask\r\n  element: N = null; // native element\r\n  tag: string = null; // effect tag (CREATE, UPDATE, DELETE, SKIP)\r\n  parent: Fiber<N> = null; // parent fiber\r\n  child: Fiber<N> = null; // child fiber\r\n  next: Fiber<N> = null; // next sibling fiber\r\n  alt: Fiber<N> = null; // alternate fiber (previous)\r\n  inst: Instance = null; // instance of component or virtual node\r\n  hook: Hook | null = null; // hook\r\n  provider: Map<Context, ContextProviderValue> = null; // provider of context\r\n  atoms: Map<Atom, Callback> = null;\r\n  marker: string; // for dev\r\n  batch: Batch;\r\n  catch: (error: Error) => void;\r\n\r\n  constructor(hook: Hook = null, provider: Fiber['provider'] = null, idx = 0) {\r\n    this.id = ++Fiber.nextId;\r\n    this.idx = idx;\r\n    hook && (this.hook = hook);\r\n    provider && (this.provider = provider);\r\n  }\r\n\r\n  mutate(fiber: Partial<Fiber<N>>) {\r\n    const keys = Object.keys(fiber);\r\n\r\n    for (const key of keys) {\r\n      this[key] = fiber[key];\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  markHost(mask: number) {\r\n    this.mask |= mask;\r\n    this.parent && !(this.parent.mask & mask) && this.parent.markHost(mask);\r\n  }\r\n\r\n  increment(count = 1, force = false) {\r\n    if (!this.parent) return;\r\n    const $scope = $$scope();\r\n    const isUpdateZone = $scope.getIsUpdateZone();\r\n    const wipFiber = $scope.getWorkInProgress();\r\n    const stop = isUpdateZone && wipFiber.parent === this.parent;\r\n\r\n    if (\r\n      detectIsPlainVirtualNode(this.inst) ||\r\n      (detectIsTagVirtualNode(this.inst) && this.inst.children?.length === 0)\r\n    ) {\r\n      this.cec = 1;\r\n    }\r\n\r\n    if (isUpdateZone && stop && !force) return;\r\n\r\n    this.parent.cec += count;\r\n\r\n    if (!this.parent.element) {\r\n      this.parent.increment(count);\r\n    }\r\n  }\r\n\r\n  setError(error: Error) {\r\n    if (detectIsFunction(this.catch)) {\r\n      this.catch(error);\r\n    } else if (this.parent) {\r\n      this.parent.setError(error);\r\n    }\r\n  }\r\n\r\n  static setNextId(id: number) {\r\n    Fiber.nextId = id;\r\n  }\r\n\r\n  private static nextId = 0;\r\n}\r\n\r\nclass Hook<T = any> {\r\n  id = 0;\r\n  idx = 0;\r\n  values: Array<T> = [];\r\n  owner: Fiber = null;\r\n  private static nextId = 0;\r\n\r\n  constructor() {\r\n    this.id = ++Hook.nextId;\r\n  }\r\n}\r\n\r\nfunction getHook(alt: Fiber, prevInst: Instance, nextInst: Instance): Hook | null {\r\n  if (alt && detectAreSameComponentTypesWithSameKeys(prevInst, nextInst)) return alt.hook;\r\n  if (detectIsComponent(nextInst)) return new Hook();\r\n\r\n  return null;\r\n}\r\n\r\ntype Batch = {\r\n  timer: TimerId;\r\n  changes: Array<Callback>;\r\n};\r\n\r\nexport type NativeElement = unknown;\r\nexport type HookValue<T = any> = { deps: Array<any>; value: T };\r\n\r\nexport { Fiber, Hook, getHook };\r\n","import {\r\n  type ComponentFactory,\r\n  type StandardComponentProps,\r\n  type ShouldUpdate,\r\n  type ComponentInject,\r\n  $$inject,\r\n  detectIsComponent,\r\n} from '../component';\r\nimport type { SlotProps, RefProps } from '../shared';\r\n\r\nconst $$memo = Symbol('memo');\r\n\r\nconst defaultShouldUpdate = (props: {}, nextProps: {}): boolean => {\r\n  const keys = Object.keys(nextProps);\r\n\r\n  for (const key of keys) {\r\n    if (key !== 'slot' && nextProps[key] !== props[key]) return true;\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\nfunction memo<P extends object, R = unknown>(\r\n  factory: ComponentFactory<P, R>,\r\n  shouldUpdate: ShouldUpdate<P & SlotProps> = defaultShouldUpdate,\r\n) {\r\n  type P1 = P & Omit<StandardComponentProps, 'ref'> & RefProps<R>;\r\n\r\n  factory[$$inject] = {\r\n    token: $$memo,\r\n    shouldUpdate,\r\n  } as ComponentInject<P1>;\r\n\r\n  return factory as ComponentFactory<P1, R>;\r\n}\r\n\r\nconst detectIsMemo = (instance: unknown) => detectIsComponent(instance) && instance.token === $$memo;\r\n\r\nexport { memo, detectIsMemo };\r\n","import {\r\n  DELETE_EFFECT_TAG,\r\n  UPDATE_EFFECT_TAG,\r\n  SKIP_EFFECT_TAG,\r\n  INSERTION_EFFECT_HOST_MASK,\r\n  LAYOUT_EFFECT_HOST_MASK,\r\n  ASYNC_EFFECT_HOST_MASK,\r\n  ATOM_HOST_MASK,\r\n  PORTAL_HOST_MASK,\r\n  MOVE_MASK,\r\n  HOOK_DELIMETER,\r\n} from '../constants';\r\nimport { Fiber } from '../fiber';\r\nimport { platform } from '../platform';\r\nimport { type TagVirtualNode, getElementKey, hasChildrenProp } from '../view';\r\nimport { type Scope } from '../scope';\r\nimport { type Component } from '../component';\r\nimport { detectIsMemo } from '../memo';\r\nimport { type Instance, type ElementKey } from '../shared';\r\nimport { createIndexKey } from '../utils';\r\n\r\nfunction walk<T = unknown>(fiber: Fiber<T>, onWalk: (fiber: Fiber<T>, skip: () => void, stop: () => void) => void) {\r\n  let shouldDeep = true;\r\n  let shouldStop = false;\r\n  const skip = () => (shouldDeep = false);\r\n  const stop = () => (shouldStop = true);\r\n  const stack: Array<Fiber<T>> = [fiber];\r\n\r\n  while (stack.length !== 0) {\r\n    const unit = stack.pop();\r\n\r\n    onWalk(unit, skip, stop);\r\n    if (shouldStop) break;\r\n    unit !== fiber && unit.next && stack.push(unit.next);\r\n    shouldDeep && unit.child && stack.push(unit.child);\r\n    shouldDeep = true;\r\n  }\r\n}\r\n\r\nfunction collectElements<T, P = T>(fiber: Fiber<T>, transform: (fiber: Fiber<T>) => P): Array<P> {\r\n  const elements: Array<P> = [];\r\n\r\n  walk<T>(fiber, (fiber, skip) => {\r\n    if (fiber.element) {\r\n      !platform.detectIsPortal(fiber.inst) && elements.push(transform(fiber));\r\n      return skip();\r\n    }\r\n  });\r\n\r\n  return elements;\r\n}\r\n\r\nfunction getFiberWithElement<T1, T2 = T1>(fiber: Fiber<T1>): Fiber<T2> {\r\n  let $fiber = fiber as unknown as Fiber<T2>;\r\n\r\n  while ($fiber) {\r\n    if ($fiber.element) return $fiber;\r\n    $fiber = $fiber.parent;\r\n  }\r\n\r\n  return $fiber;\r\n}\r\n\r\nfunction detectIsFiberAlive(fiber: Fiber) {\r\n  let $fiber = fiber;\r\n\r\n  while ($fiber) {\r\n    if ($fiber.tag === DELETE_EFFECT_TAG) return false;\r\n    $fiber = $fiber.parent;\r\n  }\r\n\r\n  return Boolean(fiber);\r\n}\r\n\r\nfunction createHookLocation(rootId: number, idx: number, fiber: Fiber) {\r\n  let $fiber = fiber;\r\n  let loc = `${fiber.idx}${HOOK_DELIMETER}${idx}`;\r\n\r\n  while ($fiber) {\r\n    $fiber = $fiber.parent;\r\n    $fiber && (loc = `${$fiber.idx}.${loc}`);\r\n  }\r\n\r\n  loc = `[${rootId}]${loc}`;\r\n\r\n  return loc;\r\n}\r\n\r\nfunction detectIsStableMemoTree(fiber: Fiber, $scope: Scope) {\r\n  if (!hasChildrenProp(fiber.inst)) return;\r\n  const actions = $scope.getActionsById(fiber.id);\r\n  const children = fiber.inst.children;\r\n\r\n  for (let i = 0; i < children.length; i++) {\r\n    const inst = children[i];\r\n    const key = getElementKey(inst);\r\n    if (key === null) return false;\r\n    const alt = actions.map[key];\r\n    if (!alt) return false;\r\n    const pc = alt.inst as Component;\r\n    const nc = inst as Component;\r\n    const isStable =\r\n      detectIsMemo(nc) && detectIsMemo(pc) && nc.type === pc.type && !nc.shouldUpdate(pc.props, nc.props);\r\n\r\n    if (!isStable) return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction tryOptStaticSlot(fiber: Fiber, alt: Fiber, $scope: Scope) {\r\n  const actions = $scope.getActionsById(fiber.id);\r\n  const inst = fiber.inst as Component | TagVirtualNode;\r\n\r\n  alt.element && (fiber.element = alt.element); //!\r\n\r\n  for (let i = 0; i < inst.children.length; i++) {\r\n    buildChildNode(inst.children, fiber, actions.map, i, fiber.eidx);\r\n  }\r\n\r\n  fiber.cc = inst.children.length;\r\n  $scope.setMountDeep(false);\r\n}\r\n\r\nfunction tryOptMemoSlot(fiber: Fiber, alt: Fiber, $scope: Scope) {\r\n  const actions = $scope.getActionsById(fiber.id);\r\n  const hasMove = Boolean(actions.move);\r\n  const hasRemove = Boolean(actions.remove);\r\n  const hasInsert = Boolean(actions.insert);\r\n  const hasReplace = Boolean(actions.insert);\r\n  const canOptimize = ((hasMove && !hasRemove) || (hasRemove && !hasMove)) && !hasInsert && !hasReplace;\r\n\r\n  if (!canOptimize || !detectIsStableMemoTree(fiber, $scope)) return;\r\n\r\n  hasMove && tryOptMov(fiber, alt, $scope);\r\n  hasRemove && tryOptRem(fiber, alt, $scope);\r\n}\r\n\r\nfunction tryOptMov(fiber: Fiber, alt: Fiber, $scope: Scope) {\r\n  const actions = $scope.getActionsById(fiber.id);\r\n\r\n  buildChildNodes(fiber, alt, $scope, (fiber, key) => {\r\n    if (!actions.move[key]) return;\r\n    fiber.alt = new Fiber().mutate(fiber);\r\n    fiber.tag = UPDATE_EFFECT_TAG;\r\n    fiber.mask |= MOVE_MASK;\r\n    $scope.addCandidate(fiber);\r\n  });\r\n}\r\n\r\nfunction tryOptRem(fiber: Fiber, alt: Fiber, $scope: Scope) {\r\n  buildChildNodes(fiber, alt, $scope);\r\n}\r\n\r\nfunction buildChildNodes(fiber: Fiber, alt: Fiber, $scope: Scope, onNode?: (fiber: Fiber, key: ElementKey) => void) {\r\n  const actions = $scope.getActionsById(fiber.id);\r\n  const inst = fiber.inst as Component | TagVirtualNode;\r\n  const children = inst.children;\r\n\r\n  alt.element && (fiber.element = alt.element); //!\r\n\r\n  for (let i = 0; i < children.length; i++) {\r\n    const key = getKey(children[i], i);\r\n    const $fiber = actions.map[key];\r\n\r\n    buildChildNode(children, fiber, actions.map, i, fiber.eidx);\r\n    onNode && onNode($fiber, key);\r\n  }\r\n\r\n  fiber.cc = children.length;\r\n  $scope.setMountDeep(false);\r\n}\r\n\r\nfunction buildChildNode(\r\n  children: Array<Instance>,\r\n  parent: Fiber,\r\n  altMap: Record<string, Fiber>,\r\n  idx: number,\r\n  startEidx: number,\r\n) {\r\n  const prevIdx = idx - 1;\r\n  const nextIdx = idx + 1;\r\n  const key = getKey(children[idx], idx);\r\n  const prevKey = getKey(children[prevIdx], prevIdx);\r\n  const nextKey = getKey(children[nextIdx], nextIdx);\r\n  const fiber = altMap[key];\r\n  const left = altMap[prevKey];\r\n  const right = altMap[nextKey];\r\n  const isFirst = idx === 0;\r\n  const isLast = idx === children.length - 1;\r\n\r\n  isFirst && (parent.child = fiber);\r\n  fiber.alt = null;\r\n  fiber.parent = parent;\r\n  fiber.tag = SKIP_EFFECT_TAG;\r\n  fiber.idx = idx;\r\n  left ? (fiber.eidx = left.eidx + (left.element ? 1 : left.cec)) : (fiber.eidx = startEidx);\r\n  right && (fiber.next = right);\r\n  isLast && (fiber.next = null);\r\n  notifyParents(fiber);\r\n}\r\n\r\nfunction getKey(inst: Instance, idx: number) {\r\n  const key = getElementKey(inst);\r\n  return key !== null ? key : createIndexKey(idx);\r\n}\r\n\r\nfunction notifyParents(fiber: Fiber, alt: Fiber = fiber) {\r\n  fiber.increment(alt.element ? 1 : alt.cec);\r\n  alt.mask & INSERTION_EFFECT_HOST_MASK && fiber.markHost(INSERTION_EFFECT_HOST_MASK);\r\n  alt.mask & LAYOUT_EFFECT_HOST_MASK && fiber.markHost(LAYOUT_EFFECT_HOST_MASK);\r\n  alt.mask & ASYNC_EFFECT_HOST_MASK && fiber.markHost(ASYNC_EFFECT_HOST_MASK);\r\n  alt.mask & ATOM_HOST_MASK && fiber.markHost(ATOM_HOST_MASK);\r\n  alt.mask & PORTAL_HOST_MASK && fiber.markHost(PORTAL_HOST_MASK);\r\n}\r\n\r\nexport {\r\n  walk,\r\n  collectElements,\r\n  getFiberWithElement,\r\n  detectIsFiberAlive,\r\n  createHookLocation,\r\n  tryOptStaticSlot,\r\n  tryOptMemoSlot,\r\n  notifyParents,\r\n};\r\n","import { component, detectIsComponent } from '../component';\r\nimport type { KeyProps, SlotProps } from '../shared';\r\n\r\ntype FragmentProps = Required<SlotProps> & KeyProps;\r\n\r\nconst $$fragment = Symbol('fragment');\r\n\r\nconst Fragment = component<FragmentProps>(({ slot }) => slot || null, { token: $$fragment });\r\n\r\nconst detectIsFragment = (instance: unknown) => detectIsComponent(instance) && instance.token === $$fragment;\r\n\r\nexport { Fragment, detectIsFragment };\r\n","import { type VirtualNodeFactory, detectIsVirtualNodeFactory } from '../view';\r\nimport { type Component, detectIsComponent, component } from '../component';\r\nimport { type Hook, type HookValue } from '../fiber';\r\nimport { detectAreDepsDifferent } from '../utils';\r\nimport { $$scope } from '../scope';\r\nimport { memo } from '../memo';\r\n\r\ntype GetMemoValue = () => Component | VirtualNodeFactory;\r\n\r\ntype MemoProps = {\r\n  deps: Array<any>;\r\n  getValue: GetMemoValue;\r\n};\r\n\r\nconst Memo = memo(\r\n  component<MemoProps>(({ getValue }) => getValue()),\r\n  (p, n) => detectAreDepsDifferent(p.deps, n.deps),\r\n);\r\n\r\nfunction detectIsElement<T>(value: T) {\r\n  return detectIsComponent(value) || detectIsVirtualNodeFactory(value);\r\n}\r\n\r\nfunction useMemo<T>(getValue: () => T, deps: Array<any>): T {\r\n  const fiber = $$scope().getCursorFiber();\r\n  const { hook } = fiber;\r\n  const { idx, values } = hook as Hook<HookValue<T>>;\r\n  const state =\r\n    values[idx] ||\r\n    (values[idx] = {\r\n      deps,\r\n      value: getValue(),\r\n    });\r\n  let value: T = null;\r\n  let $value: T = null;\r\n\r\n  if (detectIsElement(state.value)) {\r\n    value = state.value;\r\n    $value = Memo({ getValue: getValue as GetMemoValue, deps }) as unknown as T;\r\n  } else {\r\n    value = detectAreDepsDifferent(state.deps, deps) ? getValue() : state.value;\r\n    $value = value;\r\n  }\r\n\r\n  state.deps = deps;\r\n  state.value = value;\r\n  hook.idx++;\r\n\r\n  return $value;\r\n}\r\n\r\nexport { useMemo };\r\n","import { detectIsFunction } from '../utils';\r\nimport { INSERTION_EFFECT_HOST_MASK, LAYOUT_EFFECT_HOST_MASK, ASYNC_EFFECT_HOST_MASK } from '../constants';\r\nimport { $$scope } from '../scope';\r\nimport { useMemo } from '../use-memo';\r\nimport { type Hook, type HookValue } from '../fiber';\r\n\r\nconst $$useEffect = Symbol('use-effect');\r\n\r\ntype UseEffectValue = {\r\n  token: Symbol;\r\n  cleanup: DropEffect;\r\n};\r\n\r\nfunction createEffect(token: Symbol, type: EffectType) {\r\n  function useEffect(effect: Effect, deps: Array<any> = [{}]) {\r\n    const $scope = $$scope();\r\n    const fiber = $scope.getCursorFiber();\r\n    const scope = useMemo<UseEffectValue>(() => ({ token, cleanup: undefined }), []);\r\n    const isInsertionEffect = type === EffectType.INSERTION;\r\n    const isLayoutEffect = type === EffectType.LAYOUT;\r\n    const isAsyncEffect = type === EffectType.ASYNC;\r\n\r\n    isInsertionEffect && fiber.markHost(INSERTION_EFFECT_HOST_MASK);\r\n    isLayoutEffect && fiber.markHost(LAYOUT_EFFECT_HOST_MASK);\r\n    isAsyncEffect && fiber.markHost(ASYNC_EFFECT_HOST_MASK);\r\n\r\n    useMemo(() => {\r\n      const runEffect = () => (scope.cleanup = effect());\r\n\r\n      isInsertionEffect && $scope.addInsertionEffect(runEffect);\r\n      isLayoutEffect && $scope.addLayoutEffect(runEffect);\r\n      isAsyncEffect && $scope.addAsyncEffect(runEffect);\r\n\r\n      detectIsFunction(scope.cleanup) && scope.cleanup();\r\n\r\n      return null;\r\n    }, deps);\r\n  }\r\n\r\n  function dropEffects(hook: Hook<HookValue<UseEffectValue>>) {\r\n    for (const { value: effect } of hook.values) {\r\n      effect && effect.token === token && detectIsFunction(effect.cleanup) && effect.cleanup();\r\n    }\r\n  }\r\n\r\n  return {\r\n    useEffect,\r\n    dropEffects,\r\n  };\r\n}\r\n\r\nexport type DropEffect = void | (() => void);\r\n\r\nexport type Effect = () => DropEffect;\r\n\r\nexport enum EffectType {\r\n  ASYNC = 'ASYNC',\r\n  LAYOUT = 'LAYOUT',\r\n  INSERTION = 'INSERTION',\r\n}\r\n\r\nconst { useEffect, dropEffects } = createEffect($$useEffect, EffectType.ASYNC);\r\n\r\nexport { useEffect, dropEffects, createEffect };\r\n","import { createEffect, EffectType } from '../use-effect';\r\n\r\nconst $$useLayoutEffect = Symbol('use-layout-effect');\r\nconst { useEffect: useLayoutEffect, dropEffects: dropLayoutEffects } = createEffect(\r\n  $$useLayoutEffect,\r\n  EffectType.LAYOUT,\r\n);\r\n\r\nexport { useLayoutEffect, dropLayoutEffects };\r\n","import { createEffect, EffectType } from '../use-effect';\r\n\r\nconst $$useInsertionEffect = Symbol('use-insertion-effect');\r\nconst { useEffect: useInsertionEffect, dropEffects: dropInsertionEffects } = createEffect(\r\n  $$useInsertionEffect,\r\n  EffectType.INSERTION,\r\n);\r\n\r\nexport { useInsertionEffect, dropInsertionEffects };\r\n","import { type Fiber } from '../fiber';\r\nimport { platform } from '../platform';\r\nimport { dropEffects } from '../use-effect';\r\nimport { dropLayoutEffects } from '../use-layout-effect';\r\nimport { dropInsertionEffects } from '../use-insertion-effect';\r\nimport { walk } from '../walk';\r\nimport { detectIsUndefined } from '../utils';\r\nimport { removeScope, $$scope } from '../scope';\r\nimport {\r\n  INSERTION_EFFECT_HOST_MASK,\r\n  LAYOUT_EFFECT_HOST_MASK,\r\n  ASYNC_EFFECT_HOST_MASK,\r\n  ATOM_HOST_MASK,\r\n  PORTAL_HOST_MASK,\r\n} from '../constants';\r\n\r\nconst combinedMask =\r\n  INSERTION_EFFECT_HOST_MASK | LAYOUT_EFFECT_HOST_MASK | ASYNC_EFFECT_HOST_MASK | ATOM_HOST_MASK | PORTAL_HOST_MASK;\r\n\r\nconst shouldUnmountFiber = (fiber: Fiber) => fiber.mask & combinedMask;\r\n\r\nfunction unmountFiber(fiber: Fiber) {\r\n  if (!shouldUnmountFiber(fiber)) return;\r\n  walk(fiber, (fiber, skip) => {\r\n    if (!shouldUnmountFiber(fiber)) return skip();\r\n\r\n    if (fiber.hook && fiber.hook.values.length > 0) {\r\n      fiber.mask & INSERTION_EFFECT_HOST_MASK && dropInsertionEffects(fiber.hook);\r\n      fiber.mask & LAYOUT_EFFECT_HOST_MASK && dropLayoutEffects(fiber.hook);\r\n      fiber.mask & ASYNC_EFFECT_HOST_MASK && dropEffects(fiber.hook);\r\n    }\r\n\r\n    if (fiber.atoms) {\r\n      for (const [_, cleanup] of fiber.atoms) {\r\n        cleanup();\r\n      }\r\n      fiber.atoms = null;\r\n    }\r\n\r\n    fiber.mask & PORTAL_HOST_MASK && platform.unmountPortal(fiber);\r\n  });\r\n}\r\n\r\nfunction unmountRoot(rootId: number, onCompleted: () => void) {\r\n  if (detectIsUndefined(rootId)) return;\r\n  const $scope = $$scope(rootId);\r\n\r\n  unmountFiber($scope.getRoot());\r\n  $scope.unsubscribeEvents();\r\n  removeScope(rootId);\r\n  onCompleted();\r\n}\r\n\r\nexport { unmountFiber, unmountRoot };\r\n","import { platform } from '../platform';\r\nimport {\r\n  CREATE_EFFECT_TAG,\r\n  UPDATE_EFFECT_TAG,\r\n  DELETE_EFFECT_TAG,\r\n  SKIP_EFFECT_TAG,\r\n  INSERTION_EFFECT_HOST_MASK,\r\n  LAYOUT_EFFECT_HOST_MASK,\r\n  ASYNC_EFFECT_HOST_MASK,\r\n  ATOM_HOST_MASK,\r\n  PORTAL_HOST_MASK,\r\n  MOVE_MASK,\r\n  FLUSH_MASK,\r\n  SHADOW_MASK,\r\n  Flag,\r\n} from '../constants';\r\nimport {\r\n  flatten,\r\n  error,\r\n  detectIsEmpty,\r\n  detectIsFalsy,\r\n  detectIsArray,\r\n  detectIsFunction,\r\n  detectIsTextBased,\r\n  createIndexKey,\r\n  trueFn,\r\n} from '../utils';\r\nimport { type Scope, setRootId, $$scope, replaceScope } from '../scope';\r\nimport { type Component, detectIsComponent } from '../component';\r\nimport { type ElementKey, type Instance } from '../shared';\r\nimport { Fiber, getHook, Hook } from '../fiber';\r\nimport {\r\n  Text,\r\n  detectIsVirtualNode,\r\n  detectIsVirtualNodeFactory,\r\n  getElementKey,\r\n  hasElementFlag,\r\n  hasChildrenProp,\r\n  detectIsReplacer,\r\n  createReplacer,\r\n  detectAreSameInstanceTypes,\r\n} from '../view';\r\nimport { detectIsMemo } from '../memo';\r\nimport {\r\n  walk,\r\n  getFiberWithElement,\r\n  detectIsFiberAlive,\r\n  notifyParents,\r\n  tryOptStaticSlot,\r\n  tryOptMemoSlot,\r\n} from '../walk';\r\nimport { type RestoreOptions, scheduler } from '../scheduler';\r\nimport { Fragment, detectIsFragment } from '../fragment';\r\nimport { unmountFiber } from '../unmount';\r\n\r\nlet hasPendingPromise = false;\r\nlet hasRenderError = false;\r\n\r\nexport type WorkLoop = (isAsync: boolean) => boolean;\r\n\r\nfunction workLoop(isAsync: boolean): boolean | null {\r\n  if (hasPendingPromise) return null;\r\n  if (hasRenderError) return false;\r\n  const $scope = $$scope();\r\n  const wipFiber = $scope.getWorkInProgress();\r\n  let unit = $scope.getNextUnitOfWork();\r\n  let shouldYield = false;\r\n  let hasMoreWork = Boolean(unit);\r\n\r\n  try {\r\n    while (unit && !shouldYield) {\r\n      unit = performUnitOfWork(unit, $scope);\r\n      $scope.setNextUnitOfWork(unit);\r\n      hasMoreWork = Boolean(unit);\r\n      shouldYield = isAsync && scheduler.shouldYield();\r\n      if (shouldYield && scheduler.hasPrimaryTask()) return fork($scope);\r\n    }\r\n\r\n    if (!unit && wipFiber) {\r\n      commit($scope);\r\n    }\r\n  } catch (err) {\r\n    if (err instanceof Promise) {\r\n      hasPendingPromise = true;\r\n      err.finally(() => {\r\n        hasPendingPromise = false;\r\n        !isAsync && workLoop(false);\r\n      });\r\n    } else {\r\n      hasRenderError = true;\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  return hasMoreWork;\r\n}\r\n\r\nfunction performUnitOfWork(fiber: Fiber, $scope: Scope): Fiber | null {\r\n  const wipFiber = $scope.getWorkInProgress();\r\n  const isDeepWalking = $scope.getMountDeep();\r\n  const isStream = $scope.getIsStreamZone();\r\n  const hasChildren = isDeepWalking && hasChildrenProp(fiber.inst) && fiber.inst.children.length > 0;\r\n\r\n  fiber.hook && (fiber.hook.idx = 0);\r\n\r\n  if (hasChildren) {\r\n    const child = mountChild(fiber, $scope);\r\n\r\n    isStream && platform.chunk(child);\r\n\r\n    return child;\r\n  } else {\r\n    while (fiber.parent && fiber !== wipFiber) {\r\n      const next = mountSibling(fiber, $scope);\r\n\r\n      isStream && platform.chunk(fiber);\r\n\r\n      if (next) {\r\n        isStream && platform.chunk(next);\r\n        return next;\r\n      }\r\n\r\n      fiber = fiber.parent;\r\n    }\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nfunction mountChild(parent: Fiber, $scope: Scope) {\r\n  $scope.navToChild();\r\n  const $inst = parent.inst;\r\n  const idx = 0;\r\n  const inst = hasChildrenProp($inst) ? $inst.children[idx] : null;\r\n  const alt = getAlternate(parent, inst, true, $scope);\r\n  const fiber = createFiber(alt, inst, idx);\r\n\r\n  fiber.parent = parent;\r\n  parent.child = fiber;\r\n  fiber.eidx = parent.element ? 0 : parent.eidx;\r\n\r\n  share(fiber, parent, inst, $scope);\r\n\r\n  return fiber;\r\n}\r\n\r\nfunction mountSibling(left: Fiber, $scope: Scope) {\r\n  $scope.navToSibling();\r\n  const $inst = left.parent.inst;\r\n  const idx = $scope.getMountIndex();\r\n  const inst = hasChildrenProp($inst) && $inst.children ? $inst.children[idx] : null;\r\n  const hasSibling = Boolean(inst);\r\n\r\n  if (!hasSibling) {\r\n    $scope.navToParent();\r\n    $scope.setMountDeep(false);\r\n\r\n    return null;\r\n  }\r\n\r\n  $scope.setMountDeep(true);\r\n  const alt = getAlternate(left, inst, false, $scope);\r\n  const fiber = createFiber(alt, inst, idx);\r\n\r\n  fiber.parent = left.parent;\r\n  left.next = fiber;\r\n  fiber.eidx = left.eidx + (left.element ? 1 : left.cec);\r\n\r\n  share(fiber, left, inst, $scope);\r\n\r\n  return fiber;\r\n}\r\n\r\nfunction share(fiber: Fiber, prev: Fiber, inst: Instance, $scope: Scope) {\r\n  const { alt } = fiber;\r\n  const shouldMount = alt && detectIsMemo(inst) ? shouldUpdate(fiber, inst, $scope) : true;\r\n\r\n  $scope.setCursorFiber(fiber);\r\n  fiber.inst = inst;\r\n\r\n  if (alt && alt.mask & MOVE_MASK) {\r\n    fiber.mask |= MOVE_MASK;\r\n    alt.mask &= ~MOVE_MASK;\r\n  }\r\n\r\n  fiber.hook && (fiber.hook.owner = fiber); // !\r\n\r\n  if (shouldMount) {\r\n    fiber.inst = mount(fiber, prev, $scope);\r\n    alt && reconcile(fiber, alt, $scope);\r\n    setup(fiber, alt);\r\n  } else if (fiber.mask & MOVE_MASK) {\r\n    fiber.tag = UPDATE_EFFECT_TAG;\r\n  }\r\n\r\n  $scope.addCandidate(fiber); // !\r\n}\r\n\r\nfunction createFiber(alt: Fiber, inst: Instance, idx: number) {\r\n  const fiber = new Fiber(getHook(alt, alt ? alt.inst : null, inst), alt ? alt.provider : null, idx);\r\n\r\n  fiber.alt = alt || null;\r\n\r\n  return fiber;\r\n}\r\n\r\nfunction getAlternate(fiber: Fiber, inst: Instance, fromChild: boolean, $scope: Scope) {\r\n  const key = getElementKey(inst);\r\n\r\n  if (key !== null) {\r\n    const parentId = fromChild ? fiber.id : fiber.parent.id;\r\n    const actions = $scope.getActionsById(parentId);\r\n\r\n    if (actions) {\r\n      const isMove = actions.move && Boolean(actions.move[key]);\r\n      const isStable = actions.stable && Boolean(actions.stable[key]);\r\n\r\n      if (isMove || isStable) {\r\n        const alt = actions.map[key];\r\n\r\n        isMove && (alt.mask |= MOVE_MASK);\r\n\r\n        return alt;\r\n      }\r\n\r\n      return null;\r\n    }\r\n  }\r\n\r\n  const alt = fiber.alt ? (fromChild ? fiber.alt.child || null : fiber.alt.next || null) : null;\r\n\r\n  return alt;\r\n}\r\n\r\nfunction reconcile(fiber: Fiber, alt: Fiber, $scope: Scope) {\r\n  const { id, inst } = fiber;\r\n  const areSameTypes = detectAreSameInstanceTypes(alt.inst, inst);\r\n\r\n  if (!areSameTypes) {\r\n    $scope.addDeletion(alt);\r\n  } else if (hasChildrenProp(alt.inst) && hasChildrenProp(inst) && alt.cc !== 0) {\r\n    const hasSameCount = alt.cc === inst.children.length;\r\n    const check = hasElementFlag(inst, Flag.SKIP_SCAN_OPT) ? !hasSameCount : true;\r\n\r\n    if (check) {\r\n      const { prevKeys, nextKeys, prevKeysMap, nextKeysMap, keyedFibersMap } = extractKeys(alt.child, inst.children);\r\n      const flush = nextKeys.length === 0;\r\n      let size = Math.max(prevKeys.length, nextKeys.length);\r\n      let p = 0;\r\n      let n = 0;\r\n\r\n      $scope.addActionMap(id, keyedFibersMap);\r\n\r\n      for (let i = 0; i < size; i++) {\r\n        const nextKey = nextKeys[i - n] ?? null;\r\n        const prevKey = prevKeys[i - p] ?? null;\r\n        const prevKeyFiber = keyedFibersMap[prevKey] || null;\r\n\r\n        if (nextKey !== prevKey) {\r\n          if (nextKey !== null && !prevKeysMap[nextKey]) {\r\n            if (prevKey !== null && !nextKeysMap[prevKey]) {\r\n              $scope.addReplaceAction(id, nextKey);\r\n              $scope.addDeletion(prevKeyFiber);\r\n            } else {\r\n              $scope.addInsertAction(id, nextKey);\r\n              p++;\r\n              size++;\r\n            }\r\n          } else if (!nextKeysMap[prevKey]) {\r\n            $scope.addRemoveAction(id, prevKey);\r\n            $scope.addDeletion(prevKeyFiber);\r\n            flush && (prevKeyFiber.mask |= FLUSH_MASK);\r\n            n++;\r\n            size++;\r\n          } else if (nextKeysMap[prevKey] && nextKeysMap[nextKey]) {\r\n            $scope.addMoveAction(id, nextKey);\r\n          }\r\n        } else if (nextKey !== null) {\r\n          $scope.addStableAction(id, nextKey);\r\n        }\r\n      }\r\n\r\n      hasElementFlag(inst, Flag.STATIC_SLOT_OPT) && tryOptStaticSlot(fiber, alt, $scope);\r\n      hasElementFlag(inst, Flag.MEMO_SLOT_OPT) && tryOptMemoSlot(fiber, alt, $scope);\r\n    }\r\n  }\r\n}\r\n\r\nfunction setup(fiber: Fiber, alt: Fiber) {\r\n  const inst = fiber.inst;\r\n  let isUpdate = false;\r\n\r\n  fiber.parent.tag === CREATE_EFFECT_TAG && (fiber.tag = fiber.parent.tag);\r\n  fiber.parent.mask & SHADOW_MASK && !fiber.parent.element && !detectIsReplacer(inst) && (fiber.mask |= SHADOW_MASK);\r\n  isUpdate =\r\n    alt &&\r\n    fiber.tag !== CREATE_EFFECT_TAG &&\r\n    detectAreSameInstanceTypes(alt.inst, inst) &&\r\n    getElementKey(alt.inst) === getElementKey(inst);\r\n  isUpdate && !fiber.element && alt.element && (fiber.element = alt.element);\r\n  fiber.tag = isUpdate ? UPDATE_EFFECT_TAG : CREATE_EFFECT_TAG;\r\n  hasChildrenProp(fiber.inst) && (fiber.cc = fiber.inst.children.length);\r\n  !fiber.element && detectIsVirtualNode(fiber.inst) && (fiber.element = platform.createElement(fiber.inst));\r\n  fiber.element && fiber.increment();\r\n}\r\n\r\nfunction shouldUpdate(fiber: Fiber, inst: Instance, $scope: Scope) {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    if ($scope.getIsHot()) return true;\r\n  }\r\n\r\n  const alt = fiber.alt;\r\n  const pc = alt.inst as Component;\r\n  const nc = inst as Component;\r\n\r\n  if (nc.type !== pc.type || nc.shouldUpdate(pc.props, nc.props)) return true;\r\n\r\n  $scope.setMountDeep(false);\r\n  fiber.tag = SKIP_EFFECT_TAG;\r\n  fiber.child = alt.child;\r\n  fiber.child.parent = fiber;\r\n  fiber.hook = alt.hook;\r\n  fiber.cc = alt.cc;\r\n  fiber.cec = alt.cec;\r\n  alt.element && (fiber.element = alt.element);\r\n  alt.provider && (fiber.provider = alt.provider);\r\n  alt.catch && (fiber.catch = alt.catch);\r\n  alt.atoms && (fiber.atoms = alt.atoms);\r\n\r\n  const diff = fiber.eidx - alt.eidx;\r\n  const deep = diff !== 0;\r\n\r\n  if (deep) {\r\n    walk(fiber.child, ($fiber, skip) => {\r\n      $fiber.eidx += diff;\r\n      if ($fiber.element) return skip();\r\n    });\r\n  }\r\n\r\n  notifyParents(fiber, alt);\r\n\r\n  return false;\r\n}\r\n\r\nfunction mount(fiber: Fiber, prev: Fiber, $scope: Scope) {\r\n  let inst = fiber.inst;\r\n  const isComponent = detectIsComponent(inst);\r\n  const component = inst as Component;\r\n\r\n  if (isComponent) {\r\n    try {\r\n      const id = $scope.getResourceId();\r\n      let result = component.type(component.props, component.ref);\r\n      const defers = $scope.getDefers();\r\n\r\n      if (defers.length > 0) {\r\n        const promise = Promise.all(defers.map(x => x()));\r\n\r\n        $scope.setResourceId(id);\r\n        $scope.resetDefers();\r\n        $scope.navToPrev();\r\n        $scope.setNextUnitOfWork(prev);\r\n        Fiber.setNextId(prev.id);\r\n\r\n        throw promise;\r\n      }\r\n\r\n      if (detectIsArray(result)) {\r\n        !detectIsFragment(component) && (result = Fragment({ slot: result }));\r\n      } else if (detectIsTextBased(result)) {\r\n        result = Text(result);\r\n      }\r\n\r\n      component.children = result as Array<Instance>;\r\n      platform.detectIsPortal(inst) && fiber.markHost(PORTAL_HOST_MASK);\r\n    } catch (err) {\r\n      if (err instanceof Promise) throw err;\r\n      component.children = [];\r\n      fiber.setError(err);\r\n      error(err);\r\n    }\r\n  } else if (detectIsVirtualNodeFactory(inst)) {\r\n    inst = inst();\r\n  }\r\n\r\n  if (hasChildrenProp(inst)) {\r\n    inst.children = flatten(inst.children, x => (detectIsTextBased(x) ? Text(x) : x || supportConditional(x)));\r\n    isComponent && component.children.length === 0 && component.children.push(createReplacer());\r\n  }\r\n\r\n  return inst;\r\n}\r\n\r\nfunction extractKeys(alt: Fiber, children: Array<Instance>) {\r\n  let nextFiber = alt;\r\n  let idx = 0;\r\n  const prevKeys: Array<ElementKey> = [];\r\n  const nextKeys: Array<ElementKey> = [];\r\n  const prevKeysMap: Record<ElementKey, boolean> = {};\r\n  const nextKeysMap: Record<ElementKey, boolean> = {};\r\n  const keyedFibersMap: Record<ElementKey, Fiber> = {};\r\n  const usedKeysMap: Record<ElementKey, boolean> = {};\r\n\r\n  while (nextFiber || idx < children.length) {\r\n    if (nextFiber) {\r\n      const key = getElementKey(nextFiber.inst);\r\n      const prevKey = detectIsEmpty(key) ? createIndexKey(idx) : key;\r\n\r\n      if (!prevKeysMap[prevKey]) {\r\n        prevKeysMap[prevKey] = true; // !\r\n        prevKeys.push(prevKey);\r\n      }\r\n\r\n      keyedFibersMap[prevKey] = nextFiber;\r\n    }\r\n\r\n    if (children[idx]) {\r\n      const inst = children[idx];\r\n      const key = getElementKey(inst);\r\n      const nextKey = detectIsEmpty(key) ? createIndexKey(idx) : key;\r\n\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        if (usedKeysMap[nextKey]) {\r\n          error(`[Dark]: The key of node [${nextKey}] already has been used!`, [inst]);\r\n        }\r\n      }\r\n\r\n      if (!nextKeysMap[nextKey]) {\r\n        nextKeysMap[nextKey] = true; // !\r\n        nextKeys.push(nextKey);\r\n      }\r\n\r\n      usedKeysMap[nextKey] = true;\r\n    }\r\n\r\n    nextFiber = nextFiber ? nextFiber.next : null;\r\n    idx++;\r\n  }\r\n\r\n  return {\r\n    prevKeys,\r\n    nextKeys,\r\n    prevKeysMap,\r\n    nextKeysMap,\r\n    keyedFibersMap,\r\n  };\r\n}\r\n\r\nfunction supportConditional(inst: Instance) {\r\n  return detectIsFalsy(inst) ? createReplacer() : inst;\r\n}\r\n\r\nfunction commit($scope: Scope) {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    process.env.NODE_ENV === 'development' && $scope.setIsHot(false);\r\n  }\r\n\r\n  const wipFiber = $scope.getWorkInProgress();\r\n  const deletions = $scope.getDeletions();\r\n  const candidates = $scope.getCandidates();\r\n  const isUpdateZone = $scope.getIsUpdateZone();\r\n  const unmounts: Array<Fiber> = [];\r\n  const combinedMask = INSERTION_EFFECT_HOST_MASK | LAYOUT_EFFECT_HOST_MASK | ASYNC_EFFECT_HOST_MASK | PORTAL_HOST_MASK;\r\n\r\n  // !\r\n  for (const fiber of deletions) {\r\n    const withNextTick = fiber.mask & ATOM_HOST_MASK && !(fiber.mask & combinedMask);\r\n\r\n    withNextTick ? unmounts.push(fiber) : unmountFiber(fiber);\r\n    fiber.tag = DELETE_EFFECT_TAG;\r\n    platform.commit(fiber);\r\n  }\r\n\r\n  isUpdateZone && sync(wipFiber);\r\n  $scope.runInsertionEffects();\r\n\r\n  for (const fiber of candidates) {\r\n    fiber.tag !== SKIP_EFFECT_TAG && platform.commit(fiber);\r\n    fiber.alt = null;\r\n    hasChildrenProp(fiber.inst) && (fiber.inst.children = null);\r\n  }\r\n\r\n  wipFiber.alt = null;\r\n  platform.finishCommit(); // !\r\n  $scope.runLayoutEffects();\r\n  $scope.runAsyncEffects();\r\n  unmounts.length > 0 && setTimeout(() => unmounts.forEach(x => unmountFiber(x)));\r\n  flush($scope);\r\n}\r\n\r\nfunction flush($scope: Scope, cancel = false) {\r\n  $scope.flush();\r\n  !cancel && $scope.getEmitter().emit('finish');\r\n  $scope.runAfterCommit(); // !\r\n}\r\n\r\nfunction sync(fiber: Fiber) {\r\n  const diff = fiber.cec - fiber.alt.cec;\r\n  if (diff === 0) return;\r\n  const parentFiber = getFiberWithElement(fiber.parent);\r\n  let isRight = false;\r\n\r\n  fiber.increment(diff, true);\r\n\r\n  walk(parentFiber.child, ($fiber, skip) => {\r\n    if ($fiber === fiber) {\r\n      isRight = true;\r\n      return skip();\r\n    }\r\n\r\n    $fiber.element && skip();\r\n    isRight && ($fiber.eidx += diff);\r\n  });\r\n}\r\n\r\nfunction fork($scope: Scope): false {\r\n  const $$scope$ = $scope.copy();\r\n  const wipFiber = $scope.getWorkInProgress();\r\n  const child = wipFiber.child;\r\n  child && (child.parent = null);\r\n  const restore = (options: RestoreOptions) => {\r\n    const { fiber: wipFiber, setValue, resetValue } = options;\r\n    const $scope = $$scope();\r\n\r\n    detectIsFunction(setValue) && setValue();\r\n    detectIsFunction(resetValue) && $$scope$.addCancel(resetValue);\r\n\r\n    wipFiber.alt = new Fiber().mutate(wipFiber);\r\n    wipFiber.tag = UPDATE_EFFECT_TAG;\r\n    wipFiber.child = child;\r\n    child && (child.parent = wipFiber);\r\n\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      wipFiber.marker = '✌️';\r\n    }\r\n\r\n    $$scope$.setRoot($scope.getRoot());\r\n    $$scope$.setWorkInProgress(wipFiber);\r\n    replaceScope($$scope$);\r\n  };\r\n\r\n  wipFiber.child = wipFiber.alt.child;\r\n  wipFiber.alt = null;\r\n  $scope.applyCancels();\r\n  flush($scope, true);\r\n  scheduler.cancelTask(restore);\r\n\r\n  return false;\r\n}\r\n\r\nexport type CreateUpdateOptions = {\r\n  rootId: number;\r\n  isTransition?: boolean;\r\n  hook: Hook;\r\n  createChanger?: () => UpdateChanger;\r\n};\r\n\r\nexport type UpdateChanger = {\r\n  shouldUpdate: () => boolean;\r\n} & Pick<RestoreOptions, 'setValue' | 'resetValue'>;\r\n\r\nfunction createUpdate(options: CreateUpdateOptions) {\r\n  const { rootId, hook, isTransition, createChanger = $createChanger } = options;\r\n  const callback = (restore?: (options: RestoreOptions) => void) => {\r\n    setRootId(rootId); // !\r\n    const fromRestore = detectIsFunction(restore);\r\n    const { shouldUpdate, setValue, resetValue } = createChanger();\r\n    const $scope = $$scope();\r\n    const owner = hook.owner;\r\n    const fiber = owner.alt || owner;\r\n\r\n    if (!shouldUpdate() || !detectIsFiberAlive(fiber) || fromRestore) {\r\n      fromRestore && restore({ fiber, setValue, resetValue });\r\n      return;\r\n    }\r\n\r\n    detectIsFunction(setValue) && setValue();\r\n    detectIsFunction(resetValue) && isTransition && $scope.addCancel(resetValue);\r\n\r\n    fiber.alt = new Fiber().mutate(fiber);\r\n    fiber.tag = UPDATE_EFFECT_TAG;\r\n    fiber.cc = 0;\r\n    fiber.cec = 0;\r\n    fiber.child = null;\r\n\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      fiber.marker = '🔥';\r\n    }\r\n\r\n    $scope.setIsUpdateZone(true);\r\n    $scope.resetMount();\r\n    $scope.setWorkInProgress(fiber);\r\n    $scope.setCursorFiber(fiber);\r\n    fiber.inst = mount(fiber, null, $scope);\r\n    $scope.setNextUnitOfWork(fiber);\r\n  };\r\n\r\n  return callback;\r\n}\r\n\r\nconst $createChanger = (): UpdateChanger => ({\r\n  shouldUpdate: trueFn,\r\n  setValue: null,\r\n  resetValue: null,\r\n});\r\n\r\nconst detectIsBusy = () => Boolean($$scope()?.getWorkInProgress());\r\n\r\nexport { Fiber, workLoop, createUpdate, detectIsBusy };\r\n","import { type WorkLoop, workLoop, detectIsBusy } from '../workloop';\r\nimport { type SetPendingStatus } from '../start-transition';\r\nimport { type Callback } from '../shared';\r\nimport { type Fiber } from '../fiber';\r\nimport { ROOT, HOOK_DELIMETER, YIELD_INTERVAL, TaskPriority } from '../constants';\r\nimport { getTime, detectIsFunction, nextTick } from '../utils';\r\nimport { EventEmitter } from '../emitter';\r\nimport { platform } from '../platform';\r\n\r\nclass MessageChannel extends EventEmitter<PortEvent> {\r\n  port1: MessagePort = null;\r\n  port2: MessagePort = null;\r\n\r\n  constructor() {\r\n    super();\r\n    this.port1 = new MessagePort(this);\r\n    this.port2 = new MessagePort(this);\r\n  }\r\n}\r\n\r\nclass MessagePort {\r\n  channel: MessageChannel;\r\n  offs: Array<Callback> = [];\r\n\r\n  constructor(channel: MessageChannel) {\r\n    this.channel = channel;\r\n  }\r\n\r\n  on(event: PortEvent, callback: PortListener) {\r\n    const off = this.channel.on(event, callback);\r\n\r\n    this.offs.push(off);\r\n  }\r\n\r\n  postMessage(value: unknown) {\r\n    platform.spawn(() => {\r\n      this.channel.emit('message', value);\r\n    });\r\n  }\r\n\r\n  unref() {\r\n    this.offs.forEach(x => x());\r\n  }\r\n}\r\n\r\nclass Scheduler {\r\n  private queue: Record<TaskPriority, Array<Task>> = {\r\n    [TaskPriority.HIGH]: [],\r\n    [TaskPriority.NORMAL]: [],\r\n    [TaskPriority.LOW]: [],\r\n  };\r\n  private deadline = 0;\r\n  private task: Task = null;\r\n  private scheduledCallback: WorkLoop = null;\r\n  private isMessageLoopRunning = false;\r\n  private channel: MessageChannel = null;\r\n  private port: MessagePort = null;\r\n\r\n  constructor() {\r\n    this.channel = new MessageChannel();\r\n    this.port = this.channel.port2;\r\n    this.channel.port1.on('message', this.performWorkUntilDeadline.bind(this));\r\n  }\r\n\r\n  reset() {\r\n    this.deadline = 0;\r\n    this.task = null;\r\n    this.scheduledCallback = null;\r\n    this.isMessageLoopRunning = false;\r\n  }\r\n\r\n  shouldYield() {\r\n    return getTime() >= this.deadline;\r\n  }\r\n\r\n  schedule(callback: Callback, options?: ScheduleCallbackOptions) {\r\n    const {\r\n      priority = TaskPriority.NORMAL,\r\n      forceAsync = false,\r\n      isTransition = false,\r\n      createLocation,\r\n      setPendingStatus,\r\n    } = options || {};\r\n    const task = new Task(callback, priority, forceAsync);\r\n\r\n    task.setIsTransition(isTransition);\r\n    task.setPendingSetter(setPendingStatus);\r\n    task.setLocationCreator(createLocation || createRootLocation);\r\n    this.put(task);\r\n    this.execute();\r\n  }\r\n\r\n  hasPrimaryTask() {\r\n    if (!this.task.getIsTransition()) return false;\r\n    const { high, normal, low } = this.getQueues();\r\n    const hasPrimary = high.length > 0 || normal.length > 0;\r\n    const hasLow = low.length > 0;\r\n\r\n    if (hasPrimary || hasLow) {\r\n      const loc = this.task.createLocation();\r\n\r\n      if (hasPrimary) {\r\n        const has = Task.detectHasRelatedUpdate(loc, high, true) || Task.detectHasRelatedUpdate(loc, normal, true);\r\n\r\n        if (has) {\r\n          this.task.markAsUnnecessary();\r\n        }\r\n\r\n        return true;\r\n      }\r\n\r\n      if (hasLow) {\r\n        const has = Task.detectHasRelatedUpdate(loc, low);\r\n\r\n        if (has) {\r\n          this.task.markAsUnnecessary();\r\n\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  cancelTask(fn: TaskRestorer) {\r\n    if (this.task.getIsUnnecessary()) return this.complete(this.task);\r\n    this.task.setTaskRestorer(fn);\r\n    this.defer(this.task);\r\n  }\r\n\r\n  private complete(task: Task) {\r\n    task.pending(false);\r\n  }\r\n\r\n  private put(task: Task) {\r\n    const queue = this.queue[task.getPriority()];\r\n\r\n    if (task.getIsTransition()) {\r\n      const loc = task.createLocation();\r\n      const tasks = queue.filter(x => x.createLocation() !== loc);\r\n\r\n      queue.splice(0, queue.length, ...tasks);\r\n    }\r\n\r\n    queue.push(task);\r\n  }\r\n\r\n  private pick(queue: Array<Task>) {\r\n    if (queue.length === 0) return false;\r\n    this.task = queue.shift();\r\n\r\n    if (this.task.getIsTransition() && this.task.canPending()) {\r\n      const task = this.task;\r\n\r\n      task.markAsPending();\r\n      this.defer(this.task);\r\n      this.task = null;\r\n\r\n      nextTick(() => task.pending(true));\r\n\r\n      return true;\r\n    }\r\n\r\n    this.task.run();\r\n    this.task.getForceAsync() ? this.requestCallbackAsync(workLoop) : this.requestCallback(workLoop);\r\n\r\n    return true;\r\n  }\r\n\r\n  private execute() {\r\n    const isBusy = detectIsBusy();\r\n    const { high, normal, low } = this.getQueues();\r\n\r\n    if (!isBusy && !this.isMessageLoopRunning) {\r\n      this.pick(high) || this.pick(normal) || this.pick(low);\r\n    }\r\n  }\r\n\r\n  private requestCallbackAsync(callback: WorkLoop) {\r\n    this.scheduledCallback = callback;\r\n\r\n    if (!this.isMessageLoopRunning) {\r\n      this.isMessageLoopRunning = true;\r\n      this.port.postMessage(null);\r\n    }\r\n  }\r\n\r\n  private requestCallback(callback: WorkLoop) {\r\n    callback(false);\r\n    this.task = null;\r\n    this.execute();\r\n  }\r\n\r\n  private performWorkUntilDeadline() {\r\n    if (this.scheduledCallback) {\r\n      this.deadline = getTime() + YIELD_INTERVAL;\r\n      const hasMoreWork = this.scheduledCallback(true);\r\n\r\n      if (hasMoreWork) {\r\n        this.port.postMessage(null);\r\n      } else {\r\n        if (hasMoreWork === null) {\r\n          setTimeout(() => this.port.postMessage(null)); // has promise\r\n        } else {\r\n          this.complete(this.task);\r\n          this.reset();\r\n          this.execute();\r\n        }\r\n      }\r\n    } else {\r\n      this.isMessageLoopRunning = false;\r\n    }\r\n  }\r\n\r\n  private defer(task: Task) {\r\n    const { low } = this.getQueues();\r\n\r\n    low.unshift(task);\r\n  }\r\n\r\n  private getQueues() {\r\n    const high = this.queue[TaskPriority.HIGH];\r\n    const normal = this.queue[TaskPriority.NORMAL];\r\n    const low = this.queue[TaskPriority.LOW];\r\n\r\n    return {\r\n      high,\r\n      normal,\r\n      low,\r\n    };\r\n  }\r\n}\r\n\r\ntype TaskCallback = (fn: TaskRestorer) => void;\r\ntype TaskRestorer = (options: RestoreOptions) => void;\r\ntype LocationCreator = () => string;\r\n\r\nclass Task {\r\n  private id: number;\r\n  private priority: TaskPriority;\r\n  private forceAsync: boolean;\r\n  private isTransition: boolean;\r\n  private isPending: boolean;\r\n  private isUnnecessary: boolean;\r\n  private callback: TaskCallback;\r\n  private taskRestorer?: TaskRestorer = null;\r\n  private locationCreator?: LocationCreator;\r\n  private pendingSetter?: SetPendingStatus = null;\r\n  private static nextTaskId = 0;\r\n\r\n  constructor(callback: TaskCallback, priority: TaskPriority, forceAsync: boolean) {\r\n    this.id = ++Task.nextTaskId;\r\n    this.callback = callback;\r\n    this.priority = priority;\r\n    this.forceAsync = forceAsync;\r\n  }\r\n\r\n  getPriority() {\r\n    return this.priority;\r\n  }\r\n\r\n  getForceAsync() {\r\n    return this.forceAsync;\r\n  }\r\n\r\n  setIsTransition(value: boolean) {\r\n    this.isTransition = value;\r\n  }\r\n\r\n  getIsTransition() {\r\n    return this.isTransition;\r\n  }\r\n\r\n  run() {\r\n    this.callback(this.taskRestorer);\r\n    this.taskRestorer = null;\r\n  }\r\n\r\n  pending(value: boolean) {\r\n    this.isTransition && this.pendingSetter && this.pendingSetter(value);\r\n  }\r\n\r\n  markAsPending() {\r\n    this.isPending = true;\r\n  }\r\n\r\n  canPending() {\r\n    return !this.isPending && detectIsFunction(this.pendingSetter);\r\n  }\r\n\r\n  markAsUnnecessary() {\r\n    this.isUnnecessary = true;\r\n  }\r\n\r\n  getIsUnnecessary() {\r\n    return this.isUnnecessary;\r\n  }\r\n\r\n  setTaskRestorer(fn: TaskRestorer) {\r\n    this.taskRestorer = fn;\r\n  }\r\n\r\n  setLocationCreator(fn: LocationCreator) {\r\n    this.locationCreator = fn;\r\n  }\r\n\r\n  createLocation() {\r\n    return this.locationCreator();\r\n  }\r\n\r\n  setPendingSetter(fn: SetPendingStatus) {\r\n    this.pendingSetter = fn;\r\n  }\r\n\r\n  static detectHasRelatedUpdate(loc: string, tasks: Array<Task>, deep = false) {\r\n    const [$loc] = loc.split(HOOK_DELIMETER);\r\n\r\n    return tasks.some(x => {\r\n      const $$loc = x.createLocation();\r\n      const has = $$loc === loc || (deep && $$loc.length > loc.length && $$loc.indexOf($loc) !== -1);\r\n\r\n      return has;\r\n    });\r\n  }\r\n}\r\n\r\nconst createRootLocation: LocationCreator = () => ROOT;\r\n\r\ntype PortEvent = 'message';\r\ntype PortListener = (value: unknown) => void;\r\n\r\nexport type RestoreOptions = {\r\n  fiber: Fiber;\r\n  setValue?: () => void;\r\n  resetValue?: () => void;\r\n};\r\n\r\nexport type ScheduleCallbackOptions = {\r\n  priority?: TaskPriority;\r\n  forceAsync?: boolean;\r\n  isTransition?: boolean;\r\n  createLocation?: () => string;\r\n  setPendingStatus?: SetPendingStatus;\r\n  onCompleted?: () => void;\r\n};\r\n\r\nconst scheduler = new Scheduler();\r\n\r\nexport { scheduler };\r\n","import { type ScheduleCallbackOptions, scheduler } from '../scheduler';\r\nimport { type UpdateChanger, createUpdate } from '../workloop';\r\nimport { getRootId, $$scope } from '../scope';\r\nimport { TaskPriority } from '../constants';\r\nimport { addBatch } from '../batch';\r\nimport { detectIsFunction } from '../utils';\r\nimport { createHookLocation } from '../walk';\r\n\r\nexport type UpdateOptions = UpdateChanger;\r\n\r\nfunction useUpdate() {\r\n  const rootId = getRootId();\r\n  const fiber = $$scope().getCursorFiber();\r\n  const hook = fiber.hook; // !\r\n  const { idx } = hook;\r\n  const update = (createChanger?: () => UpdateChanger) => {\r\n    const $scope = $$scope();\r\n    if ($scope.getIsInsertionEffectsZone()) return;\r\n    const { owner } = hook;\r\n    const hasChanger = detectIsFunction(createChanger);\r\n    const isTransition = $scope.getIsTransitionZone();\r\n    const isBatch = $scope.getIsBatchZone();\r\n    const isEvent = $scope.getIsEventZone();\r\n    const priority = isTransition ? TaskPriority.LOW : isEvent ? TaskPriority.HIGH : TaskPriority.NORMAL; // !\r\n    const forceAsync = isTransition;\r\n    const setPendingStatus = $scope.getPendingStatusSetter();\r\n    const callback = createUpdate({\r\n      rootId,\r\n      hook,\r\n      isTransition,\r\n      createChanger: hasChanger ? createChanger : undefined,\r\n    });\r\n    const createLocation = () => createHookLocation(rootId, idx, owner);\r\n    const callbackOptions: ScheduleCallbackOptions = {\r\n      priority,\r\n      forceAsync,\r\n      isTransition,\r\n      createLocation,\r\n      setPendingStatus,\r\n    };\r\n\r\n    if (isBatch) {\r\n      addBatch(\r\n        owner,\r\n        () => scheduler.schedule(callback, callbackOptions),\r\n        () => hasChanger && createChanger().setValue(),\r\n      );\r\n    } else {\r\n      scheduler.schedule(callback, callbackOptions);\r\n    }\r\n  };\r\n\r\n  return update;\r\n}\r\n\r\nexport { useUpdate };\r\n","import { $$scope } from '../scope';\r\nimport { type Fiber } from '../fiber';\r\nimport { type Callback } from '../shared';\r\n\r\nfunction batch(callback: () => void) {\r\n  const $scope = $$scope();\r\n\r\n  $scope.setIsBatchZone(true);\r\n  callback();\r\n  $scope.setIsBatchZone(false);\r\n}\r\n\r\nfunction addBatch(fiber: Fiber, callback: Callback, change: Callback) {\r\n  const $scope = $$scope();\r\n\r\n  if ($scope.getIsTransitionZone()) {\r\n    callback();\r\n  } else {\r\n    const batch = fiber.batch || { timer: null, changes: [] };\r\n\r\n    fiber.batch = batch;\r\n    batch.changes.push(change);\r\n    batch.timer && clearTimeout(batch.timer);\r\n    batch.timer = setTimeout(() => {\r\n      batch.changes.splice(-1);\r\n      batch.changes.forEach(x => x());\r\n      fiber.batch = null;\r\n      callback();\r\n    });\r\n  }\r\n}\r\n\r\nexport { batch, addBatch };\r\n","import { detectIsFunction } from '../utils';\r\nimport { type UpdateOptions, useUpdate } from '../use-update';\r\nimport { useMemo } from '../use-memo';\r\nimport { $$scope } from '../scope';\r\nimport { useCallback } from '../use-callback';\r\n\r\ntype Value<T> = T | ((prevValue: T) => T);\r\n\r\nfunction useState<T = unknown>(initialValue: T | (() => T)): [T, (value: Value<T>) => void] {\r\n  const update = useUpdate();\r\n  const scope = useMemo(\r\n    () => ({\r\n      value: detectIsFunction(initialValue) ? initialValue() : initialValue,\r\n    }),\r\n    [],\r\n  );\r\n  const setState = useCallback((sourceValue: Value<T>) => {\r\n    const $scope = $$scope();\r\n    const isBatch = $scope.getIsBatchZone();\r\n    const create = (): UpdateOptions => {\r\n      const prevValue = scope.value;\r\n      const newValue = detectIsFunction(sourceValue) ? sourceValue(prevValue) : sourceValue;\r\n      const shouldUpdate = () => isBatch || !Object.is(prevValue, newValue);\r\n      const setValue = () => (scope.value = newValue);\r\n      const resetValue = () => (scope.value = prevValue);\r\n\r\n      return { shouldUpdate, setValue, resetValue };\r\n    };\r\n\r\n    update(create);\r\n  }, []);\r\n\r\n  return [scope.value, setState];\r\n}\r\n\r\nexport { useState };\r\n","import { useMemo } from '../use-memo';\r\n\r\nfunction useCallback<T = Function>(callback: T, deps: Array<any>): T {\r\n  const value = useMemo(() => callback, deps);\r\n\r\n  return value;\r\n}\r\n\r\nexport { useCallback };\r\n","import { detectIsObject, detectIsNull, detectIsFunction } from '../utils';\r\nimport type { Component, ComponentFactory } from '../component';\r\nimport type { RefProps, KeyProps, FlagProps } from '../shared';\r\nimport { useMemo } from '../use-memo';\r\n\r\nfunction forwardRef<P extends object, R>(\r\n  component: ComponentFactory<P, R>,\r\n): ComponentFactory<P & RefProps<R> & KeyProps & FlagProps, R> {\r\n  type Props = P & RefProps<R>;\r\n\r\n  return (props: Props) => {\r\n    const { ref, ...rest } = (props || {}) as Props;\r\n\r\n    return component(rest as P, ref) as Component<P, R>;\r\n  };\r\n}\r\n\r\nfunction detectIsMutableRef(ref: unknown): ref is MutableRef {\r\n  if (!detectIsObject(ref) || detectIsNull(ref)) return false;\r\n  const mutableRef = ref as MutableRef;\r\n\r\n  for (const key in mutableRef) {\r\n    if (key === 'current' && mutableRef.hasOwnProperty(key)) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nfunction applyRef<T>(ref: Ref<T>, current: T) {\r\n  if (detectIsFunction(ref)) {\r\n    ref(current);\r\n  } else if (detectIsMutableRef(ref)) {\r\n    ref.current = current;\r\n  }\r\n}\r\n\r\nfunction useRef<T>(initialValue: T = null): MutableRef<T> {\r\n  const ref = useMemo(() => ({ current: initialValue }), []) as MutableRef<T>;\r\n\r\n  return ref;\r\n}\r\n\r\nexport type MutableRef<T = unknown> = {\r\n  current: T;\r\n};\r\n\r\nexport type FunctionRef<T = unknown> = (ref: T) => void;\r\n\r\nexport type Ref<T = unknown> = MutableRef<T> | FunctionRef<T>;\r\n\r\nexport { forwardRef, detectIsMutableRef, applyRef, useRef };\r\n","import { detectIsString, detectIsFunction } from '../utils';\r\nimport { type TagVirtualNodeFactory, type ViewOptions, View } from '../view';\r\nimport { type ComponentFactory } from '../component';\r\n\r\nfunction createElement(\r\n  element: string | Function,\r\n  props: object,\r\n  ...slot: Array<any>\r\n): ComponentFactory | TagVirtualNodeFactory | null {\r\n  if (detectIsString(element)) {\r\n    const options = (props || {}) as ViewOptions;\r\n\r\n    options.as = element;\r\n    options.slot = slot;\r\n\r\n    return View(options);\r\n  }\r\n\r\n  if (detectIsFunction(element)) {\r\n    const options = (props || {}) as { slot: unknown };\r\n\r\n    options.slot = slot.length === 1 ? slot[0] : slot;\r\n\r\n    return element(options);\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nexport { createElement, createElement as h };\r\n","import { type DarkElement, type Fiber, component, useMemo, $$scope, detectIsComponent } from '@dark-engine/core';\r\n\r\nimport type { TagNativeElement } from '../native-element';\r\n\r\nconst $$portal = Symbol('portal');\r\n\r\nfunction createPortal(slot: DarkElement, container: TagNativeElement) {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    if (!(container instanceof Element)) {\r\n      throw new Error(`[Dark]: createPortal receives only Element as container!`);\r\n    }\r\n  }\r\n\r\n  return Portal({ container, slot });\r\n}\r\n\r\ntype PortalProps = {\r\n  container: TagNativeElement;\r\n  slot: DarkElement;\r\n};\r\n\r\nconst Portal = component<PortalProps>(\r\n  props => {\r\n    const element = props.container;\r\n    const fiber = $$scope().getCursorFiber();\r\n\r\n    useMemo(() => (element.innerHTML = ''), []);\r\n\r\n    fiber.element = element;\r\n    props.container = null;\r\n\r\n    return props.slot;\r\n  },\r\n  { token: $$portal },\r\n);\r\n\r\nconst detectIsPortal = (instance: unknown) => detectIsComponent(instance) && instance.token === $$portal;\r\n\r\nconst getPortalContainer = (fiber: Fiber<TagNativeElement>): TagNativeElement | null =>\r\n  detectIsPortal(fiber.inst) ? fiber.element : null;\r\n\r\nfunction unmountPortal(fiber: Fiber<TagNativeElement>) {\r\n  const element = getPortalContainer(fiber);\r\n\r\n  element && (element.innerHTML = '');\r\n}\r\n\r\nexport { createPortal, unmountPortal, detectIsPortal };\r\n","import { detectIsFunction, $$scope, detectIsArray } from '@dark-engine/core';\r\n\r\nimport type { TagNativeElement } from '../native-element';\r\n\r\ntype BrowserEventConstructor = (type: string, event: Event) => void;\r\n\r\nclass SyntheticEvent<E extends Event, T = TagNativeElement> {\r\n  public type = '';\r\n  public sourceEvent: E = null;\r\n  public target: T = null;\r\n  private propagation = true;\r\n\r\n  constructor(options: Pick<SyntheticEvent<E, T>, 'sourceEvent' | 'target'>) {\r\n    this.type = options.sourceEvent.type;\r\n    this.sourceEvent = options.sourceEvent;\r\n    this.target = options.target;\r\n  }\r\n\r\n  public stopPropagation() {\r\n    this.propagation = false;\r\n    this.sourceEvent.stopPropagation();\r\n  }\r\n\r\n  public preventDefault() {\r\n    this.sourceEvent.preventDefault();\r\n  }\r\n\r\n  public getPropagation() {\r\n    return this.propagation;\r\n  }\r\n}\r\n\r\nfunction delegateEvent(\r\n  target: Element,\r\n  eventName: string,\r\n  handler: (e: Event) => void | [fn: () => void, ...args: Array<any>],\r\n) {\r\n  const $scope = $$scope();\r\n  const eventsMap = $scope.getEvents();\r\n  const handlersMap = eventsMap.get(eventName);\r\n  const $handler = detectIsArray(handler) ? (e: Event) => handler[0](...handler.slice(1), e) : handler;\r\n\r\n  if (!handlersMap) {\r\n    const rootHandler = (event: Event) => {\r\n      const handler = eventsMap.get(eventName).get(event.target);\r\n      const target = event.target as TagNativeElement;\r\n      let $event: SyntheticEvent<Event> = null;\r\n\r\n      if (detectIsFunction(handler)) {\r\n        $event = new SyntheticEvent({ sourceEvent: event, target });\r\n\r\n        $scope.setIsEventZone(true);\r\n        handler($event);\r\n        $scope.setIsEventZone(false);\r\n      }\r\n\r\n      if (target.parentElement) {\r\n        const shouldPropagate = $event ? $event.getPropagation() : true;\r\n\r\n        if (shouldPropagate) {\r\n          const constructor = event.constructor as BrowserEventConstructor;\r\n\r\n          target.parentElement.dispatchEvent(new constructor(event.type, event));\r\n        }\r\n      }\r\n    };\r\n\r\n    eventsMap.set(eventName, new WeakMap([[target, $handler]]));\r\n    document.addEventListener(eventName, rootHandler, true);\r\n    $scope.addEventUnsubscriber(() => document.removeEventListener(eventName, rootHandler, true));\r\n  } else {\r\n    handlersMap.set(target, $handler);\r\n  }\r\n}\r\n\r\nconst detectIsEvent = (attrName: string) => attrName.startsWith('on');\r\n\r\nconst getEventName = (attrName: string) => attrName.slice(2, attrName.length).toLowerCase();\r\n\r\nexport { SyntheticEvent, delegateEvent, detectIsEvent, getEventName };\r\n","export const VERSION = '0.25.1';\r\nexport const STYLE_ATTR = 'style';\r\nexport const CLASS_ATTR = 'class';\r\nexport const CLASS_NAME_ATTR = 'className';\r\nexport const EXCLUDE_ATTR_MARK = '$';\r\n","import {\r\n  type Fiber,\r\n  type VirtualNode,\r\n  type TagVirtualNode,\r\n  type TextVirtualNode,\r\n  type CommentVirtualNode,\r\n  type PlainVirtualNode,\r\n  type Callback,\r\n  REF_ATTR,\r\n  ATTR_BLACK_LIST,\r\n  CREATE_EFFECT_TAG,\r\n  UPDATE_EFFECT_TAG,\r\n  DELETE_EFFECT_TAG,\r\n  SKIP_EFFECT_TAG,\r\n  MOVE_MASK,\r\n  FLUSH_MASK,\r\n  SHADOW_MASK,\r\n  detectIsUndefined,\r\n  detectIsBoolean,\r\n  detectIsObject,\r\n  NodeType,\r\n  detectIsTagVirtualNode,\r\n  detectIsTextVirtualNode,\r\n  detectIsPlainVirtualNode,\r\n  getFiberWithElement,\r\n  collectElements,\r\n  walk,\r\n  dummyFn,\r\n  $$scope,\r\n  applyRef,\r\n} from '@dark-engine/core';\r\n\r\nimport { detectIsPortal } from '../portal';\r\nimport { delegateEvent, detectIsEvent, getEventName } from '../events';\r\nimport { STYLE_ATTR, CLASS_ATTR, CLASS_NAME_ATTR, EXCLUDE_ATTR_MARK } from '../constants';\r\nimport type {\r\n  NativeElement,\r\n  TagNativeElement,\r\n  TextNativeElement,\r\n  CommentNativeElement,\r\n  NativeNode,\r\n  AttributeValue,\r\n} from '../native-element';\r\n\r\nlet moves: Array<Callback> = [];\r\nlet patches: Array<Callback> = [];\r\nlet trackUpdate: (nativeElement: NativeElement) => void = null;\r\nconst svgTagNames = new Set([\r\n  'svg',\r\n  'animate',\r\n  'animateMotion',\r\n  'animateTransform',\r\n  'circle',\r\n  'clipPath',\r\n  'defs',\r\n  'desc',\r\n  'ellipse',\r\n  'feBlend',\r\n  'feColorMatrix',\r\n  'feComponentTransfer',\r\n  'feComposite',\r\n  'feConvolveMatrix',\r\n  'feDiffuseLighting',\r\n  'feDisplacementMap',\r\n  'feDistantLight',\r\n  'feDropShadow',\r\n  'feFlood',\r\n  'feFuncA',\r\n  'feFuncB',\r\n  'feFuncG',\r\n  'feFuncR',\r\n  'feGaussianBlur',\r\n  'feImage',\r\n  'feMerge',\r\n  'feMergeNode',\r\n  'feMorphology',\r\n  'feOffset',\r\n  'fePointLight',\r\n  'feSpecularLighting',\r\n  'feSpotLight',\r\n  'feTile',\r\n  'feTurbulence',\r\n  'filter',\r\n  'foreignObject',\r\n  'g',\r\n  'image',\r\n  'line',\r\n  'linearGradient',\r\n  'marker',\r\n  'mask',\r\n  'metadata',\r\n  'mpath',\r\n  'path',\r\n  'pattern',\r\n  'polygon',\r\n  'polyline',\r\n  'radialGradient',\r\n  'rect',\r\n  'stop',\r\n  'switch',\r\n  'symbol',\r\n  'text',\r\n  'textPath',\r\n  'tspan',\r\n  'use',\r\n  'view',\r\n]);\r\nconst voidTagNames = new Set([\r\n  'area',\r\n  'base',\r\n  'br',\r\n  'col',\r\n  'embed',\r\n  'hr',\r\n  'img',\r\n  'input',\r\n  'link',\r\n  'meta',\r\n  'param',\r\n  'source',\r\n  'track',\r\n  'wbr',\r\n]);\r\n\r\nconst createNativeElementMap = {\r\n  [NodeType.TAG]: (vNode: VirtualNode): TagNativeElement => {\r\n    const tagNode = vNode as TagVirtualNode;\r\n    const name = tagNode.name;\r\n\r\n    return detectIsSvgElement(name)\r\n      ? document.createElementNS('http://www.w3.org/2000/svg', name)\r\n      : document.createElement(name);\r\n  },\r\n  [NodeType.TEXT]: (vNode: VirtualNode): TextNativeElement => {\r\n    return document.createTextNode((vNode as TextVirtualNode).value);\r\n  },\r\n  [NodeType.COMMENT]: (vNode: VirtualNode): CommentNativeElement => {\r\n    return document.createComment((vNode as CommentVirtualNode).value);\r\n  },\r\n};\r\n\r\nfunction createNativeElement(node: VirtualNode): NativeElement {\r\n  return createNativeElementMap[node.type](node);\r\n}\r\n\r\nfunction detectIsSvgElement(name: string) {\r\n  return svgTagNames.has(name);\r\n}\r\n\r\nfunction detectIsVoidElement(name: string) {\r\n  return voidTagNames.has(name);\r\n}\r\n\r\nfunction setObjectStyle(element: TagNativeElement, style: object) {\r\n  const keys = Object.keys(style);\r\n\r\n  for (const key of keys) {\r\n    element.style.setProperty(key, String(style[key]));\r\n  }\r\n}\r\n\r\nfunction addAttributes(element: NativeElement, node: TagVirtualNode, isHydrateZone: boolean) {\r\n  const attrNames = Object.keys(node.attrs);\r\n  const tagElement = element as TagNativeElement;\r\n\r\n  for (const attrName of attrNames) {\r\n    const attrValue = node.attrs[attrName];\r\n\r\n    if (attrName[0] === EXCLUDE_ATTR_MARK) continue;\r\n\r\n    if (attrName === REF_ATTR) {\r\n      applyRef(attrValue, element);\r\n      continue;\r\n    }\r\n\r\n    if (attrName === CLASS_ATTR || attrName === CLASS_NAME_ATTR) {\r\n      toggleAttribute(tagElement, CLASS_ATTR, attrValue);\r\n      continue;\r\n    }\r\n\r\n    if (attrName === STYLE_ATTR && attrValue && detectIsObject(attrValue)) {\r\n      setObjectStyle(tagElement, attrValue);\r\n      continue;\r\n    }\r\n\r\n    if (detectIsEvent(attrName)) {\r\n      delegateEvent(tagElement, getEventName(attrName), attrValue);\r\n    } else if (!isHydrateZone && !detectIsUndefined(attrValue) && !ATTR_BLACK_LIST[attrName]) {\r\n      const stop = patchProperties({\r\n        tagName: node.name,\r\n        element: tagElement,\r\n        attrValue,\r\n        attrName,\r\n      });\r\n\r\n      !stop && tagElement.setAttribute(attrName, attrValue);\r\n    }\r\n  }\r\n}\r\n\r\nfunction updateAttributes(element: NativeElement, prevNode: TagVirtualNode, nextNode: TagVirtualNode) {\r\n  const attrNames = getAttributeNames(prevNode, nextNode);\r\n  const tagElement = element as TagNativeElement;\r\n\r\n  for (const attrName of attrNames) {\r\n    const prevAttrValue = prevNode.attrs[attrName];\r\n    const nextAttrValue = nextNode.attrs[attrName];\r\n\r\n    if (attrName[0] === EXCLUDE_ATTR_MARK) continue;\r\n\r\n    if (attrName === REF_ATTR) {\r\n      applyRef(prevAttrValue, element);\r\n      continue;\r\n    }\r\n\r\n    if ((attrName === CLASS_ATTR || attrName === CLASS_NAME_ATTR) && prevAttrValue !== nextAttrValue) {\r\n      toggleAttribute(tagElement, CLASS_ATTR, nextAttrValue);\r\n      continue;\r\n    }\r\n\r\n    if (attrName === STYLE_ATTR && nextAttrValue && prevAttrValue !== nextAttrValue && detectIsObject(nextAttrValue)) {\r\n      setObjectStyle(tagElement, nextAttrValue);\r\n      continue;\r\n    }\r\n\r\n    if (!detectIsUndefined(nextAttrValue)) {\r\n      if (detectIsEvent(attrName)) {\r\n        prevAttrValue !== nextAttrValue && delegateEvent(tagElement, getEventName(attrName), nextAttrValue);\r\n      } else if (!ATTR_BLACK_LIST[attrName] && prevAttrValue !== nextAttrValue) {\r\n        const stop = patchProperties({\r\n          tagName: nextNode.name,\r\n          element: tagElement,\r\n          attrValue: nextAttrValue,\r\n          attrName,\r\n        });\r\n\r\n        !stop && tagElement.setAttribute(attrName, nextAttrValue);\r\n      }\r\n    } else {\r\n      tagElement.removeAttribute(attrName);\r\n    }\r\n  }\r\n}\r\n\r\nfunction toggleAttribute(element: TagNativeElement, name: string, value: string) {\r\n  value ? element.setAttribute(name, value) : element.removeAttribute(name);\r\n}\r\n\r\nfunction getAttributeNames(prevNode: TagVirtualNode, nextNode: TagVirtualNode) {\r\n  const attrNames = new Set<string>();\r\n  const prevAttrs = Object.keys(prevNode.attrs);\r\n  const nextAttrs = Object.keys(nextNode.attrs);\r\n  const size = Math.max(prevAttrs.length, nextAttrs.length);\r\n\r\n  for (let i = 0; i < size; i++) {\r\n    attrNames.add(prevAttrs[i] || nextAttrs[i]);\r\n  }\r\n\r\n  return attrNames;\r\n}\r\n\r\ntype PatchPropertiesOptions = {\r\n  tagName: string;\r\n  element: TagNativeElement;\r\n  attrName: string;\r\n  attrValue: AttributeValue;\r\n};\r\n\r\nfunction patchProperties(options: PatchPropertiesOptions): boolean {\r\n  const { tagName, element, attrName, attrValue } = options;\r\n  const fn = patchPropertiesSpecialCasesMap[tagName];\r\n  let stop = fn ? fn(element, attrName, attrValue) : false;\r\n\r\n  if (canSetProperty(element, attrName)) {\r\n    element[attrName] = attrValue;\r\n  }\r\n\r\n  if (!stop && detectIsBoolean(attrValue)) {\r\n    stop = !attrName.includes('-');\r\n  }\r\n\r\n  return stop;\r\n}\r\n\r\nfunction canSetProperty(element: TagNativeElement, key: string) {\r\n  const prototype = Object.getPrototypeOf(element);\r\n  const descriptor = Object.getOwnPropertyDescriptor(prototype, key);\r\n\r\n  return Boolean(descriptor?.set);\r\n}\r\n\r\nconst patchPropertiesSpecialCasesMap: Record<\r\n  string,\r\n  (element: NativeElement, attrName: string, attrValue: AttributeValue) => boolean\r\n> = {\r\n  input: (element: HTMLInputElement, attrName: string, attrValue: AttributeValue) => {\r\n    if (attrName === 'value') {\r\n      patches.push(() => {\r\n        detectIsBoolean(attrValue) ? (element.checked = attrValue) : (element.value = String(attrValue));\r\n      });\r\n    } else if (attrName === 'autoFocus') {\r\n      patches.push(() => {\r\n        element.autofocus = Boolean(attrValue);\r\n        element.autofocus && element.focus();\r\n      });\r\n    }\r\n\r\n    return false;\r\n  },\r\n  textarea: (element: HTMLTextAreaElement, attrName: string, attrValue: AttributeValue) => {\r\n    if (attrName === 'value') {\r\n      element.innerText = String(attrValue);\r\n\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  },\r\n};\r\n\r\nfunction commitCreation(fiber: Fiber<NativeElement>) {\r\n  const parentFiber = getFiberWithElement<NativeElement, TagNativeElement>(fiber.parent);\r\n  const parentElement = parentFiber.element;\r\n  const childNodes = parentElement.childNodes;\r\n  const isHydrateZone = $$scope().getIsHydrateZone();\r\n\r\n  if (isHydrateZone) {\r\n    const nativeElement = childNodes[fiber.eidx] as NativeElement;\r\n\r\n    if (\r\n      detectIsTextVirtualNode(fiber.inst) &&\r\n      nativeElement instanceof Text &&\r\n      fiber.inst.value.length !== nativeElement.length\r\n    ) {\r\n      nativeElement.splitText(fiber.inst.value.length);\r\n    }\r\n\r\n    fiber.element = nativeElement;\r\n  } else {\r\n    if (!(fiber.mask & SHADOW_MASK)) {\r\n      if (childNodes.length === 0 || fiber.eidx > childNodes.length - 1) {\r\n        !detectIsVoidElement((parentFiber.inst as TagVirtualNode).name) &&\r\n          appendNativeElement(fiber.element, parentElement);\r\n      } else {\r\n        insertNativeElement(fiber.element, parentElement.childNodes[fiber.eidx], parentElement);\r\n      }\r\n    }\r\n  }\r\n\r\n  detectIsTagVirtualNode(fiber.inst) && addAttributes(fiber.element, fiber.inst, isHydrateZone);\r\n}\r\n\r\nfunction commitUpdate(fiber: Fiber<NativeElement>) {\r\n  const element = fiber.element;\r\n  const prevInstance = fiber.alt.inst as VirtualNode;\r\n  const nextInstance = fiber.inst as VirtualNode;\r\n\r\n  detectIsPlainVirtualNode(nextInstance)\r\n    ? (prevInstance as PlainVirtualNode).value !== nextInstance.value && (element.textContent = nextInstance.value)\r\n    : updateAttributes(element, prevInstance as TagVirtualNode, nextInstance as TagVirtualNode);\r\n}\r\n\r\nfunction commitDeletion(fiber: Fiber<NativeElement>) {\r\n  const parentFiber = getFiberWithElement<NativeElement, TagNativeElement>(fiber.parent);\r\n\r\n  if (fiber.mask & FLUSH_MASK) {\r\n    parentFiber.element.innerHTML && (parentFiber.element.innerHTML = '');\r\n    return;\r\n  }\r\n\r\n  walk<NativeElement>(fiber, (fiber, skip) => {\r\n    if (fiber.element) {\r\n      !detectIsPortal(fiber.inst) &&\r\n        canRemoveNativeElement(fiber.element, parentFiber.element) &&\r\n        removeNativeElement(fiber.element, parentFiber.element);\r\n      return skip();\r\n    }\r\n  });\r\n}\r\n\r\nfunction move(fiber: Fiber<NativeElement>) {\r\n  const sourceNodes = collectElements(fiber, x => x.element);\r\n  const sourceNode = sourceNodes[0];\r\n  const parentElement = sourceNode.parentElement;\r\n  const sourceFragment = new DocumentFragment();\r\n  const elementIdx = fiber.eidx;\r\n  let idx = 0;\r\n  const move = () => {\r\n    for (let i = 1; i < sourceNodes.length; i++) {\r\n      removeNativeElement(parentElement.childNodes[elementIdx + 1], parentElement);\r\n    }\r\n\r\n    replaceNativeElement(sourceFragment, parentElement.childNodes[elementIdx], parentElement);\r\n  };\r\n\r\n  for (const node of sourceNodes) {\r\n    insertNativeElement(document.createComment(`${elementIdx}:${idx}`), node, parentElement);\r\n    appendNativeElement(node, sourceFragment);\r\n    idx++;\r\n  }\r\n\r\n  moves.push(move);\r\n}\r\n\r\nconst commitMap: Record<string, (fiber: Fiber<NativeElement>) => void> = {\r\n  [CREATE_EFFECT_TAG]: (fiber: Fiber<NativeElement>) => {\r\n    if (!fiber.element || detectIsPortal(fiber.inst)) return;\r\n    trackUpdate && trackUpdate(fiber.element);\r\n    commitCreation(fiber);\r\n  },\r\n  [UPDATE_EFFECT_TAG]: (fiber: Fiber<NativeElement>) => {\r\n    fiber.mask & MOVE_MASK && (move(fiber), (fiber.mask &= ~MOVE_MASK));\r\n    if (!fiber.element || detectIsPortal(fiber.inst)) return;\r\n    trackUpdate && trackUpdate(fiber.element);\r\n    commitUpdate(fiber);\r\n  },\r\n  [DELETE_EFFECT_TAG]: commitDeletion,\r\n  [SKIP_EFFECT_TAG]: dummyFn,\r\n};\r\n\r\nfunction finishCommit() {\r\n  moves.forEach(x => x());\r\n  patches.forEach(x => x());\r\n  moves = [];\r\n  patches = [];\r\n}\r\n\r\nconst commit = (fiber: Fiber<NativeElement>) => commitMap[fiber.tag](fiber);\r\n\r\nconst setTrackUpdate = (fn: typeof trackUpdate) => (trackUpdate = fn);\r\n\r\nconst appendNativeElement = (element: NativeNode, parent: NativeNode) => parent.appendChild(element);\r\n\r\nconst insertNativeElement = (element: NativeNode, sibling: NativeNode, parent: TagNativeElement) =>\r\n  parent.insertBefore(element, sibling);\r\n\r\nconst insertNativeElementByIndex = (element: NativeNode, idx: number, parent: TagNativeElement) =>\r\n  parent.insertBefore(element, parent.childNodes[idx]);\r\n\r\nconst replaceNativeElement = (element: NativeNode, candidate: NativeNode, parent: TagNativeElement) =>\r\n  parent.replaceChild(element, candidate);\r\n\r\nconst canRemoveNativeElement = (element: NativeNode, parent: NativeNode) => element.parentElement === parent;\r\n\r\nconst removeNativeElement = (element: NativeNode, parent: TagNativeElement) => parent.removeChild(element);\r\n\r\nexport { createNativeElement, commit, finishCommit, setTrackUpdate, insertNativeElementByIndex };\r\n","import {\r\n  type DarkElement,\r\n  type Callback,\r\n  ROOT,\r\n  Fiber,\r\n  CREATE_EFFECT_TAG,\r\n  UPDATE_EFFECT_TAG,\r\n  platform,\r\n  flatten,\r\n  detectIsUndefined,\r\n  detectIsFunction,\r\n  trueFn,\r\n  TagVirtualNode,\r\n  TaskPriority,\r\n  createReplacer,\r\n  setRootId,\r\n  $$scope,\r\n  dummyFn,\r\n  scheduler,\r\n} from '@dark-engine/core';\r\n\r\nimport { createNativeElement, insertNativeElementByIndex, commit, finishCommit } from '../dom';\r\nimport { detectIsPortal, unmountPortal } from '../portal';\r\nimport type { TagNativeElement } from '../native-element';\r\n\r\nconst roots = new Map<Element, number>();\r\nconst raf = requestAnimationFrame.bind(window);\r\nconst caf = cancelAnimationFrame.bind(window);\r\nconst spawn = raf;\r\nlet isInjected = false;\r\n\r\nfunction inject() {\r\n  platform.createElement = createNativeElement as typeof platform.createElement;\r\n  platform.insertElement = insertNativeElementByIndex as typeof platform.insertElement;\r\n  platform.raf = raf;\r\n  platform.caf = caf;\r\n  platform.spawn = spawn;\r\n  platform.commit = commit;\r\n  platform.finishCommit = finishCommit;\r\n  platform.detectIsDynamic = trueFn;\r\n  platform.detectIsPortal = detectIsPortal;\r\n  platform.unmountPortal = unmountPortal;\r\n  platform.chunk = dummyFn;\r\n  isInjected = true;\r\n}\r\n\r\nfunction render(element: DarkElement, container: TagNativeElement, hydrate?: Callback) {\r\n  !isInjected && inject();\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    if (!(container instanceof Element)) {\r\n      throw new Error(`[Dark]: render receives only Element as container!`);\r\n    }\r\n  }\r\n\r\n  const isMounted = !detectIsUndefined(roots.get(container));\r\n  const isHydrate = detectIsFunction(hydrate);\r\n  let rootId: number = null;\r\n\r\n  if (!isMounted) {\r\n    rootId = roots.size;\r\n    roots.set(container, rootId);\r\n    !isHydrate && (container.innerHTML = '');\r\n  } else {\r\n    rootId = roots.get(container);\r\n  }\r\n\r\n  const $scope = $$scope(rootId);\r\n\r\n  // insertion effect can't schedule renders\r\n  if ($scope?.getIsInsertionEffectsZone()) return;\r\n\r\n  const callback = () => {\r\n    setRootId(rootId); // !\r\n    const $scope = $$scope();\r\n    const rootFiber = $scope.getRoot();\r\n    const isUpdate = Boolean(rootFiber);\r\n    const fiber = new Fiber().mutate({\r\n      element: container,\r\n      inst: new TagVirtualNode(ROOT, {}, flatten([element || createReplacer()]) as TagVirtualNode['children']),\r\n      alt: rootFiber,\r\n      tag: isUpdate ? UPDATE_EFFECT_TAG : CREATE_EFFECT_TAG,\r\n    });\r\n\r\n    $scope.resetMount();\r\n    $scope.setWorkInProgress(fiber);\r\n    $scope.setIsHydrateZone(isHydrate);\r\n    $scope.setNextUnitOfWork(fiber);\r\n    isHydrate && hydrate();\r\n  };\r\n\r\n  scheduler.schedule(callback, { priority: TaskPriority.NORMAL });\r\n}\r\n\r\nexport { render, roots, inject };\r\n","import {\r\n  type DarkElement,\r\n  type MutableRef,\r\n  type Ref,\r\n  type Component,\r\n  type StandardComponentProps,\r\n  h,\r\n  Fragment,\r\n  component,\r\n  useEffect,\r\n  useLayoutEffect,\r\n  useMemo,\r\n  useState,\r\n  useRef,\r\n} from '@dark-engine/core';\r\nimport { createRoot } from '@dark-engine/platform-browser';\r\n\r\ntype Item = {\r\n  id: number;\r\n  name: string;\r\n};\r\n\r\nfunction randomize(list: Array<Item>) {\r\n  let currentIndex = list.length;\r\n  let randomIndex: number;\r\n\r\n  while (currentIndex != 0) {\r\n    randomIndex = Math.floor(Math.random() * currentIndex);\r\n    currentIndex--;\r\n\r\n    [list[currentIndex], list[randomIndex]] = [list[randomIndex], list[currentIndex]];\r\n  }\r\n\r\n  return list;\r\n}\r\n\r\nconst shuffle = (count: number) => {\r\n  let nextId = 0;\r\n  const items = Array(count)\r\n    .fill(0)\r\n    .map(() => ({\r\n      id: ++nextId,\r\n      name: `${nextId}`,\r\n    }));\r\n  const list = randomize(items);\r\n\r\n  return list;\r\n};\r\n\r\nconst forceBrowserReflow = () => document.body.clientHeight;\r\n\r\ntype AnimatedListProps<T = any> = {\r\n  items: Array<T>;\r\n  getKey: (x: T) => Key;\r\n  duration?: number;\r\n  slot: (options: AnimatedListSlotOptions<T>) => DarkElement;\r\n};\r\n\r\ntype Key = string | number;\r\n\r\ntype AnimatedListSlotOptions<T> = {\r\n  items: Array<T>;\r\n  containerRef: MutableRef<HTMLElement>;\r\n  itemRef: (idx: number, key: Key) => (ref: HTMLElement) => void;\r\n};\r\n\r\nconst AnimatedList: AnimatedList = component<AnimatedListProps>(({ items: xItems, getKey, duration = 1000, slot }) => {\r\n  const [items, setItems] = useState(xItems);\r\n  const containerRef = useRef<HTMLElement>(null);\r\n  const scope = useMemo<Scope>(\r\n    () => ({\r\n      refs: { indexed: {}, keyed: {} },\r\n      rects: {},\r\n      items,\r\n      timerId: null,\r\n      timerId2: null,\r\n      firstRender: true,\r\n      isTransition: false,\r\n    }),\r\n    [],\r\n  );\r\n\r\n  useEffect(() => {\r\n    const setRects = () => {\r\n      let idx = 0;\r\n\r\n      for (const node of Array.from(containerRef.current.children)) {\r\n        scope.rects[idx] = node.getBoundingClientRect();\r\n        idx++;\r\n      }\r\n    };\r\n\r\n    setRects();\r\n    window.addEventListener('resize', setRects);\r\n\r\n    return () => window.removeEventListener('resize', setRects);\r\n  }, []);\r\n\r\n  useLayoutEffect(() => {\r\n    if (scope.firstRender) return;\r\n    scope.isTransition = true;\r\n    !scope.timerId && addStyles(items, true);\r\n    scope.items = xItems;\r\n    requestAnimationFrame(() => {\r\n      forceBrowserReflow();\r\n      addStyles(xItems, false);\r\n    });\r\n  }, [xItems]);\r\n\r\n  useEffect(() => {\r\n    if (scope.firstRender) return;\r\n    removeStyles(items);\r\n  }, [items]);\r\n\r\n  useEffect(() => {\r\n    scope.firstRender = false;\r\n  }, [items]);\r\n\r\n  const addStyles = (items: Array<unknown>, mount: boolean) => {\r\n    let idx = 0;\r\n\r\n    for (const item of items) {\r\n      const rect = scope.rects[idx];\r\n      const key = getKey(item);\r\n      const ref = scope.refs.keyed[key];\r\n\r\n      ref.style.setProperty('position', 'absolute');\r\n      ref.style.setProperty('width', `${rect.width}px`);\r\n      ref.style.setProperty('height', `${rect.height}px`);\r\n      ref.style.setProperty('transform', `translate(${rect.left}px, ${rect.top}px)`);\r\n\r\n      if (!mount) {\r\n        ref.style.setProperty(\r\n          'transition',\r\n          `transform ${duration}ms ease-in-out, opacity ${duration / 2}ms ease-in-out`,\r\n        );\r\n        ref.style.setProperty('opacity', `0.5`);\r\n      }\r\n\r\n      idx++;\r\n    }\r\n\r\n    !mount && scope.timerId && window.clearTimeout(scope.timerId);\r\n    scope.timerId = window.setTimeout(() => {\r\n      scope.timerId = null;\r\n      setItems(scope.items);\r\n    }, duration);\r\n  };\r\n\r\n  const removeStyles = (items: Array<unknown>) => {\r\n    for (const item of items) {\r\n      const key = getKey(item);\r\n      const ref = scope.refs.keyed[key];\r\n\r\n      ref.style.setProperty('transition', `opacity ${duration / 2}ms ease-in-out`);\r\n      ref.style.setProperty('opacity', `1`);\r\n      ref.style.removeProperty('position');\r\n      ref.style.removeProperty('width');\r\n      ref.style.removeProperty('height');\r\n      ref.style.removeProperty('transform');\r\n    }\r\n\r\n    scope.isTransition = false;\r\n\r\n    scope.timerId2 && window.clearTimeout(scope.timerId2);\r\n    scope.timerId2 = window.setTimeout(() => {\r\n      scope.timerId2 = null;\r\n      if (scope.isTransition) return;\r\n      for (const item of items) {\r\n        const key = getKey(item);\r\n        const ref = scope.refs.keyed[key];\r\n\r\n        ref.removeAttribute('style');\r\n      }\r\n    }, duration / 2);\r\n  };\r\n\r\n  const itemRef = (idx: number, key: Key) => (ref: HTMLElement) => {\r\n    scope.refs.indexed[idx] = ref;\r\n    scope.refs.keyed[key] = ref;\r\n  };\r\n\r\n  return slot({ items, containerRef, itemRef });\r\n});\r\n\r\ntype Scope<T = unknown> = {\r\n  refs: {\r\n    indexed: Record<number, HTMLElement>;\r\n    keyed: Record<number, HTMLElement>;\r\n  };\r\n  rects: Record<number, DOMRect>;\r\n  items: Array<T>;\r\n  timerId: number;\r\n  timerId2: number;\r\n  firstRender: boolean;\r\n  isTransition: boolean;\r\n};\r\n\r\ntype MergedProps<T> = AnimatedListProps<T> & StandardComponentProps;\r\n\r\ntype AnimatedList = <T>(props?: MergedProps<T>, ref?: Ref) => Component<MergedProps<T>>;\r\n\r\n// usage\r\n\r\nconst App = component(() => {\r\n  const [items, setItems] = useState(() => shuffle(100));\r\n\r\n  const handleShuffle = () => {\r\n    setItems(shuffle(items.length));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div class='content'>\r\n        <AnimatedList items={items} getKey={x => x.id} duration={1000}>\r\n          {({ items, containerRef, itemRef }) => {\r\n            return (\r\n              <div ref={containerRef} class='grid'>\r\n                {items.map((x, idx) => {\r\n                  const key = x.id;\r\n\r\n                  return (\r\n                    <div ref={itemRef(idx, key)} key={key} class='grid-item'>\r\n                      <span>{x.name}</span>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            );\r\n          }}\r\n        </AnimatedList>\r\n        <div class='button-layout'>\r\n          <button class='button' onClick={handleShuffle}>\r\n            shuffle\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n});\r\n\r\ncreateRoot(document.getElementById('root')).render(<App />);\r\n","import { type DarkElement, unmountRoot } from '@dark-engine/core';\r\n\r\nimport { render, roots } from '../render';\r\nimport type { TagNativeElement } from '../native-element';\r\n\r\nfunction createRoot(container: TagNativeElement) {\r\n  return {\r\n    render: (element: DarkElement) => render(element, container),\r\n    unmount: () => unmount(container),\r\n  };\r\n}\r\n\r\nfunction unmount(container: TagNativeElement) {\r\n  const rootId = roots.get(container);\r\n\r\n  unmountRoot(rootId, () => {\r\n    roots.delete(container);\r\n    container.innerHTML = '';\r\n  });\r\n}\r\n\r\nexport { createRoot, unmount };\r\n"],"names":["ROOT","REPLACER","KEY_ATTR","REF_ATTR","CREATE_EFFECT_TAG","UPDATE_EFFECT_TAG","SKIP_EFFECT_TAG","MOVE_MASK","TaskPriority","Flag","ATTR_BLACK_LIST","SKIP_SCAN_OPT","MEMO_SLOT_OPT","STATIC_SLOT_OPT","$$inject","Symbol","Component","constructor","type","token","props","ref","shouldUpdate","displayName","children","this","component","options","$token","factory","defaultInject","detectIsComponent","x","detectIsFunction","o","detectIsUndefined","detectIsTextBased","detectIsObject","detectIsBoolean","detectIsArray","Array","isArray","detectIsNull","detectIsEmpty","getTime","Date","now","dummyFn","trueFn","sameFn","flatten","source","transform","length","list","stack","idx","pop","i","push","detectAreDepsDifferent","prevDeps","nextDeps","max","Math","Object","is","createIndexKey","defaultRealisation","Error","platform","createElement","insertElement","raf","caf","spawn","commit","finishCommit","detectIsDynamic","detectIsPortal","unmountPortal","chunk","EventEmitter","subscribers","Map","on","e","fn","has","set","Set","get","add","delete","emit","data","forEach","kill","__getSize","size","Scope","root","wip","cursor","unit","mountDeep","mountLevel","mountNav","events","unsubs","actions","candidates","deletions","cancels","asyncEffects","layoutEffects","insertionEffects","resourceId","resources","defers","setPendingStatus","isLayoutEffectsZone","isInsertionEffectsZone","isUpdateZone","isBatchZone","isHydrateZone","isStreamZone","isTransitionZone","isEventZone","isHot","isDynamic","isServer","emitter","resetActions","getActionsById","id","addActionMap","map","replace","insert","remove","move","stable","addReplaceAction","nextKey","addInsertAction","addRemoveAction","prevKey","addMoveAction","addStableAction","copy","scope","getRoot","setRoot","fiber","getWorkInProgress","setWorkInProgress","getNextUnitOfWork","setNextUnitOfWork","getCursorFiber","setCursorFiber","navToChild","navToSibling","navToParent","navToPrev","getMountIndex","setMountDeep","getMountDeep","value","resetMount","getEvents","addEventUnsubscriber","unsubscribeEvents","getCandidates","addCandidate","resetCandidates","getDeletions","hasDeletion","nextFiber","parent","addDeletion","resetDeletions","addAsyncEffect","resetAsyncEffects","runAsyncEffects","effects","setTimeout","addLayoutEffect","resetLayoutEffects","runLayoutEffects","setIsLayoutEffectsZone","addInsertionEffect","resetInsertionEffects","runInsertionEffects","setIsInsertionEffectsZone","addCancel","applyCancels","resetCancels","getIsLayoutEffectsZone","getIsInsertionEffectsZone","getIsUpdateZone","setIsUpdateZone","getIsBatchZone","setIsBatchZone","getIsHydrateZone","setIsHydrateZone","getIsStreamZone","setIsStreamZone","getIsTransitionZone","setIsTransitionZone","getIsEventZone","setIsEventZone","getIsHot","setIsHot","getPendingStatusSetter","setPendingStatusSetter","flush","getEmitter","defer","getDefers","resetDefers","getResource","setResource","res","getResources","getResourceId","setResourceId","getNextResourceId","runAfterCommit","rootId","scopes","getRootId","setRootId","$$vNode","ATTR_TYPE","VirtualNode","TagVirtualNode","name","attrs","super","NodeType","TAG","TextVirtualNode","TEXT","String","CommentVirtualNode","text","COMMENT","from","detectIsTextVirtualNode","detectIsVirtualNode","vNode","detectIsTagVirtualNode","detectIsCommentVirtualNode","detectIsVirtualNodeFactory","detectIsPlainVirtualNode","createReplacer","getElementKey","inst","hasElementFlag","flag","Boolean","hasComponentFlag","hasVirtualNodeFactoryFlag","hasTagVirtualNodeFlag","getElementType","hasChildrenProp","detectAreSameInstanceTypes","prevInst","nextInst","isComponentFactories","nc","Fiber","hook","provider","cc","cec","eidx","mask","element","tag","child","next","alt","atoms","nextId","mutate","keys","key","markHost","increment","count","force","$scope","wipFiber","stop","setError","error","catch","static","Hook","values","owner","$$memo","defaultShouldUpdate","nextProps","detectIsMemo","instance","walk","onWalk","shouldDeep","shouldStop","skip","getFiberWithElement","$fiber","buildChildNodes","onNode","getKey","buildChildNode","altMap","startEidx","prevIdx","nextIdx","left","right","isFirst","isLast","notifyParents","$$fragment","Fragment","slot","Memo","memo","getValue","p","n","deps","useMemo","state","$value","detectIsElement","$$useEffect","createEffect","useEffect","effect","cleanup","undefined","isInsertionEffect","EffectType","INSERTION","isLayoutEffect","LAYOUT","isAsyncEffect","ASYNC","runEffect","dropEffects","$$useLayoutEffect","useLayoutEffect","dropLayoutEffects","$$useInsertionEffect","useInsertionEffect","dropInsertionEffects","shouldUnmountFiber","INSERTION_EFFECT_HOST_MASK","unmountFiber","_","hasPendingPromise","hasRenderError","workLoop","isAsync","shouldYield","hasMoreWork","performUnitOfWork","scheduler","hasPrimaryTask","fork","unmounts","diff","parentFiber","isRight","sync","err","Promise","finally","isDeepWalking","isStream","hasChildren","$inst","createFiber","getAlternate","share","mountChild","mountSibling","prev","shouldMount","pc","mount","hasSameCount","prevKeys","nextKeys","prevKeysMap","nextKeysMap","keyedFibersMap","usedKeysMap","extractKeys","prevKeyFiber","tryOptStaticSlot","hasMove","hasRemove","hasInsert","hasReplace","detectIsStableMemoTree","tryOptMov","tryOptRem","tryOptMemoSlot","reconcile","isUpdate","setup","detectAreSameComponentTypesWithSameKeys","getHook","fromChild","parentId","isMove","isStable","isComponent","result","promise","all","setNextId","args","console","supportConditional","cancel","$$scope$","cancelTask","setValue","resetValue","assign","replaceScope","$createChanger","MessageChannel","port1","port2","MessagePort","channel","offs","event","callback","off","postMessage","unref","Task","priority","forceAsync","taskRestorer","pendingSetter","nextTaskId","getPriority","getForceAsync","setIsTransition","isTransition","getIsTransition","run","pending","markAsPending","isPending","canPending","markAsUnnecessary","isUnnecessary","getIsUnnecessary","setTaskRestorer","setLocationCreator","locationCreator","createLocation","setPendingSetter","loc","tasks","deep","$loc","split","some","$$loc","indexOf","createRootLocation","queue","HIGH","NORMAL","LOW","deadline","task","scheduledCallback","isMessageLoopRunning","port","performWorkUntilDeadline","bind","reset","schedule","put","execute","high","normal","low","getQueues","hasPrimary","hasLow","detectHasRelatedUpdate","complete","filter","splice","pick","shift","resolve","then","requestCallbackAsync","requestCallback","isBusy","unshift","useUpdate","createChanger","hasChanger","isBatch","isEvent","restore","fromRestore","detectIsFiberAlive","createUpdate","callbackOptions","createHookLocation","change","batch","timer","changes","clearTimeout","addBatch","useState","initialValue","update","setState","sourceValue","prevValue","newValue","applyRef","current","mutableRef","hasOwnProperty","detectIsMutableRef","as","_void","View","$$portal","container","innerHTML","getPortalContainer","SyntheticEvent","sourceEvent","target","propagation","stopPropagation","preventDefault","getPropagation","delegateEvent","eventName","handler","eventsMap","handlersMap","$handler","slice","rootHandler","$event","parentElement","dispatchEvent","WeakMap","document","addEventListener","removeEventListener","detectIsEvent","attrName","startsWith","getEventName","toLowerCase","STYLE_ATTR","CLASS_ATTR","CLASS_NAME_ATTR","moves","patches","svgTagNames","voidTagNames","createNativeElementMap","detectIsSvgElement","createElementNS","createTextNode","createComment","createNativeElement","node","setObjectStyle","style","setProperty","toggleAttribute","setAttribute","removeAttribute","patchProperties","tagName","attrValue","patchPropertiesSpecialCasesMap","prototype","getPrototypeOf","descriptor","getOwnPropertyDescriptor","canSetProperty","includes","input","checked","autofocus","focus","textarea","innerText","commitMap","childNodes","nativeElement","Text","splitText","appendNativeElement","insertNativeElement","attrNames","tagElement","addAttributes","commitCreation","sourceNodes","elements","collectElements","sourceFragment","DocumentFragment","elementIdx","removeNativeElement","replaceNativeElement","prevInstance","nextInstance","textContent","prevNode","nextNode","prevAttrs","nextAttrs","getAttributeNames","prevAttrValue","nextAttrValue","updateAttributes","commitUpdate","canRemoveNativeElement","appendChild","sibling","insertBefore","insertNativeElementByIndex","candidate","replaceChild","removeChild","roots","requestAnimationFrame","window","cancelAnimationFrame","isInjected","shuffle","randomIndex","currentIndex","floor","random","randomize","fill","AnimatedList","items","xItems","duration","setItems","containerRef","useRef","refs","indexed","keyed","rects","timerId","timerId2","firstRender","setRects","getBoundingClientRect","addStyles","body","clientHeight","removeStyles","item","rect","width","height","top","removeProperty","itemRef","App","class","onClick","getElementById","render","hydrate","isMounted","isHydrate","rootFiber","unmount","onCompleted","unmountRoot"],"sourceRoot":""}