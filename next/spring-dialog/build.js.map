{"version":3,"file":"build.js","mappings":"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","sources":["webpack://spring-dialog/../../packages/core/src/constants.ts","webpack://spring-dialog/../../packages/core/src/utils/utils.ts","webpack://spring-dialog/../../packages/core/src/component/component.ts","webpack://spring-dialog/../../packages/core/src/view/view.ts","webpack://spring-dialog/../../packages/core/src/jsx-runtime.ts","webpack://spring-dialog/../../packages/core/src/fragment/fragment.ts","webpack://spring-dialog/../../packages/core/src/emitter/emitter.ts","webpack://spring-dialog/../../packages/core/src/fiber/fiber.ts","webpack://spring-dialog/../../packages/core/src/scope/scope.ts","webpack://spring-dialog/../../packages/core/src/platform/platform.ts","webpack://spring-dialog/../../packages/core/src/internal/internal.ts","webpack://spring-dialog/../../packages/core/src/memo/memo.ts","webpack://spring-dialog/../../packages/core/src/use-memo/use-memo.ts","webpack://spring-dialog/../../packages/core/src/walk/walk.ts","webpack://spring-dialog/../../packages/core/src/scheduler/scheduler.ts","webpack://spring-dialog/../../packages/core/src/start-transition/start-transition.ts","webpack://spring-dialog/../../packages/core/src/use-effect/use-effect.ts","webpack://spring-dialog/../../packages/core/src/use-insertion-effect/use-insertion-effect.ts","webpack://spring-dialog/../../packages/core/src/use-layout-effect/use-layout-effect.ts","webpack://spring-dialog/../../packages/core/src/unmount/unmount.ts","webpack://spring-dialog/../../packages/core/src/workloop/workloop.ts","webpack://spring-dialog/../../packages/core/src/batch/batch.ts","webpack://spring-dialog/../../packages/core/src/use-update/use-update.ts","webpack://spring-dialog/../../packages/core/src/use-state/use-state.ts","webpack://spring-dialog/../../packages/platform-browser/src/constants.ts","webpack://spring-dialog/../../packages/platform-browser/src/utils/utils.ts","webpack://spring-dialog/../../packages/platform-browser/src/events/events.ts","webpack://spring-dialog/../../packages/platform-browser/src/dom/dom.ts","webpack://spring-dialog/../../packages/core/src/ref/ref.ts","webpack://spring-dialog/../../packages/platform-browser/src/render/render.ts","webpack://spring-dialog/../../packages/core/src/use-id/use-id.ts","webpack://spring-dialog/../../packages/styled/src/constants.ts","webpack://spring-dialog/../../packages/styled/src/utils/utils.ts","webpack://spring-dialog/../../packages/styled/src/keyframes/keyframes.ts","webpack://spring-dialog/../../packages/styled/src/tokens/tokens.ts","webpack://spring-dialog/../../packages/core/src/context/context.ts","webpack://spring-dialog/../../packages/styled/src/theme/theme.ts","webpack://spring-dialog/../../packages/styled/src/server/manager.ts","webpack://spring-dialog/../../packages/styled/src/parse/parse.ts","webpack://spring-dialog/../../packages/styled/src/hash/hash.ts","webpack://spring-dialog/../../packages/styled/src/styled/styled.ts","webpack://spring-dialog/../../packages/styled/src/global/global.ts","webpack://spring-dialog/../../packages/platform-browser/src/portal/portal.ts","webpack://spring-dialog/../../packages/animations/src/shared/shared.ts","webpack://spring-dialog/../../packages/animations/src/preset/preset.ts","webpack://spring-dialog/../../packages/core/src/atom/atom.ts","webpack://spring-dialog/../../packages/animations/src/spring/spring.ts","webpack://spring-dialog/../../packages/animations/src/utils/utils.ts","webpack://spring-dialog/../../packages/animations/src/stepper/stepper.ts","webpack://spring-dialog/../../packages/animations/src/controller/controller.ts","webpack://spring-dialog/../../packages/animations/src/state/state.ts","webpack://spring-dialog/../../packages/animations/src/use-transition/use-transition.ts","webpack://spring-dialog/../../packages/animations/src/animated/animated.ts","webpack://spring-dialog/./dialog.tsx","webpack://spring-dialog/./index.tsx","webpack://spring-dialog/../../packages/core/src/use-callback/use-callback.ts","webpack://spring-dialog/../../packages/platform-browser/src/create-root/create-root.tsx"],"sourcesContent":["export const VERSION = '1.4.0';\r\nexport const LIB = '@dark-engine/core';\r\nexport const ROOT = 'dark:root';\r\nexport const REPLACER = 'dark:matter';\r\nexport const INDEX_KEY = 'dark:idx';\r\nexport const KEY_ATTR = 'key';\r\nexport const REF_ATTR = 'ref';\r\nexport const CREATE_EFFECT_TAG = 'C';\r\nexport const UPDATE_EFFECT_TAG = 'U';\r\nexport const DELETE_EFFECT_TAG = 'D';\r\nexport const SKIP_EFFECT_TAG = 'S';\r\nexport const INSERTION_EFFECT_HOST_MASK = 1;\r\nexport const LAYOUT_EFFECT_HOST_MASK = 2;\r\nexport const ASYNC_EFFECT_HOST_MASK = 4;\r\nexport const ATOM_HOST_MASK = 8;\r\nexport const FLUSH_MASK = 16;\r\nexport const MOVE_MASK = 32;\r\nexport const IS_WIP_HOOK_MASK = 1;\r\nexport const IS_PORTAL_HOOK_NASK = 2;\r\nexport const IS_SUSPENSE_HOOK_MASK = 4;\r\nexport const IS_PENDING_HOOK_MASK = 8;\r\nexport const HOOK_DELIMETER = ':';\r\nexport const YIELD_INTERVAL = 6;\r\nexport const STATE_SCRIPT_TYPE = 'text/dark-state';\r\n\r\nexport enum TaskPriority {\r\n  LOW = 0,\r\n  NORMAL = 1,\r\n  HIGH = 2,\r\n}\r\n\r\nexport enum Flag {\r\n  SKIP_SCAN_OPT = '__skipScanOpt',\r\n  MEMO_SLOT_OPT = '__memoSlotOpt',\r\n  STATIC_SLOT_OPT = '__staticSlotOpt',\r\n}\r\n\r\nexport const FLAGS = {\r\n  __skipScanOpt: true,\r\n  __memoSlotOpt: true,\r\n  __staticSlotOpt: true,\r\n};\r\n\r\nexport const ATTR_BLACK_LIST = {\r\n  [KEY_ATTR]: true,\r\n  [REF_ATTR]: true,\r\n  [Flag.SKIP_SCAN_OPT]: true,\r\n  [Flag.MEMO_SLOT_OPT]: true,\r\n  [Flag.STATIC_SLOT_OPT]: true,\r\n};\r\n","import type { NestedArray } from '../shared';\r\nimport { INDEX_KEY, LIB } from '../constants';\r\n\r\nconst detectIsFunction = (o: any): o is Function => typeof o === 'function';\r\n\r\nconst detectIsUndefined = (o: any): o is undefined => typeof o === 'undefined';\r\n\r\nconst detectIsNumber = (o: any): o is number => typeof o === 'number';\r\n\r\nconst detectIsString = (o: any): o is string => typeof o === 'string';\r\n\r\nconst detectIsTextBased = (o: any): o is string | number => typeof o === 'string' || typeof o === 'number';\r\n\r\nconst detectIsObject = (o: any): o is object => typeof o === 'object';\r\n\r\nconst detectIsBoolean = (o: any): o is boolean => typeof o === 'boolean';\r\n\r\nconst detectIsArray = (o: any): o is Array<any> => Array.isArray(o);\r\n\r\nconst detectIsNull = (o: any): o is null => o === null;\r\n\r\nconst detectIsEmpty = (o: any) => detectIsNull(o) || detectIsUndefined(o);\r\n\r\nconst detectIsFalsy = (o: any) => detectIsEmpty(o) || o === false;\r\n\r\nconst detectIsPromise = <T = unknown>(o: any): o is Promise<T> => o instanceof Promise;\r\n\r\nconst detectIsEqual = (a: any, b: any) => Object.is(a, b);\r\n\r\nconst keys = (o: object) => Object.keys(o);\r\n\r\nconst hasKeys = (o: object) => keys(o).length > 0;\r\n\r\nconst getTime = () => Date.now();\r\n\r\nconst dummyFn = () => {};\r\n\r\nconst trueFn = () => true;\r\n\r\nconst falseFn = () => false;\r\n\r\nconst sameFn = <T = any>(x: T) => x;\r\n\r\nconst logError = (...args: Array<any>) => !detectIsUndefined(console) && console.error(...args);\r\n\r\nconst formatErrorMsg = (x: string, prefix = LIB) => `[${prefix}]: ${x}`;\r\n\r\nfunction throwThis(x: Error | Promise<unknown>) {\r\n  throw x;\r\n}\r\n\r\nconst illegal = (x: string, prefix = LIB) => throwThis(new Error(formatErrorMsg(x, prefix)));\r\n\r\nfunction flatten<T = any>(source: Array<NestedArray<T>>, transform: (x: T) => any = sameFn): Array<T> {\r\n  if (detectIsArray(source)) {\r\n    if (source.length === 0) return [];\r\n  } else {\r\n    return [transform(source)];\r\n  }\r\n\r\n  const list: Array<T> = [];\r\n  const stack = [source[0]];\r\n  let idx = 0;\r\n\r\n  while (stack.length > 0) {\r\n    const x = stack.pop();\r\n\r\n    if (detectIsArray(x)) {\r\n      for (let i = x.length - 1; i >= 0; i--) {\r\n        stack.push(x[i]);\r\n      }\r\n    } else {\r\n      list.push(transform(x));\r\n\r\n      if (stack.length === 0 && idx < source.length - 1) {\r\n        idx++;\r\n        stack.push(source[idx]);\r\n      }\r\n    }\r\n  }\r\n\r\n  return list;\r\n}\r\n\r\nfunction detectAreDepsDifferent(prevDeps: Array<unknown>, nextDeps: Array<unknown>): boolean {\r\n  if (prevDeps === nextDeps || (prevDeps.length === 0 && nextDeps.length === 0)) return false;\r\n  const max = Math.max(prevDeps.length, nextDeps.length);\r\n\r\n  for (let i = 0; i < max; i++) {\r\n    if (!detectIsEqual(prevDeps[i], nextDeps[i])) return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nconst nextTick = (callback: () => void) => Promise.resolve().then(callback);\r\n\r\nconst createIndexKey = (idx: number) => `${INDEX_KEY}:${idx}`;\r\n\r\nconst mapRecord = <T extends object>(record: T) => keys(record).map(x => record[x]);\r\n\r\nexport {\r\n  detectIsFunction,\r\n  detectIsUndefined,\r\n  detectIsNumber,\r\n  detectIsString,\r\n  detectIsTextBased,\r\n  detectIsObject,\r\n  detectIsBoolean,\r\n  detectIsArray,\r\n  detectIsNull,\r\n  detectIsEmpty,\r\n  detectIsFalsy,\r\n  detectIsPromise,\r\n  detectIsEqual,\r\n  keys,\r\n  hasKeys,\r\n  getTime,\r\n  dummyFn,\r\n  trueFn,\r\n  falseFn,\r\n  logError,\r\n  formatErrorMsg,\r\n  throwThis,\r\n  illegal,\r\n  flatten,\r\n  detectAreDepsDifferent,\r\n  nextTick,\r\n  createIndexKey,\r\n  mapRecord,\r\n};\r\n","import type { ElementKey, Instance, DarkElement, RefProps, KeyProps, Prettify } from '../shared';\r\nimport { KEY_ATTR } from '../constants';\r\n\r\nconst $$inject = Symbol('inject');\r\nclass Component<P extends StandardComponentProps = {}> {\r\n  type: CreateElement<P> = null;\r\n  props: P = null;\r\n  token?: Symbol = null;\r\n  displayName?: string = null;\r\n  shouldUpdate?: ShouldUpdate<P> = null;\r\n  children: Array<Instance> = [];\r\n\r\n  constructor(type: CreateElement<P>, token: Symbol, props: P, shouldUpdate: ShouldUpdate<P>, displayName: string) {\r\n    this.type = type;\r\n    this.props = props;\r\n    token && (this.token = token);\r\n    shouldUpdate && (this.shouldUpdate = shouldUpdate);\r\n    displayName && (this.displayName = displayName);\r\n  }\r\n}\r\n\r\nfunction component<P extends object>(type: CreateElement<P>, options: ComponentOptions = {}) {\r\n  const { token: $token, displayName } = options;\r\n  type Props = P & StandardComponentProps;\r\n  const factory: ComponentFactoryWithPossiblyInject<Props> = (props = {} as Props) => {\r\n    const { token = $token, shouldUpdate } = factory[$$inject] || defaultInject;\r\n\r\n    return new Component(type, token, props, shouldUpdate, displayName);\r\n  };\r\n\r\n  factory.displayName = displayName;\r\n\r\n  return factory as ComponentFactory<Prettify<Props>>;\r\n}\r\n\r\nconst defaultInject: ComponentInject = {};\r\n\r\nconst detectIsComponent = (x: unknown): x is Component => x instanceof Component;\r\n\r\nconst getComponentKey = (x: Component): ElementKey => x.props[KEY_ATTR] ?? null;\r\n\r\nconst hasComponentFlag = (inst: Component, flag: string) => Boolean(inst.props[flag]);\r\n\r\ntype ComponentOptions = Readonly<{\r\n  displayName?: string;\r\n  token?: Symbol;\r\n}>;\r\n\r\ntype ComponentFactoryWithPossiblyInject<P extends object = {}> = {\r\n  (props?: P): Component<P>;\r\n  [$$inject]?: ComponentInject<P>;\r\n  displayName: string;\r\n};\r\n\r\ntype CreateElement<P extends StandardComponentProps> = (props: P) => DarkElement;\r\n\r\nexport type ComponentInject<P extends object = {}> = Readonly<{\r\n  token?: Symbol;\r\n  shouldUpdate?: ShouldUpdate<P>;\r\n}>;\r\n\r\nexport type ShouldUpdate<P> = (prevProps: P, nextProps: P) => boolean;\r\n\r\nexport type StandardComponentProps = KeyProps & RefProps;\r\n\r\nexport type ComponentFactory<P extends object = {}> = {\r\n  (props?: P): Component<P>;\r\n  displayName?: string;\r\n};\r\n\r\nexport { Component, component, $$inject, detectIsComponent, getComponentKey, hasComponentFlag };\r\n","import { type Component, detectIsComponent, getComponentKey, hasComponentFlag } from '../component';\r\nimport type { ElementKey, DarkElement, Instance, SlotProps, RefProps, KeyProps } from '../shared';\r\nimport { detectIsArray, detectIsFunction, detectIsEmpty } from '../utils';\r\nimport { REPLACER, KEY_ATTR } from '../constants';\r\nimport { $$scope } from '../scope';\r\n\r\nconst $$vNode = Symbol('vNode');\r\nconst ATTR_TYPE = 'type';\r\n\r\nclass VirtualNode {\r\n  type: NodeType = null;\r\n\r\n  constructor(type: NodeType) {\r\n    this.type = type;\r\n  }\r\n}\r\n\r\nclass TagVirtualNode extends VirtualNode {\r\n  name: string;\r\n  attrs: Record<string, any>;\r\n  children: Array<Instance>;\r\n\r\n  constructor(name: string, attrs: TagVirtualNode['attrs'], children: TagVirtualNode['children']) {\r\n    super(NodeType.TAG);\r\n    this.name = name;\r\n    this.attrs = attrs;\r\n    this.children = children;\r\n  }\r\n}\r\n\r\nclass TextVirtualNode extends VirtualNode {\r\n  value: string;\r\n\r\n  constructor(source: TextSource) {\r\n    super(NodeType.TEXT);\r\n    this.value = String(source);\r\n  }\r\n}\r\n\r\nclass CommentVirtualNode extends VirtualNode {\r\n  value = '';\r\n\r\n  constructor(text: string) {\r\n    super(NodeType.COMMENT);\r\n    this.value = text;\r\n  }\r\n}\r\n\r\nfunction View(options: ViewOptions) {\r\n  const factory: TagVirtualNodeFactory = () => {\r\n    const { as: name, slot, _void = false, ...attrs } = options;\r\n    const children = (\r\n      _void ? [] : detectIsArray(slot) ? slot : !detectIsEmpty(slot) ? [slot] : []\r\n    ) as TagVirtualNode['children'];\r\n\r\n    return new TagVirtualNode(name, attrs, children);\r\n  };\r\n\r\n  factory[$$vNode] = true;\r\n  factory[ATTR_TYPE] = options.as;\r\n  factory[KEY_ATTR] = options.key;\r\n\r\n  return factory;\r\n}\r\n\r\nconst Text = (source: TextSource) => new TextVirtualNode(source);\r\n\r\nText.from = (source: DarkElement) => (detectIsTextVirtualNode(source) ? source.value : String(source));\r\n\r\nconst Comment = (text: string) => new CommentVirtualNode(text);\r\n\r\nconst detectIsVirtualNode = (vNode: unknown): vNode is VirtualNode => vNode instanceof VirtualNode;\r\n\r\nconst detectIsTagVirtualNode = (vNode: unknown): vNode is TagVirtualNode => vNode instanceof TagVirtualNode;\r\n\r\nconst detectIsCommentVirtualNode = (vNode: unknown): vNode is CommentVirtualNode => vNode instanceof CommentVirtualNode;\r\n\r\nconst detectIsTextVirtualNode = (vNode: unknown): vNode is TextVirtualNode => vNode instanceof TextVirtualNode;\r\n\r\nconst detectIsVirtualNodeFactory = (factory: unknown): factory is VirtualNodeFactory =>\r\n  detectIsFunction(factory) && factory[$$vNode] === true;\r\n\r\nconst getTagVirtualNodeKey = (vNode: TagVirtualNode): ElementKey | null =>\r\n  vNode.attrs ? vNode.attrs[KEY_ATTR] ?? null : null;\r\n\r\nconst hasTagVirtualNodeFlag = (vNode: TagVirtualNode, flag: string) => Boolean(vNode.attrs[flag]);\r\n\r\nconst getVirtualNodeFactoryKey = (factory: VirtualNodeFactory): ElementKey | null => factory[KEY_ATTR] ?? null;\r\n\r\nconst hasVirtualNodeFactoryFlag = (factory: VirtualNodeFactory, flag: string) => Boolean(factory[flag]);\r\n\r\nconst detectIsPlainVirtualNode = (vNode: unknown): vNode is PlainVirtualNode =>\r\n  detectIsTextVirtualNode(vNode) || detectIsCommentVirtualNode(vNode);\r\n\r\nconst createReplacer = () => new CommentVirtualNode(REPLACER);\r\n\r\nconst detectIsReplacer = (vNode: unknown) => detectIsCommentVirtualNode(vNode) && vNode.value === REPLACER;\r\n\r\nfunction getElementKey(inst: Instance): ElementKey | null {\r\n  return detectIsComponent(inst)\r\n    ? getComponentKey(inst)\r\n    : detectIsVirtualNodeFactory(inst)\r\n    ? getVirtualNodeFactoryKey(inst)\r\n    : detectIsTagVirtualNode(inst)\r\n    ? getTagVirtualNodeKey(inst)\r\n    : null;\r\n}\r\n\r\nfunction hasElementFlag(inst: Instance, flag: string) {\r\n  return detectIsComponent(inst)\r\n    ? hasComponentFlag(inst, flag)\r\n    : detectIsVirtualNodeFactory(inst)\r\n    ? hasVirtualNodeFactoryFlag(inst, flag)\r\n    : detectIsTagVirtualNode(inst)\r\n    ? hasTagVirtualNodeFlag(inst, flag)\r\n    : false;\r\n}\r\n\r\nfunction getElementType(inst: Instance): string | Function {\r\n  return detectIsComponent(inst)\r\n    ? inst.type\r\n    : detectIsVirtualNodeFactory(inst)\r\n    ? inst[ATTR_TYPE]\r\n    : detectIsTagVirtualNode(inst)\r\n    ? inst.name\r\n    : detectIsVirtualNode(inst)\r\n    ? inst.type\r\n    : null;\r\n}\r\n\r\nfunction hasChildrenProp(inst: Instance): inst is TagVirtualNode | Component {\r\n  return detectIsTagVirtualNode(inst) || detectIsComponent(inst);\r\n}\r\n\r\nfunction detectAreSameInstanceTypes(prevInst: Instance, nextInst: Instance, isComponentFactories = false) {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    if (process.env.NODE_ENV === 'development' && $$scope().getIsHot()) {\r\n      if (detectIsComponent(prevInst) && detectIsComponent(nextInst)) {\r\n        return prevInst.displayName === nextInst.displayName;\r\n      }\r\n    }\r\n  }\r\n\r\n  return isComponentFactories\r\n    ? (prevInst as Component).type === (nextInst as Component).type\r\n    : getElementType(prevInst) === getElementType(nextInst);\r\n}\r\n\r\nfunction detectAreSameComponentTypesWithSameKeys(prevInst: Instance | null, nextInst: Instance | null) {\r\n  return (\r\n    detectIsComponent(prevInst) &&\r\n    detectIsComponent(nextInst) &&\r\n    detectAreSameInstanceTypes(prevInst, nextInst, true) &&\r\n    getElementKey(prevInst) === getElementKey(nextInst)\r\n  );\r\n}\r\n\r\ntype TextSource = string | number;\r\n\r\nexport type VirtualNodeFactory = () => VirtualNode;\r\n\r\nexport type TagVirtualNodeFactory = () => TagVirtualNode;\r\n\r\nexport type PlainVirtualNode = TextVirtualNode | CommentVirtualNode;\r\n\r\nexport type CanHasChildren = TagVirtualNode | Component;\r\n\r\nexport type ViewOptions = {\r\n  as: string;\r\n  _void?: boolean;\r\n  [prop: string]: any;\r\n} & Partial<SlotProps> &\r\n  RefProps &\r\n  KeyProps;\r\n\r\nexport enum NodeType {\r\n  TAG = 'TAG',\r\n  TEXT = 'TEXT',\r\n  COMMENT = 'COMMENT',\r\n}\r\n\r\nexport {\r\n  View,\r\n  Text,\r\n  Comment,\r\n  VirtualNode,\r\n  TagVirtualNode,\r\n  TextVirtualNode,\r\n  CommentVirtualNode,\r\n  createReplacer,\r\n  detectIsReplacer,\r\n  getElementKey,\r\n  hasElementFlag,\r\n  getElementType,\r\n  hasChildrenProp,\r\n  detectIsVirtualNode,\r\n  detectIsTagVirtualNode,\r\n  detectIsCommentVirtualNode,\r\n  detectIsTextVirtualNode,\r\n  detectIsPlainVirtualNode,\r\n  detectIsVirtualNodeFactory,\r\n  detectAreSameInstanceTypes,\r\n  detectAreSameComponentTypesWithSameKeys,\r\n};\r\n","import { detectIsString, detectIsFunction, detectIsEmpty, detectIsArray, detectIsUndefined } from './utils';\r\nimport { type TagVirtualNodeFactory, type ViewOptions, View } from './view';\r\nimport { type ComponentFactory, type Component } from './component';\r\nimport { type DarkElement, type ElementKey } from './shared';\r\nimport { KEY_ATTR } from './constants';\r\nimport { Fragment } from './fragment';\r\n\r\nfunction jsx(\r\n  element: string | ComponentFactory,\r\n  props: { children?: unknown; slot?: unknown },\r\n  key?: ElementKey,\r\n): TagVirtualNodeFactory | Component | null {\r\n  const { children, slot: $slot, ...$props } = props;\r\n  const content = !detectIsUndefined(children) ? children : !detectIsUndefined($slot) ? $slot : [];\r\n  const slot: Array<DarkElement> = detectIsArray(content) ? content : [content];\r\n\r\n  if (key || !detectIsEmpty(key)) {\r\n    $props[KEY_ATTR] = key;\r\n  }\r\n\r\n  if (detectIsString(element)) {\r\n    const options = ($props || {}) as ViewOptions;\r\n\r\n    options.as = element;\r\n    options.slot = slot;\r\n\r\n    return View(options);\r\n  }\r\n\r\n  if (detectIsFunction(element)) {\r\n    const options = ($props || {}) as { slot: unknown };\r\n\r\n    options.slot = slot.length === 1 ? slot[0] : slot;\r\n\r\n    return element(options);\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nexport { jsx, jsx as jsxs, jsx as jsxDEV, Fragment };\r\n","import { component, detectIsComponent } from '../component';\r\nimport type { KeyProps, SlotProps } from '../shared';\r\n\r\ntype FragmentProps = Required<SlotProps> & KeyProps;\r\n\r\nconst $$fragment = Symbol('fragment');\r\n\r\nconst Fragment = component<FragmentProps>(({ slot }) => slot || null, { token: $$fragment, displayName: 'Fragment' });\r\n\r\nconst detectIsFragment = (instance: unknown) => detectIsComponent(instance) && instance.token === $$fragment;\r\n\r\nexport { Fragment, detectIsFragment };\r\n","import { type SubscriberWithValue } from '../shared';\r\n\r\ntype EventName = 'finish' | 'chunk' | 'error' | 'box';\r\n\r\nclass EventEmitter<E extends string = EventName, T = unknown> {\r\n  private subscribers: Map<Partial<E>, Set<SubscriberWithValue<unknown>>> = new Map();\r\n\r\n  on<T>(e: E, fn: SubscriberWithValue<T>) {\r\n    !this.subscribers.has(e) && this.subscribers.set(e, new Set());\r\n    this.subscribers.get(e).add(fn);\r\n\r\n    return () => this.subscribers.has(e) && this.subscribers.get(e).delete(fn);\r\n  }\r\n\r\n  emit(e: E, data?: T) {\r\n    this.subscribers.has(e) && this.subscribers.get(e).forEach(x => x(data));\r\n  }\r\n\r\n  kill() {\r\n    this.subscribers = new Map();\r\n  }\r\n\r\n  __getSize() {\r\n    return this.subscribers.size;\r\n  }\r\n}\r\n\r\nexport { EventEmitter };\r\n","import { IS_WIP_HOOK_MASK, IS_PORTAL_HOOK_NASK, IS_SUSPENSE_HOOK_MASK, IS_PENDING_HOOK_MASK } from '../constants';\r\nimport { detectIsFunction, detectIsUndefined, logError } from '../utils';\r\nimport { type Instance, type Callback, type TimerId } from '../shared';\r\nimport { detectAreSameComponentTypesWithSameKeys } from '../view';\r\nimport { type Context, type ContextProvider } from '../context';\r\nimport { detectIsComponent } from '../component';\r\nimport { type Atom } from '../atom';\r\n\r\nclass Fiber<N = NativeElement> {\r\n  id = 0;\r\n  cc = 0; // child fibers count\r\n  cec = 0; // child native elements count\r\n  idx = 0; // idx of fiber in the parent fiber\r\n  eidx = 0; // native element idx\r\n  mask = 0; // bit mask\r\n  element: N = null; // native element\r\n  tag: string = null; // effect tag (CREATE, UPDATE, DELETE, SKIP)\r\n  parent: Fiber<N> = null; // parent fiber\r\n  child: Fiber<N> = null; // child fiber\r\n  next: Fiber<N> = null; // next sibling fiber\r\n  alt: Fiber<N> = null; // alternate fiber (previous)\r\n  inst: Instance = null; // instance of component or virtual node\r\n  hook: Hook | null = null; // hook\r\n\r\n  constructor(idx = 0, hook: Hook = null) {\r\n    this.id = Fiber.incrementId();\r\n    this.idx = idx;\r\n    this.hook = hook;\r\n  }\r\n\r\n  mutate(fiber: Partial<Fiber<N>>) {\r\n    for (const key in fiber) {\r\n      this[key] = fiber[key];\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  markHost(mask: number) {\r\n    this.mask |= mask;\r\n    this.parent && !(this.parent.mask & mask) && this.parent.markHost(mask);\r\n  }\r\n\r\n  increment(count = 1) {\r\n    if (!this.parent) return;\r\n    this.parent.cec += count;\r\n\r\n    if (!this.parent.element && !this.parent.hook?.getIsWip()) {\r\n      this.parent.increment(count);\r\n    }\r\n  }\r\n\r\n  setError(err: Error) {\r\n    if (this.hook?.hasCatch()) {\r\n      this.hook.catch(err);\r\n      logError(err);\r\n    } else if (this.parent) {\r\n      this.parent.setError(err);\r\n    } else {\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  static incrementId() {\r\n    return ++Fiber.nextId;\r\n  }\r\n\r\n  static setNextId(id: number) {\r\n    Fiber.nextId = id;\r\n  }\r\n\r\n  private static nextId = 0;\r\n}\r\n\r\nclass Hook<T = unknown> {\r\n  idx = 0;\r\n  values: Array<T> = [];\r\n  owner: Fiber = null;\r\n  atoms: Map<Atom, Callback> = null;\r\n  mask = 0;\r\n  box?: Box = null;\r\n\r\n  __getMask(mask: number) {\r\n    return Boolean(this.mask & mask);\r\n  }\r\n\r\n  __mark(mask: number, x: boolean) {\r\n    x ? (this.mask |= mask) : (this.mask &= ~mask);\r\n  }\r\n\r\n  __box() {\r\n    if (!this.box) this.box = {};\r\n  }\r\n\r\n  getIsWip() {\r\n    return this.__getMask(IS_WIP_HOOK_MASK);\r\n  }\r\n\r\n  setIsWip(x: boolean) {\r\n    this.__mark(IS_WIP_HOOK_MASK, x);\r\n  }\r\n\r\n  getIsPortal() {\r\n    return this.__getMask(IS_PORTAL_HOOK_NASK);\r\n  }\r\n\r\n  setIsPortal(x: boolean) {\r\n    this.__mark(IS_PORTAL_HOOK_NASK, x);\r\n  }\r\n\r\n  getIsSuspense() {\r\n    return this.__getMask(IS_SUSPENSE_HOOK_MASK);\r\n  }\r\n\r\n  setIsSuspense(x: boolean) {\r\n    this.__mark(IS_SUSPENSE_HOOK_MASK, x);\r\n  }\r\n\r\n  getIsPending() {\r\n    return this.__getMask(IS_PENDING_HOOK_MASK);\r\n  }\r\n\r\n  setIsPeinding(x: boolean) {\r\n    this.__mark(IS_PENDING_HOOK_MASK, x);\r\n  }\r\n\r\n  getProviders() {\r\n    return this.box?.providers;\r\n  }\r\n\r\n  setProviders(x: Map<Context, ContextProvider>) {\r\n    this.__box();\r\n    this.box.providers = x;\r\n  }\r\n\r\n  getBatch() {\r\n    return this.box?.batch;\r\n  }\r\n\r\n  setBatch(x: Batch) {\r\n    this.__box();\r\n    this.box.batch = x;\r\n  }\r\n\r\n  hasCatch() {\r\n    return detectIsFunction(this.box?.catch);\r\n  }\r\n\r\n  setCatch(x: Catch) {\r\n    this.__box();\r\n    this.box.catch = x;\r\n  }\r\n\r\n  catch(x: Error) {\r\n    this.box?.catch(x);\r\n  }\r\n\r\n  incrementPending() {\r\n    this.__box();\r\n    detectIsUndefined(this.box.pendings) && (this.box.pendings = 0);\r\n    this.box.pendings++;\r\n  }\r\n\r\n  getPendings() {\r\n    return this.box?.pendings;\r\n  }\r\n}\r\n\r\nclass Awaiter {\r\n  store = new Map<Hook, Set<Promise<unknown>>>();\r\n\r\n  add(hook: Hook, promise: Promise<unknown>) {\r\n    !this.store.has(hook) && this.store.set(hook, new Set());\r\n    this.store.get(hook).add(promise);\r\n  }\r\n\r\n  resolve(cb: (hook: Hook) => void) {\r\n    for (const [hook, promises] of this.store) {\r\n      const $promises = Array.from(promises);\r\n\r\n      this.store.delete(hook);\r\n\r\n      if ($promises.length > 0) {\r\n        hook.setIsPeinding(true);\r\n        hook.incrementPending();\r\n        const pendings = hook.getPendings();\r\n        cb(hook);\r\n\r\n        Promise.allSettled($promises).then(() => {\r\n          if (pendings === hook.getPendings()) {\r\n            hook.setIsPeinding(false);\r\n            cb(hook);\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction getHook(alt: Fiber, prevInst: Instance, nextInst: Instance): Hook | null {\r\n  if (alt && detectAreSameComponentTypesWithSameKeys(prevInst, nextInst)) return alt.hook;\r\n  if (detectIsComponent(nextInst)) return new Hook();\r\n\r\n  return null;\r\n}\r\n\r\ntype Box = {\r\n  providers?: Map<Context, ContextProvider>;\r\n  batch?: Batch;\r\n  catch?: Catch;\r\n  pendings?: number;\r\n};\r\n\r\ntype Batch = {\r\n  timer: TimerId;\r\n  changes: Array<Callback>;\r\n};\r\n\r\ntype Catch = (error: Error) => void;\r\n\r\nexport type NativeElement = unknown;\r\nexport type HookValue<T = any> = { deps: Array<any>; value: T };\r\n\r\nexport { Fiber, Hook, Awaiter, getHook };\r\n","import type { Callback, ElementKey, AppResources, AppResource } from '../shared';\r\nimport { platform, detectIsServer } from '../platform';\r\nimport { EventEmitter } from '../emitter';\r\nimport { type Fiber, Awaiter } from '../fiber';\r\n\r\nclass Scope {\r\n  private root: Fiber = null;\r\n  private wip: Fiber = null;\r\n  private cursor: Fiber = null;\r\n  private unit: Fiber = null;\r\n  private mountDeep = true;\r\n  private mountLevel = 0;\r\n  private mountNav: Record<number, number> = {};\r\n  private events = new Map<string, WeakMap<object, Function>>();\r\n  private unsubs = new Set<Callback>();\r\n  private actions: Actions = {};\r\n  private candidates = new Set<Fiber>();\r\n  private deletions = new Set<Fiber>();\r\n  private cancels: Array<Callback> = [];\r\n  private asyncEffects = new Set<Callback>();\r\n  private layoutEffects = new Set<Callback>();\r\n  private insertionEffects = new Set<Callback>();\r\n  private resourceId = 0;\r\n  private resources: AppResources = new Map();\r\n  private awaiter: Awaiter = new Awaiter();\r\n  private onTransitionEnd: Callback = null;\r\n  private isLayoutEffectsZone = false;\r\n  private isInsertionEffectsZone = false;\r\n  private isUpdateZone = false;\r\n  private isBatchZone = false;\r\n  private isHydrateZone = false;\r\n  private isStreamZone = false;\r\n  private isTransitionZone = false;\r\n  private isEventZone = false;\r\n  private isHot = false;\r\n  private isDynamic = platform.detectIsDynamic();\r\n  private isServer = detectIsServer();\r\n  private emitter = new EventEmitter();\r\n\r\n  private resetActions() {\r\n    this.actions = {};\r\n  }\r\n\r\n  getActionsById(id: number) {\r\n    return this.actions[id];\r\n  }\r\n\r\n  addActionMap(id: number, map: Record<ElementKey, Fiber>) {\r\n    this.actions[id] = {\r\n      map,\r\n      replace: null,\r\n      insert: null,\r\n      remove: null,\r\n      move: null,\r\n      stable: null,\r\n    };\r\n  }\r\n\r\n  addReplaceAction(id: number, nextKey: ElementKey) {\r\n    !this.actions[id].replace && (this.actions[id].replace = {});\r\n    this.actions[id].replace[nextKey] = true;\r\n  }\r\n\r\n  addInsertAction(id: number, nextKey: ElementKey) {\r\n    !this.actions[id].insert && (this.actions[id].insert = {});\r\n    this.actions[id].insert[nextKey] = true;\r\n  }\r\n\r\n  addRemoveAction(id: number, prevKey: ElementKey) {\r\n    !this.actions[id].remove && (this.actions[id].remove = {});\r\n    this.actions[id].remove[prevKey] = true;\r\n  }\r\n\r\n  addMoveAction(id: number, nextKey: ElementKey) {\r\n    !this.actions[id].move && (this.actions[id].move = {});\r\n    this.actions[id].move[nextKey] = true;\r\n  }\r\n\r\n  addStableAction(id: number, nextKey: ElementKey) {\r\n    !this.actions[id].stable && (this.actions[id].stable = {});\r\n    this.actions[id].stable[nextKey] = true;\r\n  }\r\n\r\n  fork() {\r\n    const scope = new Scope();\r\n\r\n    scope.root = null;\r\n    scope.wip = null;\r\n    scope.cursor = null;\r\n    scope.unit = this.unit;\r\n    scope.mountDeep = this.mountDeep;\r\n    scope.mountLevel = this.mountLevel;\r\n    scope.mountNav = { ...this.mountNav };\r\n    scope.events = this.events;\r\n    scope.unsubs = this.unsubs;\r\n    scope.actions = { ...this.actions };\r\n    scope.candidates = new Set([...this.candidates]);\r\n    scope.deletions = new Set([...this.deletions]);\r\n    scope.asyncEffects = new Set([...this.asyncEffects]);\r\n    scope.layoutEffects = new Set([...this.layoutEffects]);\r\n    scope.isUpdateZone = this.isUpdateZone;\r\n    scope.emitter = this.emitter;\r\n    scope.awaiter = this.awaiter;\r\n\r\n    return scope;\r\n  }\r\n\r\n  getRoot() {\r\n    return this.root;\r\n  }\r\n\r\n  setRoot(fiber: Fiber) {\r\n    this.root = fiber;\r\n  }\r\n\r\n  keepRoot() {\r\n    !this.isUpdateZone && this.setRoot(this.wip);\r\n  }\r\n\r\n  getWorkInProgress() {\r\n    return this.wip;\r\n  }\r\n\r\n  setWorkInProgress(fiber: Fiber) {\r\n    this.wip = fiber;\r\n  }\r\n\r\n  getNextUnitOfWork() {\r\n    return this.unit;\r\n  }\r\n\r\n  setNextUnitOfWork(fiber: Fiber) {\r\n    this.unit = fiber;\r\n  }\r\n\r\n  getCursorFiber() {\r\n    return this.cursor;\r\n  }\r\n\r\n  setCursorFiber(fiber: Fiber) {\r\n    this.cursor = fiber;\r\n  }\r\n\r\n  navToChild() {\r\n    this.mountLevel = this.mountLevel + 1;\r\n    this.mountNav[this.mountLevel] = 0;\r\n  }\r\n\r\n  navToSibling() {\r\n    this.mountNav[this.mountLevel] = this.mountNav[this.mountLevel] + 1;\r\n  }\r\n\r\n  navToParent() {\r\n    this.mountLevel = this.mountLevel - 1;\r\n  }\r\n\r\n  navToPrev() {\r\n    const idx = this.getMountIndex();\r\n\r\n    if (idx === 0) {\r\n      this.navToParent();\r\n      this.setMountDeep(true);\r\n    } else {\r\n      this.mountNav[this.mountLevel] = this.mountNav[this.mountLevel] - 1;\r\n      this.setMountDeep(false);\r\n    }\r\n  }\r\n\r\n  getMountIndex() {\r\n    return this.mountNav[this.mountLevel];\r\n  }\r\n\r\n  getMountDeep() {\r\n    return this.mountDeep;\r\n  }\r\n\r\n  setMountDeep(value: boolean) {\r\n    this.mountDeep = value;\r\n  }\r\n\r\n  resetMount() {\r\n    this.mountLevel = 0;\r\n    this.mountNav = {};\r\n    this.mountDeep = true;\r\n  }\r\n\r\n  getEvents() {\r\n    return this.events;\r\n  }\r\n\r\n  addEventUnsubscriber(fn: Callback) {\r\n    this.unsubs.add(fn);\r\n  }\r\n\r\n  unsubscribeEvents() {\r\n    this.unsubs.forEach(x => x());\r\n    this.unsubs = new Set();\r\n  }\r\n\r\n  getCandidates() {\r\n    return this.candidates;\r\n  }\r\n\r\n  addCandidate(fiber: Fiber) {\r\n    this.candidates.add(fiber);\r\n  }\r\n\r\n  resetCandidates() {\r\n    this.candidates = new Set();\r\n  }\r\n\r\n  getDeletions() {\r\n    return this.deletions;\r\n  }\r\n\r\n  hasDeletion(fiber: Fiber) {\r\n    let nextFiber = fiber;\r\n\r\n    while (nextFiber) {\r\n      if (this.deletions.has(nextFiber)) return true;\r\n      nextFiber = nextFiber.parent;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  addDeletion(fiber: Fiber) {\r\n    !this.hasDeletion(fiber) && this.deletions.add(fiber);\r\n  }\r\n\r\n  resetDeletions() {\r\n    this.deletions = new Set();\r\n  }\r\n\r\n  addAsyncEffect(fn: Callback) {\r\n    this.asyncEffects.add(fn);\r\n  }\r\n\r\n  resetAsyncEffects() {\r\n    this.asyncEffects = new Set();\r\n  }\r\n\r\n  runAsyncEffects() {\r\n    if (!this.isDynamic) return;\r\n    const effects = this.asyncEffects;\r\n    effects.size > 0 && setTimeout(() => effects.forEach(fn => fn()));\r\n  }\r\n\r\n  addLayoutEffect(fn: Callback) {\r\n    this.layoutEffects.add(fn);\r\n  }\r\n\r\n  resetLayoutEffects() {\r\n    this.layoutEffects = new Set();\r\n  }\r\n\r\n  runLayoutEffects() {\r\n    if (!this.isDynamic) return;\r\n    this.setIsLayoutEffectsZone(true);\r\n    this.layoutEffects.forEach(fn => fn());\r\n    this.setIsLayoutEffectsZone(false);\r\n  }\r\n\r\n  addInsertionEffect(fn: Callback) {\r\n    this.insertionEffects.add(fn);\r\n  }\r\n\r\n  resetInsertionEffects() {\r\n    this.insertionEffects = new Set();\r\n  }\r\n\r\n  runInsertionEffects() {\r\n    if (!this.isDynamic) return;\r\n    this.setIsInsertionEffectsZone(true);\r\n    this.insertionEffects.forEach(fn => fn());\r\n    this.setIsInsertionEffectsZone(false);\r\n  }\r\n\r\n  addCancel(fn: Callback) {\r\n    this.cancels.push(fn);\r\n  }\r\n\r\n  applyCancels() {\r\n    for (let i = this.cancels.length - 1; i >= 0; i--) {\r\n      this.cancels[i]();\r\n    }\r\n  }\r\n\r\n  resetCancels() {\r\n    this.cancels = [];\r\n  }\r\n\r\n  getIsLayoutEffectsZone() {\r\n    return this.isLayoutEffectsZone;\r\n  }\r\n\r\n  setIsLayoutEffectsZone(value: boolean) {\r\n    this.isLayoutEffectsZone = value;\r\n  }\r\n\r\n  getIsInsertionEffectsZone() {\r\n    return this.isInsertionEffectsZone;\r\n  }\r\n\r\n  setIsInsertionEffectsZone(value: boolean) {\r\n    this.isInsertionEffectsZone = value;\r\n  }\r\n\r\n  getIsUpdateZone() {\r\n    return this.isUpdateZone;\r\n  }\r\n\r\n  setIsUpdateZone(value: boolean) {\r\n    this.isUpdateZone = value;\r\n  }\r\n\r\n  getIsBatchZone() {\r\n    return this.isBatchZone;\r\n  }\r\n\r\n  setIsBatchZone(value: boolean) {\r\n    this.isBatchZone = value;\r\n  }\r\n\r\n  getIsHydrateZone() {\r\n    return this.isHydrateZone;\r\n  }\r\n\r\n  setIsHydrateZone(value: boolean) {\r\n    this.isHydrateZone = value;\r\n  }\r\n\r\n  getIsStreamZone() {\r\n    return this.isStreamZone;\r\n  }\r\n\r\n  setIsStreamZone(value: boolean) {\r\n    this.isStreamZone = value;\r\n  }\r\n\r\n  getIsTransitionZone() {\r\n    return this.isTransitionZone;\r\n  }\r\n\r\n  setIsTransitionZone(value: boolean) {\r\n    this.isTransitionZone = value;\r\n  }\r\n\r\n  getIsEventZone() {\r\n    return this.isEventZone;\r\n  }\r\n\r\n  setIsEventZone(value: boolean) {\r\n    this.isEventZone = value;\r\n  }\r\n\r\n  getIsHot() {\r\n    return this.isHot;\r\n  }\r\n\r\n  setIsHot(value: boolean) {\r\n    this.isHot = value;\r\n  }\r\n\r\n  getOnTransitionEnd() {\r\n    return this.onTransitionEnd;\r\n  }\r\n\r\n  setOnTransitionEnd(fn: Callback) {\r\n    this.onTransitionEnd = fn;\r\n  }\r\n\r\n  cleanup() {\r\n    this.keepRoot(); // !\r\n    this.setWorkInProgress(null);\r\n    this.setNextUnitOfWork(null);\r\n    this.setCursorFiber(null);\r\n    this.resetMount();\r\n    this.resetCandidates();\r\n    this.resetDeletions();\r\n    this.resetCancels();\r\n    this.resetInsertionEffects();\r\n    this.resetLayoutEffects();\r\n    this.resetAsyncEffects();\r\n    this.setIsHydrateZone(false);\r\n    this.setIsUpdateZone(false);\r\n    this.resetActions();\r\n  }\r\n\r\n  getEmitter() {\r\n    return this.emitter;\r\n  }\r\n\r\n  getResource(id: number) {\r\n    return this.resources.get(id);\r\n  }\r\n\r\n  setResource(id: number, res: AppResource) {\r\n    this.resources.set(id, res);\r\n  }\r\n\r\n  getResources() {\r\n    return this.resources;\r\n  }\r\n\r\n  getResourceId() {\r\n    return this.resourceId;\r\n  }\r\n\r\n  setResourceId(id: number) {\r\n    this.resourceId = id;\r\n  }\r\n\r\n  getNextResourceId() {\r\n    return ++this.resourceId;\r\n  }\r\n\r\n  getAwaiter() {\r\n    return this.awaiter;\r\n  }\r\n\r\n  runAfterCommit() {\r\n    this.resources = new Map();\r\n    this.isServer && (this.resourceId = 0);\r\n  }\r\n}\r\n\r\ntype Actions = Record<\r\n  number,\r\n  {\r\n    map: Record<ElementKey, Fiber>;\r\n    replace: Record<ElementKey, true>;\r\n    insert: Record<ElementKey, true>;\r\n    remove: Record<ElementKey, true>;\r\n    move: Record<ElementKey, true>;\r\n    stable: Record<ElementKey, true>;\r\n  }\r\n>;\r\n\r\nlet rootId: number = null;\r\nconst scopes = new Map<number, Scope>();\r\n\r\nconst getRootId = () => rootId;\r\n\r\nconst setRootId = (id: number) => {\r\n  rootId = id;\r\n  !scopes.has(rootId) && scopes.set(rootId, new Scope());\r\n};\r\n\r\nconst removeScope = (id: number) => scopes.delete(id);\r\n\r\nconst replaceScope = (scope: Scope, id: number = rootId) => {\r\n  Object.assign(scopes.get(id), scope);\r\n};\r\n\r\nconst $$scope = (id: number = rootId) => scopes.get(id);\r\n\r\nexport { type Scope, getRootId, setRootId, removeScope, replaceScope, $$scope };\r\n","import { illegal } from '../utils';\r\nimport { type VirtualNode } from '../view';\r\nimport { type Callback } from '../shared';\r\nimport { type Fiber } from '../fiber';\r\nimport { $$scope } from '../scope';\r\n\r\nexport type Platform = {\r\n  createElement: <N>(vNode: VirtualNode) => N;\r\n  toggle: <N>(element: N, isVisible: boolean) => void;\r\n  raf: typeof requestAnimationFrame;\r\n  caf: typeof cancelAnimationFrame;\r\n  spawn: (callback: Callback) => void;\r\n  commit: (fiber: Fiber) => void;\r\n  finishCommit: () => void;\r\n  detectIsDynamic: () => boolean;\r\n};\r\n\r\nconst realisation = () => illegal('The function was not installed by renderer!') as any;\r\n\r\nconst platform: Platform = {\r\n  createElement: realisation,\r\n  toggle: realisation,\r\n  raf: realisation,\r\n  caf: realisation,\r\n  spawn: realisation,\r\n  commit: realisation,\r\n  finishCommit: realisation,\r\n  detectIsDynamic: realisation,\r\n};\r\n\r\nconst detectIsServer = () => !platform.detectIsDynamic();\r\n\r\nconst detectIsHydration = () => $$scope().getIsHydrateZone();\r\n\r\nconst detectIsSSR = () => detectIsServer() || detectIsHydration();\r\n\r\nexport { platform, detectIsServer, detectIsHydration, detectIsSSR };\r\n","import { detectIsServer, detectIsHydration } from '../platform';\r\nimport { resolveSuspense } from '../walk';\r\nimport { useMemo } from '../use-memo';\r\nimport { $$scope } from '../scope';\r\n\r\nfunction useCursor() {\r\n  return $$scope().getCursorFiber();\r\n}\r\n\r\nfunction useSSR() {\r\n  const isServer = detectIsServer();\r\n  const isHydration = detectIsHydration();\r\n  const isSSR = isServer || isHydration;\r\n\r\n  return {\r\n    isServer,\r\n    isHydration,\r\n    isSSR,\r\n  };\r\n}\r\nfunction useInSuspense() {\r\n  const cursor = useCursor();\r\n  const suspense = useMemo(() => resolveSuspense(cursor), [cursor]);\r\n\r\n  return Boolean(suspense);\r\n}\r\n\r\nexport { useCursor as __useCursor, useSSR as __useSSR, useInSuspense as __useInSuspense };\r\n","import {\r\n  type ComponentFactory,\r\n  type StandardComponentProps,\r\n  type ShouldUpdate,\r\n  type ComponentInject,\r\n  $$inject,\r\n  detectIsComponent,\r\n} from '../component';\r\nimport { type SlotProps, type Prettify } from '../shared';\r\n\r\nconst $$memo = Symbol('memo');\r\n\r\nconst defaultShouldUpdate = (props: {}, nextProps: {}): boolean => {\r\n  for (const key in nextProps) {\r\n    if (key !== 'slot' && nextProps[key] !== props[key]) return true;\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\nfunction memo<P extends object>(\r\n  factory: ComponentFactory<P>,\r\n  shouldUpdate: ShouldUpdate<P & SlotProps> = defaultShouldUpdate,\r\n) {\r\n  type P1 = P & StandardComponentProps;\r\n\r\n  factory[$$inject] = {\r\n    token: $$memo,\r\n    shouldUpdate,\r\n  } as ComponentInject<P1>;\r\n\r\n  return factory as ComponentFactory<Prettify<P1>>;\r\n}\r\n\r\nconst detectIsMemo = (instance: unknown) => detectIsComponent(instance) && instance.token === $$memo;\r\n\r\nexport { memo, detectIsMemo };\r\n","import { type VirtualNodeFactory, detectIsVirtualNodeFactory } from '../view';\r\nimport { type Component, detectIsComponent, component } from '../component';\r\nimport { __useCursor as useCursor } from '../internal';\r\nimport { type Hook, type HookValue } from '../fiber';\r\nimport { detectAreDepsDifferent } from '../utils';\r\nimport { memo } from '../memo';\r\n\r\ntype GetMemoValue = () => Component | VirtualNodeFactory;\r\n\r\ntype MemoProps = {\r\n  deps: Array<any>;\r\n  getValue: GetMemoValue;\r\n};\r\n\r\nconst Memo = memo(\r\n  component<MemoProps>(({ getValue }) => getValue()),\r\n  (p, n) => detectAreDepsDifferent(p.deps, n.deps),\r\n);\r\n\r\nfunction detectIsElement<T>(value: T) {\r\n  return detectIsComponent(value) || detectIsVirtualNodeFactory(value);\r\n}\r\n\r\nfunction useMemo<T>(getValue: () => T, deps: Array<any>): T {\r\n  const cursor = useCursor();\r\n  const { hook } = cursor;\r\n  const { idx, values } = hook as Hook<HookValue<T>>;\r\n  const state =\r\n    values[idx] ||\r\n    (values[idx] = {\r\n      deps,\r\n      value: getValue(),\r\n    });\r\n  let value: T = null;\r\n  let $value: T = null;\r\n\r\n  if (detectIsElement(state.value)) {\r\n    value = state.value;\r\n    $value = Memo({ getValue: getValue as GetMemoValue, deps }) as unknown as T;\r\n  } else {\r\n    value = detectAreDepsDifferent(state.deps, deps) ? getValue() : state.value;\r\n    $value = value;\r\n  }\r\n\r\n  state.deps = deps;\r\n  state.value = value;\r\n  hook.idx++;\r\n\r\n  return $value;\r\n}\r\n\r\nexport { useMemo };\r\n","import {\r\n  DELETE_EFFECT_TAG,\r\n  UPDATE_EFFECT_TAG,\r\n  SKIP_EFFECT_TAG,\r\n  INSERTION_EFFECT_HOST_MASK,\r\n  LAYOUT_EFFECT_HOST_MASK,\r\n  ASYNC_EFFECT_HOST_MASK,\r\n  ATOM_HOST_MASK,\r\n  MOVE_MASK,\r\n  HOOK_DELIMETER,\r\n} from '../constants';\r\nimport { type TagVirtualNode, getElementKey, hasChildrenProp } from '../view';\r\nimport { type Instance, type ElementKey } from '../shared';\r\nimport { type Component } from '../component';\r\nimport { type Hook, Fiber } from '../fiber';\r\nimport { createIndexKey } from '../utils';\r\nimport { type Callback } from '../shared';\r\nimport { detectIsMemo } from '../memo';\r\nimport { type Scope } from '../scope';\r\n\r\nfunction walk<T = unknown>(fiber: Fiber<T>, onWalk: (fiber: Fiber<T>, skip: () => void, stop: () => void) => void) {\r\n  let shouldDeep = true;\r\n  let shouldStop = false;\r\n  const skip = () => (shouldDeep = false);\r\n  const stop = () => (shouldStop = true);\r\n  const stack: Array<Fiber<T>> = [fiber];\r\n\r\n  while (stack.length !== 0) {\r\n    const unit = stack.pop();\r\n\r\n    onWalk(unit, skip, stop);\r\n    if (shouldStop) break;\r\n    unit !== fiber && unit.next && stack.push(unit.next);\r\n    shouldDeep && unit.child && stack.push(unit.child);\r\n    shouldDeep = true;\r\n  }\r\n}\r\n\r\nfunction collectElements<T, P = T>(fiber: Fiber<T>, transform: (fiber: Fiber<T>) => P): Array<P> {\r\n  const elements: Array<P> = [];\r\n\r\n  walk<T>(fiber, onWalkInCollectElements(elements, transform));\r\n\r\n  return elements;\r\n}\r\n\r\nfunction onWalkInCollectElements<T, P = T>(elements: Array<P>, transform: (fiber: Fiber<T>) => P) {\r\n  return (fiber: Fiber<T>, skip: Callback) => {\r\n    if (fiber.element) {\r\n      !fiber.hook?.getIsPortal() && elements.push(transform(fiber));\r\n      return skip();\r\n    }\r\n  };\r\n}\r\n\r\nfunction getFiberWithElement<T1, T2 = T1>(fiber: Fiber<T1>): Fiber<T2> {\r\n  let $fiber = fiber as unknown as Fiber<T2>;\r\n\r\n  while ($fiber) {\r\n    if ($fiber.element) return $fiber;\r\n    $fiber = $fiber.parent;\r\n  }\r\n\r\n  return $fiber;\r\n}\r\n\r\nfunction detectIsFiberAlive(fiber: Fiber) {\r\n  let $fiber = fiber;\r\n\r\n  while ($fiber) {\r\n    if ($fiber.tag === DELETE_EFFECT_TAG) return false;\r\n    $fiber = $fiber.parent;\r\n  }\r\n\r\n  return Boolean(fiber);\r\n}\r\n\r\nfunction getSuspense(fiber: Fiber, isPending: boolean) {\r\n  let suspense = fiber;\r\n  while (suspense) {\r\n    if (suspense.hook?.getIsSuspense() && (isPending ? suspense.hook.getIsPending() : true)) return suspense;\r\n    suspense = suspense.parent;\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nfunction resolveSuspense(fiber: Fiber): Fiber {\r\n  return getSuspense(fiber, true) || getSuspense(fiber, false) || null;\r\n}\r\n\r\nfunction createHookLoc(rootId: number, idx: number, hook: Hook) {\r\n  const fiber = hook.owner;\r\n  let $fiber = fiber;\r\n  let loc = `${fiber.idx}${HOOK_DELIMETER}${idx}`;\r\n\r\n  while ($fiber) {\r\n    $fiber = $fiber.parent;\r\n    $fiber && (loc = `${$fiber.idx}.${loc}`);\r\n  }\r\n\r\n  loc = `[${rootId}]${loc}`;\r\n\r\n  return loc;\r\n}\r\n\r\nfunction detectIsStableMemoTree(fiber: Fiber, $scope: Scope) {\r\n  if (!hasChildrenProp(fiber.inst)) return;\r\n  const actions = $scope.getActionsById(fiber.id);\r\n  const children = fiber.inst.children;\r\n\r\n  for (let i = 0; i < children.length; i++) {\r\n    const inst = children[i];\r\n    const key = getElementKey(inst);\r\n    if (key === null) return false;\r\n    const alt = actions.map[key];\r\n    if (!alt) return false;\r\n    const pc = alt.inst as Component;\r\n    const nc = inst as Component;\r\n    const isStable =\r\n      detectIsMemo(nc) && detectIsMemo(pc) && nc.type === pc.type && !nc.shouldUpdate(pc.props, nc.props);\r\n\r\n    if (!isStable) return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction tryOptStaticSlot(fiber: Fiber, alt: Fiber, $scope: Scope) {\r\n  const actions = $scope.getActionsById(fiber.id);\r\n  const inst = fiber.inst as Component | TagVirtualNode;\r\n\r\n  alt.element && (fiber.element = alt.element); //!\r\n\r\n  for (let i = 0; i < inst.children.length; i++) {\r\n    buildChildNode(inst.children, fiber, actions.map, i, fiber.eidx);\r\n  }\r\n\r\n  fiber.cc = inst.children.length;\r\n  $scope.setMountDeep(false);\r\n}\r\n\r\nfunction tryOptMemoSlot(fiber: Fiber, alt: Fiber, $scope: Scope) {\r\n  const actions = $scope.getActionsById(fiber.id);\r\n  const hasMove = Boolean(actions.move);\r\n  const hasRemove = Boolean(actions.remove);\r\n  const hasInsert = Boolean(actions.insert);\r\n  const hasReplace = Boolean(actions.replace);\r\n  const canOptimize = ((hasMove && !hasRemove) || (hasRemove && !hasMove)) && !hasInsert && !hasReplace;\r\n\r\n  if (!canOptimize || !detectIsStableMemoTree(fiber, $scope)) return;\r\n\r\n  hasMove && tryOptMov(fiber, alt, $scope);\r\n  hasRemove && buildChildNodes(fiber, alt, $scope);\r\n}\r\n\r\nfunction tryOptMov(fiber: Fiber, alt: Fiber, $scope: Scope) {\r\n  const actions = $scope.getActionsById(fiber.id);\r\n\r\n  buildChildNodes(fiber, alt, $scope, (fiber, key) => {\r\n    if (!actions.move[key]) return;\r\n    fiber.alt = new Fiber().mutate(fiber);\r\n    fiber.tag = UPDATE_EFFECT_TAG;\r\n    fiber.mask |= MOVE_MASK;\r\n    $scope.addCandidate(fiber);\r\n  });\r\n}\r\n\r\nfunction buildChildNodes(fiber: Fiber, alt: Fiber, $scope: Scope, onNode?: (fiber: Fiber, key: ElementKey) => void) {\r\n  const actions = $scope.getActionsById(fiber.id);\r\n  const inst = fiber.inst as Component | TagVirtualNode;\r\n  const children = inst.children;\r\n\r\n  alt.element && (fiber.element = alt.element); //!\r\n\r\n  for (let i = 0; i < children.length; i++) {\r\n    const key = getKey(children[i], i);\r\n    const $fiber = actions.map[key];\r\n\r\n    buildChildNode(children, fiber, actions.map, i, fiber.eidx);\r\n    onNode && onNode($fiber, key);\r\n  }\r\n\r\n  fiber.cc = children.length;\r\n  $scope.setMountDeep(false);\r\n}\r\n\r\nfunction buildChildNode(\r\n  children: Array<Instance>,\r\n  parent: Fiber,\r\n  altMap: Record<string, Fiber>,\r\n  idx: number,\r\n  startEidx: number,\r\n) {\r\n  const prevIdx = idx - 1;\r\n  const nextIdx = idx + 1;\r\n  const key = getKey(children[idx], idx);\r\n  const prevKey = getKey(children[prevIdx], prevIdx);\r\n  const nextKey = getKey(children[nextIdx], nextIdx);\r\n  const fiber = altMap[key];\r\n  const left = altMap[prevKey];\r\n  const right = altMap[nextKey];\r\n  const isFirst = idx === 0;\r\n  const isLast = idx === children.length - 1;\r\n\r\n  isFirst && (parent.child = fiber);\r\n  fiber.alt = null;\r\n  fiber.parent = parent;\r\n  fiber.tag = SKIP_EFFECT_TAG;\r\n  fiber.idx = idx;\r\n  left ? (fiber.eidx = left.eidx + (left.element ? 1 : left.cec)) : (fiber.eidx = startEidx);\r\n  right && (fiber.next = right);\r\n  isLast && (fiber.next = null);\r\n  notifyParents(fiber);\r\n}\r\n\r\nfunction getKey(inst: Instance, idx: number) {\r\n  const key = getElementKey(inst);\r\n  return key !== null ? key : createIndexKey(idx);\r\n}\r\n\r\nfunction notifyParents(fiber: Fiber, alt: Fiber = fiber) {\r\n  fiber.increment(alt.element ? 1 : alt.cec);\r\n  alt.mask & INSERTION_EFFECT_HOST_MASK && fiber.markHost(INSERTION_EFFECT_HOST_MASK);\r\n  alt.mask & LAYOUT_EFFECT_HOST_MASK && fiber.markHost(LAYOUT_EFFECT_HOST_MASK);\r\n  alt.mask & ASYNC_EFFECT_HOST_MASK && fiber.markHost(ASYNC_EFFECT_HOST_MASK);\r\n  alt.mask & ATOM_HOST_MASK && fiber.markHost(ATOM_HOST_MASK);\r\n}\r\n\r\nexport {\r\n  walk,\r\n  collectElements,\r\n  getFiberWithElement,\r\n  detectIsFiberAlive,\r\n  resolveSuspense,\r\n  createHookLoc,\r\n  tryOptStaticSlot,\r\n  tryOptMemoSlot,\r\n  notifyParents,\r\n};\r\n","import { HOOK_DELIMETER, YIELD_INTERVAL, TaskPriority } from '../constants';\r\nimport { getTime, detectIsPromise, detectIsFunction } from '../utils';\r\nimport { type WorkLoop, workLoop, detectIsBusy } from '../workloop';\r\nimport { type Callback } from '../shared';\r\nimport { EventEmitter } from '../emitter';\r\nimport { platform } from '../platform';\r\nimport { type Fiber } from '../fiber';\r\n\r\nclass MessageChannel extends EventEmitter<PortEvent> {\r\n  port1: MessagePort = null;\r\n  port2: MessagePort = null;\r\n\r\n  constructor() {\r\n    super();\r\n    this.port1 = new MessagePort(this);\r\n    this.port2 = new MessagePort(this);\r\n  }\r\n}\r\n\r\nclass MessagePort {\r\n  channel: MessageChannel;\r\n  offs: Array<Callback> = [];\r\n\r\n  constructor(channel: MessageChannel) {\r\n    this.channel = channel;\r\n  }\r\n\r\n  on(event: PortEvent, callback: PortListener) {\r\n    const off = this.channel.on(event, callback);\r\n\r\n    this.offs.push(off);\r\n  }\r\n\r\n  postMessage(value: unknown) {\r\n    platform.spawn(() => {\r\n      this.channel.emit('message', value);\r\n    });\r\n  }\r\n\r\n  unref() {\r\n    this.offs.forEach(x => x());\r\n  }\r\n}\r\n\r\nclass Scheduler {\r\n  private queue: Record<TaskPriority, Array<Task>> = {\r\n    [TaskPriority.HIGH]: [],\r\n    [TaskPriority.NORMAL]: [],\r\n    [TaskPriority.LOW]: [],\r\n  };\r\n  private deadline = 0;\r\n  private task: Task = null;\r\n  private scheduledCallback: WorkLoop = null;\r\n  private isMessageLoopRunning = false;\r\n  private channel: MessageChannel = null;\r\n  private port: MessagePort = null;\r\n\r\n  constructor() {\r\n    this.channel = new MessageChannel();\r\n    this.port = this.channel.port2;\r\n    this.channel.port1.on('message', this.performWorkUntilDeadline.bind(this));\r\n  }\r\n\r\n  reset() {\r\n    this.deadline = 0;\r\n    this.task = null;\r\n    this.scheduledCallback = null;\r\n    this.isMessageLoopRunning = false;\r\n  }\r\n\r\n  shouldYield() {\r\n    return getTime() >= this.deadline;\r\n  }\r\n\r\n  schedule(callback: TaskCallback, options: ScheduleCallbackOptions) {\r\n    const task = createTask(callback, options);\r\n\r\n    this.put(task);\r\n    this.execute();\r\n  }\r\n\r\n  detectIsTransition() {\r\n    return this.task.getIsTransition();\r\n  }\r\n\r\n  hasPrimaryTask() {\r\n    const { high, normal } = this.getQueues();\r\n    const hasPrimary = high.length > 0 || normal.length > 0;\r\n\r\n    return hasPrimary;\r\n  }\r\n\r\n  retain(fn: OnRestore) {\r\n    const { high, normal, low } = this.getQueues();\r\n    const priorityTasks = [...high, ...normal];\r\n    const { hasHostUpdate, hasChildUpdate } = collectFlags(this.task, priorityTasks);\r\n\r\n    if (hasHostUpdate || hasChildUpdate) {\r\n      const hasExact = detectHasExact(this.task, [...priorityTasks, ...low]);\r\n\r\n      if (hasExact) {\r\n        this.complete(this.task); // cancels the task\r\n      } else {\r\n        this.defer(this.task); // cancels and restarts the task from the beginning\r\n      }\r\n\r\n      this.task.markAsObsolete();\r\n    } else {\r\n      this.task.setOnRestore(fn);\r\n      this.defer(this.task); // runs the task from the same place\r\n    }\r\n  }\r\n\r\n  private complete(task: Task) {\r\n    task.complete();\r\n  }\r\n\r\n  private put(task: Task) {\r\n    const queue = this.queue[task.getPriority()];\r\n\r\n    if (task.getIsTransition()) {\r\n      const loc = task.loc();\r\n      const tasks = queue.filter(x => x.loc() !== loc);\r\n\r\n      queue.splice(0, queue.length, ...tasks);\r\n    }\r\n\r\n    queue.push(task);\r\n  }\r\n\r\n  private pick(queue: Array<Task>) {\r\n    if (queue.length === 0) return false;\r\n    this.task = queue.shift();\r\n    this.run(this.task);\r\n\r\n    return true;\r\n  }\r\n\r\n  private run(task: Task) {\r\n    try {\r\n      task.run();\r\n      task.getForceAsync() ? this.requestCallbackAsync(workLoop) : this.requestCallback(workLoop);\r\n    } catch (something) {\r\n      if (detectIsPromise(something)) {\r\n        something.finally(() => {\r\n          this.run(task);\r\n        });\r\n      } else {\r\n        throw something;\r\n      }\r\n    }\r\n  }\r\n\r\n  private execute() {\r\n    const isBusy = detectIsBusy();\r\n\r\n    if (!isBusy && !this.isMessageLoopRunning) {\r\n      const { high, normal, low } = this.getQueues();\r\n\r\n      this.pick(high) || this.pick(normal) || this.pick(low);\r\n    }\r\n  }\r\n\r\n  private requestCallbackAsync(callback: WorkLoop) {\r\n    this.scheduledCallback = callback;\r\n\r\n    if (!this.isMessageLoopRunning) {\r\n      this.isMessageLoopRunning = true;\r\n      this.port.postMessage(null);\r\n    }\r\n  }\r\n\r\n  private requestCallback(callback: WorkLoop) {\r\n    const something = callback(false);\r\n\r\n    if (detectIsPromise(something)) {\r\n      something.finally(() => {\r\n        this.requestCallback(callback);\r\n      });\r\n    } else {\r\n      this.task = null;\r\n      this.execute();\r\n    }\r\n  }\r\n\r\n  private performWorkUntilDeadline() {\r\n    if (this.scheduledCallback) {\r\n      this.deadline = getTime() + YIELD_INTERVAL;\r\n      const something = this.scheduledCallback(true);\r\n\r\n      if (detectIsPromise(something)) {\r\n        something.finally(() => {\r\n          this.port.postMessage(null);\r\n        });\r\n      } else if (something) {\r\n        this.port.postMessage(null);\r\n      } else {\r\n        this.complete(this.task);\r\n        this.reset();\r\n        this.execute();\r\n      }\r\n    } else {\r\n      this.isMessageLoopRunning = false;\r\n    }\r\n  }\r\n\r\n  private defer(task: Task) {\r\n    const { low } = this.getQueues();\r\n\r\n    low.unshift(task);\r\n  }\r\n\r\n  private getQueues() {\r\n    const high = this.queue[TaskPriority.HIGH];\r\n    const normal = this.queue[TaskPriority.NORMAL];\r\n    const low = this.queue[TaskPriority.LOW];\r\n\r\n    return {\r\n      high,\r\n      normal,\r\n      low,\r\n    };\r\n  }\r\n}\r\n\r\nclass Task {\r\n  private __id: number;\r\n  private priority: TaskPriority;\r\n  private forceAsync = false;\r\n  private isTransition = false;\r\n  private isObsolete = false;\r\n  private callback: TaskCallback = null;\r\n  private createLoc?: CreateLoc = null;\r\n  private onRestore?: OnRestore = null;\r\n  private onTransitionEnd?: Callback = null;\r\n  private static nextTaskId = 0;\r\n\r\n  constructor(callback: TaskCallback, priority: TaskPriority, forceAsync: boolean) {\r\n    this.__id = ++Task.nextTaskId;\r\n    this.callback = callback;\r\n    this.priority = priority;\r\n    this.forceAsync = forceAsync;\r\n  }\r\n\r\n  getPriority() {\r\n    return this.priority;\r\n  }\r\n\r\n  getForceAsync() {\r\n    return this.forceAsync;\r\n  }\r\n\r\n  setIsTransition(value: boolean) {\r\n    this.isTransition = value;\r\n  }\r\n\r\n  getIsTransition() {\r\n    return this.isTransition;\r\n  }\r\n\r\n  run() {\r\n    this.isObsolete = false; // !\r\n    this.callback(this.onRestore);\r\n    this.onRestore = null;\r\n  }\r\n\r\n  complete() {\r\n    this.isTransition && !this.isObsolete && detectIsFunction(this.onTransitionEnd) && this.onTransitionEnd();\r\n  }\r\n\r\n  markAsObsolete() {\r\n    this.isObsolete = true;\r\n  }\r\n\r\n  getIsObsolete() {\r\n    return this.isObsolete;\r\n  }\r\n\r\n  setOnRestore(fn: OnRestore) {\r\n    this.onRestore = fn;\r\n  }\r\n\r\n  setCreateLoc(fn: CreateLoc) {\r\n    this.createLoc = fn;\r\n  }\r\n\r\n  loc() {\r\n    const [loc] = this.createLoc().split(HOOK_DELIMETER);\r\n\r\n    return loc;\r\n  }\r\n\r\n  $loc() {\r\n    return this.createLoc();\r\n  }\r\n\r\n  setOnTransitionEnd(fn: Callback) {\r\n    this.onTransitionEnd = fn;\r\n  }\r\n}\r\n\r\nfunction collectFlags(task: Task, tasks: Array<Task>) {\r\n  const loc = task.loc();\r\n  let hasTopUpdate = false;\r\n  let hasHostUpdate = false;\r\n  let hasChildUpdate = false;\r\n\r\n  for (let i = 0; i < tasks.length; i++) {\r\n    const task = tasks[i];\r\n    const $loc = task.loc();\r\n\r\n    if ($loc.length < loc.length && loc.indexOf($loc) === 0) {\r\n      hasTopUpdate = true;\r\n    } else if ($loc === loc) {\r\n      hasHostUpdate = true;\r\n    } else if ($loc.length > loc.length && $loc.indexOf(loc) === 0) {\r\n      hasChildUpdate = true;\r\n    }\r\n  }\r\n\r\n  return {\r\n    hasTopUpdate,\r\n    hasHostUpdate,\r\n    hasChildUpdate,\r\n  };\r\n}\r\n\r\nfunction detectHasExact(task: Task, tasks: Array<Task>) {\r\n  const $loc = task.$loc();\r\n  const hasExact = tasks.some(x => x.$loc() === $loc);\r\n\r\n  return hasExact;\r\n}\r\n\r\nfunction createTask(callback: TaskCallback, options: Omit<ScheduleCallbackOptions, 'onCompleted'>) {\r\n  const { priority = TaskPriority.NORMAL, forceAsync = false, isTransition = false, loc, onTransitionEnd } = options;\r\n  const task = new Task(callback, priority, forceAsync);\r\n\r\n  task.setIsTransition(isTransition);\r\n  task.setOnTransitionEnd(onTransitionEnd);\r\n  task.setCreateLoc(loc || rootLoc);\r\n\r\n  return task;\r\n}\r\n\r\nconst rootLoc: CreateLoc = () => '>';\r\n\r\ntype PortEvent = 'message';\r\ntype PortListener = (value: unknown) => void;\r\n\r\ntype TaskCallback = (fn: OnRestore) => void;\r\ntype CreateLoc = () => string;\r\n\r\nexport type OnRestoreOptions = {\r\n  fiber: Fiber;\r\n  setValue?: Callback;\r\n  resetValue?: Callback;\r\n};\r\n\r\nexport type OnRestore = (options: OnRestoreOptions) => void;\r\n\r\nexport type ScheduleCallbackOptions = {\r\n  priority: TaskPriority;\r\n  forceAsync?: boolean;\r\n  isTransition?: boolean;\r\n  loc?: () => string;\r\n  onTransitionEnd?: Callback;\r\n};\r\n\r\nconst scheduler = new Scheduler();\r\n\r\nexport { scheduler };\r\n","import { type Callback } from '../shared';\r\nimport { useState } from '../use-state';\r\nimport { useEvent } from '../use-event';\r\nimport { $$scope } from '../scope';\r\n\r\nfunction startTransition(callback: Callback) {\r\n  const $scope = $$scope();\r\n\r\n  $scope.setIsTransitionZone(true);\r\n  callback();\r\n  $scope.setIsTransitionZone(false);\r\n}\r\n\r\nfunction useTransition(): [boolean, typeof startTransition] {\r\n  const [isPending, setIsPending] = useState(false);\r\n  const $scope = $$scope();\r\n  const $startTransition = useEvent((callback: Callback) => {\r\n    setIsPending(true);\r\n    $scope.setOnTransitionEnd(() => setIsPending(false));\r\n    startTransition(callback);\r\n    $scope.setOnTransitionEnd(null);\r\n  });\r\n\r\n  return [isPending, $startTransition];\r\n}\r\n\r\nexport { startTransition, useTransition };\r\n","import { INSERTION_EFFECT_HOST_MASK, LAYOUT_EFFECT_HOST_MASK, ASYNC_EFFECT_HOST_MASK } from '../constants';\r\nimport { __useCursor as useCursor } from '../internal';\r\nimport { type Hook, type HookValue } from '../fiber';\r\nimport { detectIsFiberAlive } from '../walk';\r\nimport { detectIsFunction } from '../utils';\r\nimport { useMemo } from '../use-memo';\r\nimport { $$scope } from '../scope';\r\n\r\nconst $$useEffect = Symbol('use-effect');\r\n\r\nfunction createEffect(token: Symbol, type: EffectType) {\r\n  function useEffect(effect: Effect, deps: Array<any> = [{}]) {\r\n    const $scope = $$scope();\r\n    const cursor = useCursor();\r\n    const scope = useMemo<UseEffectValue>(() => ({ token, cleanup: undefined }), []);\r\n    const isInsertionEffect = type === EffectType.INSERTION;\r\n    const isLayoutEffect = type === EffectType.LAYOUT;\r\n    const isAsyncEffect = type === EffectType.ASYNC;\r\n\r\n    isInsertionEffect && cursor.markHost(INSERTION_EFFECT_HOST_MASK);\r\n    isLayoutEffect && cursor.markHost(LAYOUT_EFFECT_HOST_MASK);\r\n    isAsyncEffect && cursor.markHost(ASYNC_EFFECT_HOST_MASK);\r\n\r\n    useMemo(() => {\r\n      const runEffect = () => {\r\n        scope.cleanup = effect();\r\n\r\n        if (isAsyncEffect && detectIsFunction(scope.cleanup) && !detectIsFiberAlive(cursor)) {\r\n          scope.cleanup();\r\n        }\r\n      };\r\n\r\n      isInsertionEffect && $scope.addInsertionEffect(runEffect);\r\n      isLayoutEffect && $scope.addLayoutEffect(runEffect);\r\n      isAsyncEffect && $scope.addAsyncEffect(runEffect);\r\n\r\n      detectIsFunction(scope.cleanup) && scope.cleanup();\r\n\r\n      return null;\r\n    }, deps);\r\n  }\r\n\r\n  function dropEffects(hook: Hook<HookValue<UseEffectValue>>) {\r\n    for (const { value: effect } of hook.values) {\r\n      effect && effect.token === token && detectIsFunction(effect.cleanup) && effect.cleanup();\r\n    }\r\n  }\r\n\r\n  return {\r\n    useEffect,\r\n    dropEffects,\r\n  };\r\n}\r\n\r\nexport type UseEffectValue = {\r\n  token: Symbol;\r\n  cleanup: DropEffect;\r\n};\r\n\r\nexport type DropEffect = void | (() => void);\r\n\r\nexport type Effect = () => DropEffect;\r\n\r\nexport enum EffectType {\r\n  ASYNC = 'ASYNC',\r\n  LAYOUT = 'LAYOUT',\r\n  INSERTION = 'INSERTION',\r\n}\r\n\r\nconst { useEffect, dropEffects } = createEffect($$useEffect, EffectType.ASYNC);\r\n\r\nexport { useEffect, dropEffects, createEffect };\r\n","import { createEffect, EffectType } from '../use-effect';\r\n\r\nconst $$useInsertionEffect = Symbol('use-insertion-effect');\r\nconst { useEffect: useInsertionEffect, dropEffects: dropInsertionEffects } = createEffect(\r\n  $$useInsertionEffect,\r\n  EffectType.INSERTION,\r\n);\r\n\r\nexport { useInsertionEffect, dropInsertionEffects };\r\n","import { createEffect, EffectType } from '../use-effect';\r\n\r\nconst $$useLayoutEffect = Symbol('use-layout-effect');\r\nconst { useEffect: useLayoutEffect, dropEffects: dropLayoutEffects } = createEffect(\r\n  $$useLayoutEffect,\r\n  EffectType.LAYOUT,\r\n);\r\n\r\nexport { useLayoutEffect, dropLayoutEffects };\r\n","import { type Fiber, type Hook, type HookValue } from '../fiber';\r\nimport { type UseEffectValue, dropEffects } from '../use-effect';\r\nimport { dropInsertionEffects } from '../use-insertion-effect';\r\nimport { dropLayoutEffects } from '../use-layout-effect';\r\nimport { removeScope, $$scope } from '../scope';\r\nimport { detectIsUndefined } from '../utils';\r\nimport { type Callback } from '../shared';\r\nimport { walk } from '../walk';\r\nimport {\r\n  INSERTION_EFFECT_HOST_MASK,\r\n  LAYOUT_EFFECT_HOST_MASK,\r\n  ASYNC_EFFECT_HOST_MASK,\r\n  ATOM_HOST_MASK,\r\n} from '../constants';\r\n\r\nconst mask = INSERTION_EFFECT_HOST_MASK | LAYOUT_EFFECT_HOST_MASK | ASYNC_EFFECT_HOST_MASK | ATOM_HOST_MASK;\r\n\r\nfunction unmountFiber(fiber: Fiber) {\r\n  if (!(fiber.mask & mask)) return;\r\n  walk(fiber, onWalk);\r\n}\r\n\r\nfunction onWalk(fiber: Fiber, skip: Callback) {\r\n  const { hook } = fiber;\r\n\r\n  if (!(fiber.mask & mask)) return skip();\r\n  if (hook?.values.length > 0) {\r\n    const $hook = hook as Hook<HookValue<UseEffectValue>>;\r\n\r\n    fiber.mask & INSERTION_EFFECT_HOST_MASK && dropInsertionEffects($hook);\r\n    fiber.mask & LAYOUT_EFFECT_HOST_MASK && dropLayoutEffects($hook);\r\n    fiber.mask & ASYNC_EFFECT_HOST_MASK && dropEffects($hook);\r\n  }\r\n\r\n  if (hook?.atoms) {\r\n    for (const [_, cleanup] of hook.atoms) {\r\n      cleanup();\r\n    }\r\n\r\n    hook.atoms = null;\r\n  }\r\n}\r\n\r\nfunction unmountRoot(rootId: number, onCompleted: () => void) {\r\n  if (detectIsUndefined(rootId)) return;\r\n  const $scope = $$scope(rootId);\r\n\r\n  unmountFiber($scope.getRoot());\r\n  $scope.unsubscribeEvents();\r\n  removeScope(rootId);\r\n  onCompleted();\r\n}\r\n\r\nexport { unmountFiber, unmountRoot };\r\n","import { platform, detectIsSSR } from '../platform';\r\nimport {\r\n  CREATE_EFFECT_TAG,\r\n  UPDATE_EFFECT_TAG,\r\n  DELETE_EFFECT_TAG,\r\n  SKIP_EFFECT_TAG,\r\n  INSERTION_EFFECT_HOST_MASK,\r\n  LAYOUT_EFFECT_HOST_MASK,\r\n  ASYNC_EFFECT_HOST_MASK,\r\n  ATOM_HOST_MASK,\r\n  MOVE_MASK,\r\n  FLUSH_MASK,\r\n  Flag,\r\n  TaskPriority,\r\n} from '../constants';\r\nimport {\r\n  logError,\r\n  detectIsEmpty,\r\n  detectIsFalsy,\r\n  detectIsArray,\r\n  detectIsFunction,\r\n  detectIsTextBased,\r\n  detectIsPromise,\r\n  formatErrorMsg,\r\n  createIndexKey,\r\n  trueFn,\r\n} from '../utils';\r\nimport { type Scope, getRootId, setRootId, $$scope, replaceScope } from '../scope';\r\nimport { type Component, detectIsComponent } from '../component';\r\nimport { type ElementKey, type Instance, type Callback } from '../shared';\r\nimport { Fiber, getHook, Hook } from '../fiber';\r\nimport {\r\n  type CanHasChildren,\r\n  Text,\r\n  detectIsVirtualNode,\r\n  detectIsVirtualNodeFactory,\r\n  getElementKey,\r\n  hasElementFlag,\r\n  createReplacer,\r\n  detectAreSameInstanceTypes,\r\n  hasChildrenProp,\r\n} from '../view';\r\nimport { detectIsMemo } from '../memo';\r\nimport {\r\n  walk,\r\n  getFiberWithElement,\r\n  detectIsFiberAlive,\r\n  resolveSuspense,\r\n  notifyParents,\r\n  tryOptStaticSlot,\r\n  tryOptMemoSlot,\r\n  createHookLoc,\r\n} from '../walk';\r\nimport { type ScheduleCallbackOptions, type OnRestore, type OnRestoreOptions, scheduler } from '../scheduler';\r\nimport { Fragment, detectIsFragment } from '../fragment';\r\nimport { startTransition } from '../start-transition';\r\nimport { unmountFiber } from '../unmount';\r\nimport { addBatch } from '../batch';\r\n\r\nexport type WorkLoop = (isAsync: boolean) => boolean | Promise<unknown> | null;\r\n\r\nfunction workLoop(isAsync: boolean): boolean | Promise<unknown> | null {\r\n  const $scope = $$scope();\r\n  const wipFiber = $scope.getWorkInProgress();\r\n  let unit = $scope.getNextUnitOfWork();\r\n  let shouldYield = false;\r\n\r\n  try {\r\n    while (unit && !shouldYield) {\r\n      unit = performUnitOfWork(unit, $scope);\r\n      shouldYield = isAsync && scheduler.shouldYield();\r\n      $scope.setNextUnitOfWork(unit);\r\n\r\n      if (shouldYield && scheduler.detectIsTransition() && scheduler.hasPrimaryTask()) {\r\n        fork($scope);\r\n        return false;\r\n      }\r\n    }\r\n\r\n    if (!unit && wipFiber) {\r\n      commit($scope);\r\n    }\r\n  } catch (err) {\r\n    if (detectIsPromise(err)) {\r\n      return err;\r\n    } else {\r\n      const emitter = $scope.getEmitter();\r\n\r\n      $scope.keepRoot(); // !\r\n      emitter.emit('error', String(err));\r\n\r\n      if (!isAsync) {\r\n        throw err;\r\n      } else {\r\n        logError('err', err);\r\n      }\r\n\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return Boolean(unit); // has more work\r\n}\r\n\r\nfunction performUnitOfWork(fiber: Fiber, $scope: Scope): Fiber | null {\r\n  const wipFiber = $scope.getWorkInProgress();\r\n  const isDeepWalking = $scope.getMountDeep();\r\n  const isStream = $scope.getIsStreamZone();\r\n  const emitter = $scope.getEmitter();\r\n  const children = (fiber.inst as CanHasChildren).children;\r\n  const hasChildren = isDeepWalking && children && children.length > 0;\r\n\r\n  fiber.hook && (fiber.hook.idx = 0);\r\n\r\n  if (hasChildren) {\r\n    const child = mountChild(fiber, $scope);\r\n\r\n    isStream && emitter.emit('chunk', child);\r\n\r\n    return child;\r\n  } else {\r\n    while (fiber.parent && fiber !== wipFiber) {\r\n      const next = mountSibling(fiber, $scope);\r\n\r\n      isStream && emitter.emit('chunk', fiber);\r\n\r\n      if (next) {\r\n        isStream && emitter.emit('chunk', next);\r\n        return next;\r\n      }\r\n\r\n      fiber = fiber.parent;\r\n    }\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nfunction mountChild(parent: Fiber, $scope: Scope) {\r\n  $scope.navToChild();\r\n  const $hook = parent.child ? parent.child.hook || null : null; // from previous fiber after throwing promise\r\n  const $inst = parent.inst;\r\n  const idx = 0;\r\n  const children = ($inst as CanHasChildren).children;\r\n  const inst = setupInstance(children, idx);\r\n  const alt = getAlternate(parent, inst, idx, $scope);\r\n  const fiber = createFiber(alt, inst, idx);\r\n\r\n  fiber.hook = $hook || fiber.hook;\r\n  fiber.parent = parent;\r\n  parent.child = fiber;\r\n  fiber.eidx = parent.element ? 0 : parent.eidx;\r\n\r\n  share(fiber, parent, inst, $scope);\r\n\r\n  return fiber;\r\n}\r\n\r\nfunction mountSibling(left: Fiber, $scope: Scope) {\r\n  $scope.navToSibling();\r\n  const $hook = left.next ? left.next.hook || null : null; // from previous fiber after throwing promise\r\n  const $inst = left.parent.inst;\r\n  const idx = $scope.getMountIndex();\r\n  const children = ($inst as CanHasChildren).children;\r\n  const inst = setupInstance(children, idx);\r\n  const hasSibling = Boolean(inst);\r\n\r\n  if (!hasSibling) {\r\n    $scope.navToParent();\r\n    $scope.setMountDeep(false);\r\n\r\n    return null;\r\n  }\r\n\r\n  $scope.setMountDeep(true);\r\n  const alt = getAlternate(left, inst, idx, $scope);\r\n  const fiber = createFiber(alt, inst, idx);\r\n\r\n  fiber.hook = $hook || fiber.hook;\r\n  fiber.parent = left.parent;\r\n  left.next = fiber;\r\n  fiber.eidx = left.eidx + (left.element ? (left.hook?.getIsPortal() ? 0 : 1) : left.cec);\r\n\r\n  share(fiber, left, inst, $scope);\r\n\r\n  return fiber;\r\n}\r\n\r\nfunction setupInstance(children: Array<Instance>, idx: number): Instance {\r\n  let inst: Instance = null;\r\n\r\n  if (children && idx < children.length) {\r\n    const child = children[idx];\r\n\r\n    children[idx] = detectIsArray(child)\r\n      ? Fragment({ slot: child })\r\n      : detectIsTextBased(child)\r\n      ? Text(child)\r\n      : child || supportConditional(child);\r\n    inst = children[idx];\r\n  }\r\n\r\n  return inst;\r\n}\r\n\r\nfunction share(fiber: Fiber, prev: Fiber, inst: Instance, $scope: Scope) {\r\n  const { alt } = fiber;\r\n  const shouldMount = alt && detectIsMemo(inst) ? shouldUpdate(fiber, inst, $scope) : true;\r\n\r\n  $scope.setCursorFiber(fiber);\r\n  fiber.inst = inst;\r\n\r\n  if (alt && alt.mask & MOVE_MASK) {\r\n    fiber.mask |= MOVE_MASK;\r\n    alt.mask &= ~MOVE_MASK;\r\n  }\r\n\r\n  fiber.hook && (fiber.hook.owner = fiber); // !\r\n\r\n  if (shouldMount) {\r\n    fiber.inst = mount(fiber, prev, $scope);\r\n    alt && reconcile(fiber, alt, $scope);\r\n    setup(fiber, alt);\r\n  } else if (fiber.mask & MOVE_MASK) {\r\n    fiber.tag = UPDATE_EFFECT_TAG;\r\n  }\r\n\r\n  $scope.addCandidate(fiber); // !\r\n}\r\n\r\nfunction createFiber(alt: Fiber, next: Instance, idx: number) {\r\n  const prev = alt ? alt.inst : null;\r\n  const fiber = new Fiber(idx, getHook(alt, prev, next));\r\n\r\n  fiber.alt = alt || null;\r\n\r\n  return fiber;\r\n}\r\n\r\nfunction getAlternate(fiber: Fiber, inst: Instance, idx: number, $scope: Scope) {\r\n  const isChild = idx === 0;\r\n  const parent = isChild ? fiber : fiber.parent;\r\n  if (!fiber.hook?.getIsWip() && parent.tag === CREATE_EFFECT_TAG) return null; // !\r\n  const parentId = isChild ? fiber.id : fiber.parent.id;\r\n  const key = getElementKey(inst);\r\n  const actions = $scope.getActionsById(parentId);\r\n  let alt: Fiber = null;\r\n\r\n  if (key !== null && actions) {\r\n    const isMove = actions.move && Boolean(actions.move[key]);\r\n    const isStable = actions.stable && Boolean(actions.stable[key]);\r\n\r\n    if (isMove || isStable) {\r\n      alt = actions.map[key];\r\n      isMove && (alt.mask |= MOVE_MASK);\r\n    }\r\n  } else {\r\n    if (fiber.alt) {\r\n      alt = isChild ? fiber.alt.child : fiber.alt.next;\r\n    } else {\r\n      alt = actions ? actions.map[createIndexKey(idx)] || null : null;\r\n    }\r\n  }\r\n\r\n  return alt;\r\n}\r\n\r\nfunction reconcile(fiber: Fiber, alt: Fiber, $scope: Scope) {\r\n  const { id, inst } = fiber;\r\n  const areSameTypes = detectAreSameInstanceTypes(alt.inst, inst);\r\n  const nextChildren = (inst as CanHasChildren).children;\r\n\r\n  if (!areSameTypes) {\r\n    $scope.addDeletion(alt);\r\n  } else if (hasChildrenProp(alt.inst) && nextChildren && alt.cc !== 0) {\r\n    const hasSameCount = alt.cc === nextChildren.length;\r\n    const check = hasElementFlag(inst, Flag.SKIP_SCAN_OPT) ? !hasSameCount : true;\r\n\r\n    if (check) {\r\n      const { prevKeys, nextKeys, prevKeysMap, nextKeysMap, keyedFibersMap } = extractKeys(alt.child, nextChildren);\r\n      const flush = nextKeys.length === 0;\r\n      let size = Math.max(prevKeys.length, nextKeys.length);\r\n      let p = 0;\r\n      let n = 0;\r\n\r\n      $scope.addActionMap(id, keyedFibersMap);\r\n\r\n      for (let i = 0; i < size; i++) {\r\n        const nextKey = nextKeys[i - n] ?? null;\r\n        const prevKey = prevKeys[i - p] ?? null;\r\n        const prevKeyFiber = keyedFibersMap[prevKey] || null;\r\n\r\n        if (nextKey !== prevKey) {\r\n          if (nextKey !== null && !prevKeysMap[nextKey]) {\r\n            if (prevKey !== null && !nextKeysMap[prevKey]) {\r\n              $scope.addReplaceAction(id, nextKey);\r\n              $scope.addDeletion(prevKeyFiber);\r\n            } else {\r\n              $scope.addInsertAction(id, nextKey);\r\n              p++;\r\n              size++;\r\n            }\r\n          } else if (!nextKeysMap[prevKey]) {\r\n            $scope.addRemoveAction(id, prevKey);\r\n            $scope.addDeletion(prevKeyFiber);\r\n            flush && (prevKeyFiber.mask |= FLUSH_MASK);\r\n            n++;\r\n            size++;\r\n          } else if (nextKeysMap[prevKey] && nextKeysMap[nextKey]) {\r\n            $scope.addMoveAction(id, nextKey);\r\n          }\r\n        } else if (nextKey !== null) {\r\n          $scope.addStableAction(id, nextKey);\r\n        }\r\n      }\r\n\r\n      hasElementFlag(inst, Flag.STATIC_SLOT_OPT) && tryOptStaticSlot(fiber, alt, $scope);\r\n      hasElementFlag(inst, Flag.MEMO_SLOT_OPT) && tryOptMemoSlot(fiber, alt, $scope);\r\n    }\r\n  }\r\n}\r\n\r\nfunction setup(fiber: Fiber, alt: Fiber) {\r\n  const inst = fiber.inst;\r\n  let isUpdate = false;\r\n\r\n  fiber.parent.tag === CREATE_EFFECT_TAG && (fiber.tag = fiber.parent.tag);\r\n  isUpdate =\r\n    alt &&\r\n    fiber.tag !== CREATE_EFFECT_TAG &&\r\n    detectAreSameInstanceTypes(alt.inst, inst) &&\r\n    getElementKey(alt.inst) === getElementKey(inst);\r\n  fiber.tag = isUpdate ? UPDATE_EFFECT_TAG : CREATE_EFFECT_TAG;\r\n\r\n  if (!fiber.element) {\r\n    if (isUpdate && alt.element) {\r\n      fiber.element = alt.element;\r\n    } else if (detectIsVirtualNode(fiber.inst)) {\r\n      fiber.element = platform.createElement(fiber.inst);\r\n    }\r\n  }\r\n\r\n  fiber.element && !fiber.hook?.getIsPortal() && fiber.increment();\r\n}\r\n\r\nfunction shouldUpdate(fiber: Fiber, inst: Instance, $scope: Scope) {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    if ($scope.getIsHot()) return true;\r\n  }\r\n\r\n  const alt = fiber.alt;\r\n  const pc = alt.inst as Component;\r\n  const nc = inst as Component;\r\n\r\n  if (nc.type !== pc.type || nc.shouldUpdate(pc.props, nc.props)) return true;\r\n\r\n  $scope.setMountDeep(false);\r\n  fiber.tag = SKIP_EFFECT_TAG;\r\n  fiber.child = alt.child;\r\n  fiber.child.parent = fiber;\r\n  fiber.hook = alt.hook;\r\n  fiber.cc = alt.cc;\r\n  fiber.cec = alt.cec;\r\n  alt.element && (fiber.element = alt.element);\r\n\r\n  const diff = fiber.eidx - alt.eidx;\r\n  const deep = diff !== 0;\r\n\r\n  deep && walk(fiber.child, onWalkInShouldUpdate(diff));\r\n  notifyParents(fiber, alt);\r\n\r\n  return false;\r\n}\r\n\r\nconst onWalkInShouldUpdate = (diff: number) => ($fiber: Fiber, skip: Callback) => {\r\n  $fiber.eidx += diff;\r\n  if ($fiber.element) return skip();\r\n};\r\n\r\nfunction mount(fiber: Fiber, prev: Fiber, $scope: Scope) {\r\n  let inst = fiber.inst;\r\n  const isComponent = detectIsComponent(inst);\r\n  const component = inst as Component;\r\n\r\n  if (isComponent) {\r\n    try {\r\n      let result = component.type(component.props);\r\n\r\n      if (detectIsArray(result)) {\r\n        !detectIsFragment(component) && (result = Fragment({ slot: result }));\r\n      } else if (detectIsTextBased(result)) {\r\n        result = Text(result);\r\n      }\r\n\r\n      component.children = result as Array<Instance>;\r\n    } catch (err) {\r\n      if (detectIsPromise(err)) {\r\n        const promise = err;\r\n        const isSSR = detectIsSSR();\r\n        const reset = createResetClosure(fiber, prev, $scope);\r\n\r\n        if (!isSSR) {\r\n          const suspense = resolveSuspense(fiber);\r\n\r\n          if (suspense) {\r\n            suspense.hook.setIsPeinding(true);\r\n            $scope.getAwaiter().add(suspense.hook, promise);\r\n          } else {\r\n            reset();\r\n            throw err;\r\n          }\r\n        } else {\r\n          reset();\r\n          throw err;\r\n        }\r\n      } else {\r\n        component.children = [];\r\n        fiber.setError(err);\r\n      }\r\n    }\r\n  } else if (detectIsVirtualNodeFactory(inst)) {\r\n    inst = inst();\r\n  }\r\n\r\n  if (hasChildrenProp(inst)) {\r\n    inst.children = detectIsArray(inst.children) ? inst.children : [inst.children];\r\n    isComponent && component.children.length === 0 && component.children.push(createReplacer());\r\n    fiber.cc = inst.children.length;\r\n  }\r\n\r\n  return inst;\r\n}\r\n\r\nconst createResetClosure = (fiber: Fiber, prev: Fiber, $scope: Scope) => () => {\r\n  if (prev) {\r\n    fiber.hook.owner = null;\r\n    fiber.hook.idx = 0;\r\n    $scope.navToPrev();\r\n    $scope.setNextUnitOfWork(prev);\r\n    Fiber.setNextId(prev.id);\r\n  } else {\r\n    fiber.id = Fiber.incrementId();\r\n    fiber.cec = fiber.alt.cec;\r\n  }\r\n};\r\n\r\nfunction extractKeys(alt: Fiber, children: Array<Instance>) {\r\n  let nextFiber = alt;\r\n  let idx = 0;\r\n  const prevKeys: Array<ElementKey> = [];\r\n  const nextKeys: Array<ElementKey> = [];\r\n  const prevKeysMap: Record<ElementKey, boolean> = {};\r\n  const nextKeysMap: Record<ElementKey, boolean> = {};\r\n  const keyedFibersMap: Record<ElementKey, Fiber> = {};\r\n  const usedKeysMap: Record<ElementKey, boolean> = {};\r\n\r\n  while (nextFiber || idx < children.length) {\r\n    if (nextFiber) {\r\n      const key = getElementKey(nextFiber.inst);\r\n      const prevKey = detectIsEmpty(key) ? createIndexKey(idx) : key;\r\n\r\n      if (!prevKeysMap[prevKey]) {\r\n        prevKeysMap[prevKey] = true; // !\r\n        prevKeys.push(prevKey);\r\n      }\r\n\r\n      keyedFibersMap[prevKey] = nextFiber;\r\n    }\r\n\r\n    if (idx < children.length) {\r\n      const inst = children[idx];\r\n      const key = getElementKey(inst);\r\n      const nextKey = detectIsEmpty(key) ? createIndexKey(idx) : key;\r\n\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        if (usedKeysMap[nextKey]) {\r\n          logError(formatErrorMsg(`The key of node [${nextKey}] already has been used!`), [inst]);\r\n        }\r\n      }\r\n\r\n      if (!nextKeysMap[nextKey]) {\r\n        nextKeysMap[nextKey] = true; // !\r\n        nextKeys.push(nextKey);\r\n      }\r\n\r\n      usedKeysMap[nextKey] = true;\r\n    }\r\n\r\n    nextFiber = nextFiber ? nextFiber.next : null;\r\n    idx++;\r\n  }\r\n\r\n  return {\r\n    prevKeys,\r\n    nextKeys,\r\n    prevKeysMap,\r\n    nextKeysMap,\r\n    keyedFibersMap,\r\n  };\r\n}\r\n\r\nfunction supportConditional(inst: Instance) {\r\n  return detectIsFalsy(inst) ? createReplacer() : inst;\r\n}\r\n\r\nfunction commit($scope: Scope) {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    process.env.NODE_ENV === 'development' && $scope.setIsHot(false);\r\n  }\r\n\r\n  const rootId = getRootId();\r\n  const wip = $scope.getWorkInProgress();\r\n  const deletions = $scope.getDeletions();\r\n  const candidates = $scope.getCandidates();\r\n  const isUpdateZone = $scope.getIsUpdateZone();\r\n  const awaiter = $scope.getAwaiter();\r\n  const unmounts: Array<Fiber> = [];\r\n  const isTransition = scheduler.detectIsTransition();\r\n  const inst = wip.inst as Component;\r\n  const mask = INSERTION_EFFECT_HOST_MASK | LAYOUT_EFFECT_HOST_MASK | ASYNC_EFFECT_HOST_MASK;\r\n\r\n  // !\r\n  for (const fiber of deletions) {\r\n    const canAsync = fiber.mask & ATOM_HOST_MASK && !(fiber.mask & mask);\r\n\r\n    canAsync ? unmounts.push(fiber) : unmountFiber(fiber);\r\n    fiber.tag = DELETE_EFFECT_TAG;\r\n    platform.commit(fiber);\r\n  }\r\n\r\n  isUpdateZone && sync(wip);\r\n  $scope.runInsertionEffects();\r\n\r\n  for (const fiber of candidates) {\r\n    const item = fiber.inst as CanHasChildren;\r\n\r\n    fiber.tag !== SKIP_EFFECT_TAG && platform.commit(fiber);\r\n    fiber.alt = null;\r\n    item.children && (item.children = null);\r\n  }\r\n\r\n  wip.alt = null;\r\n  wip.hook?.setIsWip(false);\r\n  inst.children = null;\r\n  platform.finishCommit(); // !\r\n  $scope.runLayoutEffects();\r\n  $scope.runAsyncEffects();\r\n  awaiter.resolve(onResolve(rootId, isTransition));\r\n  unmounts.length > 0 && platform.raf(onUnmount(unmounts));\r\n  cleanup($scope);\r\n}\r\n\r\nconst onResolve = (rootId: number, isTransition: boolean) => (hook: Hook) => {\r\n  const update = createUpdate(rootId, hook);\r\n  isTransition ? startTransition(update) : update();\r\n};\r\n\r\nconst onUnmount = (fibers: Array<Fiber>) => () => fibers.forEach(unmountFiber);\r\n\r\nfunction cleanup($scope: Scope, fromFork = false) {\r\n  $scope.cleanup();\r\n  !fromFork && $scope.getEmitter().emit('finish');\r\n  $scope.runAfterCommit(); // !\r\n}\r\n\r\nfunction sync(fiber: Fiber) {\r\n  const diff = fiber.cec - fiber.alt.cec;\r\n  if (diff === 0) return;\r\n  const parent = getFiberWithElement(fiber.parent);\r\n  const scope = { isRight: false };\r\n\r\n  fiber.hook.setIsWip(false);\r\n  fiber.increment(diff);\r\n  walk(parent.child, onWalkInSync(diff, fiber, scope));\r\n}\r\n\r\nconst onWalkInSync = (diff: number, fiber: Fiber, scope: { isRight: boolean }) => ($fiber: Fiber, skip: Callback) => {\r\n  if ($fiber === fiber) {\r\n    scope.isRight = true;\r\n    return skip();\r\n  }\r\n\r\n  $fiber.element && skip();\r\n  scope.isRight && ($fiber.eidx += diff);\r\n};\r\n\r\nfunction fork($scope: Scope) {\r\n  const $fork = $scope.fork();\r\n  const wip = $scope.getWorkInProgress();\r\n  const onRestore = createOnRestore($fork, wip.child);\r\n  const { alt } = wip;\r\n\r\n  wip.child = alt.child;\r\n  wip.cc = alt.cc;\r\n  wip.cec = alt.cec;\r\n  wip.hook?.setIsWip(false);\r\n  wip.alt = null;\r\n\r\n  wip.hook.idx = 0;\r\n  wip.hook.owner = wip;\r\n\r\n  $scope.runInsertionEffects(); // !\r\n  $scope.applyCancels();\r\n  cleanup($scope, true);\r\n  scheduler.retain(onRestore);\r\n}\r\n\r\nconst createOnRestore = ($fork: Scope, child: Fiber) => (options: OnRestoreOptions) => {\r\n  const { fiber: wip, setValue, resetValue } = options;\r\n  const $scope = $$scope();\r\n\r\n  detectIsFunction(setValue) && setValue();\r\n  detectIsFunction(resetValue) && $fork.addCancel(resetValue);\r\n\r\n  wip.alt = new Fiber().mutate(wip);\r\n  wip.tag = UPDATE_EFFECT_TAG;\r\n  wip.child = child;\r\n  wip.hook?.setIsWip(true);\r\n  child.parent = wip;\r\n\r\n  $fork.setRoot($scope.getRoot());\r\n  $fork.setWorkInProgress(wip);\r\n  replaceScope($fork);\r\n};\r\n\r\nexport type CreateCallbackOptions = {\r\n  rootId: number;\r\n  isTransition?: boolean;\r\n  hook: Hook;\r\n  tools?: () => Tools;\r\n};\r\n\r\nfunction createCallback(options: CreateCallbackOptions) {\r\n  const { rootId, hook, isTransition, tools = $tools } = options;\r\n  const callback = (onRestore?: OnRestore) => {\r\n    setRootId(rootId); // !\r\n    const isRetain = detectIsFunction(onRestore);\r\n    const { shouldUpdate, setValue, resetValue } = tools();\r\n    const $scope = $$scope();\r\n    const owner = hook.owner;\r\n    const fiber = owner.alt || owner;\r\n    const isBroken = !fiber.tag;\r\n\r\n    if (isBroken || !shouldUpdate() || !detectIsFiberAlive(fiber) || isRetain) {\r\n      isRetain && onRestore({ fiber, setValue, resetValue });\r\n      return;\r\n    }\r\n\r\n    detectIsFunction(setValue) && setValue();\r\n    detectIsFunction(resetValue) && isTransition && $scope.addCancel(resetValue);\r\n\r\n    fiber.alt = null; // !\r\n    fiber.alt = new Fiber().mutate(fiber);\r\n    fiber.tag = UPDATE_EFFECT_TAG;\r\n    fiber.cc = 0;\r\n    fiber.cec = 0;\r\n    fiber.child = null;\r\n    fiber.hook.setIsWip(true);\r\n\r\n    hook.idx = 0; // !\r\n    hook.owner = fiber;\r\n\r\n    $scope.setIsUpdateZone(true);\r\n    $scope.resetMount();\r\n    $scope.setWorkInProgress(fiber);\r\n    $scope.setCursorFiber(fiber);\r\n    fiber.inst = mount(fiber, null, $scope);\r\n    $scope.setNextUnitOfWork(fiber);\r\n  };\r\n\r\n  return callback;\r\n}\r\n\r\nfunction createUpdate(rootId: number, hook: Hook) {\r\n  const { idx } = hook;\r\n  const update = (tools?: () => Tools) => {\r\n    const $scope = $$scope();\r\n    if ($scope.getIsInsertionEffectsZone()) return;\r\n    const hasTools = detectIsFunction(tools);\r\n    const isTransition = $scope.getIsTransitionZone();\r\n    const isBatch = $scope.getIsBatchZone();\r\n    const isEvent = $scope.getIsEventZone();\r\n    const priority = isTransition ? TaskPriority.LOW : isEvent ? TaskPriority.HIGH : TaskPriority.NORMAL; // !\r\n    const forceAsync = isTransition;\r\n    const onTransitionEnd = isTransition ? $scope.getOnTransitionEnd() : null;\r\n    const callback = createCallback({\r\n      rootId,\r\n      hook,\r\n      isTransition,\r\n      tools: hasTools ? tools : undefined,\r\n    });\r\n    const loc = createLoc(rootId, idx, hook);\r\n    const options: ScheduleCallbackOptions = {\r\n      priority,\r\n      forceAsync,\r\n      isTransition,\r\n      loc,\r\n      onTransitionEnd,\r\n    };\r\n\r\n    if (isBatch) {\r\n      addBatch(\r\n        hook,\r\n        () => scheduler.schedule(callback, options),\r\n        () => hasTools && tools().setValue(),\r\n      );\r\n    } else {\r\n      scheduler.schedule(callback, options);\r\n    }\r\n  };\r\n\r\n  return update;\r\n}\r\n\r\nconst createLoc = (rootId: number, idx: number, hook: Hook) => () => createHookLoc(rootId, idx, hook);\r\n\r\nexport type Tools = {\r\n  shouldUpdate: () => boolean;\r\n} & Pick<OnRestoreOptions, 'setValue' | 'resetValue'>;\r\n\r\nconst $tools = (): Tools => ({\r\n  shouldUpdate: trueFn,\r\n  setValue: null,\r\n  resetValue: null,\r\n});\r\n\r\nconst detectIsBusy = () => Boolean($$scope()?.getWorkInProgress());\r\n\r\nexport { Fiber, workLoop, createUpdate, detectIsBusy };\r\n","import { type Callback } from '../shared';\r\nimport { type Hook } from '../fiber';\r\nimport { $$scope } from '../scope';\r\n\r\nfunction batch(callback: () => void) {\r\n  const $scope = $$scope();\r\n\r\n  $scope.setIsBatchZone(true);\r\n  callback();\r\n  $scope.setIsBatchZone(false);\r\n}\r\n\r\nfunction addBatch(hook: Hook, callback: Callback, change: Callback) {\r\n  const $scope = $$scope();\r\n\r\n  if ($scope.getIsTransitionZone()) {\r\n    callback();\r\n  } else {\r\n    const batch = hook.getBatch() || { timer: null, changes: [] };\r\n\r\n    hook.setBatch(batch);\r\n    batch.changes.push(change);\r\n    batch.timer && clearTimeout(batch.timer);\r\n    batch.timer = setTimeout(() => {\r\n      batch.changes.splice(-1);\r\n      batch.changes.forEach(x => x());\r\n      hook.setBatch(null);\r\n      callback();\r\n    });\r\n  }\r\n}\r\n\r\nexport { batch, addBatch };\r\n","import { __useCursor as useCursor } from '../internal';\r\nimport { createUpdate } from '../workloop';\r\nimport { getRootId } from '../scope';\r\n\r\nfunction useUpdate() {\r\n  const rootId = getRootId();\r\n  const cursor = useCursor();\r\n\r\n  return createUpdate(rootId, cursor.hook);\r\n}\r\n\r\nexport { createUpdate, useUpdate };\r\n","import { detectIsFunction, detectIsEqual } from '../utils';\r\nimport { useCallback } from '../use-callback';\r\nimport { useUpdate } from '../use-update';\r\nimport { type Tools } from '../workloop';\r\nimport { useMemo } from '../use-memo';\r\nimport { $$scope } from '../scope';\r\nimport { trueFn } from '../utils';\r\n\r\ntype CreateToolsOptions<T> = {\r\n  next: Value<T>;\r\n  get: () => T;\r\n  set: (x: T) => void;\r\n  reset: (x: T) => void;\r\n  shouldUpdate?: (p: T, n: T) => boolean;\r\n};\r\n\r\nfunction createTools<T>(options: CreateToolsOptions<T>) {\r\n  const { get, set, reset, next, shouldUpdate: $shouldUpdate = trueFn } = options;\r\n  const $scope = $$scope();\r\n  const isBatch = $scope.getIsBatchZone();\r\n  const tools = (): Tools => {\r\n    const prevValue = get();\r\n    const newValue = detectIsFunction(next) ? next(prevValue) : next;\r\n    const shouldUpdate = () => isBatch || $shouldUpdate(prevValue, newValue);\r\n    const setValue = () => set(newValue);\r\n    const resetValue = () => reset(prevValue);\r\n\r\n    return { shouldUpdate, setValue, resetValue };\r\n  };\r\n\r\n  return tools;\r\n}\r\n\r\ntype Value<T> = T | ((prevValue: T) => T);\r\n\r\nfunction useState<T = unknown>(initialValue: T | (() => T)): [T, (value: Value<T>) => void] {\r\n  const update = useUpdate();\r\n  const scope = useMemo(\r\n    () => ({\r\n      value: detectIsFunction(initialValue) ? initialValue() : initialValue,\r\n    }),\r\n    [],\r\n  );\r\n  const setState = useCallback((next: Value<T>) => {\r\n    const tools = createTools({\r\n      next,\r\n      get: () => scope.value,\r\n      set: (x: T) => (scope.value = x),\r\n      reset: (x: T) => (scope.value = x),\r\n      shouldUpdate: (p: T, n: T) => !detectIsEqual(p, n),\r\n    });\r\n\r\n    update(tools);\r\n  }, []);\r\n\r\n  return [scope.value, setState];\r\n}\r\n\r\nexport { createTools, useState };\r\n","export const VERSION = '1.4.0';\r\nexport const LIB = '@dark-engine/platform-browser';\r\nexport const HEAD_TAG = 'head';\r\nexport const TITLE_TAG = 'title';\r\nexport const META_TAG = 'meta';\r\nexport const INPUT_TAG = 'input';\r\nexport const TEXTAREA_TAG = 'textarea';\r\nexport const CLASS_NAME_ATTR = 'className';\r\nexport const CLASS_ATTR = 'class';\r\nexport const STYLE_ATTR = 'style';\r\nexport const NAME_ATTR = 'name';\r\nexport const VALUE_ATTR = 'value';\r\nexport const AS_ATTR = '_as';\r\nexport const DANGER_HTML_ATTR = '__danger';\r\nexport const EXCLUDE_ATTR_MARK = '$';\r\nexport const DASH_MARK = '-';\r\n","import { detectIsUndefined, illegal as $illegal } from '@dark-engine/core';\r\n\r\nimport { type TagNativeElement } from '../native-element';\r\nimport { LIB } from '../constants';\r\n\r\nconst svgTagNames = new Set([\r\n  'svg',\r\n  'animate',\r\n  'animateMotion',\r\n  'animateTransform',\r\n  'circle',\r\n  'clipPath',\r\n  'defs',\r\n  'desc',\r\n  'ellipse',\r\n  'feBlend',\r\n  'feColorMatrix',\r\n  'feComponentTransfer',\r\n  'feComposite',\r\n  'feConvolveMatrix',\r\n  'feDiffuseLighting',\r\n  'feDisplacementMap',\r\n  'feDistantLight',\r\n  'feDropShadow',\r\n  'feFlood',\r\n  'feFuncA',\r\n  'feFuncB',\r\n  'feFuncG',\r\n  'feFuncR',\r\n  'feGaussianBlur',\r\n  'feImage',\r\n  'feMerge',\r\n  'feMergeNode',\r\n  'feMorphology',\r\n  'feOffset',\r\n  'fePointLight',\r\n  'feSpecularLighting',\r\n  'feSpotLight',\r\n  'feTile',\r\n  'feTurbulence',\r\n  'filter',\r\n  'foreignObject',\r\n  'g',\r\n  'image',\r\n  'line',\r\n  'linearGradient',\r\n  'marker',\r\n  'mask',\r\n  'metadata',\r\n  'mpath',\r\n  'path',\r\n  'pattern',\r\n  'polygon',\r\n  'polyline',\r\n  'radialGradient',\r\n  'rect',\r\n  'stop',\r\n  'switch',\r\n  'symbol',\r\n  'text',\r\n  'textPath',\r\n  'tspan',\r\n  'use',\r\n  'view',\r\n]);\r\nconst voidTagNames = new Set([\r\n  'area',\r\n  'base',\r\n  'br',\r\n  'col',\r\n  'embed',\r\n  'hr',\r\n  'img',\r\n  'input',\r\n  'link',\r\n  'meta',\r\n  'param',\r\n  'source',\r\n  'track',\r\n  'wbr',\r\n]);\r\n\r\nconst detectIsSvgElement = (name: string) => svgTagNames.has(name);\r\n\r\nconst detectIsVoidElement = (name: string) => voidTagNames.has(name);\r\n\r\nconst detectIsBrowser = () => !detectIsUndefined(globalThis.window);\r\n\r\nconst illegal = (x: string) => $illegal(x, LIB);\r\n\r\nconst removeContent = (element: TagNativeElement) => (element.innerHTML = '');\r\n\r\nconst setInnerHTML = (element: TagNativeElement, html: string) =>\r\n  element.innerHTML !== html && (element.innerHTML = html);\r\n\r\nexport { detectIsSvgElement, detectIsVoidElement, detectIsBrowser, illegal, removeContent, setInnerHTML };\r\n","import { detectIsFunction, $$scope, detectIsArray } from '@dark-engine/core';\r\n\r\nimport type { TagNativeElement } from '../native-element';\r\n\r\nexport type EventHandler<E extends Event = Event, T = unknown> =\r\n  | ((e: SyntheticEvent<E, T>) => void)\r\n  | [(...args: Array<any>) => void, ...args: Array<any>];\r\n\r\ntype BrowserEventConstructor = (type: string, event: Event) => void;\r\n\r\nclass SyntheticEvent<E extends Event, T = TagNativeElement> {\r\n  type = '';\r\n  sourceEvent: E = null;\r\n  target: T = null;\r\n  propagation = true; //should be private but typescript has a bug\r\n\r\n  constructor(options: Pick<SyntheticEvent<E, T>, 'sourceEvent' | 'target'>) {\r\n    this.type = options.sourceEvent.type;\r\n    this.sourceEvent = options.sourceEvent;\r\n    this.target = options.target;\r\n  }\r\n\r\n  stopPropagation() {\r\n    this.propagation = false;\r\n    this.sourceEvent.stopPropagation();\r\n  }\r\n\r\n  preventDefault() {\r\n    this.sourceEvent.preventDefault();\r\n  }\r\n\r\n  getPropagation() {\r\n    return this.propagation;\r\n  }\r\n}\r\n\r\nfunction delegateEvent(target: Element, eventName: string, handler: EventHandler) {\r\n  const $scope = $$scope();\r\n  const eventsMap = $scope.getEvents();\r\n  const handlersMap = eventsMap.get(eventName);\r\n  const $handler = detectIsArray(handler) ? (e: Event) => handler[0](...handler.slice(1), e) : handler;\r\n\r\n  if (!handlersMap) {\r\n    const rootHandler = (event: Event) => {\r\n      const handler = eventsMap.get(eventName).get(event.target);\r\n      const target = event.target as TagNativeElement;\r\n      let $event: SyntheticEvent<Event> = null;\r\n\r\n      if (detectIsFunction(handler)) {\r\n        $event = new SyntheticEvent({ sourceEvent: event, target });\r\n\r\n        $scope.setIsEventZone(true);\r\n        handler($event);\r\n        $scope.setIsEventZone(false);\r\n      }\r\n\r\n      if (target.parentElement) {\r\n        const shouldPropagate = $event ? $event.getPropagation() : true;\r\n\r\n        if (shouldPropagate) {\r\n          const constructor = event.constructor as BrowserEventConstructor;\r\n\r\n          target.parentElement.dispatchEvent(new constructor(event.type, event));\r\n        }\r\n      }\r\n    };\r\n\r\n    eventsMap.set(eventName, new WeakMap([[target, $handler]]));\r\n    document.addEventListener(eventName, rootHandler, true);\r\n    $scope.addEventUnsubscriber(() => document.removeEventListener(eventName, rootHandler, true));\r\n  } else {\r\n    handlersMap.set(target, $handler);\r\n  }\r\n}\r\n\r\nconst detectIsEvent = (attrName: string) => attrName.startsWith('on');\r\n\r\nconst getEventName = (attrName: string) => attrName.slice(2, attrName.length).toLowerCase();\r\n\r\nexport { SyntheticEvent, delegateEvent, detectIsEvent, getEventName };\r\n","import {\r\n  type Fiber,\r\n  type VirtualNode,\r\n  type TagVirtualNode,\r\n  type TextVirtualNode,\r\n  type CommentVirtualNode,\r\n  type PlainVirtualNode,\r\n  type Callback,\r\n  type Ref,\r\n  REF_ATTR,\r\n  ATTR_BLACK_LIST,\r\n  CREATE_EFFECT_TAG,\r\n  UPDATE_EFFECT_TAG,\r\n  DELETE_EFFECT_TAG,\r\n  MOVE_MASK,\r\n  FLUSH_MASK,\r\n  detectIsUndefined,\r\n  detectIsBoolean,\r\n  detectIsObject,\r\n  NodeType,\r\n  detectIsTagVirtualNode,\r\n  detectIsTextVirtualNode,\r\n  detectIsPlainVirtualNode,\r\n  getFiberWithElement,\r\n  collectElements,\r\n  walk,\r\n  applyRef,\r\n  detectIsHydration,\r\n} from '@dark-engine/core';\r\n\r\nimport {\r\n  detectIsSvgElement,\r\n  detectIsVoidElement,\r\n  illegal,\r\n  removeContent,\r\n  setInnerHTML,\r\n  detectIsBrowser,\r\n} from '../utils';\r\nimport { delegateEvent, detectIsEvent, getEventName } from '../events';\r\nimport {\r\n  INPUT_TAG,\r\n  TEXTAREA_TAG,\r\n  STYLE_ATTR,\r\n  CLASS_ATTR,\r\n  CLASS_NAME_ATTR,\r\n  VALUE_ATTR,\r\n  AS_ATTR,\r\n  EXCLUDE_ATTR_MARK,\r\n  DANGER_HTML_ATTR,\r\n  DASH_MARK,\r\n} from '../constants';\r\nimport type {\r\n  NativeElement,\r\n  TagNativeElement,\r\n  TextNativeElement,\r\n  CommentNativeElement,\r\n  AttributeValue,\r\n} from '../native-element';\r\n\r\nexport type CSSProperties = Record<string, string | number>;\r\n\r\nlet moves: Array<Callback> = [];\r\nlet patches: Array<Callback> = [];\r\nlet trackUpdate: (nativeElement: NativeElement) => void = null;\r\n\r\nfunction createNativeElement(vNode: VirtualNode): NativeElement {\r\n  switch (vNode.type) {\r\n    case NodeType.TAG:\r\n      const name = (vNode as TagVirtualNode).name;\r\n      const tag = detectIsSvgElement(name)\r\n        ? document.createElementNS('http://www.w3.org/2000/svg', name)\r\n        : document.createElement(name);\r\n\r\n      return tag as TagNativeElement;\r\n    case NodeType.TEXT:\r\n      return document.createTextNode((vNode as TextVirtualNode).value) as TextNativeElement;\r\n    case NodeType.COMMENT:\r\n      return document.createComment((vNode as CommentVirtualNode).value) as CommentNativeElement;\r\n  }\r\n}\r\n\r\nfunction setObjectStyle(element: TagNativeElement, style: CSSProperties) {\r\n  for (const key in style) {\r\n    m.setStyleProp.call((element as HTMLElement).style, key, String(style[key]));\r\n  }\r\n}\r\n\r\nfunction addAttributes(element: NativeElement, vNode: TagVirtualNode, isHydration: boolean) {\r\n  const tagElement = element as TagNativeElement;\r\n\r\n  for (let attrName in vNode.attrs) {\r\n    const attrValue = vNode.attrs[attrName];\r\n    const attribute = performAttribute(tagElement, attrName, attrValue);\r\n\r\n    if (attribute === null) {\r\n      continue;\r\n    } else {\r\n      attrName = attribute;\r\n    }\r\n\r\n    if (detectIsEvent(attrName)) {\r\n      delegateEvent(tagElement, getEventName(attrName), attrValue);\r\n    } else if (!isHydration && !detectIsUndefined(attrValue) && !ATTR_BLACK_LIST[attrName]) {\r\n      !patchAttributes(tagElement, vNode.name, attrName, attrValue) &&\r\n        m.setAttribute.call(tagElement, attrName, attrValue);\r\n    }\r\n  }\r\n}\r\n\r\nfunction updateAttributes(element: NativeElement, prevVNode: TagVirtualNode, nextVNode: TagVirtualNode) {\r\n  const attrNames = getAttributeNames(prevVNode, nextVNode);\r\n  const tagElement = element as TagNativeElement;\r\n\r\n  for (let attrName of attrNames) {\r\n    const prevAttrValue = prevVNode.attrs[attrName];\r\n    const nextAttrValue = nextVNode.attrs[attrName];\r\n    const attribute = performAttribute(tagElement, attrName, nextAttrValue, prevAttrValue);\r\n\r\n    if (attribute === null) {\r\n      continue;\r\n    } else {\r\n      attrName = attribute;\r\n    }\r\n\r\n    if (!detectIsUndefined(nextAttrValue)) {\r\n      if (detectIsEvent(attrName)) {\r\n        prevAttrValue !== nextAttrValue && delegateEvent(tagElement, getEventName(attrName), nextAttrValue);\r\n      } else if (!ATTR_BLACK_LIST[attrName] && prevAttrValue !== nextAttrValue) {\r\n        !patchAttributes(tagElement, nextVNode.name, attrName, nextAttrValue) &&\r\n          m.setAttribute.call(tagElement, attrName, nextAttrValue);\r\n      }\r\n    } else {\r\n      m.removeAttribute.call(tagElement, attrName);\r\n    }\r\n  }\r\n}\r\n\r\nfunction performAttribute(\r\n  tagElement: TagNativeElement,\r\n  attrName: string,\r\n  nextAttrValue: AttributeValue,\r\n  prevAttrValue?: AttributeValue,\r\n) {\r\n  if (attrName[0] === EXCLUDE_ATTR_MARK) return null;\r\n\r\n  if (attrName === DANGER_HTML_ATTR) {\r\n    setInnerHTML(tagElement, String(nextAttrValue));\r\n    return null;\r\n  }\r\n\r\n  if (attrName === REF_ATTR) {\r\n    applyRef(nextAttrValue as unknown as Ref<TagNativeElement>, tagElement);\r\n    return null;\r\n  }\r\n\r\n  if ((attrName === CLASS_ATTR || attrName === CLASS_NAME_ATTR) && nextAttrValue !== prevAttrValue) {\r\n    toggleAttribute(tagElement, CLASS_ATTR, nextAttrValue as string);\r\n    return null;\r\n  }\r\n\r\n  if (attrName === STYLE_ATTR && nextAttrValue && nextAttrValue !== prevAttrValue && detectIsObject(nextAttrValue)) {\r\n    setObjectStyle(tagElement, nextAttrValue as CSSProperties);\r\n    return null;\r\n  }\r\n\r\n  if (attrName === AS_ATTR) {\r\n    attrName = attrName.slice(1, AS_ATTR.length);\r\n  }\r\n\r\n  return attrName;\r\n}\r\n\r\nfunction toggleAttribute(element: TagNativeElement, name: string, value: string) {\r\n  value ? m.setAttribute.call(element, name, value) : m.removeAttribute.call(element, name);\r\n}\r\n\r\nfunction getAttributeNames(prevVNode: TagVirtualNode, nextVNode: TagVirtualNode) {\r\n  const attrNames = new Set<string>();\r\n  const prevAttrs = Object.keys(prevVNode.attrs);\r\n  const nextAttrs = Object.keys(nextVNode.attrs);\r\n  const size = Math.max(prevAttrs.length, nextAttrs.length);\r\n\r\n  for (let i = 0; i < size; i++) {\r\n    attrNames.add(prevAttrs[i] || nextAttrs[i]);\r\n  }\r\n\r\n  return attrNames;\r\n}\r\n\r\nconst ATTR_TRANSFORM_MAP = {\r\n  readonly: 'readOnly',\r\n};\r\n\r\nfunction patchAttributes(\r\n  element: TagNativeElement,\r\n  tagName: string,\r\n  attrName: string,\r\n  attrValue: AttributeValue,\r\n): boolean {\r\n  const fn = specialCasesMap[tagName];\r\n  const $attrName = ATTR_TRANSFORM_MAP[attrName] || attrName;\r\n  let stop = fn ? fn(element, attrName, attrValue) : false;\r\n\r\n  if (canSetProperty(element, $attrName)) {\r\n    element[$attrName] = attrValue;\r\n  }\r\n\r\n  if (!stop && detectIsBoolean(attrValue)) {\r\n    stop = !$attrName.includes(DASH_MARK);\r\n  }\r\n\r\n  return stop;\r\n}\r\n\r\nfunction canSetProperty(element: TagNativeElement, key: string) {\r\n  const prototype = Object.getPrototypeOf(element);\r\n  const descriptor = Object.getOwnPropertyDescriptor(prototype, key);\r\n\r\n  return Boolean(descriptor?.set);\r\n}\r\n\r\nconst specialCasesMap: Record<\r\n  string,\r\n  (element: NativeElement, attrName: string, attrValue: AttributeValue) => boolean\r\n> = {\r\n  [INPUT_TAG]: (element: HTMLInputElement, attrName: string, attrValue: AttributeValue) => {\r\n    if (attrName === VALUE_ATTR) {\r\n      patches.push(() => {\r\n        detectIsBoolean(attrValue) ? (element.checked = attrValue) : (element.value = String(attrValue));\r\n      });\r\n    }\r\n\r\n    return false;\r\n  },\r\n  [TEXTAREA_TAG]: (element: HTMLTextAreaElement, attrName: string, attrValue: AttributeValue) => {\r\n    if (attrName === VALUE_ATTR) {\r\n      element.innerText = String(attrValue);\r\n\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  },\r\n};\r\n\r\nfunction commitCreation(fiber: Fiber<NativeElement>) {\r\n  const parent = getFiberWithElement<NativeElement, TagNativeElement>(fiber.parent);\r\n  const parentElement = parent.element;\r\n  const childNodes = parentElement.childNodes;\r\n  const isHydration = detectIsHydration();\r\n\r\n  if (isHydration) {\r\n    let nativeElement = childNodes[fiber.eidx] as NativeElement;\r\n\r\n    if (nativeElement instanceof DocumentType) {\r\n      nativeElement = nativeElement.nextSibling as NativeElement;\r\n    }\r\n\r\n    if (\r\n      detectIsTextVirtualNode(fiber.inst) &&\r\n      nativeElement instanceof Text &&\r\n      fiber.inst.value.length !== nativeElement.length\r\n    ) {\r\n      nativeElement.splitText(fiber.inst.value.length);\r\n    }\r\n\r\n    if (fiber.element.nodeName !== nativeElement.nodeName) {\r\n      illegal('Inconsistent element for hydration!');\r\n    }\r\n\r\n    fiber.element = nativeElement;\r\n  } else {\r\n    if (detectIsTagVirtualNode(parent.inst) && parent.inst.attrs[DANGER_HTML_ATTR]) {\r\n      illegal(`The element with danger content can't have a children!`);\r\n    }\r\n\r\n    if (childNodes.length === 0 || fiber.eidx > childNodes.length - 1) {\r\n      !detectIsVoidElement((parent.inst as TagVirtualNode).name) && m.appendElement.call(parentElement, fiber.element);\r\n    } else {\r\n      m.insertElement.call(parentElement, fiber.element, parentElement.childNodes[fiber.eidx]);\r\n    }\r\n  }\r\n\r\n  detectIsTagVirtualNode(fiber.inst) && addAttributes(fiber.element, fiber.inst, isHydration);\r\n}\r\n\r\nfunction commitUpdate(fiber: Fiber<NativeElement>) {\r\n  const element = fiber.element;\r\n  const prevInst = fiber.alt.inst as VirtualNode;\r\n  const nextInst = fiber.inst as VirtualNode;\r\n\r\n  detectIsPlainVirtualNode(nextInst)\r\n    ? (prevInst as PlainVirtualNode).value !== nextInst.value && (element.nodeValue = nextInst.value)\r\n    : updateAttributes(element, prevInst as TagVirtualNode, nextInst as TagVirtualNode);\r\n}\r\n\r\nfunction commitDeletion(fiber: Fiber<NativeElement>) {\r\n  const parent = getFiberWithElement<NativeElement, TagNativeElement>(fiber.parent);\r\n\r\n  if (fiber.mask & FLUSH_MASK) {\r\n    parent.element.children.length > 0 && removeContent(parent.element);\r\n  } else {\r\n    walk<NativeElement>(fiber, onWalkInCommitDeletion(parent.element));\r\n  }\r\n}\r\n\r\nconst onWalkInCommitDeletion = (parentElement: TagNativeElement) => (fiber: Fiber<NativeElement>, skip: Callback) => {\r\n  if (fiber.element) {\r\n    !fiber.hook?.getIsPortal() && m.removeElement.call(parentElement, fiber.element);\r\n    return skip();\r\n  }\r\n};\r\n\r\nfunction move(fiber: Fiber<NativeElement>) {\r\n  const sourceNodes = collectElements(fiber, x => x.element);\r\n  const sourceNode = sourceNodes[0];\r\n  const parentElement = sourceNode.parentElement;\r\n  const sourceFragment = new DocumentFragment();\r\n  const elementIdx = fiber.eidx;\r\n  const move = () => {\r\n    for (let i = 1; i < sourceNodes.length; i++) {\r\n      m.removeElement.call(parentElement, parentElement.childNodes[elementIdx + 1]);\r\n    }\r\n\r\n    m.replaceElement.call(parentElement, sourceFragment, parentElement.childNodes[elementIdx]);\r\n  };\r\n  let idx = 0;\r\n\r\n  for (const node of sourceNodes) {\r\n    m.insertElement.call(parentElement, document.createComment(`${elementIdx}:${idx}`), node);\r\n    m.appendElement.call(sourceFragment, node);\r\n    idx++;\r\n  }\r\n\r\n  moves.push(move);\r\n}\r\n\r\nfunction commit(fiber: Fiber<NativeElement>) {\r\n  switch (fiber.tag) {\r\n    case CREATE_EFFECT_TAG:\r\n      if (!fiber.element || fiber.hook?.getIsPortal()) return;\r\n      trackUpdate && trackUpdate(fiber.element);\r\n      commitCreation(fiber);\r\n      break;\r\n    case UPDATE_EFFECT_TAG:\r\n      fiber.mask & MOVE_MASK && (move(fiber), (fiber.mask &= ~MOVE_MASK));\r\n      if (!fiber.element || fiber.hook?.getIsPortal()) return;\r\n      trackUpdate && trackUpdate(fiber.element);\r\n      commitUpdate(fiber);\r\n      break;\r\n    case DELETE_EFFECT_TAG:\r\n      commitDeletion(fiber);\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n}\r\n\r\nfunction finishCommit() {\r\n  moves.forEach(x => x());\r\n  patches.forEach(x => x());\r\n  moves = [];\r\n  patches = [];\r\n}\r\n\r\nfunction setup() {\r\n  if (!detectIsBrowser()) return {};\r\n  const np = Node.prototype;\r\n  const ep = Element.prototype;\r\n\r\n  return {\r\n    appendElement: np.appendChild,\r\n    insertElement: np.insertBefore,\r\n    replaceElement: np.replaceChild,\r\n    removeElement: np.removeChild,\r\n    hasAttribute: ep.hasAttribute,\r\n    setAttribute: ep.setAttribute,\r\n    removeAttribute: ep.removeAttribute,\r\n    setStyleProp: CSSStyleDeclaration.prototype.setProperty,\r\n  };\r\n}\r\n\r\nconst m = setup();\r\n\r\nconst setTrackUpdate = (fn: typeof trackUpdate) => (trackUpdate = fn);\r\n\r\nconst toggle = (element: HTMLElement | SVGElement, isVisible: boolean) => {\r\n  isVisible\r\n    ? m.hasAttribute.call(element, STYLE_ATTR) && m.removeAttribute.call(element, STYLE_ATTR)\r\n    : m.setStyleProp.call(element.style, 'display', 'none', 'important');\r\n};\r\n\r\nexport { createNativeElement, commit, finishCommit, setTrackUpdate, toggle };\r\n","import { detectIsObject, detectIsNull, detectIsFunction } from '../utils';\r\nimport { useMemo } from '../use-memo';\r\n\r\nfunction detectIsMutableRef(ref: unknown): ref is MutableRef {\r\n  if (!detectIsObject(ref) || detectIsNull(ref)) return false;\r\n  const mutableRef = ref as MutableRef;\r\n\r\n  for (const key in mutableRef) {\r\n    if (key === 'current' && mutableRef.hasOwnProperty(key)) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nfunction applyRef<T>(ref: Ref<T>, current: T) {\r\n  if (detectIsFunction(ref)) {\r\n    ref(current);\r\n  } else if (detectIsMutableRef(ref)) {\r\n    ref.current = current;\r\n  }\r\n}\r\n\r\nfunction useRef<T>(initialValue: T = null): MutableRef<T> {\r\n  const ref = useMemo(() => ({ current: initialValue }), []) as MutableRef<T>;\r\n\r\n  return ref;\r\n}\r\n\r\nexport type MutableRef<T = unknown> = {\r\n  current: T;\r\n};\r\n\r\nexport type FunctionRef<T = unknown> = (ref: T) => void;\r\n\r\nexport type Ref<T = unknown> = MutableRef<T> | FunctionRef<T>;\r\n\r\nexport { detectIsMutableRef, applyRef, useRef };\r\n","import {\r\n  type DarkElement,\r\n  type Callback,\r\n  ROOT,\r\n  Fiber,\r\n  CREATE_EFFECT_TAG,\r\n  UPDATE_EFFECT_TAG,\r\n  platform,\r\n  flatten,\r\n  detectIsUndefined,\r\n  detectIsFunction,\r\n  trueFn,\r\n  TagVirtualNode,\r\n  TaskPriority,\r\n  createReplacer,\r\n  setRootId,\r\n  $$scope,\r\n  scheduler,\r\n} from '@dark-engine/core';\r\n\r\nimport { createNativeElement, toggle, commit, finishCommit } from '../dom';\r\nimport { detectIsBrowser, illegal, removeContent } from '../utils';\r\nimport { type TagNativeElement } from '../native-element';\r\n\r\nconst isBrowser = detectIsBrowser();\r\nconst roots = new Map<Element, number>();\r\nconst raf = isBrowser && requestAnimationFrame.bind(this);\r\nconst caf = isBrowser && cancelAnimationFrame.bind(this);\r\nconst spawn = raf;\r\nlet isInjected = false;\r\n\r\nfunction inject() {\r\n  platform.createElement = createNativeElement as typeof platform.createElement;\r\n  platform.toggle = toggle as typeof platform.toggle;\r\n  platform.raf = raf;\r\n  platform.caf = caf;\r\n  platform.spawn = spawn;\r\n  platform.commit = commit;\r\n  platform.finishCommit = finishCommit;\r\n  platform.detectIsDynamic = trueFn;\r\n  isInjected = true;\r\n}\r\n\r\nfunction render(element: DarkElement, container: TagNativeElement, hydrate?: Callback) {\r\n  !isInjected && inject();\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    if (!(container instanceof Element) && !((container as unknown) instanceof Document)) {\r\n      illegal(`The render receives a valid element as container!`);\r\n    }\r\n  }\r\n\r\n  const isMounted = !detectIsUndefined(roots.get(container));\r\n  const isHydration = detectIsFunction(hydrate);\r\n  let rootId: number = null;\r\n\r\n  if (!isMounted) {\r\n    rootId = roots.size;\r\n    roots.set(container, rootId);\r\n    !isHydration && removeContent(container);\r\n  } else {\r\n    rootId = roots.get(container);\r\n  }\r\n\r\n  const $scope = $$scope(rootId);\r\n\r\n  // insertion effect can't schedule renders\r\n  if ($scope?.getIsInsertionEffectsZone()) return;\r\n\r\n  const callback = () => {\r\n    setRootId(rootId); // !\r\n    const $scope = $$scope();\r\n    const rootFiber = $scope.getRoot();\r\n    const isUpdate = Boolean(rootFiber);\r\n    const fiber = new Fiber().mutate({\r\n      element: container,\r\n      inst: new TagVirtualNode(ROOT, {}, flatten([element || createReplacer()]) as TagVirtualNode['children']),\r\n      alt: rootFiber,\r\n      tag: isUpdate ? UPDATE_EFFECT_TAG : CREATE_EFFECT_TAG,\r\n    });\r\n\r\n    $scope.resetMount();\r\n    $scope.setWorkInProgress(fiber);\r\n    $scope.setIsHydrateZone(isHydration);\r\n    $scope.setNextUnitOfWork(fiber);\r\n    isHydration && hydrate();\r\n  };\r\n\r\n  scheduler.schedule(callback, { priority: TaskPriority.NORMAL });\r\n}\r\n\r\nexport { render, roots, inject };\r\n","import { useMemo } from '../use-memo';\r\nimport { getRootId } from '../scope';\r\n\r\nfunction useId() {\r\n  const id = useMemo(() => getNextId(getRootId()), []);\r\n\r\n  return id;\r\n}\r\n\r\nlet nextId = 1000000;\r\n\r\nconst getNextId = (rootId: number) => `dark:${rootId}:${(++nextId).toString(36)}`;\r\n\r\nexport { useId };\r\n","export const VERSION = '1.4.0';\r\nexport const LIB = '@dark-engine/styled';\r\nexport const STYLE_TAG = 'style';\r\nexport const STYLED_ATTR = 'dark-styled';\r\nexport const GLOBAL_ATTR_VALUE = 'g';\r\nexport const COMPONENTS_ATTR_VALUE = 'c';\r\nexport const INTERLEAVE_GLOBAL_ATTR_VALUE = 'ig';\r\nexport const INTERLEAVE_COMPONENTS_ATTR_VALUE = 'ic';\r\nexport const CLASS_NAME_PREFIX = 'dk';\r\nexport const ANIMATION_NAME_PREFIX = 'dka';\r\nexport const OPENING_CURLY_BRACE_MARK = '{';\r\nexport const CLOSING_CURLY_BRACE_MARK = '}';\r\nexport const OPENING_PARENTHESIS_MARK = '(';\r\nexport const CLOSING_PARENTHESIS_MARK = ')';\r\nexport const COLON_MARK = ':';\r\nexport const SEMICOLON_MARK = ';';\r\nexport const COMMA_MARK = ',';\r\nexport const DOT_MARK = '.';\r\nexport const BLANK_SPACE = ' ';\r\nexport const MEDIA_QUERY_MARK = '@media';\r\nexport const CONTAINER_QUERY_MARK = '@container';\r\nexport const KEYFRAMES_MARK = '@keyframes';\r\nexport const NESTING_MARK = '>';\r\nexport const SELF_MARK = '&';\r\nexport const FUNCTION_MARK = '[$]';\r\nexport const SINGLE_LINE_COMMENT_START_MARK = '//';\r\nexport const SINGLE_LINE_COMMENT_END_MARK = '\\n';\r\nexport const MULTI_LINE_COMMENT_START_MARK = '/*';\r\nexport const MULTI_LINE_COMMENT_END_MARK = '*/';\r\nexport const URL_FN_MARK = 'url';\r\nexport const NULL_MARK = 'null';\r\n","import { illegal as $illegal } from '@dark-engine/core';\r\n\r\nimport { STYLE_TAG, BLANK_SPACE, LIB } from '../constants';\r\n\r\nconst uniq = <T>(items: Array<T>, selector: (x: T) => unknown = x => x) => {\r\n  const arr: Array<T> = [];\r\n  const set = new Set();\r\n\r\n  for (const item of items) {\r\n    const key = selector(item);\r\n\r\n    !set.has(key) && arr.push(item);\r\n    set.add(key);\r\n  }\r\n\r\n  return arr;\r\n};\r\n\r\nconst mapProps = <T extends object>(props: T) => Object.keys(props).map(key => props[key]);\r\n\r\nconst mergeClassNames = (classNames: Array<string>) => uniq(classNames.filter(Boolean)).join(BLANK_SPACE);\r\n\r\nconst getElement = (selector: string) => document.querySelector(selector);\r\n\r\nconst getElements = (selector: string) => Array.from(document.querySelectorAll(selector));\r\n\r\nconst createStyleElement = () => document.createElement(STYLE_TAG);\r\n\r\nconst setAttr = (element: Element, attrName: string, attrValue: string) => element.setAttribute(attrName, attrValue);\r\n\r\nconst append = (parent: Element, element: Element) => parent.appendChild(element);\r\n\r\nconst insertBefore = (parent: Element, element: Element, sibling: Element) => parent.insertBefore(element, sibling);\r\n\r\nconst mergeTemplates = (t1: TemplateStringsArray, t2: TemplateStringsArray) => {\r\n  const [first] = t2;\r\n  const $t1 = [...t1];\r\n  const $t2: Array<string> = [];\r\n  let result: Omit<TemplateStringsArray, 'raw'> = null;\r\n\r\n  for (let i = 0; i < t2.length; i++) {\r\n    if (i > 0) {\r\n      $t2.push(t2[i]);\r\n    }\r\n  }\r\n\r\n  $t1[$t1.length - 1] = $t1[$t1.length - 1] + first;\r\n  result = [...$t1, ...$t2];\r\n\r\n  Object.assign(result, { raw: result });\r\n\r\n  return result as TemplateStringsArray;\r\n};\r\n\r\nconst detectIsBrowser = () => typeof globalThis.window !== 'undefined';\r\n\r\nconst illegal = (x: string) => $illegal(x, LIB);\r\n\r\nexport {\r\n  uniq,\r\n  mapProps,\r\n  mergeClassNames,\r\n  getElement,\r\n  getElements,\r\n  createStyleElement,\r\n  setAttr,\r\n  append,\r\n  insertBefore,\r\n  mergeTemplates,\r\n  detectIsBrowser,\r\n  illegal,\r\n};\r\n","import { type TextBased, detectIsTextBased } from '@dark-engine/core';\r\n\r\nimport { hash } from '../hash';\r\nimport { parse } from '../parse';\r\nimport {\r\n  KEYFRAMES_MARK,\r\n  FUNCTION_MARK,\r\n  OPENING_CURLY_BRACE_MARK,\r\n  CLOSING_CURLY_BRACE_MARK,\r\n  ANIMATION_NAME_PREFIX,\r\n} from '../constants';\r\nimport { type KeyframesRule } from '../tokens';\r\n\r\nclass Keyframes {\r\n  constructor(private name: string, private token: KeyframesRule) {}\r\n\r\n  getName() {\r\n    return this.name;\r\n  }\r\n\r\n  getToken() {\r\n    return this.token;\r\n  }\r\n}\r\n\r\nfunction keyframes(source: TemplateStringsArray, ...args: Array<TextBased>) {\r\n  const joined = join(pad(source), args);\r\n  const name = genAnimationName(joined);\r\n  const [token] = parse(joined.replace(FUNCTION_MARK, name)).children;\r\n  const keyframes = new Keyframes(name, token as KeyframesRule);\r\n\r\n  return keyframes;\r\n}\r\n\r\nfunction pad(source: TemplateStringsArray) {\r\n  const start = `${KEYFRAMES_MARK} ${FUNCTION_MARK} ${OPENING_CURLY_BRACE_MARK}`;\r\n  const end = CLOSING_CURLY_BRACE_MARK;\r\n  const strings: Array<string> = [];\r\n\r\n  for (let i = 0; i < source.length; i++) {\r\n    const isStart = i === 0;\r\n    const isEnd = i === source.length - 1;\r\n\r\n    if (isStart) {\r\n      strings.push(start + source[i]);\r\n    } else if (isEnd) {\r\n      strings.push(source[i] + end);\r\n    } else {\r\n      strings.push(source[i]);\r\n    }\r\n  }\r\n\r\n  return strings;\r\n}\r\n\r\nfunction join(source: Array<string>, args: Array<TextBased>) {\r\n  let joined = '';\r\n\r\n  for (let i = 0; i < source.length; i++) {\r\n    joined += source[i];\r\n\r\n    if (detectIsTextBased(args[i])) {\r\n      joined += args[i];\r\n    }\r\n  }\r\n\r\n  return joined;\r\n}\r\n\r\nconst genAnimationName = (key: string) => `${ANIMATION_NAME_PREFIX}-${hash(key)}`;\r\n\r\nconst detectIsKeyframes = (x: unknown): x is Keyframes => x instanceof Keyframes;\r\n\r\nexport { Keyframes, keyframes, detectIsKeyframes };\r\n","import {\r\n  OPENING_CURLY_BRACE_MARK,\r\n  CLOSING_CURLY_BRACE_MARK,\r\n  COLON_MARK,\r\n  SEMICOLON_MARK,\r\n  COMMA_MARK,\r\n  MEDIA_QUERY_MARK,\r\n  CONTAINER_QUERY_MARK,\r\n  KEYFRAMES_MARK,\r\n  NESTING_MARK,\r\n  SELF_MARK,\r\n  DOT_MARK,\r\n  FUNCTION_MARK,\r\n  BLANK_SPACE,\r\n} from '../constants';\r\n\r\nimport { detectIsKeyframes } from '../keyframes';\r\n\r\nabstract class Token {\r\n  name = '';\r\n  value = '';\r\n  parent: Parent;\r\n  isDynamic = false;\r\n\r\n  normalize() {\r\n    this.name = this.name.trim();\r\n    this.value = this.value.trim();\r\n  }\r\n\r\n  markAsDynamic() {\r\n    this.isDynamic = true;\r\n    detectIsToken(this.parent) && !this.parent.isDynamic && this.parent.markAsDynamic();\r\n  }\r\n\r\n  abstract generate(): string | Tuple;\r\n  abstract generate(props: object, args: Array<Function>): string | Tuple;\r\n  abstract generate(className: string | null, props: object, args: Array<Function>): string | Tuple;\r\n}\r\n\r\nclass StyleRule extends Token {\r\n  override generate(): string {\r\n    return `${this.name}${COLON_MARK}${this.value}${SEMICOLON_MARK}`;\r\n  }\r\n}\r\n\r\nclass NestingRule<P extends object = {}> extends Token {\r\n  name = NESTING_MARK;\r\n  children: Children = [];\r\n\r\n  override normalize() {\r\n    super.normalize();\r\n    this.value = this.value.replace(GROUP_SELECTOR_PATTERN, COMMA_MARK);\r\n  }\r\n\r\n  override generate(...args: Array<unknown>): string {\r\n    const className = args[0] as string | null;\r\n    const props = args[1] as P;\r\n    const fns = args[2] as Array<Function>;\r\n    let styles = `${this.value.replaceAll(SELF_MARK, `${DOT_MARK}${className}`)}${OPENING_CURLY_BRACE_MARK}`;\r\n    let keyframes = '';\r\n\r\n    for (const token of this.children) {\r\n      const [$styles, _, __, ___, $keyframes] = generate({ token, className, props, fns });\r\n\r\n      styles += $styles;\r\n      keyframes += $keyframes;\r\n    }\r\n\r\n    styles += `${CLOSING_CURLY_BRACE_MARK}${keyframes}`;\r\n\r\n    return styles;\r\n  }\r\n}\r\n\r\nclass MediaQueryRule<P extends object = {}> extends Token {\r\n  name = MEDIA_QUERY_MARK;\r\n  children: Children = [];\r\n\r\n  override generate(...args: Array<unknown>): string {\r\n    const className = args[0] as string | null;\r\n    const props = args[1] as P;\r\n    const fns = args[2] as Array<Function>;\r\n    let styles = className\r\n      ? `${this.value}${OPENING_CURLY_BRACE_MARK}${DOT_MARK}${className}${OPENING_CURLY_BRACE_MARK}`\r\n      : `${this.value}${OPENING_CURLY_BRACE_MARK}`;\r\n    let nesting = '';\r\n\r\n    for (const token of this.children) {\r\n      const [$styles, $nesting] = generate({ token, className, props, fns });\r\n\r\n      styles += $styles;\r\n      nesting += $nesting;\r\n    }\r\n\r\n    if (className) {\r\n      styles += `${CLOSING_CURLY_BRACE_MARK}${nesting}${CLOSING_CURLY_BRACE_MARK}`;\r\n    } else {\r\n      styles += `${nesting}${CLOSING_CURLY_BRACE_MARK}`;\r\n    }\r\n\r\n    return styles;\r\n  }\r\n}\r\n\r\nclass ContainerQueryRule<P extends object = {}> extends Token {\r\n  name = CONTAINER_QUERY_MARK;\r\n  children: Children = [];\r\n\r\n  override generate(...args: Array<unknown>): string {\r\n    const className = args[0] as string | null;\r\n    const props = args[1] as P;\r\n    const fns = args[2] as Array<Function>;\r\n    let styles = className\r\n      ? `${this.value}${OPENING_CURLY_BRACE_MARK}${DOT_MARK}${className}${OPENING_CURLY_BRACE_MARK}`\r\n      : `${this.value}${OPENING_CURLY_BRACE_MARK}`;\r\n    let nesting = '';\r\n\r\n    for (const token of this.children) {\r\n      const [$styles, $nesting] = generate({ token, className, props, fns });\r\n\r\n      styles += $styles;\r\n      nesting += $nesting;\r\n    }\r\n\r\n    if (className) {\r\n      styles += `${CLOSING_CURLY_BRACE_MARK}${nesting}${CLOSING_CURLY_BRACE_MARK}`;\r\n    } else {\r\n      styles += `${nesting}${CLOSING_CURLY_BRACE_MARK}`;\r\n    }\r\n\r\n    return styles;\r\n  }\r\n}\r\n\r\nclass KeyframesRule<P extends object = {}> extends Token {\r\n  name = KEYFRAMES_MARK;\r\n  children: Children = [];\r\n\r\n  override generate(...args: Array<unknown>): string {\r\n    const props = args[0] as P;\r\n    const fns = args[1] as Array<Function>;\r\n    let keyframes = `${this.value}${OPENING_CURLY_BRACE_MARK}`;\r\n\r\n    for (const token of this.children) {\r\n      const [$styles, $nesting] = generate({ token, props, fns });\r\n\r\n      keyframes += $styles;\r\n      keyframes += $nesting;\r\n    }\r\n\r\n    keyframes += `${CLOSING_CURLY_BRACE_MARK}`;\r\n\r\n    return keyframes;\r\n  }\r\n}\r\n\r\nclass FunctionRule<P extends object = {}> extends Token {\r\n  name = FUNCTION_MARK;\r\n  args: Array<number> = [];\r\n  style: StyleRule = null;\r\n  private end = '';\r\n  private isSealed = false;\r\n\r\n  add(idx: number) {\r\n    this.args.push(idx);\r\n  }\r\n\r\n  seal(end: string) {\r\n    this.isSealed = true;\r\n    this.end = end;\r\n  }\r\n\r\n  getIsSealed() {\r\n    return this.isSealed;\r\n  }\r\n\r\n  getEnd() {\r\n    return this.end;\r\n  }\r\n\r\n  generate(...args: Array<unknown>): Tuple {\r\n    const className = args[0] as string | null;\r\n    const props = args[1] as P;\r\n    const fns = args[2] as Array<Function>;\r\n    const styleExp = this.style;\r\n    const [idx, ...rest] = this.args;\r\n    const value = fns[idx](props);\r\n    let styles = '';\r\n    let nesting = '';\r\n    let media = '';\r\n    let container = '';\r\n    let keyframes = '';\r\n\r\n    if (detectIsStyleSheet(value)) {\r\n      for (const token of value.children) {\r\n        const [$styles, $nesting, $media, $container, $keyframes] = generate({ token, className, props, fns });\r\n\r\n        styles += $styles;\r\n        nesting += $nesting;\r\n        media += $media;\r\n        container += $container;\r\n        keyframes += $keyframes;\r\n      }\r\n    } else if (styleExp) {\r\n      const end = rest.reduce((acc, x) => (acc += BLANK_SPACE + fns[x](props)), '') + this.end;\r\n\r\n      if (detectIsKeyframes(value)) {\r\n        styleExp.value = replace(this.name, value.getName()) + end;\r\n        styles += styleExp.generate();\r\n        keyframes += value.getToken().generate(props, fns);\r\n      } else {\r\n        styleExp.value = replace(this.name, value) + end;\r\n        styles += styleExp.generate();\r\n      }\r\n    }\r\n\r\n    return [styles, nesting, media, container, keyframes];\r\n  }\r\n}\r\n\r\ntype GenerateOptions<P extends object> = {\r\n  className?: string;\r\n  props?: P;\r\n  fns?: Array<Function>;\r\n};\r\n\r\nclass StyleSheet<P extends object = {}> {\r\n  children: Children = [];\r\n\r\n  generate(options: GenerateOptions<P> = {}) {\r\n    const { className = null, props, fns } = options;\r\n    let styles = className ? `${DOT_MARK}${className}${OPENING_CURLY_BRACE_MARK}` : '';\r\n    let nesting = '';\r\n    let media = '';\r\n    let container = '';\r\n    let keyframes = '';\r\n\r\n    for (const token of this.children) {\r\n      const [$styles, $nesting, $media, $container, $keyframes] = generate({ token, className, props, fns });\r\n\r\n      styles += $styles;\r\n      nesting += $nesting;\r\n      media += $media;\r\n      container += $container;\r\n      keyframes += $keyframes;\r\n    }\r\n\r\n    if (className) {\r\n      styles += `${CLOSING_CURLY_BRACE_MARK}${nesting}${media}${container}${keyframes}`;\r\n    } else {\r\n      styles += `${nesting}${media}${container}${keyframes}`;\r\n    }\r\n\r\n    return styles;\r\n  }\r\n}\r\n\r\ntype GenerateProps<P extends object> = {\r\n  token: Token;\r\n  className?: string;\r\n  props?: P;\r\n  fns?: Array<Function>;\r\n};\r\n\r\nfunction generate<P extends object = {}>(options: GenerateProps<P>): Tuple {\r\n  const { token, className = null, props, fns } = options;\r\n  let styles = '';\r\n  let nesting = '';\r\n  let media = '';\r\n  let container = '';\r\n  let keyframes = '';\r\n\r\n  if (detectIsStyleRule(token)) {\r\n    styles += token.generate();\r\n  } else if (detectIsNestingRule(token)) {\r\n    nesting += token.generate(className, props, fns);\r\n  } else if (detectIsMediaQueryRule(token)) {\r\n    media += token.generate(className, props, fns);\r\n  } else if (detectIsContainerQueryRule(token)) {\r\n    container += token.generate(className, props, fns);\r\n  } else if (detectIsKeyframesRule(token)) {\r\n    keyframes += token.generate(props, fns);\r\n  } else if (detectIsFunctionRule(token)) {\r\n    const [$styles, $nesting, $media, $container, $keyframes] = token.generate(className, props, fns);\r\n\r\n    styles += $styles;\r\n    nesting += $nesting;\r\n    media += $media;\r\n    container += $container;\r\n    keyframes += $keyframes;\r\n  }\r\n\r\n  return [styles, nesting, media, container, keyframes];\r\n}\r\n\r\ntype Tuple = [string, string, string, string, string];\r\n\r\nexport type Parent = StyleSheet | Token;\r\n\r\nexport type Children = Array<Token>;\r\n\r\nconst GROUP_SELECTOR_PATTERN = new RegExp(`${COMMA_MARK}\\\\s*`, 'g');\r\n\r\nconst detectIsToken = (x: unknown): x is Token => x instanceof Token;\r\n\r\nconst detectIsStyleRule = (x: unknown): x is StyleRule => x instanceof StyleRule;\r\n\r\nconst detectIsMediaQueryRule = (x: unknown): x is MediaQueryRule => x instanceof MediaQueryRule;\r\n\r\nconst detectIsContainerQueryRule = (x: unknown): x is ContainerQueryRule => x instanceof ContainerQueryRule;\r\n\r\nconst detectIsKeyframesRule = (x: unknown): x is KeyframesRule => x instanceof KeyframesRule;\r\n\r\nconst detectIsNestingRule = (x: unknown): x is NestingRule => x instanceof NestingRule;\r\n\r\nconst detectIsFunctionRule = (x: unknown): x is FunctionRule => x instanceof FunctionRule;\r\n\r\nconst detectIsStyleSheet = (x: unknown): x is StyleSheet => x instanceof StyleSheet;\r\n\r\nconst replace = (target: string, x: string) => target.replace(FUNCTION_MARK, x);\r\n\r\nexport {\r\n  StyleSheet,\r\n  StyleRule,\r\n  MediaQueryRule,\r\n  ContainerQueryRule,\r\n  KeyframesRule,\r\n  NestingRule,\r\n  FunctionRule,\r\n  detectIsStyleSheet,\r\n  detectIsStyleRule,\r\n  detectIsMediaQueryRule,\r\n  detectIsContainerQueryRule,\r\n  detectIsKeyframesRule,\r\n  detectIsNestingRule,\r\n  detectIsFunctionRule,\r\n};\r\n","import { type ComponentFactory, component } from '../component';\r\nimport { type SlotProps, type KeyProps } from '../shared';\r\nimport { useLayoutEffect } from '../use-layout-effect';\r\nimport { __useCursor as useCursor } from '../internal';\r\nimport { EventEmitter } from '../emitter';\r\nimport { useUpdate } from '../use-update';\r\nimport { detectIsEqual } from '../utils';\r\nimport { type Fiber } from '../fiber';\r\nimport { useMemo } from '../use-memo';\r\n\r\ntype CreateContextOptions = {\r\n  displayName?: string;\r\n};\r\n\r\nfunction createContext<T>(defaultValue: T, options?: CreateContextOptions): Context<T> {\r\n  const { displayName = 'Component' } = options || {};\r\n  const context = component<ContexProps<T>>(\r\n    ({ value = defaultValue, slot }) => {\r\n      const cursor = useCursor();\r\n      const { hook } = cursor;\r\n      let providers = hook.getProviders();\r\n\r\n      if (!providers) {\r\n        providers = new Map();\r\n        providers.set(context, { value, emitter: new EventEmitter() });\r\n        hook.setProviders(providers);\r\n      }\r\n\r\n      const provider = providers.get(context);\r\n\r\n      // should be sync\r\n      useLayoutEffect(() => {\r\n        provider.emitter.emit('publish', value);\r\n      }, [value]);\r\n\r\n      provider.value = value;\r\n\r\n      return slot;\r\n    },\r\n    { displayName: `Context(${displayName})` },\r\n  ) as Context<T>;\r\n\r\n  context.defaultValue = defaultValue;\r\n  Object.freeze(context);\r\n\r\n  return context;\r\n}\r\n\r\nfunction useContext<T>(context: Context<T>): T {\r\n  const { defaultValue } = context;\r\n  const cursor = useCursor();\r\n  const scope = useMemo(() => ({ value: null, provider: getProvider<T>(context, cursor) }), []);\r\n  const update = useUpdate();\r\n  const { provider } = scope;\r\n  const value = provider ? provider.value : defaultValue;\r\n\r\n  // !\r\n  useLayoutEffect(() => {\r\n    if (!provider) return;\r\n    return provider.emitter.on('publish', (value: T) => {\r\n      !detectIsEqual(scope.value, value) && update();\r\n    });\r\n  }, []);\r\n\r\n  scope.value = value;\r\n\r\n  return value;\r\n}\r\n\r\nfunction getProvider<T>(context: Context<T>, fiber: Fiber) {\r\n  let $fiber = fiber;\r\n\r\n  while ($fiber) {\r\n    const providers = $fiber.hook?.getProviders();\r\n    if (providers?.has(context)) return providers.get(context) as ContextProvider<T>;\r\n    $fiber = $fiber.parent;\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nexport type ContexProps<T> = {\r\n  value: T;\r\n} & SlotProps &\r\n  KeyProps;\r\n\r\nexport type Context<T = {}> = ComponentFactory<ContexProps<T>> & { defaultValue: T };\r\n\r\nexport type ContextProvider<T = unknown> = {\r\n  value: T;\r\n  emitter: EventEmitter<'publish'>;\r\n};\r\n\r\nexport { createContext, useContext };\r\n","import { type DarkElement, createContext, useContext, component } from '@dark-engine/core';\r\n\r\nimport { type DefaultTheme } from '../';\r\n\r\n// // styled.d.ts\r\n// type Theme = {\r\n//   color1: string;\r\n//   color2: string;\r\n//   color3: string;\r\n// };\r\n// declare module '@dark-engine/styled' {\r\n//   export interface DefaultTheme extends Theme {}\r\n// }\r\n\r\nexport type ThemeProps = { theme: DefaultTheme };\r\n\r\nexport type ThemeContextValue = DefaultTheme;\r\n\r\nconst ThemeContext = createContext<ThemeContextValue>(null, { displayName: 'Theme' });\r\n\r\nconst useTheme = () => useContext(ThemeContext);\r\n\r\ntype ThemeProviderProps = {\r\n  theme: DefaultTheme;\r\n  slot: DarkElement;\r\n};\r\n\r\nconst ThemeProvider = component<ThemeProviderProps>(({ theme, slot }) => {\r\n  return ThemeContext({ value: theme, slot });\r\n});\r\n\r\nexport { ThemeProvider, useTheme };\r\n","import { type DarkElement, type Callback, createContext, useContext, component } from '@dark-engine/core';\r\n\r\nexport enum STYLE_LEVEL {\r\n  GLOBAL,\r\n  COMPONENT,\r\n}\r\n\r\nclass Manager {\r\n  private styles = createStyles();\r\n  private resets = new Set<Callback>();\r\n\r\n  collectGlobalStyle(css: string) {\r\n    this.styles[STYLE_LEVEL.GLOBAL].add(css);\r\n  }\r\n\r\n  collectComponentStyle(css: string) {\r\n    this.styles[STYLE_LEVEL.COMPONENT].add(css);\r\n  }\r\n\r\n  getStyles() {\r\n    return this.styles;\r\n  }\r\n\r\n  reset(fn: Callback) {\r\n    this.resets.add(fn);\r\n  }\r\n\r\n  seal() {\r\n    this.styles = createStyles();\r\n    this.resets.forEach(x => x());\r\n    this.resets = new Set();\r\n  }\r\n}\r\n\r\nconst createStyles = () => ({\r\n  [STYLE_LEVEL.GLOBAL]: new Set<string>(),\r\n  [STYLE_LEVEL.COMPONENT]: new Set<string>(),\r\n});\r\n\r\nconst ManagerContext = createContext<Manager>(null, { displayName: 'Manager' });\r\n\r\nfunction useManager() {\r\n  return useContext(ManagerContext);\r\n}\r\n\r\ntype ThemeProviderProps = {\r\n  manager: Manager;\r\n  slot: DarkElement;\r\n};\r\n\r\nconst ManagerProvider = component<ThemeProviderProps>(({ manager, slot }) => {\r\n  return ManagerContext({ value: manager, slot });\r\n});\r\n\r\nexport { Manager, useManager, ManagerProvider };\r\n","import {\r\n  OPENING_CURLY_BRACE_MARK,\r\n  CLOSING_CURLY_BRACE_MARK,\r\n  COLON_MARK,\r\n  SEMICOLON_MARK,\r\n  MEDIA_QUERY_MARK,\r\n  CONTAINER_QUERY_MARK,\r\n  KEYFRAMES_MARK,\r\n  FUNCTION_MARK,\r\n  SINGLE_LINE_COMMENT_START_MARK,\r\n  SINGLE_LINE_COMMENT_END_MARK,\r\n  MULTI_LINE_COMMENT_START_MARK,\r\n  MULTI_LINE_COMMENT_END_MARK,\r\n  OPENING_PARENTHESIS_MARK,\r\n  CLOSING_PARENTHESIS_MARK,\r\n  URL_FN_MARK,\r\n  LIB,\r\n} from '../constants';\r\nimport {\r\n  type Children,\r\n  StyleSheet,\r\n  StyleRule,\r\n  MediaQueryRule,\r\n  ContainerQueryRule,\r\n  KeyframesRule,\r\n  NestingRule,\r\n  FunctionRule,\r\n  detectIsStyleSheet,\r\n  detectIsStyleRule,\r\n  detectIsMediaQueryRule,\r\n  detectIsContainerQueryRule,\r\n  detectIsKeyframesRule,\r\n  detectIsNestingRule,\r\n  detectIsFunctionRule,\r\n} from '../tokens';\r\nimport { illegal } from '../utils';\r\n\r\nfunction parse<P extends object>(css: string) {\r\n  const stylesheet = new StyleSheet<P>();\r\n  const stack: Array<NestingRule | MediaQueryRule> = [];\r\n  let buffer = '';\r\n  let end = '';\r\n  let fnIdx = -1;\r\n  let isSingleLineComment = false;\r\n  let isMultiLineComment = false;\r\n  let isPropValue = false;\r\n  let isUrl = false;\r\n\r\n  for (let i = 0; i < css.length; i++) {\r\n    const char = css[i];\r\n    const parent = stack[stack.length - 1] || stylesheet;\r\n    const last = parent.children[parent.children.length - 1];\r\n\r\n    buffer += char;\r\n\r\n    if (!isSingleLineComment && detectHasSingleLineCommentStartMark(buffer)) {\r\n      isSingleLineComment = !isUrl;\r\n    } else if (isSingleLineComment && detectHasSingleLineCommentEndMark(buffer)) {\r\n      isSingleLineComment = false;\r\n      buffer = '';\r\n    }\r\n\r\n    if (!isMultiLineComment && detectHasMultiLineCommentStartMark(buffer)) {\r\n      isMultiLineComment = true;\r\n      end = detectIsStyleRule(last) ? createEnd(buffer) : '';\r\n    } else if (isMultiLineComment && detectHasMultiLineCommentEndMark(buffer)) {\r\n      isMultiLineComment = false;\r\n      buffer = '';\r\n    }\r\n\r\n    if (isSingleLineComment || isMultiLineComment) continue;\r\n\r\n    if (detectHasFunctionMark(buffer)) {\r\n      const token = new FunctionRule();\r\n\r\n      if (detectIsFunctionRule(last) && !last.getIsSealed() && last.style) {\r\n        last.add(++fnIdx);\r\n        buffer = '';\r\n        continue;\r\n      }\r\n\r\n      token.add(++fnIdx);\r\n      token.parent = parent;\r\n      token.markAsDynamic();\r\n\r\n      if (detectIsStyleRule(last) && !last.value) {\r\n        token.style = last;\r\n        token.name = buffer.trim();\r\n        last.normalize();\r\n        last.isDynamic = true;\r\n        parent.children[parent.children.length - 1] = token;\r\n      } else {\r\n        parent.children.push(token);\r\n      }\r\n\r\n      buffer = '';\r\n      continue;\r\n    }\r\n\r\n    switch (char) {\r\n      case OPENING_CURLY_BRACE_MARK:\r\n        {\r\n          const token = detectHasMediaQueryMark(buffer)\r\n            ? new MediaQueryRule()\r\n            : detectHasContainerQueryMark(buffer)\r\n            ? new ContainerQueryRule()\r\n            : detectHasKeyframesMark(buffer)\r\n            ? new KeyframesRule()\r\n            : new NestingRule();\r\n          const canNest =\r\n            detectIsMediaQueryRule(token) || detectIsContainerQueryRule(token) || detectIsKeyframesRule(token)\r\n              ? detectIsStyleSheet(parent)\r\n              : detectIsNestingRule(token)\r\n              ? detectIsStyleSheet(parent) ||\r\n                detectIsMediaQueryRule(parent) ||\r\n                detectIsContainerQueryRule(parent) ||\r\n                detectIsKeyframesRule(parent)\r\n              : false;\r\n\r\n          if (!canNest) {\r\n            illegal('Illegal style nesting!');\r\n          }\r\n\r\n          token.value = sub(buffer);\r\n          token.normalize();\r\n          token.parent = parent;\r\n\r\n          if (!token.value) {\r\n            illegal('Empty style nesting!');\r\n          }\r\n\r\n          parent.children.push(token);\r\n          stack.push(token);\r\n          buffer = '';\r\n        }\r\n        break;\r\n      case CLOSING_CURLY_BRACE_MARK:\r\n        stack.pop();\r\n        buffer = '';\r\n        break;\r\n      case COLON_MARK:\r\n        {\r\n          if (!detectIsPropName(buffer, i, css, parent.children)) continue;\r\n          const token = new StyleRule();\r\n\r\n          token.name = sub(buffer);\r\n          token.parent = parent;\r\n          parent.children.push(token);\r\n        }\r\n        buffer = '';\r\n        isPropValue = true;\r\n        break;\r\n      case SEMICOLON_MARK:\r\n        if (!last) {\r\n          illegal('Incorrect style!');\r\n        }\r\n\r\n        if (detectIsFunctionRule(last)) {\r\n          last.seal(sub(buffer));\r\n          buffer = '';\r\n          continue;\r\n        }\r\n\r\n        last.value = end || sub(buffer);\r\n        last.normalize();\r\n\r\n        buffer = '';\r\n        end = '';\r\n        isPropValue = false;\r\n        break;\r\n      case OPENING_PARENTHESIS_MARK:\r\n        if (isPropValue && detectHasUrlFnMark(buffer)) {\r\n          isUrl = true;\r\n        }\r\n        break;\r\n      case CLOSING_PARENTHESIS_MARK:\r\n        isUrl = false;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  return stylesheet;\r\n}\r\n\r\nfunction detectIsPropName(name: string, idx: number, css: string, children: Children) {\r\n  const last = children[children.length - 1];\r\n  if (detectHasMediaQueryMark(name) || detectHasContainerQueryMark(name)) return false;\r\n  if (detectIsStyleRule(last) && !last.value) return false;\r\n\r\n  for (let i = idx; i < css.length; i++) {\r\n    const char = css[i];\r\n\r\n    if (char === OPENING_CURLY_BRACE_MARK) return false;\r\n    if (char === SEMICOLON_MARK) return true;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nconst detectHasSingleLineCommentStartMark = (x: string) => x.endsWith(SINGLE_LINE_COMMENT_START_MARK);\r\n\r\nconst detectHasSingleLineCommentEndMark = (x: string) => x.endsWith(SINGLE_LINE_COMMENT_END_MARK);\r\n\r\nconst detectHasMultiLineCommentStartMark = (x: string) => x.endsWith(MULTI_LINE_COMMENT_START_MARK);\r\n\r\nconst detectHasMultiLineCommentEndMark = (x: string) => x.endsWith(MULTI_LINE_COMMENT_END_MARK);\r\n\r\nconst detectHasFunctionMark = (x: string) => x.endsWith(FUNCTION_MARK);\r\n\r\nconst detectHasUrlFnMark = (x: string) => x.endsWith(URL_FN_MARK + OPENING_PARENTHESIS_MARK);\r\n\r\nconst detectHasMediaQueryMark = (x: string) => x.trim().startsWith(MEDIA_QUERY_MARK);\r\n\r\nconst detectHasContainerQueryMark = (x: string) => x.trim().startsWith(CONTAINER_QUERY_MARK);\r\n\r\nconst detectHasKeyframesMark = (x: string) => x.trim().startsWith(KEYFRAMES_MARK);\r\n\r\nconst sub = (x: string) => x.substring(0, x.length - 1);\r\n\r\nconst createEnd = (x: string) => x.replace(MULTI_LINE_COMMENT_START_MARK, '').trim();\r\n\r\nexport { parse };\r\n","const SEED = 5381;\r\nconst SIZE = 6;\r\nconst map = { 0: 'a', 1: 'b', 2: 'c', 3: 'd', 4: 'e', 5: 'f', 6: 'g', 7: 'h', 8: 'i', 9: 'j' };\r\n\r\nfunction phash(h: number, x: string) {\r\n  let i = x.length;\r\n\r\n  while (i) {\r\n    h = (h * 33) ^ x.charCodeAt(--i);\r\n  }\r\n\r\n  return h;\r\n}\r\n\r\nfunction hash(x: string) {\r\n  const source = phash(SEED, x);\r\n  const hash = String(Math.abs(source))\r\n    .slice(0, SIZE)\r\n    .split('')\r\n    .map(x => map[x])\r\n    .join('');\r\n\r\n  return hash;\r\n}\r\n\r\nexport { hash };\r\n","import {\r\n  type ComponentFactory,\r\n  type TagVirtualNodeFactory,\r\n  type StandardComponentProps,\r\n  type TextBased,\r\n  type DarkElement,\r\n  View,\r\n  component,\r\n  useMemo,\r\n  detectIsString,\r\n  detectIsFunction,\r\n  detectIsTextBased,\r\n  useInsertionEffect,\r\n  mapRecord,\r\n  detectIsVirtualNodeFactory,\r\n  __useSSR as useSSR,\r\n} from '@dark-engine/core';\r\nimport { type DarkJSX } from '@dark-engine/platform-browser';\r\n\r\nimport {\r\n  CLASS_NAME_PREFIX,\r\n  FUNCTION_MARK,\r\n  DOT_MARK,\r\n  STYLED_ATTR,\r\n  COMPONENTS_ATTR_VALUE,\r\n  INTERLEAVE_COMPONENTS_ATTR_VALUE,\r\n  BLANK_SPACE,\r\n  NULL_MARK,\r\n} from '../constants';\r\nimport {\r\n  detectIsBrowser,\r\n  mergeClassNames,\r\n  getElement,\r\n  getElements,\r\n  createStyleElement,\r\n  setAttr,\r\n  append,\r\n  mergeTemplates,\r\n  illegal,\r\n} from '../utils';\r\nimport { type KeyframesRule, StyleSheet, detectIsStyleSheet, detectIsKeyframesRule } from '../tokens';\r\nimport { type Keyframes, detectIsKeyframes } from '../keyframes';\r\nimport { type ThemeProps, useTheme } from '../theme';\r\nimport { useManager } from '../server/manager';\r\nimport { parse } from '../parse';\r\nimport { hash } from '../hash';\r\n\r\nlet cache: Map<string, [string, string]> = null;\r\nlet injections: Set<string> = null;\r\nlet tag: HTMLStyleElement = null;\r\nlet isLoaded = false;\r\nconst $$styled = Symbol('styled');\r\n\r\nsetupGlobal();\r\nfunction styled<P extends object, T extends object = {}>(tagName: string | ComponentFactory<P>) {\r\n  const isString = detectIsString(tagName);\r\n  const factory = isString ? (props: P) => View({ as: tagName, ...props }) : tagName;\r\n  const targetName = isString ? tagName : (factory as ComponentFactory<P>).displayName || 'Component';\r\n  const displayName = `styled.${targetName}`;\r\n\r\n  if (!isLoaded && detectIsBrowser()) {\r\n    reuse(getInterleavedElements(), createTag);\r\n    isLoaded = true;\r\n  }\r\n\r\n  return createStyledComponent<P & T>(factory as Factory<P & T>, displayName);\r\n}\r\n\r\nfunction createStyledComponent<P extends StyledProps>(factory: Factory<P>, displayName: string) {\r\n  let transform: TransformFn<P> = x => x;\r\n  const isExtending = detectIsStyled(factory);\r\n  const config = isExtending ? getExtendingConfig(factory as StyledComponentFactory<P>) : null;\r\n  const fn = <T extends P>(source: TemplateStringsArray, ...args: Args<T & ThemeProps>) => {\r\n    const $source = isExtending ? mergeTemplates(config.source, source) : source;\r\n    const $args = isExtending ? [...config.args, ...args] : args;\r\n    const $transform = isExtending ? (p: T) => transform(config.transform(p)) : transform;\r\n    const fns = filterArgs<T>($args);\r\n    const [sheet, sheets] = slice<T>(ast($source, ...$args));\r\n    const [baseName, baseStyle, baseKeyframes] = generate({ sheet, cache });\r\n    const styled = component<T>(\r\n      props => {\r\n        const { as: component, ...rest } = props;\r\n        const theme = useTheme();\r\n        const { isServer, isHydration } = useSSR();\r\n        const isSwap = detectIsFunction(component);\r\n        const $props = (isSwap ? rest : props) as unknown as T;\r\n        const $factory = isSwap ? component : isExtending ? config.factory : factory;\r\n        const [className, styles, keyframes] = useMemo(() => {\r\n          const [names, styles, keyframes] = sheets.reduce(\r\n            (acc, sheet) => {\r\n              const [className, style, keyframes] = generate({ sheet, cache, props: { ...props, theme }, fns });\r\n              const [names, styles, keyframesList] = acc;\r\n\r\n              names.push(className);\r\n              styles.push(style);\r\n              keyframesList.push(keyframes);\r\n\r\n              return acc;\r\n            },\r\n            [[], [baseStyle], [baseKeyframes]] as [Array<string>, Array<string>, Array<string>],\r\n          );\r\n          const className = mergeClassNames([...getClassNamesFrom(props), baseName, ...names]);\r\n\r\n          return [className, filter(styles, injections), filter(keyframes, injections)] as [\r\n            string,\r\n            Array<string>,\r\n            Array<string>,\r\n          ];\r\n        }, [...mapRecord(props), theme]);\r\n\r\n        useInsertionEffect(() => {\r\n          injectWithHydration(styles, isHydration);\r\n          injectWithHydration(keyframes, isHydration);\r\n        }, [...styles, ...keyframes]);\r\n\r\n        if (isServer) {\r\n          const manager = useManager(); // special case of hook using, should be last in order\r\n\r\n          styles.forEach(css => manager.collectComponentStyle(css));\r\n          keyframes.forEach(css => manager.collectComponentStyle(css));\r\n          manager.reset(setupGlobal);\r\n        }\r\n\r\n        if (detectIsFunction($props.slot) && !detectIsVirtualNodeFactory($props.slot)) {\r\n          $props.slot = $props.slot((x: string) => `${className}_${x}`);\r\n        }\r\n\r\n        return $factory({ ...$transform($props), className });\r\n      },\r\n      { displayName },\r\n    ) as StyledComponentFactory<T>;\r\n\r\n    styled[$$styled] = {\r\n      className: baseName,\r\n      source: $source,\r\n      args: $args,\r\n      factory: (config?.factory || factory) as Factory<T>,\r\n      transform: config ? p => transform(config.transform(p)) : transform,\r\n    };\r\n\r\n    return styled;\r\n  };\r\n\r\n  fn.attrs = (t: TransformFn<P>) => {\r\n    transform = detectIsFunction(t) ? t : transform;\r\n\r\n    return fn;\r\n  };\r\n\r\n  return fn;\r\n}\r\n\r\nfunction injectWithHydration(styles: Array<string>, isHydration: boolean) {\r\n  tag = tag || getTag() || createTag();\r\n  const content = tag.textContent;\r\n\r\n  for (const css of styles) {\r\n    if (isHydration) {\r\n      content.indexOf(css) === -1 && inject(css, tag);\r\n    } else {\r\n      inject(css, tag);\r\n    }\r\n  }\r\n}\r\n\r\nfunction filter(styles: Array<string>, injections: Set<string>) {\r\n  const $styles: Array<string> = [];\r\n\r\n  for (const style of styles) {\r\n    if (style && !injections.has(style)) {\r\n      $styles.push(style);\r\n      injections.add(style);\r\n    }\r\n  }\r\n\r\n  return $styles;\r\n}\r\n\r\nfunction setupGlobal() {\r\n  cache = new Map();\r\n  injections = new Set();\r\n  tag = null;\r\n  isLoaded = false;\r\n}\r\n\r\nfunction getExtendingConfig<P extends object>(factory: StyledComponentFactory<P>) {\r\n  const { className, ...rest } = factory[$$styled];\r\n  const config: ExtendingConfig<P> = rest;\r\n\r\n  return config;\r\n}\r\n\r\ntype GenerateOptions<P extends object> = {\r\n  sheet: StyleSheet<P>;\r\n  cache: Map<string, [string, string]>;\r\n  props?: P;\r\n  fns?: Array<Function>;\r\n};\r\n\r\nfunction generate<P extends object>(options: GenerateOptions<P>): [string, string, string] {\r\n  const { sheet: $sheet, cache, props, fns } = options;\r\n  const [sheet, rules] = split($sheet);\r\n  const key = sheet.generate({ className: FUNCTION_MARK, props, fns });\r\n  const item = cache.get(key);\r\n  const className = item ? item[0] : genClassName(key);\r\n  let css = '';\r\n  let style = '';\r\n  let keyframes = '';\r\n\r\n  if (item) {\r\n    css = item[1];\r\n  } else {\r\n    css = key.replaceAll(FUNCTION_MARK, className);\r\n    css = css.replaceAll(`${DOT_MARK}${NULL_MARK}`, `${DOT_MARK}${className}`);\r\n  }\r\n\r\n  style += css;\r\n  cache.set(key, [className, css]);\r\n\r\n  for (const rule of rules) {\r\n    keyframes += rule.generate();\r\n  }\r\n\r\n  return [className, style, keyframes];\r\n}\r\n\r\nfunction split<P extends object>(source: StyleSheet<P>): [StyleSheet<P>, Array<KeyframesRule<P>>] {\r\n  const sheet = new StyleSheet<P>();\r\n  const rules: Array<KeyframesRule<P>> = [];\r\n\r\n  for (const token of source.children) {\r\n    if (detectIsKeyframesRule(token)) {\r\n      rules.push(token);\r\n    } else {\r\n      sheet.children.push(token);\r\n    }\r\n  }\r\n\r\n  return [sheet, rules];\r\n}\r\n\r\nfunction slice<P extends object>(source: StyleSheet<P>): [StyleSheet<P>, Array<StyleSheet<P>>] {\r\n  const sheet = new StyleSheet<P>();\r\n  const sheets: Array<StyleSheet> = [];\r\n\r\n  for (const token of source.children) {\r\n    if (token.isDynamic) {\r\n      const style = new StyleSheet<P>();\r\n\r\n      style.children.push(token);\r\n      sheets.push(style);\r\n    } else {\r\n      sheet.children.push(token);\r\n    }\r\n  }\r\n\r\n  return [sheet, sheets];\r\n}\r\n\r\nfunction join<P>(strings: TemplateStringsArray, args: Args<P>, isFragment = false) {\r\n  let joined = '';\r\n  let keyframes = '';\r\n\r\n  for (let i = 0; i < strings.length; i++) {\r\n    const arg = args[i];\r\n\r\n    joined += strings[i];\r\n\r\n    if (detectIsStyled(arg)) {\r\n      joined += `${DOT_MARK}${arg[$$styled].className}`;\r\n    } else if (detectIsStyleSheet(arg)) {\r\n      joined += arg.generate();\r\n    } else if (detectIsKeyframes(arg)) {\r\n      joined += arg.getName();\r\n      keyframes += arg.getToken().generate();\r\n    } else if (detectIsFunction(arg)) {\r\n      if (isFragment) illegal('Illegal nesting functions in a CSS fragment!');\r\n      joined += FUNCTION_MARK;\r\n    } else if (detectIsTextBased(arg)) {\r\n      joined += arg;\r\n    }\r\n  }\r\n\r\n  joined += keyframes;\r\n\r\n  return joined;\r\n}\r\n\r\nfunction createTag() {\r\n  const tag = createStyleElement();\r\n\r\n  setAttr(tag, STYLED_ATTR, COMPONENTS_ATTR_VALUE);\r\n  append(document.head, tag);\r\n\r\n  return tag;\r\n}\r\n\r\nfunction inject(css: string, tag: HTMLStyleElement) {\r\n  tag.textContent = `${tag.textContent}${css}`;\r\n}\r\n\r\nfunction reuse(elements: Array<HTMLStyleElement>, createTag: () => HTMLStyleElement, isComponentStyle = true) {\r\n  if (elements.length === 0) return;\r\n  const tag = createTag();\r\n  let content = '';\r\n\r\n  for (const element of elements) {\r\n    const style = element.textContent;\r\n\r\n    isComponentStyle && filter([style], injections);\r\n    content += style;\r\n    element.remove();\r\n  }\r\n\r\n  tag.textContent = content;\r\n}\r\n\r\nfunction getInterleavedElements() {\r\n  return getElements(`[${STYLED_ATTR}=\"${INTERLEAVE_COMPONENTS_ATTR_VALUE}\"]`) as Array<HTMLStyleElement>;\r\n}\r\n\r\nconst getTag = () => getElement(`[${STYLED_ATTR}=\"${COMPONENTS_ATTR_VALUE}\"]`) as HTMLStyleElement;\r\n\r\nconst createParser =\r\n  (isFragment: boolean) =>\r\n  <P extends object>(strings: TemplateStringsArray, ...args: Args<P>) =>\r\n    parse<P>(join(strings, args, isFragment));\r\n\r\nconst ast = createParser(false);\r\n\r\nconst css = createParser(true);\r\n\r\nconst getClassNamesFrom = (props: StyledProps) => (props.class || props.className || '').split(BLANK_SPACE);\r\n\r\nconst genClassName = (key: string) => `${CLASS_NAME_PREFIX}-${hash(key)}`;\r\n\r\nconst detectIsStyled = (x: unknown): x is StyledComponentFactory => detectIsFunction(x) && Boolean(x[$$styled]);\r\n\r\nconst filterArgs = <P>(args: Args<unknown>) =>\r\n  args.filter(x => detectIsFunction(x) && !detectIsStyled(x)) as DynamicArgs<P>;\r\n\r\ntype Factory<P extends object> = ComponentFactory<P> | ((props: P) => TagVirtualNodeFactory);\r\n\r\ntype ClassNameFn = (className: string) => string;\r\n\r\ntype StyledProps = {\r\n  as?: string | ComponentFactory;\r\n  class?: string;\r\n  className?: string;\r\n  style?: string | Record<string, string>;\r\n  slot?: ((fn: ClassNameFn) => DarkElement) | DarkElement;\r\n};\r\n\r\ntype ExtendingConfig<P extends object = {}> = {\r\n  source: TemplateStringsArray;\r\n  args: Args<P>;\r\n  factory: Factory<P>;\r\n  transform: (x: P) => P;\r\n};\r\n\r\ntype TransformFn<P> = (p: P) => any;\r\n\r\ntype DynamicArgs<P> = Array<ArgFn<P>>;\r\n\r\ntype ArgFn<P> = Function | ((p: P) => TextBased | false);\r\n\r\nexport type Args<P> = Array<TextBased | ArgFn<P> | StyleSheet | Keyframes>;\r\n\r\nexport type StyledComponentFactory<P extends object = {}> = {\r\n  [$$styled]: {\r\n    className: string;\r\n  } & ExtendingConfig<P>;\r\n} & ComponentFactory<P & StandardComponentProps & StyledProps>;\r\n\r\ntype FactoryFn<P extends object> = {\r\n  <T extends P>(source: TemplateStringsArray, ...args: Args<T & ThemeProps>): StyledComponentFactory<T>;\r\n  attrs: (t: TransformFn<P>) => FactoryFn<P>;\r\n};\r\n\r\nstyled.a = styled('a') as FactoryFn<DarkJSX.Elements['a']>;\r\nstyled.abbr = styled('abbr') as FactoryFn<DarkJSX.Elements['abbr']>;\r\nstyled.address = styled('address') as FactoryFn<DarkJSX.Elements['address']>;\r\nstyled.area = styled('area') as FactoryFn<DarkJSX.Elements['area']>;\r\nstyled.article = styled('article') as FactoryFn<DarkJSX.Elements['article']>;\r\nstyled.aside = styled('aside') as FactoryFn<DarkJSX.Elements['aside']>;\r\nstyled.audio = styled('audio') as FactoryFn<DarkJSX.Elements['audio']>;\r\nstyled.b = styled('b') as FactoryFn<DarkJSX.Elements['b']>;\r\nstyled.base = styled('base') as FactoryFn<DarkJSX.Elements['base']>;\r\nstyled.bdi = styled('bdi') as FactoryFn<DarkJSX.Elements['bdi']>;\r\nstyled.bdo = styled('bdo') as FactoryFn<DarkJSX.Elements['bdo']>;\r\nstyled.blockquote = styled('blockquote') as FactoryFn<DarkJSX.Elements['blockquote']>;\r\nstyled.body = styled('body') as FactoryFn<DarkJSX.Elements['body']>;\r\nstyled.br = styled('br') as FactoryFn<DarkJSX.Elements['br']>;\r\nstyled.button = styled('button') as FactoryFn<DarkJSX.Elements['button']>;\r\nstyled.canvas = styled('canvas') as FactoryFn<DarkJSX.Elements['canvas']>;\r\nstyled.caption = styled('caption') as FactoryFn<DarkJSX.Elements['caption']>;\r\nstyled.cite = styled('cite') as FactoryFn<DarkJSX.Elements['cite']>;\r\nstyled.code = styled('code') as FactoryFn<DarkJSX.Elements['code']>;\r\nstyled.col = styled('col') as FactoryFn<DarkJSX.Elements['col']>;\r\nstyled.colgroup = styled('colgroup') as FactoryFn<DarkJSX.Elements['colgroup']>;\r\nstyled.data = styled('data') as FactoryFn<DarkJSX.Elements['data']>;\r\nstyled.datalist = styled('datalist') as FactoryFn<DarkJSX.Elements['datalist']>;\r\nstyled.dd = styled('dd') as FactoryFn<DarkJSX.Elements['dd']>;\r\nstyled.del = styled('del') as FactoryFn<DarkJSX.Elements['del']>;\r\nstyled.details = styled('details') as FactoryFn<DarkJSX.Elements['details']>;\r\nstyled.dfn = styled('dfn') as FactoryFn<DarkJSX.Elements['dfn']>;\r\nstyled.dialog = styled('dialog') as FactoryFn<DarkJSX.Elements['dialog']>;\r\nstyled.div = styled('div') as FactoryFn<DarkJSX.Elements['div']>;\r\nstyled.dl = styled('dl') as FactoryFn<DarkJSX.Elements['dl']>;\r\nstyled.dt = styled('dt') as FactoryFn<DarkJSX.Elements['dt']>;\r\nstyled.em = styled('em') as FactoryFn<DarkJSX.Elements['em']>;\r\nstyled.embed = styled('embed') as FactoryFn<DarkJSX.Elements['embed']>;\r\nstyled.fieldset = styled('fieldset') as FactoryFn<DarkJSX.Elements['fieldset']>;\r\nstyled.figcaption = styled('figcaption') as FactoryFn<DarkJSX.Elements['figcaption']>;\r\nstyled.figure = styled('figure') as FactoryFn<DarkJSX.Elements['figure']>;\r\nstyled.footer = styled('footer') as FactoryFn<DarkJSX.Elements['footer']>;\r\nstyled.form = styled('form') as FactoryFn<DarkJSX.Elements['form']>;\r\nstyled.h1 = styled('h1') as FactoryFn<DarkJSX.Elements['h1']>;\r\nstyled.h2 = styled('h2') as FactoryFn<DarkJSX.Elements['h2']>;\r\nstyled.h3 = styled('h3') as FactoryFn<DarkJSX.Elements['h3']>;\r\nstyled.h4 = styled('h4') as FactoryFn<DarkJSX.Elements['h4']>;\r\nstyled.h5 = styled('h5') as FactoryFn<DarkJSX.Elements['h5']>;\r\nstyled.h6 = styled('h6') as FactoryFn<DarkJSX.Elements['h6']>;\r\nstyled.head = styled('head') as FactoryFn<DarkJSX.Elements['head']>;\r\nstyled.header = styled('header') as FactoryFn<DarkJSX.Elements['header']>;\r\nstyled.hgroup = styled('hgroup') as FactoryFn<DarkJSX.Elements['hgroup']>;\r\nstyled.hr = styled('hr') as FactoryFn<DarkJSX.Elements['hr']>;\r\nstyled.html = styled('html') as FactoryFn<DarkJSX.Elements['html']>;\r\nstyled.i = styled('i') as FactoryFn<DarkJSX.Elements['i']>;\r\nstyled.iframe = styled('iframe') as FactoryFn<DarkJSX.Elements['iframe']>;\r\nstyled.img = styled('img') as FactoryFn<DarkJSX.Elements['img']>;\r\nstyled.input = styled('input') as FactoryFn<DarkJSX.Elements['input']>;\r\nstyled.ins = styled('ins') as FactoryFn<DarkJSX.Elements['ins']>;\r\nstyled.kbd = styled('kbd') as FactoryFn<DarkJSX.Elements['kbd']>;\r\nstyled.label = styled('label') as FactoryFn<DarkJSX.Elements['label']>;\r\nstyled.legend = styled('legend') as FactoryFn<DarkJSX.Elements['legend']>;\r\nstyled.li = styled('li') as FactoryFn<DarkJSX.Elements['li']>;\r\nstyled.link = styled('link') as FactoryFn<DarkJSX.Elements['link']>;\r\nstyled.main = styled('main') as FactoryFn<DarkJSX.Elements['main']>;\r\nstyled.map = styled('map') as FactoryFn<DarkJSX.Elements['map']>;\r\nstyled.mark = styled('mark') as FactoryFn<DarkJSX.Elements['mark']>;\r\nstyled.menu = styled('menu') as FactoryFn<DarkJSX.Elements['menu']>;\r\nstyled.meta = styled('meta') as FactoryFn<DarkJSX.Elements['meta']>;\r\nstyled.meter = styled('meter') as FactoryFn<DarkJSX.Elements['meter']>;\r\nstyled.nav = styled('nav') as FactoryFn<DarkJSX.Elements['nav']>;\r\nstyled.noscript = styled('noscript') as FactoryFn<DarkJSX.Elements['noscript']>;\r\nstyled.object = styled('object') as FactoryFn<DarkJSX.Elements['object']>;\r\nstyled.ol = styled('ol') as FactoryFn<DarkJSX.Elements['ol']>;\r\nstyled.optgroup = styled('optgroup') as FactoryFn<DarkJSX.Elements['optgroup']>;\r\nstyled.option = styled('option') as FactoryFn<DarkJSX.Elements['option']>;\r\nstyled.output = styled('output') as FactoryFn<DarkJSX.Elements['output']>;\r\nstyled.p = styled('p') as FactoryFn<DarkJSX.Elements['p']>;\r\nstyled.param = styled('param') as FactoryFn<DarkJSX.Elements['param']>;\r\nstyled.picture = styled('picture') as FactoryFn<DarkJSX.Elements['picture']>;\r\nstyled.pre = styled('pre') as FactoryFn<DarkJSX.Elements['pre']>;\r\nstyled.progress = styled('progress') as FactoryFn<DarkJSX.Elements['progress']>;\r\nstyled.q = styled('q') as FactoryFn<DarkJSX.Elements['q']>;\r\nstyled.rp = styled('rp') as FactoryFn<DarkJSX.Elements['rp']>;\r\nstyled.rt = styled('rt') as FactoryFn<DarkJSX.Elements['rt']>;\r\nstyled.ruby = styled('ruby') as FactoryFn<DarkJSX.Elements['ruby']>;\r\nstyled.s = styled('s') as FactoryFn<DarkJSX.Elements['s']>;\r\nstyled.samp = styled('samp') as FactoryFn<DarkJSX.Elements['samp']>;\r\nstyled.script = styled('script') as FactoryFn<DarkJSX.Elements['script']>;\r\nstyled.section = styled('section') as FactoryFn<DarkJSX.Elements['section']>;\r\nstyled.select = styled('select') as FactoryFn<DarkJSX.Elements['select']>;\r\nstyled.small = styled('small') as FactoryFn<DarkJSX.Elements['small']>;\r\nstyled.source = styled('source') as FactoryFn<DarkJSX.Elements['source']>;\r\nstyled.span = styled('span') as FactoryFn<DarkJSX.Elements['span']>;\r\nstyled.strong = styled('strong') as FactoryFn<DarkJSX.Elements['strong']>;\r\nstyled.style = styled('style') as FactoryFn<DarkJSX.Elements['style']>;\r\nstyled.sub = styled('sub') as FactoryFn<DarkJSX.Elements['sub']>;\r\nstyled.summary = styled('summary') as FactoryFn<DarkJSX.Elements['summary']>;\r\nstyled.sup = styled('sup') as FactoryFn<DarkJSX.Elements['sup']>;\r\nstyled.table = styled('table') as FactoryFn<DarkJSX.Elements['table']>;\r\nstyled.tbody = styled('tbody') as FactoryFn<DarkJSX.Elements['tbody']>;\r\nstyled.td = styled('td') as FactoryFn<DarkJSX.Elements['td']>;\r\nstyled.template = styled('template') as FactoryFn<DarkJSX.Elements['template']>;\r\nstyled.textarea = styled('textarea') as FactoryFn<DarkJSX.Elements['textarea']>;\r\nstyled.tfoot = styled('tfoot') as FactoryFn<DarkJSX.Elements['tfoot']>;\r\nstyled.th = styled('th') as FactoryFn<DarkJSX.Elements['th']>;\r\nstyled.thead = styled('thead') as FactoryFn<DarkJSX.Elements['thead']>;\r\nstyled.time = styled('time') as FactoryFn<DarkJSX.Elements['time']>;\r\nstyled.title = styled('title') as FactoryFn<DarkJSX.Elements['title']>;\r\nstyled.tr = styled('tr') as FactoryFn<DarkJSX.Elements['tr']>;\r\nstyled.track = styled('track') as FactoryFn<DarkJSX.Elements['track']>;\r\nstyled.u = styled('u') as FactoryFn<DarkJSX.Elements['u']>;\r\nstyled.ul = styled('ul') as FactoryFn<DarkJSX.Elements['ul']>;\r\nstyled.var = styled('var') as FactoryFn<DarkJSX.Elements['var']>;\r\nstyled.video = styled('video') as FactoryFn<DarkJSX.Elements['video']>;\r\nstyled.wbr = styled('wbr') as FactoryFn<DarkJSX.Elements['wbr']>;\r\nstyled.circle = styled('circle') as FactoryFn<DarkJSX.Elements['circle']>;\r\nstyled.clipPath = styled('clipPath') as FactoryFn<DarkJSX.Elements['clipPath']>;\r\nstyled.defs = styled('defs') as FactoryFn<DarkJSX.Elements['defs']>;\r\nstyled.desc = styled('desc') as FactoryFn<DarkJSX.Elements['desc']>;\r\nstyled.ellipse = styled('ellipse') as FactoryFn<DarkJSX.Elements['ellipse']>;\r\nstyled.feBlend = styled('feBlend') as FactoryFn<DarkJSX.Elements['feBlend']>;\r\nstyled.feColorMatrix = styled('feColorMatrix') as FactoryFn<DarkJSX.Elements['feColorMatrix']>;\r\nstyled.feComponentTransfer = styled('feComponentTransfer') as FactoryFn<DarkJSX.Elements['feComponentTransfer']>;\r\nstyled.feComposite = styled('feComposite') as FactoryFn<DarkJSX.Elements['feComposite']>;\r\nstyled.feConvolveMatrix = styled('feConvolveMatrix') as FactoryFn<DarkJSX.Elements['feConvolveMatrix']>;\r\nstyled.feDiffuseLighting = styled('feDiffuseLighting') as FactoryFn<DarkJSX.Elements['feDiffuseLighting']>;\r\nstyled.feDisplacementMap = styled('feDisplacementMap') as FactoryFn<DarkJSX.Elements['feDisplacementMap']>;\r\nstyled.feDistantLight = styled('feDistantLight') as FactoryFn<DarkJSX.Elements['feDistantLight']>;\r\nstyled.feFlood = styled('feFlood') as FactoryFn<DarkJSX.Elements['feFlood']>;\r\nstyled.feFuncA = styled('feFuncA') as FactoryFn<DarkJSX.Elements['feFuncA']>;\r\nstyled.feFuncB = styled('feFuncB') as FactoryFn<DarkJSX.Elements['feFuncB']>;\r\nstyled.feFuncG = styled('feFuncG') as FactoryFn<DarkJSX.Elements['feFuncG']>;\r\nstyled.feFuncR = styled('feFuncR') as FactoryFn<DarkJSX.Elements['feFuncR']>;\r\nstyled.feGaussianBlur = styled('feGaussianBlur') as FactoryFn<DarkJSX.Elements['feGaussianBlur']>;\r\nstyled.feImage = styled('feImage') as FactoryFn<DarkJSX.Elements['feImage']>;\r\nstyled.feMerge = styled('feMerge') as FactoryFn<DarkJSX.Elements['feMerge']>;\r\nstyled.feMergeNode = styled('feMergeNode') as FactoryFn<DarkJSX.Elements['feMergeNode']>;\r\nstyled.feMorphology = styled('feMorphology') as FactoryFn<DarkJSX.Elements['feMorphology']>;\r\nstyled.feOffset = styled('feOffset') as FactoryFn<DarkJSX.Elements['feOffset']>;\r\nstyled.fePointLight = styled('fePointLight') as FactoryFn<DarkJSX.Elements['fePointLight']>;\r\nstyled.feSpecularLighting = styled('feSpecularLighting') as FactoryFn<DarkJSX.Elements['feSpecularLighting']>;\r\nstyled.feSpotLight = styled('feSpotLight') as FactoryFn<DarkJSX.Elements['feSpotLight']>;\r\nstyled.feTile = styled('feTile') as FactoryFn<DarkJSX.Elements['feTile']>;\r\nstyled.feTurbulence = styled('feTurbulence') as FactoryFn<DarkJSX.Elements['feTurbulence']>;\r\nstyled.filter = styled('filter') as FactoryFn<DarkJSX.Elements['filter']>;\r\nstyled.g = styled('g') as FactoryFn<DarkJSX.Elements['g']>;\r\nstyled.image = styled('image') as FactoryFn<DarkJSX.Elements['image']>;\r\nstyled.line = styled('line') as FactoryFn<DarkJSX.Elements['line']>;\r\nstyled.linearGradient = styled('linearGradient') as FactoryFn<DarkJSX.Elements['linearGradient']>;\r\nstyled.marker = styled('marker') as FactoryFn<DarkJSX.Elements['marker']>;\r\nstyled.mask = styled('mask') as FactoryFn<DarkJSX.Elements['mask']>;\r\nstyled.path = styled('path') as FactoryFn<DarkJSX.Elements['path']>;\r\nstyled.pattern = styled('pattern') as FactoryFn<DarkJSX.Elements['pattern']>;\r\nstyled.polygon = styled('polygon') as FactoryFn<DarkJSX.Elements['polygon']>;\r\nstyled.polyline = styled('polyline') as FactoryFn<DarkJSX.Elements['polyline']>;\r\nstyled.radialGradient = styled('radialGradient') as FactoryFn<DarkJSX.Elements['radialGradient']>;\r\nstyled.rect = styled('rect') as FactoryFn<DarkJSX.Elements['rect']>;\r\nstyled.stop = styled('stop') as FactoryFn<DarkJSX.Elements['stop']>;\r\nstyled.svg = styled('svg') as FactoryFn<DarkJSX.Elements['svg']>;\r\nstyled.switch = styled('switch') as FactoryFn<DarkJSX.Elements['switch']>;\r\nstyled.symbol = styled('symbol') as FactoryFn<DarkJSX.Elements['symbol']>;\r\nstyled.text = styled('text') as FactoryFn<DarkJSX.Elements['text']>;\r\nstyled.textPath = styled('textPath') as FactoryFn<DarkJSX.Elements['textPath']>;\r\nstyled.tspan = styled('tspan') as FactoryFn<DarkJSX.Elements['tspan']>;\r\nstyled.use = styled('use') as FactoryFn<DarkJSX.Elements['use']>;\r\nstyled.view = styled('view') as FactoryFn<DarkJSX.Elements['view']>;\r\n\r\nexport { setupGlobal, styled, ast, css, inject, reuse, getTag, filterArgs, detectIsStyled };\r\n","import { component, useInsertionEffect, useMemo, useId, detectIsServer, mapRecord } from '@dark-engine/core';\r\n\r\nimport { detectIsBrowser, getElement, insertBefore, getElements, createStyleElement, setAttr, append } from '../utils';\r\nimport { STYLED_ATTR, GLOBAL_ATTR_VALUE, INTERLEAVE_GLOBAL_ATTR_VALUE } from '../constants';\r\nimport { ast, inject, reuse, getTag as getStyleTag, filterArgs } from '../styled';\r\nimport { type ThemeProps, useTheme } from '../theme';\r\nimport { useManager } from '../server/manager';\r\nimport { type Args } from '../styled';\r\n\r\nlet cache: Map<string, string> = null;\r\nlet tag: HTMLStyleElement = null;\r\nlet isLoaded = false;\r\n\r\nsetupGlobal();\r\n\r\nfunction createGlobalStyle<P extends object = {}>(source: TemplateStringsArray, ...args: Args<P & ThemeProps>) {\r\n  if (!isLoaded && detectIsBrowser()) {\r\n    reuse(getInterleavedElements(), createTag, false);\r\n    isLoaded = true;\r\n  }\r\n\r\n  const fns = filterArgs<P>(args);\r\n  const sheet = ast<P>(source, ...args);\r\n  const factory = component<P>(\r\n    props => {\r\n      const theme = useTheme();\r\n      const id = useId();\r\n      const css = useMemo(() => sheet.generate({ props: { ...props, theme }, fns }), [...mapRecord(props), theme]);\r\n\r\n      useInsertionEffect(() => {\r\n        tag = tag || getTag() || createTag();\r\n        cache.set(id, css);\r\n        reinject(tag, cache);\r\n      }, [css]);\r\n\r\n      useInsertionEffect(() => {\r\n        return () => {\r\n          cache.delete(id);\r\n          reinject(tag, cache);\r\n        };\r\n      }, []);\r\n\r\n      if (detectIsServer()) {\r\n        const manager = useManager(); // special case of hook using, should be last in order\r\n\r\n        manager.collectGlobalStyle(css);\r\n        manager.reset(setupGlobal);\r\n      }\r\n\r\n      return null;\r\n    },\r\n    { displayName: 'GlobalStyle' },\r\n  );\r\n\r\n  return factory;\r\n}\r\n\r\nfunction setupGlobal() {\r\n  cache = new Map();\r\n  tag = null;\r\n  isLoaded = false;\r\n}\r\n\r\nfunction createTag() {\r\n  const tag1 = createStyleElement();\r\n  const tag2 = getStyleTag();\r\n\r\n  setAttr(tag1, STYLED_ATTR, GLOBAL_ATTR_VALUE);\r\n\r\n  if (tag2) {\r\n    insertBefore(document.head, tag1, tag2);\r\n  } else {\r\n    append(document.head, tag1);\r\n  }\r\n\r\n  return tag1;\r\n}\r\n\r\nfunction getInterleavedElements() {\r\n  return getElements(`[${STYLED_ATTR}=\"${INTERLEAVE_GLOBAL_ATTR_VALUE}\"]`) as Array<HTMLStyleElement>;\r\n}\r\n\r\nconst getTag = () => getElement(`[${STYLED_ATTR}=\"${GLOBAL_ATTR_VALUE}\"]`) as HTMLStyleElement;\r\n\r\nconst reinject = (tag: HTMLStyleElement, stylesMap: Map<string, string>) => {\r\n  tag.textContent = '';\r\n  stylesMap.forEach(css => inject(css, tag));\r\n};\r\n\r\nexport { setupGlobal, createGlobalStyle };\r\n","import {\r\n  type DarkElement,\r\n  type ElementKey,\r\n  component,\r\n  useMemo,\r\n  useLayoutEffect,\r\n  __useCursor as useCursor,\r\n} from '@dark-engine/core';\r\n\r\nimport type { TagNativeElement } from '../native-element';\r\nimport { illegal, removeContent } from '../utils';\r\n\r\nconst $$portal = Symbol('portal');\r\n\r\nfunction createPortal(slot: DarkElement, container: TagNativeElement, key?: ElementKey) {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    if (!(container instanceof Element)) {\r\n      illegal(`The createPortal only gets a valid element as container!`);\r\n    }\r\n  }\r\n\r\n  return Portal({ key, container, slot });\r\n}\r\n\r\ntype PortalProps = {\r\n  container: TagNativeElement;\r\n  slot: DarkElement;\r\n};\r\n\r\nconst Portal = component<PortalProps>(\r\n  props => {\r\n    const cursor = useCursor();\r\n    const element = props.container;\r\n    const scope = useMemo(() => {\r\n      removeContent(element);\r\n      return { element };\r\n    }, []);\r\n\r\n    useLayoutEffect(() => {\r\n      return () => removeContent(scope.element);\r\n    }, []);\r\n\r\n    cursor.hook.setIsPortal(true);\r\n    cursor.element = element;\r\n    scope.element = element;\r\n\r\n    return props.slot;\r\n  },\r\n  { token: $$portal, displayName: 'Portal' },\r\n);\r\n\r\nexport { createPortal };\r\n","import { preset } from '../preset';\r\n\r\nexport type SpringValue<T extends string = string> = Record<T, number>;\r\n\r\nexport type SpringConfig = {\r\n  mass: number;\r\n  tension: number;\r\n  friction: number;\r\n  precision: number;\r\n  fix: number;\r\n};\r\n\r\nconst defaultSpringConfig: SpringConfig = {\r\n  ...preset('no-wobble'),\r\n  mass: 1,\r\n  precision: 3,\r\n  fix: 4,\r\n};\r\n\r\nexport { defaultSpringConfig };\r\n","import { type SpringConfig } from '../shared';\r\n\r\ntype Preset = Pick<SpringConfig, 'tension' | 'friction'>;\r\ntype PresetName = 'no-wobble' | 'gentle' | 'wobbly' | 'stiff' | 'slow' | 'molasses';\r\n\r\nconst presets: Record<PresetName, Preset> = {\r\n  'no-wobble': { tension: 170, friction: 26 },\r\n  gentle: { tension: 120, friction: 14 },\r\n  wobbly: { tension: 180, friction: 12 },\r\n  stiff: { tension: 210, friction: 20 },\r\n  slow: { tension: 280, friction: 60 },\r\n  molasses: { tension: 280, friction: 120 },\r\n};\r\n\r\nfunction preset(name: PresetName): Preset {\r\n  return presets[name] || ({} as Preset);\r\n}\r\n\r\nexport { preset };\r\n","import { detectIsFunction, detectIsEmpty, detectAreDepsDifferent, trueFn, logError, formatErrorMsg } from '../utils';\r\nimport { createUpdate, useUpdate } from '../use-update';\r\nimport { useLayoutEffect } from '../use-layout-effect';\r\nimport { type SubscriberWithValue } from '../shared';\r\nimport { ATOM_HOST_MASK } from '../constants';\r\nimport { $$scope, getRootId } from '../scope';\r\nimport { createTools } from '../use-state';\r\nimport { EventEmitter } from '../emitter';\r\nimport { useMemo } from '../use-memo';\r\nimport { type Hook } from '../fiber';\r\nimport { batch } from '../batch';\r\n\r\nclass Atom<T = unknown> {\r\n  private value: T;\r\n  private connections1: Map<Hook, Tuple<T>>;\r\n  private connections2: Map<T, Tuple<T>>;\r\n  private subjects: Set<ReadableAtom>;\r\n  private emitter: EventEmitter<'data', EmitterValue<T>>;\r\n\r\n  constructor(value: T) {\r\n    this.value = value;\r\n  }\r\n\r\n  val(fn?: ShouldUpdate<T>, key?: T) {\r\n    try {\r\n      this.__connect(fn, key);\r\n    } catch (err) {\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        logError(formatErrorMsg(`Illegal invocation atom.val() outside render process!`));\r\n      }\r\n    }\r\n\r\n    return this.value;\r\n  }\r\n\r\n  get() {\r\n    return this.value;\r\n  }\r\n\r\n  on(fn: SubscriberWithValue<EmitterValue<T>>) {\r\n    !this.emitter && (this.emitter = new EventEmitter());\r\n\r\n    return this.emitter.on('data', fn);\r\n  }\r\n\r\n  kill() {\r\n    if (this.connections1) {\r\n      for (const [hook, [_, __, ___, key]] of this.connections1) {\r\n        this.off(hook, key);\r\n      }\r\n    }\r\n\r\n    if (this.connections2) {\r\n      for (const [key, [_, hook]] of this.connections2) {\r\n        this.off(hook, key);\r\n      }\r\n    }\r\n\r\n    this.connections1 = null;\r\n    this.connections2 = null;\r\n    this.emitter = null;\r\n    this.subjects = null;\r\n  }\r\n\r\n  toString() {\r\n    return String(this.value);\r\n  }\r\n\r\n  toJSON() {\r\n    return this.value;\r\n  }\r\n\r\n  valueOf() {\r\n    return this.value;\r\n  }\r\n\r\n  __connect(fn: ShouldUpdate<T>, key: T) {\r\n    const rootId = getRootId();\r\n    const fiber = $$scope().getCursorFiber();\r\n    const { hook } = fiber;\r\n    const disconnect = () => this.off(hook, key);\r\n\r\n    !hook.atoms && (hook.atoms = new Map());\r\n    hook.atoms.set(this, disconnect);\r\n    fiber.markHost(ATOM_HOST_MASK);\r\n\r\n    if (detectIsEmpty(key)) {\r\n      !this.connections1 && (this.connections1 = new Map());\r\n      this.connections1.set(hook, [rootId, hook, fn, key]);\r\n    } else {\r\n      !this.connections2 && (this.connections2 = new Map());\r\n      this.connections2.set(key, [rootId, hook, fn, key]);\r\n    }\r\n\r\n    return disconnect;\r\n  }\r\n\r\n  __addSubject(atom$: ReadableAtom) {\r\n    !this.subjects && (this.subjects = new Set());\r\n    this.subjects.add(atom$);\r\n  }\r\n\r\n  __removeSubject(atom$: ReadableAtom) {\r\n    return this.subjects && this.subjects.delete(atom$);\r\n  }\r\n\r\n  __getSize() {\r\n    const size1 = this.connections1 ? this.connections1.size : 0;\r\n    const size2 = this.connections2 ? this.connections2.size : 0;\r\n    const size3 = this.subjects ? this.subjects.size : 0;\r\n    const size4 = this.emitter ? this.emitter.__getSize() : 0;\r\n\r\n    return size1 + size2 + size3 + size4;\r\n  }\r\n\r\n  protected setValue(value: T | ((prevValue: T) => T)) {\r\n    const prev = this.value;\r\n    const next = detectIsFunction(value) ? value(this.value) : value;\r\n    const data: EmitterValue<T> = { prev, next };\r\n    const make = (tuple: Tuple<T>, prev: T, next: T) => {\r\n      const [rootId, hook, shouldUpdate, key] = tuple;\r\n      const fn = shouldUpdate || trueFn;\r\n\r\n      if (fn(prev, next, key)) {\r\n        const update = createUpdate(rootId, hook);\r\n\r\n        if (this.__getSize() === 1) {\r\n          const tools = createTools({\r\n            next,\r\n            get: () => prev,\r\n            set: () => (this.value = next),\r\n            reset: () => (this.value = prev),\r\n          });\r\n\r\n          update(tools);\r\n        } else {\r\n          update();\r\n        }\r\n      }\r\n    };\r\n\r\n    this.value = next;\r\n\r\n    if (this.connections1) {\r\n      for (const [_, tuple] of this.connections1) {\r\n        make(tuple, prev, next);\r\n      }\r\n    }\r\n\r\n    if (this.connections2) {\r\n      if (this.connections2.has(next)) {\r\n        make(this.connections2.get(next), prev, next);\r\n        this.connections2.has(prev) && make(this.connections2.get(prev), prev, next);\r\n      }\r\n    }\r\n\r\n    this.emitter && this.emitter.emit('data', data);\r\n    this.subjects && this.subjects.forEach(x => x.__notify());\r\n  }\r\n\r\n  private off(hook: Hook, key: T) {\r\n    hook.atoms.delete(this);\r\n    this.connections1 && this.connections1.delete(hook);\r\n    this.connections2 && this.connections2.delete(key);\r\n  }\r\n}\r\n\r\nclass WritableAtom<T = unknown> extends Atom<T> {\r\n  set(value: T | ((prevValue: T) => T)) {\r\n    super.setValue(value);\r\n  }\r\n}\r\n\r\nclass ReadableAtom<T = unknown> extends Atom<T> {\r\n  private deps$: Array<Atom> = [];\r\n  private fn: ComputedFn<T> = null;\r\n  private values: Array<unknown> = [];\r\n\r\n  constructor(deps$: Array<Atom>, fn: ComputedFn<T>) {\r\n    const values = ReadableAtom.values(deps$);\r\n\r\n    super(ReadableAtom.compute(fn, values));\r\n    this.deps$ = deps$;\r\n    this.fn = fn;\r\n    this.values = values;\r\n    deps$.forEach(x => x.__addSubject(this));\r\n  }\r\n\r\n  __notify() {\r\n    const values = ReadableAtom.values(this.deps$);\r\n\r\n    if (detectAreDepsDifferent(this.values, values)) {\r\n      super.setValue(ReadableAtom.compute(this.fn, values));\r\n    }\r\n\r\n    this.values = values;\r\n  }\r\n\r\n  override kill() {\r\n    super.kill();\r\n    this.deps$.forEach(x => x.__removeSubject(this));\r\n    this.deps$ = [];\r\n    this.fn = null;\r\n  }\r\n\r\n  private static compute(fn: Function, values: Array<unknown>) {\r\n    return fn(...values);\r\n  }\r\n\r\n  private static values(deps$: Array<Atom>) {\r\n    return deps$.map(x => x.get());\r\n  }\r\n}\r\n\r\nconst detectIsAtom = (x: unknown): x is Atom => x instanceof Atom;\r\n\r\nconst detectIsWritableAtom = (x: unknown): x is WritableAtom => x instanceof WritableAtom;\r\n\r\nconst detectIsReadableAtom = (x: unknown): x is ReadableAtom => x instanceof ReadableAtom;\r\n\r\nconst atom = <T>(value?: T) => new WritableAtom(value);\r\n\r\nconst computed = <T, A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\r\n  deps$: [\r\n    Atom<A>,\r\n    Atom<B>?,\r\n    Atom<C>?,\r\n    Atom<D>?,\r\n    Atom<E>?,\r\n    Atom<F>?,\r\n    Atom<G>?,\r\n    Atom<H>?,\r\n    Atom<I>?,\r\n    Atom<J>?,\r\n    Atom<K>?,\r\n    Atom<L>?,\r\n    Atom<M>?,\r\n    Atom<N>?,\r\n  ],\r\n  fn: ComputedFn<T, A, B, C, D, E, F, G, H, I, J, K, L, M, N>,\r\n) => new ReadableAtom(deps$, fn) as ReadableAtom<ReturnType<typeof fn>>;\r\n\r\nfunction useAtom<T>(value?: T): WritableAtom<T> {\r\n  const atom$ = useMemo(() => atom<T>(value), []);\r\n\r\n  useLayoutEffect(() => () => atom$.kill(), []);\r\n\r\n  return atom$;\r\n}\r\n\r\nfunction useComputed<T, A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\r\n  deps$: [\r\n    Atom<A>,\r\n    Atom<B>?,\r\n    Atom<C>?,\r\n    Atom<D>?,\r\n    Atom<E>?,\r\n    Atom<F>?,\r\n    Atom<G>?,\r\n    Atom<H>?,\r\n    Atom<I>?,\r\n    Atom<J>?,\r\n    Atom<K>?,\r\n    Atom<L>?,\r\n    Atom<M>?,\r\n    Atom<N>?,\r\n  ],\r\n  fn: ComputedFn<T, A, B, C, D, E, F, G, H, I, J, K, L, M, N>,\r\n) {\r\n  const atom$ = useMemo(() => computed(deps$, fn), []);\r\n\r\n  useLayoutEffect(() => () => atom$.kill(), []);\r\n\r\n  return atom$;\r\n}\r\n\r\nfunction useStore<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\r\n  atoms$: [\r\n    Atom<A>,\r\n    Atom<B>?,\r\n    Atom<C>?,\r\n    Atom<D>?,\r\n    Atom<E>?,\r\n    Atom<F>?,\r\n    Atom<G>?,\r\n    Atom<H>?,\r\n    Atom<I>?,\r\n    Atom<J>?,\r\n    Atom<K>?,\r\n    Atom<L>?,\r\n    Atom<M>?,\r\n    Atom<N>?,\r\n  ],\r\n) {\r\n  const forceUpdate = useUpdate();\r\n  const update = () => batch(forceUpdate);\r\n\r\n  useLayoutEffect(() => {\r\n    const offs = atoms$.map(x => x.on(update));\r\n\r\n    return () => offs.forEach(x => x());\r\n  }, [...atoms$]);\r\n\r\n  return atoms$.map(x => x.get()) as [A, B, C, D, E, F, G, H, I, J, K, L, M, N];\r\n}\r\n\r\ntype ShouldUpdate<T> = (p: T, n: T, key?: T) => boolean;\r\ntype EmitterValue<T> = { prev: T; next: T };\r\ntype Tuple<T> = [number, Hook, ShouldUpdate<T>, T];\r\ntype ComputedFn<\r\n  T,\r\n  A = unknown,\r\n  B = unknown,\r\n  C = unknown,\r\n  D = unknown,\r\n  E = unknown,\r\n  F = unknown,\r\n  G = unknown,\r\n  H = unknown,\r\n  I = unknown,\r\n  J = unknown,\r\n  K = unknown,\r\n  L = unknown,\r\n  M = unknown,\r\n  N = unknown,\r\n> = (a: A, b?: B, c?: C, d?: D, e?: E, f?: F, g?: G, h?: H, i?: I, j?: J, k?: K, l?: L, m?: M, n?: N) => T;\r\n\r\nexport {\r\n  type Atom,\r\n  WritableAtom,\r\n  ReadableAtom,\r\n  detectIsAtom,\r\n  detectIsWritableAtom,\r\n  detectIsReadableAtom,\r\n  atom,\r\n  computed,\r\n  useAtom,\r\n  useComputed,\r\n  useStore,\r\n};\r\n","import { type WritableAtom, type SubscriberWithValue, atom } from '@dark-engine/core';\r\n\r\nimport { type SpringValue } from '../shared';\r\n\r\nclass Spring<T extends string = string> {\r\n  private props: Record<T, WritableAtom<number>> = {} as Record<T, WritableAtom<number>>;\r\n  private subscribers = new Set<SubscriberWithValue<SpringValue<T>>>();\r\n\r\n  prop(key: T) {\r\n    return this.props[key] ? this.props[key].get() : null;\r\n  }\r\n\r\n  prop$(key: T) {\r\n    return this.props[key] || null;\r\n  }\r\n\r\n  setProp(key: T, value: number) {\r\n    !this.props[key] && (this.props[key] = atom(value));\r\n    this.props[key].set(value);\r\n  }\r\n\r\n  value(): SpringValue<T> {\r\n    const value = Object.keys(this.props).reduce((acc, x) => ((acc[x] = this.props[x].get()), acc), {});\r\n\r\n    return value as SpringValue<T>;\r\n  }\r\n\r\n  on(fn: SubscriberWithValue<SpringValue<T>>) {\r\n    this.subscribers.add(fn);\r\n\r\n    return () => this.subscribers.delete(fn);\r\n  }\r\n\r\n  notify() {\r\n    this.subscribers.forEach(x => x(this.value()));\r\n  }\r\n}\r\n\r\nexport { Spring };\r\n","import { illegal as $illegal } from '@dark-engine/core';\r\n\r\nimport { LIB } from '../constants';\r\n\r\nconst fix = (x: number, precision = 4) => Number(x.toFixed(precision));\r\n\r\nconst range = (x: number) =>\r\n  Array(x)\r\n    .fill(null)\r\n    .map((_, idx) => idx);\r\n\r\nconst uniq = <T>(items: Array<T>, selector: (x: T) => unknown) => {\r\n  const arr: Array<T> = [];\r\n  const set = new Set();\r\n\r\n  for (const item of items) {\r\n    const key = selector(item);\r\n\r\n    !set.has(key) && arr.push(item);\r\n    set.add(key);\r\n  }\r\n\r\n  return arr;\r\n};\r\n\r\nconst illegal = (x: string) => $illegal(x, LIB);\r\n\r\nexport { fix, range, uniq, illegal };\r\n","import { type SpringConfig } from '../shared';\r\n\r\nfunction stepper(pos: number, vel: number, dest: number, step: number, config: Omit<SpringConfig, 'fix'>) {\r\n  const { tension, friction, mass, precision } = config;\r\n  const [nPos, nVel] = spring(pos, vel, dest, step, tension, friction, mass);\r\n\r\n  if (Math.abs(nPos - dest) < 10 ** (-1 * precision)) return [dest, 0];\r\n\r\n  return [nPos, nVel];\r\n}\r\n\r\nfunction spring(pos: number, vel: number, dest: number, step: number, tension: number, friction: number, mass: number) {\r\n  const disp = pos - dest;\r\n  const sf = -1 * tension * disp;\r\n  const df = -1 * friction * vel;\r\n  const a = (sf + df) / mass;\r\n  const nVel = vel + a * step;\r\n  const nPos = pos + nVel * step;\r\n\r\n  return [nPos, nVel];\r\n}\r\n\r\nexport { stepper };\r\n","import { type ElementKey, platform, falseFn, detectIsUndefined, getTime } from '@dark-engine/core';\r\n\r\nimport { type SpringValue, type SpringConfig, defaultSpringConfig } from '../shared';\r\nimport { type AnimationEventName, SharedState } from '../state';\r\nimport { Spring } from '../spring';\r\nimport { fix } from '../utils';\r\nimport { stepper } from '../stepper';\r\n\r\nconst BASE_FRAME_TIME_IN_MS = 1000 / 60;\r\nconst MAX_SKIPPED_FRAMES = 10;\r\nconst MAX_DELTA_TIME_IN_SEC = MAX_SKIPPED_FRAMES * (BASE_FRAME_TIME_IN_MS / 1000);\r\nconst MIN_STEP = 0.01;\r\n\r\nclass Controller<T extends string, I = unknown> {\r\n  private key: ElementKey;\r\n  private idx: number;\r\n  private from: SpringValue<T>;\r\n  private to: SpringValue<T>;\r\n  private value: SpringValue<T>;\r\n  private dest: SpringValue<T>;\r\n  private state: SharedState = null;\r\n  private frameTime: number;\r\n  private frameId: number;\r\n  private results: Record<string, [number, number]> = {};\r\n  private completed: Record<string, boolean> = {};\r\n  private queue: Array<SpringValue<T>> = [];\r\n  private left: Controller<T> = null;\r\n  private right: Controller<T> = null;\r\n  private springConfigFn: SpringConfigFn<T>;\r\n  private configurator: ConfiguratorFn<T>;\r\n  private immediate: ImmediateFn<T> = falseFn;\r\n  private immediates: Array<() => void> = [];\r\n  private primaryKey: ElementKey;\r\n  private isReplaced = false;\r\n  private item: I = null;\r\n  private spring = new Spring<T>();\r\n\r\n  constructor(state: SharedState) {\r\n    this.state = state;\r\n    this.key = String(++Controller.key);\r\n  }\r\n\r\n  getKey() {\r\n    return this.key;\r\n  }\r\n\r\n  setKey(x: ElementKey) {\r\n    this.key = x;\r\n  }\r\n\r\n  getIdx() {\r\n    return this.idx;\r\n  }\r\n\r\n  setIdx(x: number) {\r\n    this.idx = x;\r\n  }\r\n\r\n  setFrom(x: SpringValue<T>) {\r\n    this.from = x;\r\n    this.value = this.value || { ...x };\r\n  }\r\n\r\n  setTo(x: SpringValue<T>) {\r\n    this.to = x || { ...this.from };\r\n    this.dest = this.dest || { ...(x || this.from) };\r\n  }\r\n\r\n  setSpringConfigFn(fn?: PatialConfigFn<T>) {\r\n    this.springConfigFn = fn ? (key: T) => ({ ...defaultSpringConfig, ...fn(key) }) : () => defaultSpringConfig;\r\n  }\r\n\r\n  setLeft(x: Controller<T>) {\r\n    this.left = x;\r\n  }\r\n\r\n  setRight(x: Controller<T>) {\r\n    this.right = x;\r\n  }\r\n\r\n  notify(skip = false) {\r\n    this.sync();\r\n    !skip && this.event('item-change');\r\n  }\r\n\r\n  setConfigurator(fn: ConfiguratorFn<T>) {\r\n    this.configurator = fn;\r\n  }\r\n\r\n  setImmediate(fn: ImmediateFn<T>) {\r\n    this.immediate = fn || this.immediate;\r\n  }\r\n\r\n  replaceValue(x: SpringValue<T>) {\r\n    this.value = x;\r\n    this.sync();\r\n  }\r\n\r\n  markAsFake(x: ElementKey) {\r\n    this.primaryKey = x;\r\n\r\n    return Controller.generateFakeKey(x);\r\n  }\r\n\r\n  detectIsFake() {\r\n    return !detectIsUndefined(this.primaryKey);\r\n  }\r\n\r\n  getIsReplaced() {\r\n    return this.isReplaced;\r\n  }\r\n\r\n  setIsReplaced(x: boolean) {\r\n    this.isReplaced = x;\r\n  }\r\n\r\n  getItem() {\r\n    return this.item;\r\n  }\r\n\r\n  setItem(x: I) {\r\n    this.item = x;\r\n  }\r\n\r\n  getState() {\r\n    return this.state;\r\n  }\r\n\r\n  getSpring() {\r\n    this.sync();\r\n\r\n    return this.spring;\r\n  }\r\n\r\n  start(fn?: StartFn<T>) {\r\n    if (this.state.getIsCanceled()) return; // !\r\n    const config1 = this.configurator(this.idx);\r\n    const config2 = fn ? fn(this.idx) : this.configurator(this.idx);\r\n    const from = { ...config1.from, ...config2.from };\r\n    const to = { ...config1.to, ...config2.to };\r\n    const config = config2.config || config1.config;\r\n    const immediate = config2.immediate || config1.immediate;\r\n\r\n    this.setFrom(config1.from || from);\r\n    this.setTo(config1.to || to);\r\n    this.setSpringConfigFn(config);\r\n    this.setImmediate(immediate);\r\n    Object.assign(this.dest, to);\r\n\r\n    this.play(this.dest);\r\n  }\r\n\r\n  reset() {\r\n    this.value = { ...this.from };\r\n    this.dest = { ...(this.to || this.from) };\r\n    this.sync();\r\n  }\r\n\r\n  cancel() {\r\n    this.frameId && platform.caf(this.frameId);\r\n    this.frameId = null;\r\n  }\r\n\r\n  setIsPlaying(x: boolean) {\r\n    this.state.setIsPlaying(x, this.key);\r\n  }\r\n\r\n  private play(to: SpringValue<T>) {\r\n    this.queue.push(to);\r\n    if (this.frameId) return false;\r\n    this.setIsPlaying(true);\r\n    this.event('item-start');\r\n    this.motion(to);\r\n  }\r\n\r\n  private motion(to: SpringValue<T>) {\r\n    const { value, results, completed, springConfigFn } = this;\r\n    const keys = Object.keys(value) as Array<T>;\r\n    const make = () => this.motion(to);\r\n\r\n    this.frameTime = getTime();\r\n    this.frameId = platform.raf(() => {\r\n      if (this.state.getIsPaused()) return make();\r\n      let step = (getTime() - this.frameTime) / 1000;\r\n\r\n      if (step > MAX_DELTA_TIME_IN_SEC) {\r\n        step = MIN_STEP;\r\n      }\r\n\r\n      if (this.queue.length === 0) {\r\n        this.queue.push(this.dest);\r\n      }\r\n\r\n      for (const key of keys) {\r\n        if (this.immediate(key)) {\r\n          completed[key] = true;\r\n\r\n          const complete = () => {\r\n            value[key] = to[key];\r\n            results[key] = [to[key], 0];\r\n          };\r\n\r\n          if (to[key] === this.from[key]) {\r\n            this.immediates.push(complete);\r\n          } else {\r\n            complete();\r\n          }\r\n        } else {\r\n          if (!results[key]) {\r\n            results[key] = [value[key], 0];\r\n          }\r\n\r\n          const config = springConfigFn(key);\r\n          let pos = results[key][0];\r\n          let vel = results[key][1];\r\n\r\n          for (const update of this.queue) {\r\n            const dest = update[key] as number;\r\n\r\n            [pos, vel] = stepper(pos, vel, dest, step, config);\r\n            results[key] = [pos, vel];\r\n            completed[key] = pos === dest;\r\n          }\r\n\r\n          value[key] = pos;\r\n        }\r\n      }\r\n\r\n      this.queue = [];\r\n      this.change();\r\n\r\n      if (this.checkCompleted(keys)) {\r\n        this.complete();\r\n      } else {\r\n        make();\r\n      }\r\n    });\r\n  }\r\n\r\n  private event(name: AnimationEventName) {\r\n    this.state.event(name, { value: this.value, idx: this.idx, key: this.key });\r\n  }\r\n\r\n  private change() {\r\n    this.notify();\r\n\r\n    if (this.state.getIsTrail()) {\r\n      if (this.state.detectIsRightFlow()) {\r\n        this.right && this.right.start(() => ({ to: this.value }));\r\n      } else {\r\n        this.left && this.left.start(() => ({ to: this.value }));\r\n      }\r\n    }\r\n  }\r\n\r\n  private complete() {\r\n    this.setIsPlaying(false);\r\n    this.frameTime = null;\r\n    this.frameId = null;\r\n    this.results = {};\r\n    this.completed = {};\r\n    this.immediates.forEach(x => x());\r\n    this.immediates.length > 0 && this.notify();\r\n    this.immediates = [];\r\n    this.event('item-end');\r\n    this.state.completeSeries();\r\n  }\r\n\r\n  private checkCompleted(keys: Array<string>) {\r\n    for (const key of keys) {\r\n      if (!this.completed[key]) return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  private sync() {\r\n    const keys = Object.keys(this.value) as Array<T>;\r\n\r\n    for (const key of keys) {\r\n      const config = this.springConfigFn(key);\r\n      const value = fix(this.value[key], config.fix);\r\n\r\n      this.spring.setProp(key, value);\r\n    }\r\n\r\n    this.spring.notify();\r\n  }\r\n\r\n  private static generateFakeKey(x: ElementKey) {\r\n    return `__${x}:${++Controller.fakeKey}__`;\r\n  }\r\n\r\n  private static key = -1;\r\n  private static fakeKey = -1;\r\n}\r\n\r\nexport type BaseItemConfig<T extends string> = {\r\n  from: SpringValue<T>;\r\n  to?: SpringValue<T>;\r\n  config?: PatialConfigFn<T>;\r\n  immediate?: ImmediateFn<T>;\r\n};\r\n\r\nexport type StartFnConfig<T extends string> = {\r\n  from?: SpringValue<T>;\r\n  to: Partial<SpringValue<T>>;\r\n} & Omit<BaseItemConfig<T>, 'from' | 'to'>;\r\n\r\nexport type ConfiguratorFn<T extends string> = (idx: number) => BaseItemConfig<T>;\r\n\r\nexport type StartFn<T extends string> = (idx: number) => StartFnConfig<T>;\r\n\r\nexport type SpringConfigFn<T extends string> = (key: T) => SpringConfig;\r\n\r\nexport type PatialConfigFn<T extends string> = (key: T) => Partial<SpringConfig>;\r\n\r\nexport type ImmediateFn<T extends string> = (key: T) => boolean;\r\n\r\nexport type NotifierFn<T extends string> = (x: SpringValue<T>) => void;\r\n\r\nexport { Controller };\r\n","import { type ElementKey, type TimerId, EventEmitter, detectIsEmpty } from '@dark-engine/core';\r\n\r\nimport { type Controller, type StartFn } from '../controller';\r\nimport { type SpringValue } from '../shared';\r\n\r\nclass SharedState<T extends string = string> {\r\n  private ctrls: Array<Controller<T>> = [];\r\n  private stack = new Set<ElementKey>();\r\n  private flow = Flow.RIGHT;\r\n  private isTrail = false;\r\n  private isPaused = false;\r\n  private isCanceled = false;\r\n  private timeout = 0;\r\n  private timerId: TimerId = null;\r\n  private emitter: EventEmitter<AnimationEventName, AnimationEventValue<T>> = new EventEmitter();\r\n  private hasTransitions = false;\r\n\r\n  setHasTransitions(x: boolean) {\r\n    this.hasTransitions = x;\r\n  }\r\n\r\n  getCtrls() {\r\n    return this.ctrls;\r\n  }\r\n\r\n  setCtrls(ctrls: Array<Controller<T>>) {\r\n    this.ctrls = ctrls;\r\n  }\r\n\r\n  setIsTrail(x: boolean) {\r\n    this.isTrail = x;\r\n  }\r\n\r\n  getIsTrail() {\r\n    return this.isTrail;\r\n  }\r\n\r\n  setFlow(x: Flow) {\r\n    this.flow = x;\r\n  }\r\n\r\n  getIsPaused() {\r\n    return this.isPaused;\r\n  }\r\n\r\n  getIsCanceled() {\r\n    return this.isCanceled;\r\n  }\r\n\r\n  detectIsRightFlow() {\r\n    return this.flow === Flow.RIGHT;\r\n  }\r\n\r\n  setIsPlaying(x: boolean, key: ElementKey) {\r\n    if (x) {\r\n      this.stack.add(key);\r\n    } else {\r\n      this.stack.delete(key);\r\n    }\r\n  }\r\n\r\n  detectIsPlaying(key?: ElementKey) {\r\n    return detectIsEmpty(key) ? this.stack.size > 0 : this.stack.has(key);\r\n  }\r\n\r\n  start(fn?: StartFn<T>) {\r\n    this.defer(() => {\r\n      if (this.ctrls.length === 0) return;\r\n      this.event('series-start');\r\n\r\n      if (this.isTrail) {\r\n        const ctrl = this.flow === Flow.RIGHT ? this.ctrls[0] : this.ctrls[this.ctrls.length - 1];\r\n\r\n        ctrl.start(fn);\r\n      } else {\r\n        this.ctrls.forEach(x => x.start(fn));\r\n      }\r\n    });\r\n  }\r\n\r\n  pause() {\r\n    this.isPaused = true;\r\n  }\r\n\r\n  resume() {\r\n    this.isPaused = false;\r\n  }\r\n\r\n  delay(timeout: number) {\r\n    this.timeout = timeout;\r\n  }\r\n\r\n  reset() {\r\n    this.ctrls.forEach(x => x.reset());\r\n  }\r\n\r\n  cancel() {\r\n    this.ctrls.forEach(x => x.cancel());\r\n    this.resetTimer();\r\n    this.isCanceled = true;\r\n  }\r\n\r\n  on(event: AnimationEventName, handler: AnimationEventHandler<T>) {\r\n    return this.emitter.on(event, handler);\r\n  }\r\n\r\n  event(event: AnimationEventName, value: AnimationEventValue<T> = null) {\r\n    this.emitter.emit(event, value);\r\n  }\r\n\r\n  completeSeries() {\r\n    const isCompleted = !this.detectIsPlaying();\r\n\r\n    isCompleted && !this.hasTransitions && this.event('series-end');\r\n  }\r\n\r\n  defer(fn: () => void) {\r\n    this.resetTimer();\r\n\r\n    if (this.timeout > 0) {\r\n      this.timerId = setTimeout(() => {\r\n        this.timerId = null;\r\n        fn();\r\n      }, this.timeout);\r\n    } else {\r\n      fn();\r\n    }\r\n  }\r\n\r\n  private resetTimer() {\r\n    this.timerId && clearTimeout(this.timerId);\r\n    this.timerId = null;\r\n  }\r\n}\r\n\r\nexport enum Flow {\r\n  RIGHT = 'RIGHT',\r\n  LEFT = 'LEFT',\r\n}\r\n\r\nlet sharedState: SharedState = null;\r\n\r\nfunction setSharedState(state: SharedState) {\r\n  sharedState = state;\r\n}\r\n\r\nfunction getSharedState() {\r\n  const state = sharedState;\r\n\r\n  sharedState = null;\r\n\r\n  return state;\r\n}\r\n\r\nexport type AnimationEventName = 'series-start' | 'item-start' | 'item-change' | 'item-end' | 'series-end';\r\n\r\nexport type AnimationEventValue<T extends string = string> = {\r\n  value: SpringValue<T>;\r\n  idx: number;\r\n  key: ElementKey;\r\n};\r\n\r\nexport type AnimationEventHandler<T extends string = string> = (value?: AnimationEventValue<T>) => void;\r\n\r\nexport { SharedState, setSharedState, getSharedState };\r\n","import {\r\n  type Component,\r\n  type TagVirtualNodeFactory,\r\n  type Callback,\r\n  type ElementKey,\r\n  Fragment,\r\n  useMemo,\r\n  useUpdate,\r\n  useLayoutEffect,\r\n  detectIsArray,\r\n  detectIsNumber,\r\n  startTransition,\r\n  scheduler,\r\n  flatten,\r\n} from '@dark-engine/core';\r\n\r\nimport { type BaseItemConfig, type ConfiguratorFn, Controller } from '../controller';\r\nimport { type AnimationEventValue, SharedState } from '../state';\r\nimport { type SpringApi } from '../use-springs';\r\nimport { type SpringValue } from '../shared';\r\nimport { type Spring } from '../spring';\r\nimport { uniq } from '../utils';\r\n\r\nexport type TransitionItemConfig<T extends string> = {\r\n  from: SpringValue<T>;\r\n  enter: SpringValue<T>;\r\n  leave?: SpringValue<T>;\r\n  update?: SpringValue<T>;\r\n  trail?: number;\r\n} & Pick<BaseItemConfig<T>, 'config' | 'immediate'>;\r\n\r\nfunction useTransition<T extends string, I = unknown>(\r\n  items: Array<I>,\r\n  getKey: KeyExtractor<I>,\r\n  configurator: TransitionConfiguratorFn<T, I>,\r\n): [TransitionFn<T, I>, TransitionApi<T>] {\r\n  const forceUpdate = useUpdate();\r\n  const update = () => (scope.isNonBlocking ? startTransition(forceUpdate) : forceUpdate());\r\n  const state = useMemo(() => new SharedState<T>(), []);\r\n  const scope = useMemo<Scope<T, I>>(\r\n    () => ({\r\n      transitions: [],\r\n      ctrlsMap: new Map(),\r\n      itemsMap: new Map(),\r\n      fakesMap: new Map(),\r\n      items: [],\r\n      queue: [],\r\n      hasReplaces: false,\r\n      fromApi: false,\r\n      inChain: false,\r\n      isNonBlocking: false,\r\n      pending: null,\r\n      configurator,\r\n    }),\r\n    [],\r\n  );\r\n\r\n  scope.configurator = configurator;\r\n  scope.isNonBlocking = scheduler.detectIsTransition();\r\n\r\n  useMemo(() => {\r\n    const make = (items: Array<I>) => {\r\n      const { transitions, ctrlsMap, fakesMap, items: $items } = scope;\r\n      const configurator: TransitionConfiguratorFn<T, I> = (idx, item) => scope.configurator(idx, item);\r\n      const { ctrls, itemsMap } = setup({ items, getKey, configurator, state, ctrlsMap });\r\n      const { insMap, remMap, movMap, stabMap, replaced } = diff($items, items, getKey);\r\n\r\n      scope.hasReplaces = replaced.size > 0;\r\n      state.setCtrls(ctrls);\r\n      replaced.forEach(key => ctrlsMap.get(key).setIsReplaced(true));\r\n\r\n      transitions.push(\r\n        ...animate({ action: Action.LEAVE, space: fakesMap, state, scope }), // !\r\n        ...animate({ action: Action.ENTER, space: insMap, state, scope }),\r\n        ...animate({ action: Action.LEAVE, space: remMap, state, scope }),\r\n        ...animate({ action: Action.UPDATE, space: movMap, state, scope }),\r\n        ...animate({ action: Action.UPDATE, space: stabMap, state, scope }),\r\n      );\r\n\r\n      state.setHasTransitions(transitions.length > 0);\r\n      scope.items = items; // !\r\n      scope.itemsMap = itemsMap;\r\n      scope.fromApi = false;\r\n    };\r\n\r\n    make(uniq(items, getKey));\r\n  }, [items]);\r\n\r\n  const transition = useMemo<TransitionFn<T, I>>(\r\n    () => (render: TransitionRenderFn<T, I>) => {\r\n      const { ctrlsMap } = scope;\r\n      const elements: Array<TransitionElement> = [];\r\n\r\n      for (const [key, ctrl] of ctrlsMap) {\r\n        const idx = ctrl.getIdx();\r\n        const item = ctrl.getItem();\r\n        const spring = ctrl.getSpring();\r\n        const element = Fragment({ key, slot: render({ spring, item, idx }) });\r\n\r\n        if (elements[idx]) {\r\n          const sibling = elements[idx];\r\n\r\n          if (detectIsArray(sibling)) {\r\n            sibling.push(element);\r\n          } else {\r\n            elements[idx] = [sibling, element] as unknown as TransitionElement;\r\n          }\r\n        } else {\r\n          elements[idx] = element;\r\n        }\r\n      }\r\n\r\n      return Fragment({ slot: flatten(elements) });\r\n    },\r\n    [],\r\n  );\r\n\r\n  const api = useMemo<TransitionApi<T>>(() => {\r\n    return {\r\n      marker: 'transition-api',\r\n      start: fn => {\r\n        scope.fromApi = true;\r\n\r\n        if (scope.inChain) {\r\n          scope.pending && scope.pending();\r\n          scope.pending = null;\r\n          update();\r\n        } else {\r\n          state.start(fn);\r\n        }\r\n      },\r\n      chain: (value: boolean) => (scope.inChain = value),\r\n      delay: state.delay.bind(state),\r\n      cancel: state.cancel.bind(state),\r\n      pause: state.pause.bind(state),\r\n      resume: state.resume.bind(state),\r\n      on: state.on.bind(state),\r\n      isCanceled: state.getIsCanceled.bind(state),\r\n    };\r\n  }, []);\r\n\r\n  useLayoutEffect(() => {\r\n    if (scope.transitions.length === 0) return;\r\n    const { inChain } = scope;\r\n    const start = () => {\r\n      state.event('series-start');\r\n      scope.transitions.forEach(x => x.fn());\r\n      scope.transitions = [];\r\n      state.setHasTransitions(false);\r\n    };\r\n\r\n    if (inChain) {\r\n      scope.pending = () => state.defer(start);\r\n    } else {\r\n      start();\r\n    }\r\n  }); // !\r\n\r\n  useLayoutEffect(() => {\r\n    const offs: Array<Callback> = [\r\n      api.on('item-end', e => handleItemEnd(e, scope)),\r\n      api.on('series-end', () => handleSeriesEnd(update, state, scope)),\r\n    ];\r\n\r\n    return () => {\r\n      offs.forEach(x => x());\r\n      api.cancel();\r\n    };\r\n  }, []);\r\n\r\n  return [transition, api];\r\n}\r\n\r\ntype SetupOptions<T extends string, I = unknown> = {\r\n  items: Array<I>;\r\n  getKey: KeyExtractor<I>;\r\n  state: SharedState<T>;\r\n} & Pick<Scope<T, I>, 'configurator' | 'ctrlsMap'>;\r\n\r\nfunction setup<T extends string, I = unknown>(options: SetupOptions<T, I>) {\r\n  const { items, getKey, configurator, state, ctrlsMap } = options;\r\n  const itemsMap = new Map<ElementKey, I>();\r\n  const ctrls = items.map((item, idx) => {\r\n    const key = getKey(item);\r\n\r\n    itemsMap.set(key, item);\r\n\r\n    return getController<T, I>({ idx, item, getKey, configurator, state, ctrlsMap });\r\n  });\r\n\r\n  return { ctrls, itemsMap };\r\n}\r\n\r\ntype GetControllerOptions<T extends string, I = unknown> = {\r\n  idx: number;\r\n  item: I;\r\n} & Pick<SetupOptions<T, I>, 'getKey' | 'configurator' | 'state' | 'ctrlsMap'>;\r\n\r\nfunction getController<T extends string, I = unknown>(options: GetControllerOptions<T, I>) {\r\n  const { idx, item, getKey, configurator, state, ctrlsMap } = options;\r\n  const key = getKey(item);\r\n  const ctrl = ctrlsMap.get(key) || new Controller<T, I>(state);\r\n\r\n  prepare({ ctrl, key, idx, item, configurator });\r\n  ctrlsMap.set(key, ctrl);\r\n\r\n  return ctrl;\r\n}\r\n\r\nfunction extractKeys<I = unknown>(prevItems: Array<I>, nextItems: Array<I>, getKey: KeyExtractor<I>) {\r\n  const prevKeys: Array<ElementKey> = [];\r\n  const nextKeys: Array<ElementKey> = [];\r\n  const prevKeysMap: Record<ElementKey, boolean> = {};\r\n  const nextKeysMap: Record<ElementKey, boolean> = {};\r\n  const max = Math.max(prevItems.length, nextItems.length);\r\n\r\n  for (let i = 0; i < max; i++) {\r\n    const prevItem = prevItems[i];\r\n    const nextItem = nextItems[i];\r\n\r\n    if (prevItem) {\r\n      const prevKey = getKey(prevItem);\r\n\r\n      if (!prevKeysMap[prevKey]) {\r\n        prevKeysMap[prevKey] = true;\r\n        prevKeys.push(prevKey);\r\n      }\r\n    }\r\n\r\n    if (nextItem) {\r\n      const nextKey = getKey(nextItem);\r\n\r\n      if (!nextKeysMap[nextKey]) {\r\n        nextKeysMap[nextKey] = true;\r\n        nextKeys.push(nextKey);\r\n      }\r\n    }\r\n  }\r\n\r\n  return {\r\n    prevKeys,\r\n    nextKeys,\r\n    prevKeysMap,\r\n    nextKeysMap,\r\n  };\r\n}\r\n\r\nfunction diff<I = unknown>(prevItems: Array<I>, nextItems: Array<I>, getKey: KeyExtractor<I>) {\r\n  const { prevKeys, nextKeys, prevKeysMap, nextKeysMap } = extractKeys(prevItems, nextItems, getKey);\r\n  let size = Math.max(prevKeys.length, nextKeys.length);\r\n  let p = 0;\r\n  let n = 0;\r\n  const insMap = new Map<ElementKey, number>();\r\n  const remMap = new Map<ElementKey, number>();\r\n  const movMap = new Map<ElementKey, number>();\r\n  const stabMap = new Map<ElementKey, number>();\r\n  const replaced = new Set<ElementKey>();\r\n\r\n  for (let i = 0; i < size; i++) {\r\n    const nextKey = nextKeys[i - n] ?? null;\r\n    const prevKey = prevKeys[i - p] ?? null;\r\n\r\n    if (nextKey !== prevKey) {\r\n      if (nextKey !== null && !prevKeysMap[nextKey]) {\r\n        if (prevKey !== null && !nextKeysMap[prevKey]) {\r\n          insMap.set(nextKey, i);\r\n          remMap.set(prevKey, i);\r\n          replaced.add(prevKey);\r\n        } else {\r\n          insMap.set(nextKey, i);\r\n          p++;\r\n          size++;\r\n        }\r\n      } else if (!nextKeysMap[prevKey]) {\r\n        remMap.set(prevKey, i);\r\n        n++;\r\n        size++;\r\n      } else if (nextKeysMap[prevKey] && nextKeysMap[nextKey]) {\r\n        movMap.set(nextKey, i);\r\n      }\r\n    } else if (nextKey !== null) {\r\n      stabMap.set(nextKey, i);\r\n    }\r\n  }\r\n\r\n  return {\r\n    insMap,\r\n    remMap,\r\n    movMap,\r\n    stabMap,\r\n    replaced,\r\n  };\r\n}\r\n\r\ntype AnimateOptions<T extends string, I = unknown> = {\r\n  action: Action;\r\n  space: Map<ElementKey, number>;\r\n  state: SharedState<T>;\r\n  scope: Scope<T, I>;\r\n};\r\n\r\nfunction animate<T extends string, I = unknown>(options: AnimateOptions<T, I>) {\r\n  const transitions: Array<Transition> = [];\r\n  const { space, action, state, scope } = options;\r\n  const { configurator, ctrlsMap, fakesMap } = scope;\r\n  const ctrls = state.getCtrls();\r\n  const isEnter = action === Action.ENTER;\r\n  const isLeave = action === Action.LEAVE;\r\n  let $idx = 0;\r\n\r\n  for (const [key, idx] of space) {\r\n    const ctrl = ctrlsMap.get(key);\r\n    const item = ctrl.getItem();\r\n    const config = configurator(idx, item);\r\n    const { trail } = config;\r\n    const to = isLeave && !config[action] ? config.from : config[action];\r\n    let $ctrl = ctrl;\r\n    let $key = key;\r\n\r\n    if (isEnter) {\r\n      const isReplaced = ctrl.getIsReplaced();\r\n      const isPlaying = state.detectIsPlaying(key);\r\n\r\n      if (isReplaced) {\r\n        if (isPlaying) {\r\n          const fake = new Controller<T, I>(state);\r\n          const fakeKey = fake.markAsFake(key);\r\n\r\n          $ctrl = fake;\r\n          $key = fakeKey;\r\n          prepare({ ctrl: fake, key: fakeKey, idx, item, configurator });\r\n          ctrlsMap.set(fakeKey, fake);\r\n          fakesMap.set(fakeKey, idx);\r\n          ctrls.push(fake);\r\n        } else {\r\n          ctrl.setIsReplaced(false);\r\n        }\r\n      }\r\n    }\r\n\r\n    const start = () => $ctrl.start(() => ({ to }));\r\n    const fn = to && withTrail(start, $idx, $ctrl, trail);\r\n\r\n    fn && transitions.push(new Transition($key, fn));\r\n    $idx++;\r\n  }\r\n\r\n  return transitions;\r\n}\r\n\r\nfunction withTrail<T extends string, I = unknown>(\r\n  start: () => void,\r\n  idx: number,\r\n  ctrl: Controller<T, I>,\r\n  trail?: number,\r\n) {\r\n  if (detectIsNumber(trail)) {\r\n    ctrl.setIsPlaying(true);\r\n    return () => setTimeout(start, idx * trail);\r\n  }\r\n\r\n  return start;\r\n}\r\n\r\ntype PrepareOptions<T extends string, I = unknown> = {\r\n  ctrl: Controller<T, I>;\r\n  idx: number;\r\n  key: ElementKey;\r\n  item: I;\r\n  configurator: TransitionConfiguratorFn<T, I>;\r\n};\r\n\r\nfunction prepare<T extends string, I = unknown>(options: PrepareOptions<T, I>) {\r\n  const { ctrl, key, idx, item, configurator } = options;\r\n  const { from, enter, config } = configurator(idx, item);\r\n  const $configurator: ConfiguratorFn<T> = (idx: number) => {\r\n    const { enter, leave, update, trail, ...rest } = configurator(idx, item);\r\n\r\n    return { ...rest };\r\n  };\r\n\r\n  ctrl.setKey(key);\r\n  ctrl.setIdx(idx);\r\n  ctrl.setItem(item);\r\n  ctrl.setFrom(from);\r\n  ctrl.setTo(enter);\r\n  ctrl.setSpringConfigFn(config);\r\n  ctrl.setConfigurator($configurator);\r\n}\r\n\r\nfunction handleItemEnd<T extends string, I = unknown>({ key }: AnimationEventValue<T>, scope: Scope<T, I>) {\r\n  const { ctrlsMap, fakesMap, itemsMap, hasReplaces, queue, fromApi } = scope;\r\n\r\n  if (ctrlsMap.has(key) && ctrlsMap.get(key).detectIsFake()) {\r\n    ctrlsMap.delete(key);\r\n    fakesMap.delete(key);\r\n  }\r\n\r\n  if (fromApi || hasReplaces) {\r\n    !itemsMap.has(key) && ctrlsMap.delete(key);\r\n  } else {\r\n    queue.push(() => !scope.itemsMap.has(key) && ctrlsMap.delete(key));\r\n  }\r\n}\r\n\r\nfunction handleSeriesEnd<T extends string, I = unknown>(update: () => void, state: SharedState<T>, scope: Scope<T, I>) {\r\n  const { ctrlsMap, configurator, fromApi } = scope;\r\n  const ctrls: Array<Controller<T, I>> = [];\r\n\r\n  if (fromApi) return;\r\n  scope.queue.forEach(x => x());\r\n  scope.queue = [];\r\n\r\n  for (const [_, ctrl] of ctrlsMap) {\r\n    const { enter } = configurator(ctrl.getIdx(), ctrl.getItem());\r\n\r\n    ctrl.replaceValue({ ...enter });\r\n    ctrl.notify(true);\r\n    ctrls.push(ctrl);\r\n  }\r\n\r\n  state.setCtrls(ctrls);\r\n  update();\r\n}\r\n\r\nclass Transition {\r\n  constructor(public key: ElementKey, public fn: Callback) {}\r\n}\r\n\r\ntype Scope<T extends string, I = unknown> = {\r\n  transitions: Array<Transition>;\r\n  items: Array<I>;\r\n  configurator: TransitionConfiguratorFn<T, I>;\r\n  ctrlsMap: Map<ElementKey, Controller<T, I>>;\r\n  itemsMap: Map<ElementKey, I>;\r\n  fakesMap: Map<ElementKey, number>;\r\n  queue: Array<Callback>;\r\n  hasReplaces: boolean;\r\n  fromApi: boolean;\r\n  inChain: boolean;\r\n  isNonBlocking: boolean;\r\n  pending: Callback;\r\n};\r\n\r\nenum Action {\r\n  ENTER = 'enter',\r\n  LEAVE = 'leave',\r\n  UPDATE = 'update',\r\n}\r\n\r\ntype KeyExtractor<I> = (x: I) => ElementKey;\r\n\r\ntype TransitionElement = Component | TagVirtualNodeFactory;\r\n\r\ntype TransitionConfiguratorFn<T extends string = string, I = unknown> = (\r\n  idx: number,\r\n  item: I,\r\n) => TransitionItemConfig<T>;\r\n\r\nexport type TransitionApi<T extends string = string> = Omit<SpringApi<T>, 'reset'>;\r\n\r\nexport type TransitionRenderFn<T extends string = string, I = unknown> = (options: {\r\n  spring: Spring<T>;\r\n  item: I;\r\n  idx: number;\r\n}) => TransitionElement;\r\n\r\nexport type TransitionFn<T extends string = string, I = unknown> = (render: TransitionRenderFn<T, I>) => Component;\r\n\r\nexport { useTransition };\r\n","import {\r\n  type Component,\r\n  type TagVirtualNodeFactory,\r\n  type Callback,\r\n  component,\r\n  useMemo,\r\n  useInsertionEffect,\r\n  walk,\r\n  nextTick,\r\n  __useCursor as useCursor,\r\n  __useSSR as useSSR,\r\n} from '@dark-engine/core';\r\n\r\nimport { type SpringValue } from '../shared';\r\nimport { type Spring } from '../spring';\r\n\r\ntype AnimatedProps<E = unknown, T extends string = string> = {\r\n  spring: Spring<T>;\r\n  fn: StyleFn<E, T>;\r\n  slot: Component | TagVirtualNodeFactory;\r\n};\r\n\r\nconst Animated = component<AnimatedProps>(\r\n  ({ spring, fn, slot }) => {\r\n    const cursor = useCursor();\r\n    const { isHydration } = useSSR();\r\n    const scope = useMemo<Scope>(() => ({ element: null, notify: null }), []);\r\n    const notify = () => scope.element && fn(scope.element, spring.value());\r\n\r\n    scope.notify = notify;\r\n\r\n    // !\r\n    useInsertionEffect(() => {\r\n      const make = () => {\r\n        const fiber = cursor.hook.owner;\r\n\r\n        walk(fiber.child, (fiber, _, stop) => {\r\n          if (fiber.element) {\r\n            scope.element = fiber.element;\r\n            return stop();\r\n          }\r\n        });\r\n\r\n        notify();\r\n      };\r\n\r\n      if (isHydration) {\r\n        nextTick(make);\r\n      } else {\r\n        make();\r\n      }\r\n\r\n      return spring.on(() => scope.notify());\r\n    }, [spring]);\r\n\r\n    notify();\r\n\r\n    return slot;\r\n  },\r\n  { displayName: 'Animated' },\r\n);\r\n\r\ntype Scope = { element: unknown; notify: Callback };\r\ntype StyleFn<E = unknown, T extends string = string> = (element: E, value: SpringValue<T>) => void;\r\n\r\nexport { Animated };\r\n","import { type DarkElement, component, useMemo, useLayoutEffect, useRef, __useSSR as useSSR } from '@dark-engine/core';\r\nimport { type DarkJSX, createPortal } from '@dark-engine/platform-browser';\r\nimport { styled } from '@dark-engine/styled';\r\nimport { type SpringValue, Animated, useTransition } from '@dark-engine/animations';\r\n\r\ntype DialogProps = {\r\n  isOpen: boolean;\r\n  width?: string;\r\n  height?: string;\r\n  slot: DarkElement;\r\n  onRequestClose: () => void;\r\n};\r\n\r\nconst Dialog = component<DialogProps>(({ isOpen, width = '600px', height = '300px', slot, onRequestClose }) => {\r\n  const { isServer, isSSR } = useSSR();\r\n  const host = useMemo(() => (isServer ? null : document.createElement('div')), []);\r\n  const rootRef = useRef<HTMLDivElement>(null);\r\n  const items = useMemo(() => [isOpen].filter(Boolean), [isOpen]);\r\n  const scope = useMemo<Scope>(() => ({ isOpen, container: null }), []);\r\n  const [transition, api] = useTransition<SpringProps, boolean>(\r\n    items,\r\n    x => String(x),\r\n    () => ({\r\n      from: { opacity: 0, scale: 0 },\r\n      enter: { opacity: 1, scale: 1 },\r\n      leave: { opacity: 0, scale: 0 },\r\n      config: () => ({ tension: 160, friction: 24, precision: 4 }),\r\n    }),\r\n  );\r\n\r\n  scope.isOpen = isOpen;\r\n  scope.container = rootRef.current;\r\n\r\n  useLayoutEffect(() => {\r\n    const offs = [\r\n      api.on('series-start', () => scope.isOpen && document.body.appendChild(host)),\r\n      api.on('series-end', () => !scope.isOpen && host.remove()),\r\n    ];\r\n\r\n    return () => {\r\n      offs.forEach(x => x());\r\n      host.remove();\r\n    };\r\n  }, []);\r\n\r\n  if (isSSR) return null;\r\n\r\n  return createPortal(\r\n    <Container ref={rootRef}>\r\n      {transition(({ spring }) => (\r\n        <Animated spring={spring} fn={styleFn(true, scope)}>\r\n          <Overlay onClick={onRequestClose} />\r\n        </Animated>\r\n      ))}\r\n      {transition(({ spring }) => (\r\n        <Animated spring={spring} fn={styleFn(false, scope)}>\r\n          <Window $width={width} $height={height}>\r\n            <CloseButton onClick={onRequestClose} />\r\n            {slot}\r\n          </Window>\r\n        </Animated>\r\n      ))}\r\n    </Container>,\r\n    host,\r\n  );\r\n});\r\n\r\nconst styleFn = (isOverlay: boolean, scope: Scope) => (element: HTMLDivElement, value: SpringValue<SpringProps>) => {\r\n  const { opacity, scale } = value;\r\n  const { isOpen, container } = scope;\r\n  const setElementProp = setPropOf(element);\r\n  const removeElementProp = removePropOf(element);\r\n\r\n  if (isOverlay) {\r\n    const setContainerProp = container ? setPropOf(container) : null;\r\n    const removeContainerProp = container ? removePropOf(container) : null;\r\n\r\n    if (isOpen) {\r\n      opacity < 0.95 && setElementProp('opacity', `${opacity}`);\r\n    } else {\r\n      opacity < 0.95 && setElementProp('opacity', `${opacity}`);\r\n    }\r\n\r\n    if (!isOpen) {\r\n      setElementProp('pointer-events', 'none');\r\n      setContainerProp && setContainerProp('pointer-events', 'none');\r\n    } else {\r\n      removeElementProp('pointer-events');\r\n      removeContainerProp && removeContainerProp('pointer-events');\r\n    }\r\n  } else {\r\n    setElementProp('opacity', `${opacity}`);\r\n    setElementProp('transform', `scale(${scale})`);\r\n  }\r\n};\r\n\r\nconst setPropOf = (element: HTMLElement) => element.style.setProperty.bind(element.style);\r\n\r\nconst removePropOf = (element: HTMLElement) => element.style.removeProperty.bind(element.style);\r\n\r\ntype CloseButtonProps = {\r\n  onClick: () => void;\r\n};\r\n\r\nconst CloseButton = component<CloseButtonProps>(({ onClick }) => {\r\n  return (\r\n    <Button onClick={onClick}>\r\n      <svg width='24' height='24' viewBox='0 0 50 50'>\r\n        <path d='M 9.15625 6.3125 L 6.3125 9.15625 L 22.15625 25 L 6.21875 40.96875 L 9.03125 43.78125 L 25 27.84375 L 40.9375 43.78125 L 43.78125 40.9375 L 27.84375 25 L 43.6875 9.15625 L 40.84375 6.3125 L 25 22.15625 Z' />\r\n      </svg>\r\n    </Button>\r\n  );\r\n});\r\n\r\nconst Container = styled.div`\r\n  position: fixed;\r\n  inset: 0;\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow-y: auto;\r\n  padding: 16px;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  cursor: pointer;\r\n  background-color: transparent;\r\n  border: none;\r\n  padding: 4px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  stroke-width: 4px;\r\n  stroke: #303f9f;\r\n`;\r\n\r\nconst Window = styled.div<{ $width: string; $height: string } & DarkJSX.Elements['div']>`\r\n  position: relative;\r\n  width: ${p => p.$width};\r\n  min-height: ${p => p.$height};\r\n  max-width: 100%;\r\n  background-color: #fff;\r\n  border-radius: 4px;\r\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\r\n  padding: 32px;\r\n  will-change: opacity, transform;\r\n  margin: auto;\r\n  transform-origin: 50% 50%;\r\n\r\n  & ${Button} {\r\n    position: absolute;\r\n    top: 8px;\r\n    right: 8px;\r\n  }\r\n`;\r\n\r\nconst Overlay = styled.div`\r\n  position: fixed;\r\n  width: 100%;\r\n  height: 200%;\r\n  inset: 0;\r\n  background-color: #303f9f;\r\n  cursor: pointer;\r\n  will-change: opacity;\r\n`;\r\n\r\ntype SpringProps = 'opacity' | 'scale';\r\n\r\ntype Scope = { isOpen: boolean; container: HTMLDivElement };\r\n\r\nexport { Dialog };\r\n","import { component, useState } from '@dark-engine/core';\r\nimport { createRoot } from '@dark-engine/platform-browser';\r\nimport { createGlobalStyle, styled } from '@dark-engine/styled';\r\n\r\nimport { Dialog } from './dialog';\r\n\r\nconst App = component(() => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <GlobalStyle />\r\n      <Button onClick={() => setIsOpen(x => !x)}>Toggle dialog</Button>\r\n      <Dialog isOpen={isOpen} onRequestClose={() => setIsOpen(false)}>\r\n        <Content>\r\n          <h1>Hey, I'm a dialog! 👋</h1>\r\n          <p>\r\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Illo soluta vero unde, cumque perspiciatis mollitia\r\n            sunt exercitationem beatae assumenda iusto eos fugit fugiat alias est explicabo pariatur. Reprehenderit\r\n            eligendi quae molestias nesciunt dolore sequi qui delectus nobis unde, officia, numquam dignissimos sit\r\n            voluptas necessitatibus consectetur maxime maiores tempora aliquid nihil ducimus reiciendis architecto\r\n          </p>\r\n          <img src='./assets/mountains.jpg' alt='mountains' />\r\n          <p>\r\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Illo soluta vero unde, cumque perspiciatis mollitia\r\n            sunt exercitationem beatae assumenda iusto eos fugit fugiat alias est explicabo pariatur. Reprehenderit\r\n            eligendi quae molestias nesciunt dolore sequi qui delectus nobis unde, officia, numquam dignissimos sit\r\n            voluptas necessitatibus consectetur maxime maiores tempora aliquid nihil ducimus reiciendis architecto\r\n          </p>\r\n        </Content>\r\n      </Dialog>\r\n    </>\r\n  );\r\n});\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  * {\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  html,\r\n  body {\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n\r\n  body {\r\n    font-family: Arial;\r\n    padding: 16px;\r\n    background-color: #fff;\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  padding: 16px;\r\n  border: none;\r\n  text-transform: uppercase;\r\n  background-color: #e91e63;\r\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\r\n  cursor: pointer;\r\n  color: #fff;\r\n  border-radius: 4px;\r\n  letter-spacing: 1px;\r\n  font-weight: 700;\r\n  transition: opacity 0.05s ease-in-out;\r\n\r\n  &:active {\r\n    opacity: 0.5;\r\n  }\r\n`;\r\n\r\nconst Content = styled.main`\r\n  width: 100%;\r\n  height: 100%;\r\n  text-align: center;\r\n\r\n  & p {\r\n    text-align: justify;\r\n    margin: 32px 0;\r\n  }\r\n\r\n  & img {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\ncreateRoot(document.getElementById('root')).render(<App />);\r\n","import { useMemo } from '../use-memo';\r\n\r\nfunction useCallback<T = Function>(callback: T, deps: Array<any>): T {\r\n  const value = useMemo(() => callback, deps);\r\n\r\n  return value;\r\n}\r\n\r\nexport { useCallback };\r\n","import { type DarkElement, unmountRoot } from '@dark-engine/core';\r\n\r\nimport type { TagNativeElement } from '../native-element';\r\nimport { render, roots } from '../render';\r\nimport { removeContent } from '../utils';\r\n\r\nfunction createRoot(container: TagNativeElement) {\r\n  return {\r\n    render: (element: DarkElement) => render(element, container),\r\n    unmount: () => unmount(container),\r\n  };\r\n}\r\n\r\nfunction unmount(container: TagNativeElement) {\r\n  const rootId = roots.get(container);\r\n\r\n  unmountRoot(rootId, () => {\r\n    roots.delete(container);\r\n    removeContent(container);\r\n  });\r\n}\r\n\r\nexport { createRoot, unmount };\r\n"],"names":["KEY_ATTR","CREATE_EFFECT_TAG","UPDATE_EFFECT_TAG","MOVE_MASK","TaskPriority","Flag","ATTR_BLACK_LIST","SKIP_SCAN_OPT","MEMO_SLOT_OPT","STATIC_SLOT_OPT","detectIsFunction","o","detectIsUndefined","detectIsString","detectIsObject","detectIsBoolean","detectIsArray","Array","isArray","detectIsNull","detectIsEmpty","detectIsPromise","Promise","detectIsEqual","a","b","Object","is","getTime","Date","now","trueFn","falseFn","sameFn","x","logError","args","console","error","illegal","prefix","throwThis","Error","formatErrorMsg","flatten","source","transform","length","list","stack","idx","pop","i","push","prevDeps","nextDeps","max","Math","createIndexKey","mapRecord","record","keys","map","$$inject","Symbol","Component","type","props","token","displayName","shouldUpdate","children","constructor","this","component","options","$token","factory","defaultInject","detectIsComponent","$$vNode","ATTR_TYPE","VirtualNode","TagVirtualNode","name","attrs","super","NodeType","TAG","TextVirtualNode","value","TEXT","String","CommentVirtualNode","text","COMMENT","View","as","slot","_void","key","from","detectIsTextVirtualNode","detectIsVirtualNode","vNode","detectIsTagVirtualNode","detectIsVirtualNodeFactory","createReplacer","getElementKey","inst","hasElementFlag","flag","Boolean","hasComponentFlag","hasVirtualNodeFactoryFlag","hasTagVirtualNodeFlag","getElementType","hasChildrenProp","detectAreSameInstanceTypes","prevInst","nextInst","isComponentFactories","jsx","element","$slot","$props","content","$$fragment","Fragment","EventEmitter","subscribers","Map","on","e","fn","has","set","Set","get","add","delete","emit","data","forEach","kill","__getSize","size","Fiber","id","cc","cec","eidx","mask","tag","parent","child","next","alt","hook","incrementId","mutate","fiber","markHost","increment","count","getIsWip","setError","err","hasCatch","catch","static","nextId","Hook","values","owner","atoms","box","__getMask","__mark","__box","setIsWip","getIsPortal","setIsPortal","getIsSuspense","setIsSuspense","getIsPending","setIsPeinding","getProviders","providers","setProviders","getBatch","batch","setBatch","setCatch","incrementPending","pendings","getPendings","Awaiter","store","promise","resolve","cb","promises","$promises","allSettled","then","Scope","root","wip","cursor","unit","mountDeep","mountLevel","mountNav","events","unsubs","actions","candidates","deletions","cancels","asyncEffects","layoutEffects","insertionEffects","resourceId","resources","awaiter","onTransitionEnd","isLayoutEffectsZone","isInsertionEffectsZone","isUpdateZone","isBatchZone","isHydrateZone","isStreamZone","isTransitionZone","isEventZone","isHot","isDynamic","platform","detectIsDynamic","isServer","detectIsServer","emitter","resetActions","getActionsById","addActionMap","replace","insert","remove","move","stable","addReplaceAction","nextKey","addInsertAction","addRemoveAction","prevKey","addMoveAction","addStableAction","fork","scope","getRoot","setRoot","keepRoot","getWorkInProgress","setWorkInProgress","getNextUnitOfWork","setNextUnitOfWork","getCursorFiber","setCursorFiber","navToChild","navToSibling","navToParent","navToPrev","getMountIndex","setMountDeep","getMountDeep","resetMount","getEvents","addEventUnsubscriber","unsubscribeEvents","getCandidates","addCandidate","resetCandidates","getDeletions","hasDeletion","nextFiber","addDeletion","resetDeletions","addAsyncEffect","resetAsyncEffects","runAsyncEffects","effects","setTimeout","addLayoutEffect","resetLayoutEffects","runLayoutEffects","setIsLayoutEffectsZone","addInsertionEffect","resetInsertionEffects","runInsertionEffects","setIsInsertionEffectsZone","addCancel","applyCancels","resetCancels","getIsLayoutEffectsZone","getIsInsertionEffectsZone","getIsUpdateZone","setIsUpdateZone","getIsBatchZone","setIsBatchZone","getIsHydrateZone","setIsHydrateZone","getIsStreamZone","setIsStreamZone","getIsTransitionZone","setIsTransitionZone","getIsEventZone","setIsEventZone","getIsHot","setIsHot","getOnTransitionEnd","setOnTransitionEnd","cleanup","getEmitter","getResource","setResource","res","getResources","getResourceId","setResourceId","getNextResourceId","getAwaiter","runAfterCommit","rootId","scopes","getRootId","setRootId","realisation","createElement","toggle","raf","caf","spawn","commit","finishCommit","detectIsHydration","useCursor","useSSR","isHydration","isSSR","$$memo","defaultShouldUpdate","nextProps","detectIsMemo","instance","Memo","memo","getValue","p","n","deps","state","$value","detectIsElement","walk","onWalk","shouldDeep","shouldStop","skip","stop","getFiberWithElement","$fiber","detectIsFiberAlive","getSuspense","isPending","suspense","buildChildNodes","$scope","onNode","getKey","buildChildNode","altMap","startEidx","prevIdx","nextIdx","left","right","isFirst","isLast","notifyParents","MessageChannel","port1","port2","MessagePort","channel","offs","event","callback","off","postMessage","unref","Task","__id","priority","forceAsync","isTransition","isObsolete","createLoc","onRestore","nextTaskId","getPriority","getForceAsync","setIsTransition","getIsTransition","run","complete","markAsObsolete","getIsObsolete","setOnRestore","setCreateLoc","loc","split","$loc","rootLoc","scheduler","queue","HIGH","NORMAL","LOW","deadline","task","scheduledCallback","isMessageLoopRunning","port","performWorkUntilDeadline","bind","reset","shouldYield","schedule","createTask","put","execute","detectIsTransition","hasPrimaryTask","high","normal","getQueues","retain","low","priorityTasks","hasHostUpdate","hasChildUpdate","tasks","hasTopUpdate","indexOf","collectFlags","some","detectHasExact","defer","filter","splice","pick","shift","requestCallbackAsync","workLoop","requestCallback","something","finally","detectIsBusy","unshift","startTransition","$$useEffect","createEffect","useEffect","effect","undefined","isInsertionEffect","EffectType","INSERTION","isLayoutEffect","LAYOUT","isAsyncEffect","ASYNC","runEffect","dropEffects","$$useInsertionEffect","useInsertionEffect","dropInsertionEffects","$$useLayoutEffect","dropLayoutEffects","unmountFiber","INSERTION_EFFECT_HOST_MASK","$hook","_","isAsync","wipFiber","performUnitOfWork","unmounts","diff","onWalkInSync","isRight","sync","item","onResolve","onUnmount","isDeepWalking","isStream","hasChildren","setupInstance","createFiber","getAlternate","share","mountChild","mountSibling","$inst","supportConditional","prev","shouldMount","pc","nc","onWalkInShouldUpdate","mount","areSameTypes","nextChildren","hasSameCount","prevKeys","nextKeys","prevKeysMap","nextKeysMap","keyedFibersMap","usedKeysMap","extractKeys","flush","prevKeyFiber","tryOptStaticSlot","hasMove","hasRemove","hasInsert","hasReplace","detectIsStableMemoTree","tryOptMov","tryOptMemoSlot","reconcile","isUpdate","setup","detectAreSameComponentTypesWithSameKeys","getHook","isChild","parentId","isMove","isStable","isComponent","result","createResetClosure","setNextId","update","createUpdate","fibers","fromFork","$fork","createOnRestore","setValue","resetValue","assign","replaceScope","tools","hasTools","isBatch","isEvent","$tools","isRetain","createCallback","change","timer","changes","clearTimeout","addBatch","createHookLoc","createTools","$shouldUpdate","prevValue","newValue","CLASS_ATTR","STYLE_ATTR","VALUE_ATTR","DANGER_HTML_ATTR","svgTagNames","voidTagNames","detectIsBrowser","globalThis","window","removeContent","innerHTML","SyntheticEvent","sourceEvent","target","propagation","stopPropagation","preventDefault","getPropagation","delegateEvent","eventName","handler","eventsMap","handlersMap","$handler","slice","rootHandler","$event","parentElement","dispatchEvent","WeakMap","document","addEventListener","removeEventListener","detectIsEvent","attrName","startsWith","getEventName","toLowerCase","moves","patches","createNativeElement","detectIsSvgElement","createElementNS","createTextNode","createComment","performAttribute","tagElement","nextAttrValue","prevAttrValue","html","current","ref","mutableRef","hasOwnProperty","detectIsMutableRef","style","m","setStyleProp","call","setObjectStyle","setAttribute","removeAttribute","toggleAttribute","ATTR_TRANSFORM_MAP","readonly","patchAttributes","tagName","attrValue","specialCasesMap","$attrName","prototype","getPrototypeOf","descriptor","getOwnPropertyDescriptor","canSetProperty","includes","checked","innerText","commitUpdate","detectIsCommentVirtualNode","nodeValue","prevVNode","nextVNode","attrNames","prevAttrs","nextAttrs","getAttributeNames","attribute","updateAttributes","childNodes","nativeElement","DocumentType","nextSibling","Text","splitText","nodeName","appendElement","insertElement","addAttributes","commitCreation","sourceNodes","elements","onWalkInCollectElements","collectElements","sourceFragment","DocumentFragment","elementIdx","node","removeElement","replaceElement","commitDeletion","np","Node","ep","Element","appendChild","insertBefore","replaceChild","removeChild","hasAttribute","CSSStyleDeclaration","setProperty","isVisible","isBrowser","roots","requestAnimationFrame","cancelAnimationFrame","isInjected","STYLED_ATTR","DOT_MARK","MEDIA_QUERY_MARK","CONTAINER_QUERY_MARK","getElement","selector","querySelector","getElements","querySelectorAll","createStyleElement","setAttr","append","Keyframes","getName","getToken","detectIsKeyframes","Token","normalize","trim","markAsDynamic","detectIsToken","StyleRule","generate","NestingRule","GROUP_SELECTOR_PATTERN","className","fns","styles","replaceAll","keyframes","$styles","__","___","$keyframes","MediaQueryRule","nesting","$nesting","ContainerQueryRule","KeyframesRule","FunctionRule","end","isSealed","seal","getIsSealed","getEnd","styleExp","rest","media","container","detectIsStyleSheet","$media","$container","reduce","acc","StyleSheet","detectIsStyleRule","detectIsNestingRule","detectIsMediaQueryRule","detectIsContainerQueryRule","detectIsKeyframesRule","detectIsFunctionRule","RegExp","createContext","defaultValue","context","provider","freeze","useContext","getProvider","ThemeContext","useTheme","STYLE_LEVEL","theme","ManagerContext","useManager","detectIsPropName","css","last","detectHasMediaQueryMark","detectHasContainerQueryMark","char","manager","detectHasSingleLineCommentEndMark","endsWith","detectHasMultiLineCommentStartMark","detectHasMultiLineCommentEndMark","detectHasFunctionMark","detectHasUrlFnMark","URL_FN_MARK","detectHasKeyframesMark","sub","substring","createEnd","cache","injections","isLoaded","$$styled","styled","isString","reuse","createTag","isExtending","detectIsStyled","config","getExtendingConfig","$source","t1","t2","first","$t1","$t2","raw","mergeTemplates","$args","$transform","filterArgs","sheet","sheets","ast","baseName","baseStyle","baseKeyframes","isSwap","$factory","names","keyframesList","classNames","getClassNamesFrom","items","arr","uniq","join","injectWithHydration","collectComponentStyle","setupGlobal","t","createStyledComponent","getTag","textContent","$sheet","rules","genClassName","rule","head","isComponentStyle","createParser","isFragment","strings","stylesheet","buffer","fnIdx","isSingleLineComment","isMultiLineComment","isPropValue","isUrl","joined","arg","class","h","charCodeAt","phash","abs","abbr","address","area","article","aside","audio","base","bdi","bdo","blockquote","body","br","button","canvas","caption","cite","code","col","colgroup","datalist","dd","del","details","dfn","dialog","div","dl","dt","em","embed","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","header","hgroup","hr","iframe","img","input","ins","kbd","label","legend","li","link","main","mark","menu","meta","meter","nav","noscript","object","ol","optgroup","option","output","param","picture","pre","progress","q","rp","rt","ruby","s","samp","script","section","select","small","span","strong","summary","sup","table","tbody","td","template","textarea","tfoot","th","thead","time","title","tr","track","u","ul","var","video","wbr","circle","clipPath","defs","desc","ellipse","feBlend","feColorMatrix","feComponentTransfer","feComposite","feConvolveMatrix","feDiffuseLighting","feDisplacementMap","feDistantLight","feFlood","feFuncA","feFuncB","feFuncG","feFuncR","feGaussianBlur","feImage","feMerge","feMergeNode","feMorphology","feOffset","fePointLight","feSpecularLighting","feSpotLight","feTile","feTurbulence","g","image","line","linearGradient","marker","path","pattern","polygon","polyline","radialGradient","rect","svg","switch","symbol","textPath","tspan","use","view","tag1","tag2","sibling","reinject","stylesMap","Portal","defaultSpringConfig","tension","friction","mass","precision","fix","Atom","connections1","connections2","subjects","val","__connect","toString","toJSON","valueOf","disconnect","__addSubject","atom$","__removeSubject","make","tuple","__notify","WritableAtom","Spring","prop","prop$","setProp","atom","notify","Number","toFixed","stepper","pos","vel","dest","step","nPos","nVel","spring","Controller","to","frameTime","frameId","results","completed","springConfigFn","configurator","immediate","immediates","primaryKey","isReplaced","setKey","getIdx","setIdx","setFrom","setTo","setSpringConfigFn","setLeft","setRight","setConfigurator","setImmediate","replaceValue","markAsFake","generateFakeKey","detectIsFake","getIsReplaced","setIsReplaced","getItem","setItem","getState","getSpring","start","getIsCanceled","config1","config2","play","cancel","setIsPlaying","motion","getIsPaused","MAX_SKIPPED_FRAMES","checkCompleted","getIsTrail","detectIsRightFlow","completeSeries","fakeKey","SharedState","ctrls","flow","Flow","RIGHT","isTrail","isPaused","isCanceled","timeout","timerId","hasTransitions","setHasTransitions","getCtrls","setCtrls","setIsTrail","setFlow","detectIsPlaying","pause","resume","delay","resetTimer","Action","animate","transitions","space","action","ctrlsMap","fakesMap","isEnter","ENTER","isLeave","LEAVE","$idx","ctrl","trail","$ctrl","$key","isPlaying","fake","prepare","withTrail","Transition","enter","leave","Animated","Dialog","isOpen","width","height","onRequestClose","host","rootRef","initialValue","useRef","transition","api","forceUpdate","isNonBlocking","itemsMap","hasReplaces","fromApi","inChain","pending","$items","getController","insMap","remMap","movMap","stabMap","replaced","prevItems","nextItems","prevItem","nextItem","UPDATE","render","chain","handleItemEnd","handleSeriesEnd","opacity","scale","createPortal","Container","styleFn","Overlay","onClick","Window","CloseButton","isOverlay","setElementProp","setPropOf","removeElementProp","removePropOf","setContainerProp","removeContainerProp","removeProperty","Button","viewBox","d","$width","$height","App","setIsOpen","setState","GlobalStyle","Content","src","getNextId","collectGlobalStyle","getElementById","hydrate","isMounted","rootFiber","unmount","onCompleted","unmountRoot"],"sourceRoot":""}