{"version":3,"file":"build.js","mappings":"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","sources":["webpack://dark-deferred-search/../../packages/core/src/constants.ts","webpack://dark-deferred-search/../../packages/core/src/component/component.ts","webpack://dark-deferred-search/../../packages/core/src/utils/utils.ts","webpack://dark-deferred-search/../../packages/core/src/view/view.ts","webpack://dark-deferred-search/../../packages/core/src/element/element.ts","webpack://dark-deferred-search/../../packages/core/src/platform/platform.ts","webpack://dark-deferred-search/../../packages/core/src/emitter/emitter.ts","webpack://dark-deferred-search/../../packages/core/src/scope/scope.ts","webpack://dark-deferred-search/../../packages/core/src/memo/memo.ts","webpack://dark-deferred-search/../../packages/core/src/use-memo/use-memo.ts","webpack://dark-deferred-search/../../packages/core/src/fragment/fragment.ts","webpack://dark-deferred-search/../../packages/core/src/fiber/fiber.ts","webpack://dark-deferred-search/../../packages/core/src/walk/walk.ts","webpack://dark-deferred-search/../../packages/core/src/use-effect/use-effect.ts","webpack://dark-deferred-search/../../packages/core/src/use-layout-effect/use-layout-effect.ts","webpack://dark-deferred-search/../../packages/core/src/use-insertion-effect/use-insertion-effect.ts","webpack://dark-deferred-search/../../packages/core/src/unmount/unmount.ts","webpack://dark-deferred-search/../../packages/core/src/workloop/workloop.ts","webpack://dark-deferred-search/../../packages/core/src/scheduler/scheduler.ts","webpack://dark-deferred-search/../../packages/core/src/use-update/use-update.ts","webpack://dark-deferred-search/../../packages/core/src/batch/batch.ts","webpack://dark-deferred-search/../../packages/core/src/use-state/use-state.ts","webpack://dark-deferred-search/../../packages/core/src/use-callback/use-callback.ts","webpack://dark-deferred-search/../../packages/core/src/ref/ref.ts","webpack://dark-deferred-search/../../packages/platform-browser/src/portal/portal.ts","webpack://dark-deferred-search/../../packages/platform-browser/src/events/events.ts","webpack://dark-deferred-search/../../packages/platform-browser/src/constants.ts","webpack://dark-deferred-search/../../packages/platform-browser/src/dom/dom.ts","webpack://dark-deferred-search/../../packages/platform-browser/src/render/render.ts","webpack://dark-deferred-search/../../packages/styled/src/constants.ts","webpack://dark-deferred-search/../../packages/styled/src/utils/utils.ts","webpack://dark-deferred-search/../../packages/styled/src/keyframes/keyframes.ts","webpack://dark-deferred-search/../../packages/styled/src/tokens/tokens.ts","webpack://dark-deferred-search/../../packages/core/src/context/context.ts","webpack://dark-deferred-search/../../packages/styled/src/theme/theme.ts","webpack://dark-deferred-search/../../packages/styled/src/server/manager.ts","webpack://dark-deferred-search/../../packages/styled/src/parse/parse.ts","webpack://dark-deferred-search/../../packages/styled/src/hash/hash.ts","webpack://dark-deferred-search/../../packages/styled/src/styled/styled.ts","webpack://dark-deferred-search/./utils.ts","webpack://dark-deferred-search/./index.tsx","webpack://dark-deferred-search/../../packages/core/src/use-deferred-value/use-deferred-value.ts","webpack://dark-deferred-search/../../packages/core/src/start-transition/start-transition.ts","webpack://dark-deferred-search/../../packages/platform-browser/src/create-root/create-root.tsx"],"sourcesContent":["export const VERSION = '0.25.1';\r\nexport const ROOT = 'dark:root';\r\nexport const REPLACER = 'dark:matter';\r\nexport const INDEX_KEY = 'dark:idx';\r\nexport const KEY_ATTR = 'key';\r\nexport const REF_ATTR = 'ref';\r\nexport const CREATE_EFFECT_TAG = 'C';\r\nexport const UPDATE_EFFECT_TAG = 'U';\r\nexport const DELETE_EFFECT_TAG = 'D';\r\nexport const SKIP_EFFECT_TAG = 'S';\r\nexport const INSERTION_EFFECT_HOST_MASK = 1;\r\nexport const LAYOUT_EFFECT_HOST_MASK = 2;\r\nexport const ASYNC_EFFECT_HOST_MASK = 4;\r\nexport const ATOM_HOST_MASK = 8;\r\nexport const PORTAL_HOST_MASK = 16;\r\nexport const SHADOW_MASK = 32;\r\nexport const FLUSH_MASK = 64;\r\nexport const MOVE_MASK = 128;\r\nexport const HOOK_DELIMETER = ':';\r\nexport const YIELD_INTERVAL = 6;\r\nexport const APP_STATE_ATTR = 'dark-app-state';\r\n\r\nexport enum TaskPriority {\r\n  LOW = 0,\r\n  NORMAL = 1,\r\n  HIGH = 2,\r\n}\r\n\r\nexport enum Flag {\r\n  SKIP_SCAN_OPT = '__skipScanOpt',\r\n  MEMO_SLOT_OPT = '__memoSlotOpt',\r\n  STATIC_SLOT_OPT = '__staticSlotOpt',\r\n}\r\n\r\nexport const FLAGS = {\r\n  __skipScanOpt: true,\r\n  __memoSlotOpt: true,\r\n  __staticSlotOpt: true,\r\n};\r\n\r\nexport const ATTR_BLACK_LIST = {\r\n  [KEY_ATTR]: true,\r\n  [REF_ATTR]: true,\r\n  [Flag.SKIP_SCAN_OPT]: true,\r\n  [Flag.MEMO_SLOT_OPT]: true,\r\n  [Flag.STATIC_SLOT_OPT]: true,\r\n};\r\n","import type { ElementKey, Instance, DarkElement, RefProps, KeyProps, FlagProps } from '../shared';\r\nimport { KEY_ATTR } from '../constants';\r\nimport { error } from '../utils';\r\nimport { type Ref } from '../ref';\r\n\r\nconst $$inject = Symbol('inject');\r\nclass Component<P extends StandardComponentProps = any, R = any> {\r\n  type: CreateElement<P>;\r\n  props: P;\r\n  ref?: Ref<R>;\r\n  token?: Symbol;\r\n  displayName?: string;\r\n  shouldUpdate?: ShouldUpdate<P>;\r\n  children: Array<Instance> = [];\r\n\r\n  constructor(\r\n    type: CreateElement<P>,\r\n    token: Symbol,\r\n    props: P,\r\n    ref: Ref<R>,\r\n    shouldUpdate: ShouldUpdate<P>,\r\n    displayName: string,\r\n  ) {\r\n    this.type = type;\r\n    this.props = props;\r\n    ref && (this.ref = ref);\r\n    token && (this.token = token);\r\n    shouldUpdate && (this.shouldUpdate = shouldUpdate);\r\n    displayName && (this.displayName = displayName);\r\n  }\r\n}\r\n\r\nfunction component<P extends object, R = unknown>(type: CreateElement<P, R>, options: ComponentOptions = {}) {\r\n  const { token: $token, displayName } = options;\r\n  type Props = P & StandardComponentProps;\r\n  const factory: ComponentFactoryWithPossiblyInject<Props, R> = (props = {} as Props, ref?: Ref<R>) => {\r\n    const { token = $token, shouldUpdate } = factory[$$inject] || defaultInject;\r\n\r\n    if (props.ref) {\r\n      delete props.ref;\r\n\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        process.env.NODE_ENV === 'development' &&\r\n          error(`[Dark]: To use ref you need to wrap the component with forwardRef!`);\r\n      }\r\n    }\r\n\r\n    return new Component(type, token, props, ref, shouldUpdate, displayName);\r\n  };\r\n\r\n  return factory as ComponentFactory<Props, R>;\r\n}\r\n\r\nconst defaultInject: ComponentInject = {};\r\n\r\nconst detectIsComponent = (x: unknown): x is Component => x instanceof Component;\r\n\r\nconst getComponentKey = (x: Component): ElementKey => x.props[KEY_ATTR] ?? null;\r\n\r\nconst hasComponentFlag = (inst: Component, flag: string) => Boolean(inst.props[flag]);\r\n\r\ntype ComponentOptions = Readonly<{\r\n  displayName?: string;\r\n  token?: Symbol;\r\n}>;\r\n\r\ntype ComponentFactoryWithPossiblyInject<P extends object = {}, R = unknown> = {\r\n  (props?: P, ref?: Ref<R>): Component<P, R>;\r\n  [$$inject]?: ComponentInject<P>;\r\n};\r\n\r\ntype CreateElement<P extends StandardComponentProps, R = unknown> = (props: P, ref?: Ref<R>) => DarkElement;\r\n\r\nexport type ComponentInject<P extends object = {}> = Readonly<{\r\n  token?: Symbol;\r\n  shouldUpdate?: ShouldUpdate<P>;\r\n}>;\r\n\r\nexport type ShouldUpdate<P> = (prevProps: P, nextProps: P) => boolean;\r\n\r\nexport type StandardComponentProps = KeyProps & RefProps & FlagProps;\r\n\r\nexport type ComponentFactory<P extends object = {}, R = unknown> = (props?: P, ref?: Ref<R>) => Component<P, R>;\r\n\r\nexport { Component, component, $$inject, detectIsComponent, getComponentKey, hasComponentFlag };\r\n","import type { NestedArray } from '../shared';\r\nimport { INDEX_KEY } from '../constants';\r\n\r\nconst detectIsFunction = (o: any): o is Function => typeof o === 'function';\r\n\r\nconst detectIsUndefined = (o: any): o is undefined => typeof o === 'undefined';\r\n\r\nconst detectIsNumber = (o: any): o is number => typeof o === 'number';\r\n\r\nconst detectIsString = (o: any): o is string => typeof o === 'string';\r\n\r\nconst detectIsTextBased = (o: any): o is string | number => typeof o === 'string' || typeof o === 'number';\r\n\r\nconst detectIsObject = (o: any): o is object => typeof o === 'object';\r\n\r\nconst detectIsBoolean = (o: any): o is boolean => typeof o === 'boolean';\r\n\r\nconst detectIsArray = (o: any): o is Array<any> => Array.isArray(o);\r\n\r\nconst detectIsNull = (o: any): o is null => o === null;\r\n\r\nconst detectIsEmpty = (o: any) => detectIsNull(o) || detectIsUndefined(o);\r\n\r\nconst detectIsFalsy = (o: any) => detectIsEmpty(o) || o === false;\r\n\r\nconst getTime = () => Date.now();\r\n\r\nconst dummyFn = () => {};\r\n\r\nconst trueFn = () => true;\r\n\r\nconst falseFn = () => false;\r\n\r\nconst sameFn = <T = any>(x: T) => x;\r\n\r\nconst error = (...args: Array<any>) => !detectIsUndefined(console) && console.error(...args);\r\n\r\nfunction flatten<T = any>(source: Array<NestedArray<T>>, transform: (x: T) => any = sameFn): Array<T> {\r\n  if (detectIsArray(source)) {\r\n    if (source.length === 0) return [];\r\n  } else {\r\n    return [transform(source)];\r\n  }\r\n  const list: Array<T> = [];\r\n  const stack = [source[0]];\r\n  let idx = 0;\r\n\r\n  while (stack.length > 0) {\r\n    const x = stack.pop();\r\n\r\n    if (detectIsArray(x)) {\r\n      for (let i = x.length - 1; i >= 0; i--) {\r\n        stack.push(x[i]);\r\n      }\r\n    } else {\r\n      list.push(transform(x));\r\n\r\n      if (stack.length === 0 && idx < source.length - 1) {\r\n        idx++;\r\n        stack.push(source[idx]);\r\n      }\r\n    }\r\n  }\r\n\r\n  return list;\r\n}\r\n\r\nfunction keyBy<T = any>(\r\n  list: Array<T>,\r\n  fn: (o: T) => string | number,\r\n  value = false,\r\n): Record<string | number, T | boolean> {\r\n  return list.reduce((acc, x) => ((acc[fn(x)] = value ? x : true), acc), {});\r\n}\r\n\r\nfunction detectAreDepsDifferent(prevDeps: Array<unknown>, nextDeps: Array<unknown>): boolean {\r\n  if (prevDeps === nextDeps) return false;\r\n  const max = Math.max(prevDeps.length, nextDeps.length);\r\n\r\n  for (let i = 0; i < max; i++) {\r\n    if (!Object.is(prevDeps[i], nextDeps[i])) return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nfunction nextTick(callback: () => void) {\r\n  Promise.resolve().then(callback);\r\n}\r\n\r\nconst createIndexKey = (idx: number) => `${INDEX_KEY}:${idx}`;\r\n\r\nexport {\r\n  detectIsFunction,\r\n  detectIsUndefined,\r\n  detectIsNumber,\r\n  detectIsString,\r\n  detectIsTextBased,\r\n  detectIsObject,\r\n  detectIsBoolean,\r\n  detectIsArray,\r\n  detectIsNull,\r\n  detectIsEmpty,\r\n  detectIsFalsy,\r\n  getTime,\r\n  dummyFn,\r\n  trueFn,\r\n  falseFn,\r\n  error,\r\n  flatten,\r\n  keyBy,\r\n  detectAreDepsDifferent,\r\n  nextTick,\r\n  createIndexKey,\r\n};\r\n","import type { ElementKey, DarkElement, Instance, SlotProps, RefProps, KeyProps, FlagProps } from '../shared';\r\nimport { type Component, detectIsComponent, getComponentKey, hasComponentFlag } from '../component';\r\nimport { detectIsArray, detectIsFunction } from '../utils';\r\nimport { REPLACER, KEY_ATTR } from '../constants';\r\nimport { $$scope } from '../scope';\r\n\r\nconst $$vNode = Symbol('vNode');\r\nconst ATTR_TYPE = 'type';\r\n\r\nclass VirtualNode {\r\n  type: NodeType = null;\r\n\r\n  constructor(type: NodeType) {\r\n    this.type = type;\r\n  }\r\n}\r\n\r\nclass TagVirtualNode extends VirtualNode {\r\n  name: string;\r\n  attrs: Record<string, any>;\r\n  children: Array<TextVirtualNode | CommentVirtualNode | TagVirtualNode | VirtualNodeFactory | Component>;\r\n\r\n  constructor(name: string, attrs: TagVirtualNode['attrs'], children: TagVirtualNode['children']) {\r\n    super(NodeType.TAG);\r\n    this.name = name;\r\n    this.attrs = attrs;\r\n    this.children = children;\r\n  }\r\n}\r\n\r\nclass TextVirtualNode extends VirtualNode {\r\n  value: string;\r\n\r\n  constructor(source: TextSource) {\r\n    super(NodeType.TEXT);\r\n    this.value = String(source);\r\n  }\r\n}\r\n\r\nclass CommentVirtualNode extends VirtualNode {\r\n  value = '';\r\n\r\n  constructor(text: string) {\r\n    super(NodeType.COMMENT);\r\n    this.value = text;\r\n  }\r\n}\r\n\r\nfunction View(options: ViewOptions) {\r\n  const factory: TagVirtualNodeFactory = () => {\r\n    const { as: name, slot, _void = false, ...attrs } = options;\r\n    const children = (_void ? [] : detectIsArray(slot) ? slot : slot ? [slot] : []) as TagVirtualNode['children'];\r\n\r\n    return new TagVirtualNode(name, attrs, children);\r\n  };\r\n\r\n  factory[$$vNode] = true;\r\n  factory[ATTR_TYPE] = options.as;\r\n  factory[KEY_ATTR] = options.key;\r\n\r\n  return factory;\r\n}\r\n\r\nconst Text = (source: TextSource) => new TextVirtualNode(source);\r\n\r\nText.from = (source: DarkElement) => (detectIsTextVirtualNode(source) ? source.value : String(source));\r\n\r\nconst Comment = (text: string) => new CommentVirtualNode(text);\r\n\r\nconst detectIsVirtualNode = (vNode: unknown): vNode is VirtualNode => vNode instanceof VirtualNode;\r\n\r\nconst detectIsTagVirtualNode = (vNode: unknown): vNode is TagVirtualNode => vNode instanceof TagVirtualNode;\r\n\r\nconst detectIsCommentVirtualNode = (vNode: unknown): vNode is CommentVirtualNode => vNode instanceof CommentVirtualNode;\r\n\r\nconst detectIsTextVirtualNode = (vNode: unknown): vNode is TextVirtualNode => vNode instanceof TextVirtualNode;\r\n\r\nconst detectIsVirtualNodeFactory = (factory: unknown): factory is VirtualNodeFactory =>\r\n  detectIsFunction(factory) && factory[$$vNode] === true;\r\n\r\nconst getTagVirtualNodeKey = (vNode: TagVirtualNode): ElementKey | null =>\r\n  vNode.attrs ? vNode.attrs[KEY_ATTR] ?? null : null;\r\n\r\nconst hasTagVirtualNodeFlag = (vNode: TagVirtualNode, flag: string) => Boolean(vNode.attrs && vNode.attrs[flag]);\r\n\r\nconst getVirtualNodeFactoryKey = (factory: VirtualNodeFactory): ElementKey | null => factory[KEY_ATTR] ?? null;\r\n\r\nconst hasVirtualNodeFactoryFlag = (factory: VirtualNodeFactory, flag: string) => Boolean(factory[flag]);\r\n\r\nconst detectIsPlainVirtualNode = (vNode: unknown): vNode is PlainVirtualNode =>\r\n  detectIsTextVirtualNode(vNode) || detectIsCommentVirtualNode(vNode);\r\n\r\nconst createReplacer = () => new CommentVirtualNode(REPLACER);\r\n\r\nconst detectIsReplacer = (vNode: unknown) => detectIsCommentVirtualNode(vNode) && vNode.value === REPLACER;\r\n\r\nfunction getElementKey(inst: Instance): ElementKey | null {\r\n  return detectIsComponent(inst)\r\n    ? getComponentKey(inst)\r\n    : detectIsVirtualNodeFactory(inst)\r\n    ? getVirtualNodeFactoryKey(inst)\r\n    : detectIsTagVirtualNode(inst)\r\n    ? getTagVirtualNodeKey(inst)\r\n    : null;\r\n}\r\n\r\nfunction hasElementFlag(inst: Instance, flag: string) {\r\n  return detectIsComponent(inst)\r\n    ? hasComponentFlag(inst, flag)\r\n    : detectIsVirtualNodeFactory(inst)\r\n    ? hasVirtualNodeFactoryFlag(inst, flag)\r\n    : detectIsTagVirtualNode(inst)\r\n    ? hasTagVirtualNodeFlag(inst, flag)\r\n    : false;\r\n}\r\n\r\nfunction getElementType(inst: Instance): string | Function {\r\n  return detectIsComponent(inst)\r\n    ? inst.type\r\n    : detectIsVirtualNodeFactory(inst)\r\n    ? inst[ATTR_TYPE]\r\n    : detectIsTagVirtualNode(inst)\r\n    ? inst.name\r\n    : detectIsVirtualNode(inst)\r\n    ? inst.type\r\n    : null;\r\n}\r\n\r\nfunction hasChildrenProp(inst: Instance): inst is TagVirtualNode | Component {\r\n  return detectIsTagVirtualNode(inst) || detectIsComponent(inst);\r\n}\r\n\r\nfunction detectAreSameInstanceTypes(prevInst: Instance, nextInst: Instance, isComponentFactories = false) {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    if (process.env.NODE_ENV === 'development' && $$scope().getIsHot()) {\r\n      if (detectIsComponent(prevInst) && detectIsComponent(nextInst)) {\r\n        return prevInst.displayName === nextInst.displayName;\r\n      }\r\n    }\r\n  }\r\n\r\n  if (isComponentFactories) {\r\n    const pc = prevInst as Component;\r\n    const nc = nextInst as Component;\r\n\r\n    return pc.type === nc.type;\r\n  }\r\n\r\n  return getElementType(prevInst) === getElementType(nextInst);\r\n}\r\n\r\nfunction detectAreSameComponentTypesWithSameKeys(prevInst: Instance | null, nextInst: Instance | null) {\r\n  if (\r\n    prevInst &&\r\n    nextInst &&\r\n    detectIsComponent(prevInst) &&\r\n    detectIsComponent(nextInst) &&\r\n    detectAreSameInstanceTypes(prevInst, nextInst, true)\r\n  ) {\r\n    return getElementKey(prevInst) === getElementKey(nextInst);\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\ntype TextSource = string | number;\r\n\r\nexport type VirtualNodeFactory = () => VirtualNode;\r\n\r\nexport type TagVirtualNodeFactory = () => TagVirtualNode;\r\n\r\nexport type PlainVirtualNode = TextVirtualNode | CommentVirtualNode;\r\n\r\nexport type ViewOptions = {\r\n  as: string;\r\n  _void?: boolean;\r\n  [prop: string]: any;\r\n} & Partial<SlotProps> &\r\n  RefProps &\r\n  KeyProps &\r\n  FlagProps;\r\n\r\nexport enum NodeType {\r\n  TAG = 'TAG',\r\n  TEXT = 'TEXT',\r\n  COMMENT = 'COMMENT',\r\n}\r\n\r\nexport {\r\n  View,\r\n  Text,\r\n  Comment,\r\n  VirtualNode,\r\n  TagVirtualNode,\r\n  TextVirtualNode,\r\n  CommentVirtualNode,\r\n  createReplacer,\r\n  detectIsReplacer,\r\n  getElementKey,\r\n  hasElementFlag,\r\n  getElementType,\r\n  hasChildrenProp,\r\n  detectIsVirtualNode,\r\n  detectIsTagVirtualNode,\r\n  detectIsCommentVirtualNode,\r\n  detectIsTextVirtualNode,\r\n  detectIsPlainVirtualNode,\r\n  detectIsVirtualNodeFactory,\r\n  detectAreSameInstanceTypes,\r\n  detectAreSameComponentTypesWithSameKeys,\r\n};\r\n","import { detectIsString, detectIsFunction } from '../utils';\r\nimport { type TagVirtualNodeFactory, type ViewOptions, View } from '../view';\r\nimport { type ComponentFactory } from '../component';\r\n\r\nfunction createElement(\r\n  element: string | Function,\r\n  props: object,\r\n  ...slot: Array<any>\r\n): ComponentFactory | TagVirtualNodeFactory | null {\r\n  if (detectIsString(element)) {\r\n    const options = (props || {}) as ViewOptions;\r\n\r\n    options.as = element;\r\n    options.slot = slot;\r\n\r\n    return View(options);\r\n  }\r\n\r\n  if (detectIsFunction(element)) {\r\n    const options = (props || {}) as { slot: unknown };\r\n\r\n    options.slot = slot.length === 1 ? slot[0] : slot;\r\n\r\n    return element(options);\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nexport { createElement, createElement as h };\r\n","import { type Fiber } from '../fiber';\r\nimport { type VirtualNode } from '../view';\r\nimport { type Callback } from '../shared';\r\n\r\nexport type Platform = {\r\n  createElement: <N>(vNode: VirtualNode) => N;\r\n  insertElement: <N>(node: N, idx: number, parent: N) => void;\r\n  raf: typeof requestAnimationFrame;\r\n  caf: typeof cancelAnimationFrame;\r\n  spawn: (callback: Callback) => void;\r\n  commit: (fiber: Fiber) => void;\r\n  finishCommit: () => void;\r\n  detectIsDynamic: () => boolean;\r\n  detectIsPortal: (instance: unknown) => boolean;\r\n  unmountPortal: (fiber: Fiber) => void;\r\n  chunk: (fiber: Fiber) => void;\r\n};\r\n\r\nconst defaultRealisation = () => {\r\n  throw new Error('Function not installed by renderer!');\r\n};\r\n\r\nconst platform: Platform = {\r\n  createElement: defaultRealisation,\r\n  insertElement: defaultRealisation,\r\n  raf: defaultRealisation,\r\n  caf: defaultRealisation,\r\n  spawn: defaultRealisation,\r\n  commit: defaultRealisation,\r\n  finishCommit: defaultRealisation,\r\n  detectIsDynamic: defaultRealisation,\r\n  detectIsPortal: defaultRealisation,\r\n  unmountPortal: defaultRealisation,\r\n  chunk: defaultRealisation,\r\n};\r\n\r\nconst detectIsServer = () => !platform.detectIsDynamic();\r\n\r\nexport { platform, detectIsServer };\r\n","import { type SubscriberWithValue } from '../shared';\r\n\r\ntype EventName = 'finish' | 'chunk';\r\n\r\nclass EventEmitter<E extends string = EventName, T = unknown> {\r\n  private subscribers: Map<Partial<E>, Set<SubscriberWithValue<unknown>>> = new Map();\r\n\r\n  on<T>(e: E, fn: SubscriberWithValue<T>) {\r\n    !this.subscribers.has(e) && this.subscribers.set(e, new Set());\r\n    this.subscribers.get(e).add(fn);\r\n\r\n    return () => this.subscribers.has(e) && this.subscribers.get(e).delete(fn);\r\n  }\r\n\r\n  emit(e: E, data?: T) {\r\n    this.subscribers.has(e) && this.subscribers.get(e).forEach(x => x(data));\r\n  }\r\n\r\n  kill() {\r\n    this.subscribers = new Map();\r\n  }\r\n\r\n  __getSize() {\r\n    return this.subscribers.size;\r\n  }\r\n}\r\n\r\nexport { EventEmitter };\r\n","import type { Callback, ElementKey, AppResources, AppResource } from '../shared';\r\nimport { type SetPendingStatus } from '../start-transition';\r\nimport { platform, detectIsServer } from '../platform';\r\nimport { EventEmitter } from '../emitter';\r\nimport { type Fiber } from '../fiber';\r\n\r\nclass Scope {\r\n  private root: Fiber = null;\r\n  private wip: Fiber = null;\r\n  private cursor: Fiber = null;\r\n  private unit: Fiber = null;\r\n  private mountDeep = true;\r\n  private mountLevel = 0;\r\n  private mountNav: Record<number, number> = {};\r\n  private events = new Map<string, WeakMap<object, Function>>();\r\n  private unsubs = new Set<Callback>();\r\n  private actions: Actions = {};\r\n  private candidates = new Set<Fiber>();\r\n  private deletions = new Set<Fiber>();\r\n  private cancels: Array<Callback> = [];\r\n  private asyncEffects = new Set<Callback>();\r\n  private layoutEffects = new Set<Callback>();\r\n  private insertionEffects = new Set<Callback>();\r\n  private resourceId = 0;\r\n  private resources: AppResources = new Map();\r\n  private defers: Array<() => Promise<unknown>> = [];\r\n  private setPendingStatus: SetPendingStatus = null;\r\n  private isLayoutEffectsZone = false;\r\n  private isInsertionEffectsZone = false;\r\n  private isUpdateZone = false;\r\n  private isBatchZone = false;\r\n  private isHydrateZone = false;\r\n  private isStreamZone = false;\r\n  private isTransitionZone = false;\r\n  private isEventZone = false;\r\n  private isHot = false;\r\n  private isDynamic = platform.detectIsDynamic();\r\n  private isServer = detectIsServer();\r\n  private emitter = new EventEmitter();\r\n\r\n  private resetActions() {\r\n    this.actions = {};\r\n  }\r\n\r\n  getActionsById(id: number) {\r\n    return this.actions[id];\r\n  }\r\n\r\n  addActionMap(id: number, map: Record<ElementKey, Fiber>) {\r\n    this.actions[id] = {\r\n      map,\r\n      replace: null,\r\n      insert: null,\r\n      remove: null,\r\n      move: null,\r\n      stable: null,\r\n    };\r\n  }\r\n\r\n  addReplaceAction(id: number, nextKey: ElementKey) {\r\n    !this.actions[id].replace && (this.actions[id].replace = {});\r\n    this.actions[id].replace[nextKey] = true;\r\n  }\r\n\r\n  addInsertAction(id: number, nextKey: ElementKey) {\r\n    !this.actions[id].insert && (this.actions[id].insert = {});\r\n    this.actions[id].insert[nextKey] = true;\r\n  }\r\n\r\n  addRemoveAction(id: number, prevKey: ElementKey) {\r\n    !this.actions[id].remove && (this.actions[id].remove = {});\r\n    this.actions[id].remove[prevKey] = true;\r\n  }\r\n\r\n  addMoveAction(id: number, nextKey: ElementKey) {\r\n    !this.actions[id].move && (this.actions[id].move = {});\r\n    this.actions[id].move[nextKey] = true;\r\n  }\r\n\r\n  addStableAction(id: number, nextKey: ElementKey) {\r\n    !this.actions[id].stable && (this.actions[id].stable = {});\r\n    this.actions[id].stable[nextKey] = true;\r\n  }\r\n\r\n  copy() {\r\n    const scope = new Scope();\r\n\r\n    scope.root = null;\r\n    scope.wip = null;\r\n    scope.cursor = null;\r\n    scope.unit = this.unit;\r\n    scope.mountDeep = this.mountDeep;\r\n    scope.mountLevel = this.mountLevel;\r\n    scope.mountNav = { ...this.mountNav };\r\n    scope.events = this.events;\r\n    scope.unsubs = this.unsubs;\r\n    scope.actions = { ...this.actions };\r\n    scope.candidates = new Set([...this.candidates]);\r\n    scope.deletions = new Set([...this.deletions]);\r\n    scope.asyncEffects = new Set([...this.asyncEffects]);\r\n    scope.layoutEffects = new Set([...this.layoutEffects]);\r\n    scope.isUpdateZone = this.isUpdateZone;\r\n    scope.emitter = this.emitter;\r\n\r\n    return scope;\r\n  }\r\n\r\n  getRoot() {\r\n    return this.root;\r\n  }\r\n\r\n  setRoot(fiber: Fiber) {\r\n    this.root = fiber;\r\n  }\r\n\r\n  getWorkInProgress() {\r\n    return this.wip;\r\n  }\r\n\r\n  setWorkInProgress(fiber: Fiber) {\r\n    this.wip = fiber;\r\n  }\r\n\r\n  getNextUnitOfWork() {\r\n    return this.unit;\r\n  }\r\n\r\n  setNextUnitOfWork(fiber: Fiber) {\r\n    this.unit = fiber;\r\n  }\r\n\r\n  getCursorFiber() {\r\n    return this.cursor;\r\n  }\r\n\r\n  setCursorFiber(fiber: Fiber) {\r\n    this.cursor = fiber;\r\n  }\r\n\r\n  navToChild() {\r\n    this.mountLevel = this.mountLevel + 1;\r\n    this.mountNav[this.mountLevel] = 0;\r\n  }\r\n\r\n  navToSibling() {\r\n    this.mountNav[this.mountLevel] = this.mountNav[this.mountLevel] + 1;\r\n  }\r\n\r\n  navToParent() {\r\n    this.mountLevel = this.mountLevel - 1;\r\n  }\r\n\r\n  navToPrev() {\r\n    const idx = this.getMountIndex();\r\n\r\n    if (idx === 0) {\r\n      this.navToParent();\r\n      this.setMountDeep(true);\r\n    } else {\r\n      this.mountNav[this.mountLevel] = this.mountNav[this.mountLevel] - 1;\r\n      this.setMountDeep(false);\r\n    }\r\n  }\r\n\r\n  getMountIndex() {\r\n    return this.mountNav[this.mountLevel];\r\n  }\r\n\r\n  getMountDeep() {\r\n    return this.mountDeep;\r\n  }\r\n\r\n  setMountDeep(value: boolean) {\r\n    this.mountDeep = value;\r\n  }\r\n\r\n  resetMount() {\r\n    this.mountLevel = 0;\r\n    this.mountNav = {};\r\n    this.mountDeep = true;\r\n  }\r\n\r\n  getEvents() {\r\n    return this.events;\r\n  }\r\n\r\n  addEventUnsubscriber(fn: Callback) {\r\n    this.unsubs.add(fn);\r\n  }\r\n\r\n  unsubscribeEvents() {\r\n    this.unsubs.forEach(x => x());\r\n    this.unsubs = new Set();\r\n  }\r\n\r\n  getCandidates() {\r\n    return this.candidates;\r\n  }\r\n\r\n  addCandidate(fiber: Fiber) {\r\n    this.candidates.add(fiber);\r\n  }\r\n\r\n  resetCandidates() {\r\n    this.candidates = new Set();\r\n  }\r\n\r\n  getDeletions() {\r\n    return this.deletions;\r\n  }\r\n\r\n  hasDeletion(fiber: Fiber) {\r\n    let nextFiber = fiber;\r\n\r\n    while (nextFiber) {\r\n      if (this.deletions.has(nextFiber)) return true;\r\n      nextFiber = nextFiber.parent;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  addDeletion(fiber: Fiber) {\r\n    !this.hasDeletion(fiber) && this.deletions.add(fiber);\r\n  }\r\n\r\n  resetDeletions() {\r\n    this.deletions = new Set();\r\n  }\r\n\r\n  addAsyncEffect(fn: Callback) {\r\n    this.asyncEffects.add(fn);\r\n  }\r\n\r\n  resetAsyncEffects() {\r\n    this.asyncEffects = new Set();\r\n  }\r\n\r\n  runAsyncEffects() {\r\n    if (!this.isDynamic) return;\r\n    const effects = this.asyncEffects;\r\n    effects.size > 0 && setTimeout(() => effects.forEach(fn => fn()));\r\n  }\r\n\r\n  addLayoutEffect(fn: Callback) {\r\n    this.layoutEffects.add(fn);\r\n  }\r\n\r\n  resetLayoutEffects() {\r\n    this.layoutEffects = new Set();\r\n  }\r\n\r\n  runLayoutEffects() {\r\n    if (!this.isDynamic) return;\r\n    this.setIsLayoutEffectsZone(true);\r\n    this.layoutEffects.forEach(fn => fn());\r\n    this.setIsLayoutEffectsZone(false);\r\n  }\r\n\r\n  addInsertionEffect(fn: Callback) {\r\n    this.insertionEffects.add(fn);\r\n  }\r\n\r\n  resetInsertionEffects() {\r\n    this.insertionEffects = new Set();\r\n  }\r\n\r\n  runInsertionEffects() {\r\n    if (!this.isDynamic) return;\r\n    this.setIsInsertionEffectsZone(true);\r\n    this.insertionEffects.forEach(fn => fn());\r\n    this.setIsInsertionEffectsZone(false);\r\n  }\r\n\r\n  addCancel(fn: Callback) {\r\n    this.cancels.push(fn);\r\n  }\r\n\r\n  applyCancels() {\r\n    for (let i = this.cancels.length - 1; i >= 0; i--) {\r\n      this.cancels[i]();\r\n    }\r\n  }\r\n\r\n  resetCancels() {\r\n    this.cancels = [];\r\n  }\r\n\r\n  getIsLayoutEffectsZone() {\r\n    return this.isLayoutEffectsZone;\r\n  }\r\n\r\n  setIsLayoutEffectsZone(value: boolean) {\r\n    this.isLayoutEffectsZone = value;\r\n  }\r\n\r\n  getIsInsertionEffectsZone() {\r\n    return this.isInsertionEffectsZone;\r\n  }\r\n\r\n  setIsInsertionEffectsZone(value: boolean) {\r\n    this.isInsertionEffectsZone = value;\r\n  }\r\n\r\n  getIsUpdateZone() {\r\n    return this.isUpdateZone;\r\n  }\r\n\r\n  setIsUpdateZone(value: boolean) {\r\n    this.isUpdateZone = value;\r\n  }\r\n\r\n  getIsBatchZone() {\r\n    return this.isBatchZone;\r\n  }\r\n\r\n  setIsBatchZone(value: boolean) {\r\n    this.isBatchZone = value;\r\n  }\r\n\r\n  getIsHydrateZone() {\r\n    return this.isHydrateZone;\r\n  }\r\n\r\n  setIsHydrateZone(value: boolean) {\r\n    this.isHydrateZone = value;\r\n  }\r\n\r\n  getIsStreamZone() {\r\n    return this.isStreamZone;\r\n  }\r\n\r\n  setIsStreamZone(value: boolean) {\r\n    this.isStreamZone = value;\r\n  }\r\n\r\n  getIsTransitionZone() {\r\n    return this.isTransitionZone;\r\n  }\r\n\r\n  setIsTransitionZone(value: boolean) {\r\n    this.isTransitionZone = value;\r\n  }\r\n\r\n  getIsEventZone() {\r\n    return this.isEventZone;\r\n  }\r\n\r\n  setIsEventZone(value: boolean) {\r\n    this.isEventZone = value;\r\n  }\r\n\r\n  getIsHot() {\r\n    return this.isHot;\r\n  }\r\n\r\n  setIsHot(value: boolean) {\r\n    this.isHot = value;\r\n  }\r\n\r\n  getPendingStatusSetter() {\r\n    return this.setPendingStatus;\r\n  }\r\n\r\n  setPendingStatusSetter(fn: SetPendingStatus) {\r\n    this.setPendingStatus = fn;\r\n  }\r\n\r\n  flush() {\r\n    !this.isUpdateZone && this.setRoot(this.wip); // !\r\n    this.setWorkInProgress(null);\r\n    this.setNextUnitOfWork(null);\r\n    this.setCursorFiber(null);\r\n    this.resetMount();\r\n    this.resetCandidates();\r\n    this.resetDeletions();\r\n    this.resetCancels();\r\n    this.resetInsertionEffects();\r\n    this.resetLayoutEffects();\r\n    this.resetAsyncEffects();\r\n    this.setIsHydrateZone(false);\r\n    this.setIsUpdateZone(false);\r\n    this.resetActions();\r\n  }\r\n\r\n  getEmitter() {\r\n    return this.emitter;\r\n  }\r\n\r\n  defer(fn: () => Promise<unknown>) {\r\n    this.defers.push(fn);\r\n  }\r\n\r\n  getDefers() {\r\n    return this.defers;\r\n  }\r\n\r\n  resetDefers() {\r\n    this.defers = [];\r\n  }\r\n\r\n  getResource(id: number) {\r\n    return this.resources.get(id);\r\n  }\r\n\r\n  setResource(id: number, res: AppResource) {\r\n    this.resources.set(id, res);\r\n  }\r\n\r\n  getResources() {\r\n    return this.resources;\r\n  }\r\n\r\n  getResourceId() {\r\n    return this.resourceId;\r\n  }\r\n\r\n  setResourceId(id: number) {\r\n    this.resourceId = id;\r\n  }\r\n\r\n  getNextResourceId() {\r\n    return ++this.resourceId;\r\n  }\r\n\r\n  runAfterCommit() {\r\n    this.resources = new Map();\r\n    this.isServer && (this.resourceId = 0);\r\n  }\r\n}\r\n\r\ntype Actions = Record<\r\n  number,\r\n  {\r\n    map: Record<ElementKey, Fiber>;\r\n    replace: Record<ElementKey, true>;\r\n    insert: Record<ElementKey, true>;\r\n    remove: Record<ElementKey, true>;\r\n    move: Record<ElementKey, true>;\r\n    stable: Record<ElementKey, true>;\r\n  }\r\n>;\r\n\r\nlet rootId: number = null;\r\nconst scopes = new Map<number, Scope>();\r\n\r\nconst getRootId = () => rootId;\r\n\r\nconst setRootId = (id: number) => {\r\n  rootId = id;\r\n  !scopes.has(rootId) && scopes.set(rootId, new Scope());\r\n};\r\n\r\nconst removeScope = (id: number) => scopes.delete(id);\r\n\r\nconst replaceScope = (scope: Scope, id: number = rootId) => {\r\n  Object.assign(scopes.get(id), scope);\r\n};\r\n\r\nconst $$scope = (id: number = rootId) => scopes.get(id);\r\n\r\nexport { type Scope, getRootId, setRootId, removeScope, replaceScope, $$scope };\r\n","import {\r\n  type ComponentFactory,\r\n  type StandardComponentProps,\r\n  type ShouldUpdate,\r\n  type ComponentInject,\r\n  $$inject,\r\n  detectIsComponent,\r\n} from '../component';\r\nimport type { SlotProps, RefProps } from '../shared';\r\n\r\nconst $$memo = Symbol('memo');\r\n\r\nconst defaultShouldUpdate = (props: {}, nextProps: {}): boolean => {\r\n  const keys = Object.keys(nextProps);\r\n\r\n  for (const key of keys) {\r\n    if (key !== 'slot' && nextProps[key] !== props[key]) return true;\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\nfunction memo<P extends object, R = unknown>(\r\n  factory: ComponentFactory<P, R>,\r\n  shouldUpdate: ShouldUpdate<P & SlotProps> = defaultShouldUpdate,\r\n) {\r\n  type P1 = P & Omit<StandardComponentProps, 'ref'> & RefProps<R>;\r\n\r\n  factory[$$inject] = {\r\n    token: $$memo,\r\n    shouldUpdate,\r\n  } as ComponentInject<P1>;\r\n\r\n  return factory as ComponentFactory<P1, R>;\r\n}\r\n\r\nconst detectIsMemo = (instance: unknown) => detectIsComponent(instance) && instance.token === $$memo;\r\n\r\nexport { memo, detectIsMemo };\r\n","import { type VirtualNodeFactory, detectIsVirtualNodeFactory } from '../view';\r\nimport { type Component, detectIsComponent, component } from '../component';\r\nimport { type Hook, type HookValue } from '../fiber';\r\nimport { detectAreDepsDifferent } from '../utils';\r\nimport { $$scope } from '../scope';\r\nimport { memo } from '../memo';\r\n\r\ntype GetMemoValue = () => Component | VirtualNodeFactory;\r\n\r\ntype MemoProps = {\r\n  deps: Array<any>;\r\n  getValue: GetMemoValue;\r\n};\r\n\r\nconst Memo = memo(\r\n  component<MemoProps>(({ getValue }) => getValue()),\r\n  (p, n) => detectAreDepsDifferent(p.deps, n.deps),\r\n);\r\n\r\nfunction detectIsElement<T>(value: T) {\r\n  return detectIsComponent(value) || detectIsVirtualNodeFactory(value);\r\n}\r\n\r\nfunction useMemo<T>(getValue: () => T, deps: Array<any>): T {\r\n  const fiber = $$scope().getCursorFiber();\r\n  const { hook } = fiber;\r\n  const { idx, values } = hook as Hook<HookValue<T>>;\r\n  const state =\r\n    values[idx] ||\r\n    (values[idx] = {\r\n      deps,\r\n      value: getValue(),\r\n    });\r\n  let value: T = null;\r\n  let $value: T = null;\r\n\r\n  if (detectIsElement(state.value)) {\r\n    value = state.value;\r\n    $value = Memo({ getValue: getValue as GetMemoValue, deps }) as unknown as T;\r\n  } else {\r\n    value = detectAreDepsDifferent(state.deps, deps) ? getValue() : state.value;\r\n    $value = value;\r\n  }\r\n\r\n  state.deps = deps;\r\n  state.value = value;\r\n  hook.idx++;\r\n\r\n  return $value;\r\n}\r\n\r\nexport { useMemo };\r\n","import { component, detectIsComponent } from '../component';\r\nimport type { KeyProps, SlotProps } from '../shared';\r\n\r\ntype FragmentProps = Required<SlotProps> & KeyProps;\r\n\r\nconst $$fragment = Symbol('fragment');\r\n\r\nconst Fragment = component<FragmentProps>(({ slot }) => slot || null, { token: $$fragment });\r\n\r\nconst detectIsFragment = (instance: unknown) => detectIsComponent(instance) && instance.token === $$fragment;\r\n\r\nexport { Fragment, detectIsFragment };\r\n","import { detectIsTagVirtualNode, detectIsPlainVirtualNode, detectAreSameComponentTypesWithSameKeys } from '../view';\r\nimport { type Instance, type Callback, type TimerId } from '../shared';\r\nimport { type Context, type ContextProviderValue } from '../context';\r\nimport { detectIsComponent } from '../component';\r\nimport { detectIsFunction } from '../utils';\r\nimport { type Atom } from '../atom';\r\nimport { $$scope } from '../scope';\r\n\r\nclass Fiber<N = NativeElement> {\r\n  id = 0;\r\n  cc = 0; // child fibers count\r\n  cec = 0; // child native elements count\r\n  idx = 0; // idx of fiber in the parent fiber\r\n  eidx = 0; // native element idx\r\n  mask = 0; // bit mask\r\n  element: N = null; // native element\r\n  tag: string = null; // effect tag (CREATE, UPDATE, DELETE, SKIP)\r\n  parent: Fiber<N> = null; // parent fiber\r\n  child: Fiber<N> = null; // child fiber\r\n  next: Fiber<N> = null; // next sibling fiber\r\n  alt: Fiber<N> = null; // alternate fiber (previous)\r\n  inst: Instance = null; // instance of component or virtual node\r\n  hook: Hook | null = null; // hook\r\n  provider: Map<Context, ContextProviderValue> = null; // provider of context\r\n  atoms: Map<Atom, Callback> = null;\r\n  marker: string; // for dev\r\n  batch: Batch;\r\n  catch: (error: Error) => void;\r\n\r\n  constructor(hook: Hook = null, provider: Fiber['provider'] = null, idx = 0) {\r\n    this.id = ++Fiber.nextId;\r\n    this.idx = idx;\r\n    hook && (this.hook = hook);\r\n    provider && (this.provider = provider);\r\n  }\r\n\r\n  mutate(fiber: Partial<Fiber<N>>) {\r\n    const keys = Object.keys(fiber);\r\n\r\n    for (const key of keys) {\r\n      this[key] = fiber[key];\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  markHost(mask: number) {\r\n    this.mask |= mask;\r\n    this.parent && !(this.parent.mask & mask) && this.parent.markHost(mask);\r\n  }\r\n\r\n  increment(count = 1, force = false) {\r\n    if (!this.parent) return;\r\n    const $scope = $$scope();\r\n    const isUpdateZone = $scope.getIsUpdateZone();\r\n    const wipFiber = $scope.getWorkInProgress();\r\n    const stop = isUpdateZone && wipFiber.parent === this.parent;\r\n\r\n    if (\r\n      detectIsPlainVirtualNode(this.inst) ||\r\n      (detectIsTagVirtualNode(this.inst) && this.inst.children?.length === 0)\r\n    ) {\r\n      this.cec = 1;\r\n    }\r\n\r\n    if (isUpdateZone && stop && !force) return;\r\n\r\n    this.parent.cec += count;\r\n\r\n    if (!this.parent.element) {\r\n      this.parent.increment(count);\r\n    }\r\n  }\r\n\r\n  setError(error: Error) {\r\n    if (detectIsFunction(this.catch)) {\r\n      this.catch(error);\r\n    } else if (this.parent) {\r\n      this.parent.setError(error);\r\n    }\r\n  }\r\n\r\n  static setNextId(id: number) {\r\n    Fiber.nextId = id;\r\n  }\r\n\r\n  private static nextId = 0;\r\n}\r\n\r\nclass Hook<T = any> {\r\n  id = 0;\r\n  idx = 0;\r\n  values: Array<T> = [];\r\n  owner: Fiber = null;\r\n  private static nextId = 0;\r\n\r\n  constructor() {\r\n    this.id = ++Hook.nextId;\r\n  }\r\n}\r\n\r\nfunction getHook(alt: Fiber, prevInst: Instance, nextInst: Instance): Hook | null {\r\n  if (alt && detectAreSameComponentTypesWithSameKeys(prevInst, nextInst)) return alt.hook;\r\n  if (detectIsComponent(nextInst)) return new Hook();\r\n\r\n  return null;\r\n}\r\n\r\ntype Batch = {\r\n  timer: TimerId;\r\n  changes: Array<Callback>;\r\n};\r\n\r\nexport type NativeElement = unknown;\r\nexport type HookValue<T = any> = { deps: Array<any>; value: T };\r\n\r\nexport { Fiber, Hook, getHook };\r\n","import {\r\n  DELETE_EFFECT_TAG,\r\n  UPDATE_EFFECT_TAG,\r\n  SKIP_EFFECT_TAG,\r\n  INSERTION_EFFECT_HOST_MASK,\r\n  LAYOUT_EFFECT_HOST_MASK,\r\n  ASYNC_EFFECT_HOST_MASK,\r\n  ATOM_HOST_MASK,\r\n  PORTAL_HOST_MASK,\r\n  MOVE_MASK,\r\n  HOOK_DELIMETER,\r\n} from '../constants';\r\nimport { Fiber } from '../fiber';\r\nimport { platform } from '../platform';\r\nimport { type TagVirtualNode, getElementKey, hasChildrenProp } from '../view';\r\nimport { type Scope } from '../scope';\r\nimport { type Component } from '../component';\r\nimport { detectIsMemo } from '../memo';\r\nimport { type Instance, type ElementKey } from '../shared';\r\nimport { createIndexKey } from '../utils';\r\n\r\nfunction walk<T = unknown>(fiber: Fiber<T>, onWalk: (fiber: Fiber<T>, skip: () => void, stop: () => void) => void) {\r\n  let shouldDeep = true;\r\n  let shouldStop = false;\r\n  const skip = () => (shouldDeep = false);\r\n  const stop = () => (shouldStop = true);\r\n  const stack: Array<Fiber<T>> = [fiber];\r\n\r\n  while (stack.length !== 0) {\r\n    const unit = stack.pop();\r\n\r\n    onWalk(unit, skip, stop);\r\n    if (shouldStop) break;\r\n    unit !== fiber && unit.next && stack.push(unit.next);\r\n    shouldDeep && unit.child && stack.push(unit.child);\r\n    shouldDeep = true;\r\n  }\r\n}\r\n\r\nfunction collectElements<T, P = T>(fiber: Fiber<T>, transform: (fiber: Fiber<T>) => P): Array<P> {\r\n  const elements: Array<P> = [];\r\n\r\n  walk<T>(fiber, (fiber, skip) => {\r\n    if (fiber.element) {\r\n      !platform.detectIsPortal(fiber.inst) && elements.push(transform(fiber));\r\n      return skip();\r\n    }\r\n  });\r\n\r\n  return elements;\r\n}\r\n\r\nfunction getFiberWithElement<T1, T2 = T1>(fiber: Fiber<T1>): Fiber<T2> {\r\n  let $fiber = fiber as unknown as Fiber<T2>;\r\n\r\n  while ($fiber) {\r\n    if ($fiber.element) return $fiber;\r\n    $fiber = $fiber.parent;\r\n  }\r\n\r\n  return $fiber;\r\n}\r\n\r\nfunction detectIsFiberAlive(fiber: Fiber) {\r\n  let $fiber = fiber;\r\n\r\n  while ($fiber) {\r\n    if ($fiber.tag === DELETE_EFFECT_TAG) return false;\r\n    $fiber = $fiber.parent;\r\n  }\r\n\r\n  return Boolean(fiber);\r\n}\r\n\r\nfunction createHookLocation(rootId: number, idx: number, fiber: Fiber) {\r\n  let $fiber = fiber;\r\n  let loc = `${fiber.idx}${HOOK_DELIMETER}${idx}`;\r\n\r\n  while ($fiber) {\r\n    $fiber = $fiber.parent;\r\n    $fiber && (loc = `${$fiber.idx}.${loc}`);\r\n  }\r\n\r\n  loc = `[${rootId}]${loc}`;\r\n\r\n  return loc;\r\n}\r\n\r\nfunction detectIsStableMemoTree(fiber: Fiber, $scope: Scope) {\r\n  if (!hasChildrenProp(fiber.inst)) return;\r\n  const actions = $scope.getActionsById(fiber.id);\r\n  const children = fiber.inst.children;\r\n\r\n  for (let i = 0; i < children.length; i++) {\r\n    const inst = children[i];\r\n    const key = getElementKey(inst);\r\n    if (key === null) return false;\r\n    const alt = actions.map[key];\r\n    if (!alt) return false;\r\n    const pc = alt.inst as Component;\r\n    const nc = inst as Component;\r\n    const isStable =\r\n      detectIsMemo(nc) && detectIsMemo(pc) && nc.type === pc.type && !nc.shouldUpdate(pc.props, nc.props);\r\n\r\n    if (!isStable) return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction tryOptStaticSlot(fiber: Fiber, alt: Fiber, $scope: Scope) {\r\n  const actions = $scope.getActionsById(fiber.id);\r\n  const inst = fiber.inst as Component | TagVirtualNode;\r\n\r\n  alt.element && (fiber.element = alt.element); //!\r\n\r\n  for (let i = 0; i < inst.children.length; i++) {\r\n    buildChildNode(inst.children, fiber, actions.map, i, fiber.eidx);\r\n  }\r\n\r\n  fiber.cc = inst.children.length;\r\n  $scope.setMountDeep(false);\r\n}\r\n\r\nfunction tryOptMemoSlot(fiber: Fiber, alt: Fiber, $scope: Scope) {\r\n  const actions = $scope.getActionsById(fiber.id);\r\n  const hasMove = Boolean(actions.move);\r\n  const hasRemove = Boolean(actions.remove);\r\n  const hasInsert = Boolean(actions.insert);\r\n  const hasReplace = Boolean(actions.insert);\r\n  const canOptimize = ((hasMove && !hasRemove) || (hasRemove && !hasMove)) && !hasInsert && !hasReplace;\r\n\r\n  if (!canOptimize || !detectIsStableMemoTree(fiber, $scope)) return;\r\n\r\n  hasMove && tryOptMov(fiber, alt, $scope);\r\n  hasRemove && tryOptRem(fiber, alt, $scope);\r\n}\r\n\r\nfunction tryOptMov(fiber: Fiber, alt: Fiber, $scope: Scope) {\r\n  const actions = $scope.getActionsById(fiber.id);\r\n\r\n  buildChildNodes(fiber, alt, $scope, (fiber, key) => {\r\n    if (!actions.move[key]) return;\r\n    fiber.alt = new Fiber().mutate(fiber);\r\n    fiber.tag = UPDATE_EFFECT_TAG;\r\n    fiber.mask |= MOVE_MASK;\r\n    $scope.addCandidate(fiber);\r\n  });\r\n}\r\n\r\nfunction tryOptRem(fiber: Fiber, alt: Fiber, $scope: Scope) {\r\n  buildChildNodes(fiber, alt, $scope);\r\n}\r\n\r\nfunction buildChildNodes(fiber: Fiber, alt: Fiber, $scope: Scope, onNode?: (fiber: Fiber, key: ElementKey) => void) {\r\n  const actions = $scope.getActionsById(fiber.id);\r\n  const inst = fiber.inst as Component | TagVirtualNode;\r\n  const children = inst.children;\r\n\r\n  alt.element && (fiber.element = alt.element); //!\r\n\r\n  for (let i = 0; i < children.length; i++) {\r\n    const key = getKey(children[i], i);\r\n    const $fiber = actions.map[key];\r\n\r\n    buildChildNode(children, fiber, actions.map, i, fiber.eidx);\r\n    onNode && onNode($fiber, key);\r\n  }\r\n\r\n  fiber.cc = children.length;\r\n  $scope.setMountDeep(false);\r\n}\r\n\r\nfunction buildChildNode(\r\n  children: Array<Instance>,\r\n  parent: Fiber,\r\n  altMap: Record<string, Fiber>,\r\n  idx: number,\r\n  startEidx: number,\r\n) {\r\n  const prevIdx = idx - 1;\r\n  const nextIdx = idx + 1;\r\n  const key = getKey(children[idx], idx);\r\n  const prevKey = getKey(children[prevIdx], prevIdx);\r\n  const nextKey = getKey(children[nextIdx], nextIdx);\r\n  const fiber = altMap[key];\r\n  const left = altMap[prevKey];\r\n  const right = altMap[nextKey];\r\n  const isFirst = idx === 0;\r\n  const isLast = idx === children.length - 1;\r\n\r\n  isFirst && (parent.child = fiber);\r\n  fiber.alt = null;\r\n  fiber.parent = parent;\r\n  fiber.tag = SKIP_EFFECT_TAG;\r\n  fiber.idx = idx;\r\n  left ? (fiber.eidx = left.eidx + (left.element ? 1 : left.cec)) : (fiber.eidx = startEidx);\r\n  right && (fiber.next = right);\r\n  isLast && (fiber.next = null);\r\n  notifyParents(fiber);\r\n}\r\n\r\nfunction getKey(inst: Instance, idx: number) {\r\n  const key = getElementKey(inst);\r\n  return key !== null ? key : createIndexKey(idx);\r\n}\r\n\r\nfunction notifyParents(fiber: Fiber, alt: Fiber = fiber) {\r\n  fiber.increment(alt.element ? 1 : alt.cec);\r\n  alt.mask & INSERTION_EFFECT_HOST_MASK && fiber.markHost(INSERTION_EFFECT_HOST_MASK);\r\n  alt.mask & LAYOUT_EFFECT_HOST_MASK && fiber.markHost(LAYOUT_EFFECT_HOST_MASK);\r\n  alt.mask & ASYNC_EFFECT_HOST_MASK && fiber.markHost(ASYNC_EFFECT_HOST_MASK);\r\n  alt.mask & ATOM_HOST_MASK && fiber.markHost(ATOM_HOST_MASK);\r\n  alt.mask & PORTAL_HOST_MASK && fiber.markHost(PORTAL_HOST_MASK);\r\n}\r\n\r\nexport {\r\n  walk,\r\n  collectElements,\r\n  getFiberWithElement,\r\n  detectIsFiberAlive,\r\n  createHookLocation,\r\n  tryOptStaticSlot,\r\n  tryOptMemoSlot,\r\n  notifyParents,\r\n};\r\n","import { detectIsFunction } from '../utils';\r\nimport { INSERTION_EFFECT_HOST_MASK, LAYOUT_EFFECT_HOST_MASK, ASYNC_EFFECT_HOST_MASK } from '../constants';\r\nimport { $$scope } from '../scope';\r\nimport { useMemo } from '../use-memo';\r\nimport { type Hook, type HookValue } from '../fiber';\r\n\r\nconst $$useEffect = Symbol('use-effect');\r\n\r\ntype UseEffectValue = {\r\n  token: Symbol;\r\n  cleanup: DropEffect;\r\n};\r\n\r\nfunction createEffect(token: Symbol, type: EffectType) {\r\n  function useEffect(effect: Effect, deps: Array<any> = [{}]) {\r\n    const $scope = $$scope();\r\n    const fiber = $scope.getCursorFiber();\r\n    const scope = useMemo<UseEffectValue>(() => ({ token, cleanup: undefined }), []);\r\n    const isInsertionEffect = type === EffectType.INSERTION;\r\n    const isLayoutEffect = type === EffectType.LAYOUT;\r\n    const isAsyncEffect = type === EffectType.ASYNC;\r\n\r\n    isInsertionEffect && fiber.markHost(INSERTION_EFFECT_HOST_MASK);\r\n    isLayoutEffect && fiber.markHost(LAYOUT_EFFECT_HOST_MASK);\r\n    isAsyncEffect && fiber.markHost(ASYNC_EFFECT_HOST_MASK);\r\n\r\n    useMemo(() => {\r\n      const runEffect = () => (scope.cleanup = effect());\r\n\r\n      isInsertionEffect && $scope.addInsertionEffect(runEffect);\r\n      isLayoutEffect && $scope.addLayoutEffect(runEffect);\r\n      isAsyncEffect && $scope.addAsyncEffect(runEffect);\r\n\r\n      detectIsFunction(scope.cleanup) && scope.cleanup();\r\n\r\n      return null;\r\n    }, deps);\r\n  }\r\n\r\n  function dropEffects(hook: Hook<HookValue<UseEffectValue>>) {\r\n    for (const { value: effect } of hook.values) {\r\n      effect && effect.token === token && detectIsFunction(effect.cleanup) && effect.cleanup();\r\n    }\r\n  }\r\n\r\n  return {\r\n    useEffect,\r\n    dropEffects,\r\n  };\r\n}\r\n\r\nexport type DropEffect = void | (() => void);\r\n\r\nexport type Effect = () => DropEffect;\r\n\r\nexport enum EffectType {\r\n  ASYNC = 'ASYNC',\r\n  LAYOUT = 'LAYOUT',\r\n  INSERTION = 'INSERTION',\r\n}\r\n\r\nconst { useEffect, dropEffects } = createEffect($$useEffect, EffectType.ASYNC);\r\n\r\nexport { useEffect, dropEffects, createEffect };\r\n","import { createEffect, EffectType } from '../use-effect';\r\n\r\nconst $$useLayoutEffect = Symbol('use-layout-effect');\r\nconst { useEffect: useLayoutEffect, dropEffects: dropLayoutEffects } = createEffect(\r\n  $$useLayoutEffect,\r\n  EffectType.LAYOUT,\r\n);\r\n\r\nexport { useLayoutEffect, dropLayoutEffects };\r\n","import { createEffect, EffectType } from '../use-effect';\r\n\r\nconst $$useInsertionEffect = Symbol('use-insertion-effect');\r\nconst { useEffect: useInsertionEffect, dropEffects: dropInsertionEffects } = createEffect(\r\n  $$useInsertionEffect,\r\n  EffectType.INSERTION,\r\n);\r\n\r\nexport { useInsertionEffect, dropInsertionEffects };\r\n","import { type Fiber } from '../fiber';\r\nimport { platform } from '../platform';\r\nimport { dropEffects } from '../use-effect';\r\nimport { dropLayoutEffects } from '../use-layout-effect';\r\nimport { dropInsertionEffects } from '../use-insertion-effect';\r\nimport { walk } from '../walk';\r\nimport { detectIsUndefined } from '../utils';\r\nimport { removeScope, $$scope } from '../scope';\r\nimport {\r\n  INSERTION_EFFECT_HOST_MASK,\r\n  LAYOUT_EFFECT_HOST_MASK,\r\n  ASYNC_EFFECT_HOST_MASK,\r\n  ATOM_HOST_MASK,\r\n  PORTAL_HOST_MASK,\r\n} from '../constants';\r\n\r\nconst combinedMask =\r\n  INSERTION_EFFECT_HOST_MASK | LAYOUT_EFFECT_HOST_MASK | ASYNC_EFFECT_HOST_MASK | ATOM_HOST_MASK | PORTAL_HOST_MASK;\r\n\r\nconst shouldUnmountFiber = (fiber: Fiber) => fiber.mask & combinedMask;\r\n\r\nfunction unmountFiber(fiber: Fiber) {\r\n  if (!shouldUnmountFiber(fiber)) return;\r\n  walk(fiber, (fiber, skip) => {\r\n    if (!shouldUnmountFiber(fiber)) return skip();\r\n\r\n    if (fiber.hook && fiber.hook.values.length > 0) {\r\n      fiber.mask & INSERTION_EFFECT_HOST_MASK && dropInsertionEffects(fiber.hook);\r\n      fiber.mask & LAYOUT_EFFECT_HOST_MASK && dropLayoutEffects(fiber.hook);\r\n      fiber.mask & ASYNC_EFFECT_HOST_MASK && dropEffects(fiber.hook);\r\n    }\r\n\r\n    if (fiber.atoms) {\r\n      for (const [_, cleanup] of fiber.atoms) {\r\n        cleanup();\r\n      }\r\n      fiber.atoms = null;\r\n    }\r\n\r\n    fiber.mask & PORTAL_HOST_MASK && platform.unmountPortal(fiber);\r\n  });\r\n}\r\n\r\nfunction unmountRoot(rootId: number, onCompleted: () => void) {\r\n  if (detectIsUndefined(rootId)) return;\r\n  const $scope = $$scope(rootId);\r\n\r\n  unmountFiber($scope.getRoot());\r\n  $scope.unsubscribeEvents();\r\n  removeScope(rootId);\r\n  onCompleted();\r\n}\r\n\r\nexport { unmountFiber, unmountRoot };\r\n","import { platform } from '../platform';\r\nimport {\r\n  CREATE_EFFECT_TAG,\r\n  UPDATE_EFFECT_TAG,\r\n  DELETE_EFFECT_TAG,\r\n  SKIP_EFFECT_TAG,\r\n  INSERTION_EFFECT_HOST_MASK,\r\n  LAYOUT_EFFECT_HOST_MASK,\r\n  ASYNC_EFFECT_HOST_MASK,\r\n  ATOM_HOST_MASK,\r\n  PORTAL_HOST_MASK,\r\n  MOVE_MASK,\r\n  FLUSH_MASK,\r\n  SHADOW_MASK,\r\n  Flag,\r\n} from '../constants';\r\nimport {\r\n  flatten,\r\n  error,\r\n  detectIsEmpty,\r\n  detectIsFalsy,\r\n  detectIsArray,\r\n  detectIsFunction,\r\n  detectIsTextBased,\r\n  createIndexKey,\r\n  trueFn,\r\n} from '../utils';\r\nimport { type Scope, setRootId, $$scope, replaceScope } from '../scope';\r\nimport { type Component, detectIsComponent } from '../component';\r\nimport { type ElementKey, type Instance } from '../shared';\r\nimport { Fiber, getHook, Hook } from '../fiber';\r\nimport {\r\n  Text,\r\n  detectIsVirtualNode,\r\n  detectIsVirtualNodeFactory,\r\n  getElementKey,\r\n  hasElementFlag,\r\n  hasChildrenProp,\r\n  detectIsReplacer,\r\n  createReplacer,\r\n  detectAreSameInstanceTypes,\r\n} from '../view';\r\nimport { detectIsMemo } from '../memo';\r\nimport {\r\n  walk,\r\n  getFiberWithElement,\r\n  detectIsFiberAlive,\r\n  notifyParents,\r\n  tryOptStaticSlot,\r\n  tryOptMemoSlot,\r\n} from '../walk';\r\nimport { type RestoreOptions, scheduler } from '../scheduler';\r\nimport { Fragment, detectIsFragment } from '../fragment';\r\nimport { unmountFiber } from '../unmount';\r\n\r\nlet hasPendingPromise = false;\r\nlet hasRenderError = false;\r\n\r\nexport type WorkLoop = (isAsync: boolean) => boolean;\r\n\r\nfunction workLoop(isAsync: boolean): boolean | null {\r\n  if (hasPendingPromise) return null;\r\n  if (hasRenderError) return false;\r\n  const $scope = $$scope();\r\n  const wipFiber = $scope.getWorkInProgress();\r\n  let unit = $scope.getNextUnitOfWork();\r\n  let shouldYield = false;\r\n  let hasMoreWork = Boolean(unit);\r\n\r\n  try {\r\n    while (unit && !shouldYield) {\r\n      unit = performUnitOfWork(unit, $scope);\r\n      $scope.setNextUnitOfWork(unit);\r\n      hasMoreWork = Boolean(unit);\r\n      shouldYield = isAsync && scheduler.shouldYield();\r\n      if (shouldYield && scheduler.hasPrimaryTask()) return fork($scope);\r\n    }\r\n\r\n    if (!unit && wipFiber) {\r\n      commit($scope);\r\n    }\r\n  } catch (err) {\r\n    if (err instanceof Promise) {\r\n      hasPendingPromise = true;\r\n      err.finally(() => {\r\n        hasPendingPromise = false;\r\n        !isAsync && workLoop(false);\r\n      });\r\n    } else {\r\n      hasRenderError = true;\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  return hasMoreWork;\r\n}\r\n\r\nfunction performUnitOfWork(fiber: Fiber, $scope: Scope): Fiber | null {\r\n  const wipFiber = $scope.getWorkInProgress();\r\n  const isDeepWalking = $scope.getMountDeep();\r\n  const isStream = $scope.getIsStreamZone();\r\n  const hasChildren = isDeepWalking && hasChildrenProp(fiber.inst) && fiber.inst.children.length > 0;\r\n\r\n  fiber.hook && (fiber.hook.idx = 0);\r\n\r\n  if (hasChildren) {\r\n    const child = mountChild(fiber, $scope);\r\n\r\n    isStream && platform.chunk(child);\r\n\r\n    return child;\r\n  } else {\r\n    while (fiber.parent && fiber !== wipFiber) {\r\n      const next = mountSibling(fiber, $scope);\r\n\r\n      isStream && platform.chunk(fiber);\r\n\r\n      if (next) {\r\n        isStream && platform.chunk(next);\r\n        return next;\r\n      }\r\n\r\n      fiber = fiber.parent;\r\n    }\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nfunction mountChild(parent: Fiber, $scope: Scope) {\r\n  $scope.navToChild();\r\n  const $inst = parent.inst;\r\n  const idx = 0;\r\n  const inst = hasChildrenProp($inst) ? $inst.children[idx] : null;\r\n  const alt = getAlternate(parent, inst, true, $scope);\r\n  const fiber = createFiber(alt, inst, idx);\r\n\r\n  fiber.parent = parent;\r\n  parent.child = fiber;\r\n  fiber.eidx = parent.element ? 0 : parent.eidx;\r\n\r\n  share(fiber, parent, inst, $scope);\r\n\r\n  return fiber;\r\n}\r\n\r\nfunction mountSibling(left: Fiber, $scope: Scope) {\r\n  $scope.navToSibling();\r\n  const $inst = left.parent.inst;\r\n  const idx = $scope.getMountIndex();\r\n  const inst = hasChildrenProp($inst) && $inst.children ? $inst.children[idx] : null;\r\n  const hasSibling = Boolean(inst);\r\n\r\n  if (!hasSibling) {\r\n    $scope.navToParent();\r\n    $scope.setMountDeep(false);\r\n\r\n    return null;\r\n  }\r\n\r\n  $scope.setMountDeep(true);\r\n  const alt = getAlternate(left, inst, false, $scope);\r\n  const fiber = createFiber(alt, inst, idx);\r\n\r\n  fiber.parent = left.parent;\r\n  left.next = fiber;\r\n  fiber.eidx = left.eidx + (left.element ? 1 : left.cec);\r\n\r\n  share(fiber, left, inst, $scope);\r\n\r\n  return fiber;\r\n}\r\n\r\nfunction share(fiber: Fiber, prev: Fiber, inst: Instance, $scope: Scope) {\r\n  const { alt } = fiber;\r\n  const shouldMount = alt && detectIsMemo(inst) ? shouldUpdate(fiber, inst, $scope) : true;\r\n\r\n  $scope.setCursorFiber(fiber);\r\n  fiber.inst = inst;\r\n\r\n  if (alt && alt.mask & MOVE_MASK) {\r\n    fiber.mask |= MOVE_MASK;\r\n    alt.mask &= ~MOVE_MASK;\r\n  }\r\n\r\n  fiber.hook && (fiber.hook.owner = fiber); // !\r\n\r\n  if (shouldMount) {\r\n    fiber.inst = mount(fiber, prev, $scope);\r\n    alt && reconcile(fiber, alt, $scope);\r\n    setup(fiber, alt);\r\n  } else if (fiber.mask & MOVE_MASK) {\r\n    fiber.tag = UPDATE_EFFECT_TAG;\r\n  }\r\n\r\n  $scope.addCandidate(fiber); // !\r\n}\r\n\r\nfunction createFiber(alt: Fiber, inst: Instance, idx: number) {\r\n  const fiber = new Fiber(getHook(alt, alt ? alt.inst : null, inst), alt ? alt.provider : null, idx);\r\n\r\n  fiber.alt = alt || null;\r\n\r\n  return fiber;\r\n}\r\n\r\nfunction getAlternate(fiber: Fiber, inst: Instance, fromChild: boolean, $scope: Scope) {\r\n  const key = getElementKey(inst);\r\n\r\n  if (key !== null) {\r\n    const parentId = fromChild ? fiber.id : fiber.parent.id;\r\n    const actions = $scope.getActionsById(parentId);\r\n\r\n    if (actions) {\r\n      const isMove = actions.move && Boolean(actions.move[key]);\r\n      const isStable = actions.stable && Boolean(actions.stable[key]);\r\n\r\n      if (isMove || isStable) {\r\n        const alt = actions.map[key];\r\n\r\n        isMove && (alt.mask |= MOVE_MASK);\r\n\r\n        return alt;\r\n      }\r\n\r\n      return null;\r\n    }\r\n  }\r\n\r\n  const alt = fiber.alt ? (fromChild ? fiber.alt.child || null : fiber.alt.next || null) : null;\r\n\r\n  return alt;\r\n}\r\n\r\nfunction reconcile(fiber: Fiber, alt: Fiber, $scope: Scope) {\r\n  const { id, inst } = fiber;\r\n  const areSameTypes = detectAreSameInstanceTypes(alt.inst, inst);\r\n\r\n  if (!areSameTypes) {\r\n    $scope.addDeletion(alt);\r\n  } else if (hasChildrenProp(alt.inst) && hasChildrenProp(inst) && alt.cc !== 0) {\r\n    const hasSameCount = alt.cc === inst.children.length;\r\n    const check = hasElementFlag(inst, Flag.SKIP_SCAN_OPT) ? !hasSameCount : true;\r\n\r\n    if (check) {\r\n      const { prevKeys, nextKeys, prevKeysMap, nextKeysMap, keyedFibersMap } = extractKeys(alt.child, inst.children);\r\n      const flush = nextKeys.length === 0;\r\n      let size = Math.max(prevKeys.length, nextKeys.length);\r\n      let p = 0;\r\n      let n = 0;\r\n\r\n      $scope.addActionMap(id, keyedFibersMap);\r\n\r\n      for (let i = 0; i < size; i++) {\r\n        const nextKey = nextKeys[i - n] ?? null;\r\n        const prevKey = prevKeys[i - p] ?? null;\r\n        const prevKeyFiber = keyedFibersMap[prevKey] || null;\r\n\r\n        if (nextKey !== prevKey) {\r\n          if (nextKey !== null && !prevKeysMap[nextKey]) {\r\n            if (prevKey !== null && !nextKeysMap[prevKey]) {\r\n              $scope.addReplaceAction(id, nextKey);\r\n              $scope.addDeletion(prevKeyFiber);\r\n            } else {\r\n              $scope.addInsertAction(id, nextKey);\r\n              p++;\r\n              size++;\r\n            }\r\n          } else if (!nextKeysMap[prevKey]) {\r\n            $scope.addRemoveAction(id, prevKey);\r\n            $scope.addDeletion(prevKeyFiber);\r\n            flush && (prevKeyFiber.mask |= FLUSH_MASK);\r\n            n++;\r\n            size++;\r\n          } else if (nextKeysMap[prevKey] && nextKeysMap[nextKey]) {\r\n            $scope.addMoveAction(id, nextKey);\r\n          }\r\n        } else if (nextKey !== null) {\r\n          $scope.addStableAction(id, nextKey);\r\n        }\r\n      }\r\n\r\n      hasElementFlag(inst, Flag.STATIC_SLOT_OPT) && tryOptStaticSlot(fiber, alt, $scope);\r\n      hasElementFlag(inst, Flag.MEMO_SLOT_OPT) && tryOptMemoSlot(fiber, alt, $scope);\r\n    }\r\n  }\r\n}\r\n\r\nfunction setup(fiber: Fiber, alt: Fiber) {\r\n  const inst = fiber.inst;\r\n  let isUpdate = false;\r\n\r\n  fiber.parent.tag === CREATE_EFFECT_TAG && (fiber.tag = fiber.parent.tag);\r\n  fiber.parent.mask & SHADOW_MASK && !fiber.parent.element && !detectIsReplacer(inst) && (fiber.mask |= SHADOW_MASK);\r\n  isUpdate =\r\n    alt &&\r\n    fiber.tag !== CREATE_EFFECT_TAG &&\r\n    detectAreSameInstanceTypes(alt.inst, inst) &&\r\n    getElementKey(alt.inst) === getElementKey(inst);\r\n  isUpdate && !fiber.element && alt.element && (fiber.element = alt.element);\r\n  fiber.tag = isUpdate ? UPDATE_EFFECT_TAG : CREATE_EFFECT_TAG;\r\n  hasChildrenProp(fiber.inst) && (fiber.cc = fiber.inst.children.length);\r\n  !fiber.element && detectIsVirtualNode(fiber.inst) && (fiber.element = platform.createElement(fiber.inst));\r\n  fiber.element && fiber.increment();\r\n}\r\n\r\nfunction shouldUpdate(fiber: Fiber, inst: Instance, $scope: Scope) {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    if ($scope.getIsHot()) return true;\r\n  }\r\n\r\n  const alt = fiber.alt;\r\n  const pc = alt.inst as Component;\r\n  const nc = inst as Component;\r\n\r\n  if (nc.type !== pc.type || nc.shouldUpdate(pc.props, nc.props)) return true;\r\n\r\n  $scope.setMountDeep(false);\r\n  fiber.tag = SKIP_EFFECT_TAG;\r\n  fiber.child = alt.child;\r\n  fiber.child.parent = fiber;\r\n  fiber.hook = alt.hook;\r\n  fiber.cc = alt.cc;\r\n  fiber.cec = alt.cec;\r\n  alt.element && (fiber.element = alt.element);\r\n  alt.provider && (fiber.provider = alt.provider);\r\n  alt.catch && (fiber.catch = alt.catch);\r\n  alt.atoms && (fiber.atoms = alt.atoms);\r\n\r\n  const diff = fiber.eidx - alt.eidx;\r\n  const deep = diff !== 0;\r\n\r\n  if (deep) {\r\n    walk(fiber.child, ($fiber, skip) => {\r\n      $fiber.eidx += diff;\r\n      if ($fiber.element) return skip();\r\n    });\r\n  }\r\n\r\n  notifyParents(fiber, alt);\r\n\r\n  return false;\r\n}\r\n\r\nfunction mount(fiber: Fiber, prev: Fiber, $scope: Scope) {\r\n  let inst = fiber.inst;\r\n  const isComponent = detectIsComponent(inst);\r\n  const component = inst as Component;\r\n\r\n  if (isComponent) {\r\n    try {\r\n      const id = $scope.getResourceId();\r\n      let result = component.type(component.props, component.ref);\r\n      const defers = $scope.getDefers();\r\n\r\n      if (defers.length > 0) {\r\n        const promise = Promise.all(defers.map(x => x()));\r\n\r\n        $scope.setResourceId(id);\r\n        $scope.resetDefers();\r\n        $scope.navToPrev();\r\n        $scope.setNextUnitOfWork(prev);\r\n        Fiber.setNextId(prev.id);\r\n\r\n        throw promise;\r\n      }\r\n\r\n      if (detectIsArray(result)) {\r\n        !detectIsFragment(component) && (result = Fragment({ slot: result }));\r\n      } else if (detectIsTextBased(result)) {\r\n        result = Text(result);\r\n      }\r\n\r\n      component.children = result as Array<Instance>;\r\n      platform.detectIsPortal(inst) && fiber.markHost(PORTAL_HOST_MASK);\r\n    } catch (err) {\r\n      if (err instanceof Promise) throw err;\r\n      component.children = [];\r\n      fiber.setError(err);\r\n      error(err);\r\n    }\r\n  } else if (detectIsVirtualNodeFactory(inst)) {\r\n    inst = inst();\r\n  }\r\n\r\n  if (hasChildrenProp(inst)) {\r\n    inst.children = flatten(inst.children, x => (detectIsTextBased(x) ? Text(x) : x || supportConditional(x)));\r\n    isComponent && component.children.length === 0 && component.children.push(createReplacer());\r\n  }\r\n\r\n  return inst;\r\n}\r\n\r\nfunction extractKeys(alt: Fiber, children: Array<Instance>) {\r\n  let nextFiber = alt;\r\n  let idx = 0;\r\n  const prevKeys: Array<ElementKey> = [];\r\n  const nextKeys: Array<ElementKey> = [];\r\n  const prevKeysMap: Record<ElementKey, boolean> = {};\r\n  const nextKeysMap: Record<ElementKey, boolean> = {};\r\n  const keyedFibersMap: Record<ElementKey, Fiber> = {};\r\n  const usedKeysMap: Record<ElementKey, boolean> = {};\r\n\r\n  while (nextFiber || idx < children.length) {\r\n    if (nextFiber) {\r\n      const key = getElementKey(nextFiber.inst);\r\n      const prevKey = detectIsEmpty(key) ? createIndexKey(idx) : key;\r\n\r\n      if (!prevKeysMap[prevKey]) {\r\n        prevKeysMap[prevKey] = true; // !\r\n        prevKeys.push(prevKey);\r\n      }\r\n\r\n      keyedFibersMap[prevKey] = nextFiber;\r\n    }\r\n\r\n    if (children[idx]) {\r\n      const inst = children[idx];\r\n      const key = getElementKey(inst);\r\n      const nextKey = detectIsEmpty(key) ? createIndexKey(idx) : key;\r\n\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        if (usedKeysMap[nextKey]) {\r\n          error(`[Dark]: The key of node [${nextKey}] already has been used!`, [inst]);\r\n        }\r\n      }\r\n\r\n      if (!nextKeysMap[nextKey]) {\r\n        nextKeysMap[nextKey] = true; // !\r\n        nextKeys.push(nextKey);\r\n      }\r\n\r\n      usedKeysMap[nextKey] = true;\r\n    }\r\n\r\n    nextFiber = nextFiber ? nextFiber.next : null;\r\n    idx++;\r\n  }\r\n\r\n  return {\r\n    prevKeys,\r\n    nextKeys,\r\n    prevKeysMap,\r\n    nextKeysMap,\r\n    keyedFibersMap,\r\n  };\r\n}\r\n\r\nfunction supportConditional(inst: Instance) {\r\n  return detectIsFalsy(inst) ? createReplacer() : inst;\r\n}\r\n\r\nfunction commit($scope: Scope) {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    process.env.NODE_ENV === 'development' && $scope.setIsHot(false);\r\n  }\r\n\r\n  const wipFiber = $scope.getWorkInProgress();\r\n  const deletions = $scope.getDeletions();\r\n  const candidates = $scope.getCandidates();\r\n  const isUpdateZone = $scope.getIsUpdateZone();\r\n  const unmounts: Array<Fiber> = [];\r\n  const combinedMask = INSERTION_EFFECT_HOST_MASK | LAYOUT_EFFECT_HOST_MASK | ASYNC_EFFECT_HOST_MASK | PORTAL_HOST_MASK;\r\n\r\n  // !\r\n  for (const fiber of deletions) {\r\n    const withNextTick = fiber.mask & ATOM_HOST_MASK && !(fiber.mask & combinedMask);\r\n\r\n    withNextTick ? unmounts.push(fiber) : unmountFiber(fiber);\r\n    fiber.tag = DELETE_EFFECT_TAG;\r\n    platform.commit(fiber);\r\n  }\r\n\r\n  isUpdateZone && sync(wipFiber);\r\n  $scope.runInsertionEffects();\r\n\r\n  for (const fiber of candidates) {\r\n    fiber.tag !== SKIP_EFFECT_TAG && platform.commit(fiber);\r\n    fiber.alt = null;\r\n    hasChildrenProp(fiber.inst) && (fiber.inst.children = null);\r\n  }\r\n\r\n  wipFiber.alt = null;\r\n  platform.finishCommit(); // !\r\n  $scope.runLayoutEffects();\r\n  $scope.runAsyncEffects();\r\n  unmounts.length > 0 && setTimeout(() => unmounts.forEach(x => unmountFiber(x)));\r\n  flush($scope);\r\n}\r\n\r\nfunction flush($scope: Scope, cancel = false) {\r\n  $scope.flush();\r\n  !cancel && $scope.getEmitter().emit('finish');\r\n  $scope.runAfterCommit(); // !\r\n}\r\n\r\nfunction sync(fiber: Fiber) {\r\n  const diff = fiber.cec - fiber.alt.cec;\r\n  if (diff === 0) return;\r\n  const parentFiber = getFiberWithElement(fiber.parent);\r\n  let isRight = false;\r\n\r\n  fiber.increment(diff, true);\r\n\r\n  walk(parentFiber.child, ($fiber, skip) => {\r\n    if ($fiber === fiber) {\r\n      isRight = true;\r\n      return skip();\r\n    }\r\n\r\n    $fiber.element && skip();\r\n    isRight && ($fiber.eidx += diff);\r\n  });\r\n}\r\n\r\nfunction fork($scope: Scope): false {\r\n  const $$scope$ = $scope.copy();\r\n  const wipFiber = $scope.getWorkInProgress();\r\n  const child = wipFiber.child;\r\n  child && (child.parent = null);\r\n  const restore = (options: RestoreOptions) => {\r\n    const { fiber: wipFiber, setValue, resetValue } = options;\r\n    const $scope = $$scope();\r\n\r\n    detectIsFunction(setValue) && setValue();\r\n    detectIsFunction(resetValue) && $$scope$.addCancel(resetValue);\r\n\r\n    wipFiber.alt = new Fiber().mutate(wipFiber);\r\n    wipFiber.tag = UPDATE_EFFECT_TAG;\r\n    wipFiber.child = child;\r\n    child && (child.parent = wipFiber);\r\n\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      wipFiber.marker = '✌️';\r\n    }\r\n\r\n    $$scope$.setRoot($scope.getRoot());\r\n    $$scope$.setWorkInProgress(wipFiber);\r\n    replaceScope($$scope$);\r\n  };\r\n\r\n  wipFiber.child = wipFiber.alt.child;\r\n  wipFiber.alt = null;\r\n  $scope.runInsertionEffects(); // !\r\n  $scope.applyCancels();\r\n  flush($scope, true);\r\n  scheduler.cancelTask(restore);\r\n\r\n  return false;\r\n}\r\n\r\nexport type CreateCallbackOptions = {\r\n  rootId: number;\r\n  isTransition?: boolean;\r\n  hook: Hook;\r\n  tools?: () => Tools;\r\n};\r\n\r\nfunction createCallback(options: CreateCallbackOptions) {\r\n  const { rootId, hook, isTransition, tools = $tools } = options;\r\n  const callback = (restore?: (options: RestoreOptions) => void) => {\r\n    setRootId(rootId); // !\r\n    const fromRestore = detectIsFunction(restore);\r\n    const { shouldUpdate, setValue, resetValue } = tools();\r\n    const $scope = $$scope();\r\n    const owner = hook.owner;\r\n    const fiber = owner.alt || owner;\r\n\r\n    if (!shouldUpdate() || !detectIsFiberAlive(fiber) || fromRestore) {\r\n      fromRestore && restore({ fiber, setValue, resetValue });\r\n      return;\r\n    }\r\n\r\n    detectIsFunction(setValue) && setValue();\r\n    detectIsFunction(resetValue) && isTransition && $scope.addCancel(resetValue);\r\n\r\n    fiber.alt = new Fiber().mutate(fiber);\r\n    fiber.tag = UPDATE_EFFECT_TAG;\r\n    fiber.cc = 0;\r\n    fiber.cec = 0;\r\n    fiber.child = null;\r\n\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      fiber.marker = '🔥';\r\n    }\r\n\r\n    $scope.setIsUpdateZone(true);\r\n    $scope.resetMount();\r\n    $scope.setWorkInProgress(fiber);\r\n    $scope.setCursorFiber(fiber);\r\n    fiber.inst = mount(fiber, null, $scope);\r\n    $scope.setNextUnitOfWork(fiber);\r\n  };\r\n\r\n  return callback;\r\n}\r\n\r\nexport type Tools = {\r\n  shouldUpdate: () => boolean;\r\n} & Pick<RestoreOptions, 'setValue' | 'resetValue'>;\r\n\r\nconst $tools = (): Tools => ({\r\n  shouldUpdate: trueFn,\r\n  setValue: null,\r\n  resetValue: null,\r\n});\r\n\r\nconst detectIsBusy = () => Boolean($$scope()?.getWorkInProgress());\r\n\r\nexport { Fiber, workLoop, createCallback, detectIsBusy };\r\n","import { type WorkLoop, workLoop, detectIsBusy } from '../workloop';\r\nimport { type SetPendingStatus } from '../start-transition';\r\nimport { type Callback } from '../shared';\r\nimport { type Fiber } from '../fiber';\r\nimport { ROOT, HOOK_DELIMETER, YIELD_INTERVAL, TaskPriority } from '../constants';\r\nimport { getTime, detectIsFunction, nextTick } from '../utils';\r\nimport { EventEmitter } from '../emitter';\r\nimport { platform } from '../platform';\r\n\r\nclass MessageChannel extends EventEmitter<PortEvent> {\r\n  port1: MessagePort = null;\r\n  port2: MessagePort = null;\r\n\r\n  constructor() {\r\n    super();\r\n    this.port1 = new MessagePort(this);\r\n    this.port2 = new MessagePort(this);\r\n  }\r\n}\r\n\r\nclass MessagePort {\r\n  channel: MessageChannel;\r\n  offs: Array<Callback> = [];\r\n\r\n  constructor(channel: MessageChannel) {\r\n    this.channel = channel;\r\n  }\r\n\r\n  on(event: PortEvent, callback: PortListener) {\r\n    const off = this.channel.on(event, callback);\r\n\r\n    this.offs.push(off);\r\n  }\r\n\r\n  postMessage(value: unknown) {\r\n    platform.spawn(() => {\r\n      this.channel.emit('message', value);\r\n    });\r\n  }\r\n\r\n  unref() {\r\n    this.offs.forEach(x => x());\r\n  }\r\n}\r\n\r\nclass Scheduler {\r\n  private queue: Record<TaskPriority, Array<Task>> = {\r\n    [TaskPriority.HIGH]: [],\r\n    [TaskPriority.NORMAL]: [],\r\n    [TaskPriority.LOW]: [],\r\n  };\r\n  private deadline = 0;\r\n  private task: Task = null;\r\n  private scheduledCallback: WorkLoop = null;\r\n  private isMessageLoopRunning = false;\r\n  private channel: MessageChannel = null;\r\n  private port: MessagePort = null;\r\n\r\n  constructor() {\r\n    this.channel = new MessageChannel();\r\n    this.port = this.channel.port2;\r\n    this.channel.port1.on('message', this.performWorkUntilDeadline.bind(this));\r\n  }\r\n\r\n  reset() {\r\n    this.deadline = 0;\r\n    this.task = null;\r\n    this.scheduledCallback = null;\r\n    this.isMessageLoopRunning = false;\r\n  }\r\n\r\n  shouldYield() {\r\n    return getTime() >= this.deadline;\r\n  }\r\n\r\n  schedule(callback: Callback, options?: ScheduleCallbackOptions) {\r\n    const {\r\n      priority = TaskPriority.NORMAL,\r\n      forceAsync = false,\r\n      isTransition = false,\r\n      createLocation,\r\n      setPendingStatus,\r\n    } = options || {};\r\n    const task = new Task(callback, priority, forceAsync);\r\n\r\n    task.setIsTransition(isTransition);\r\n    task.setPendingSetter(setPendingStatus);\r\n    task.setLocationCreator(createLocation || createRootLocation);\r\n    this.put(task);\r\n    this.execute();\r\n  }\r\n\r\n  hasPrimaryTask() {\r\n    if (!this.task.getIsTransition()) return false;\r\n    const { high, normal, low } = this.getQueues();\r\n    const hasPrimary = high.length > 0 || normal.length > 0;\r\n    const hasLow = low.length > 0;\r\n\r\n    if (hasPrimary || hasLow) {\r\n      const loc = this.task.createLocation();\r\n\r\n      if (hasPrimary) {\r\n        const has = Task.detectHasRelatedUpdate(loc, high, true) || Task.detectHasRelatedUpdate(loc, normal, true);\r\n\r\n        if (has) {\r\n          this.task.markAsUnnecessary();\r\n        }\r\n\r\n        return true;\r\n      }\r\n\r\n      if (hasLow) {\r\n        const has = Task.detectHasRelatedUpdate(loc, low);\r\n\r\n        if (has) {\r\n          this.task.markAsUnnecessary();\r\n\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  cancelTask(fn: TaskRestorer) {\r\n    if (this.task.getIsUnnecessary()) return this.complete(this.task);\r\n    this.task.setTaskRestorer(fn);\r\n    this.defer(this.task);\r\n  }\r\n\r\n  private complete(task: Task) {\r\n    task.pending(false);\r\n  }\r\n\r\n  private put(task: Task) {\r\n    const queue = this.queue[task.getPriority()];\r\n\r\n    if (task.getIsTransition()) {\r\n      const loc = task.createLocation();\r\n      const tasks = queue.filter(x => x.createLocation() !== loc);\r\n\r\n      queue.splice(0, queue.length, ...tasks);\r\n    }\r\n\r\n    queue.push(task);\r\n  }\r\n\r\n  private pick(queue: Array<Task>) {\r\n    if (queue.length === 0) return false;\r\n    this.task = queue.shift();\r\n\r\n    if (this.task.getIsTransition() && this.task.canPending()) {\r\n      const task = this.task;\r\n\r\n      task.markAsPending();\r\n      this.defer(this.task);\r\n      this.task = null;\r\n\r\n      nextTick(() => task.pending(true));\r\n\r\n      return true;\r\n    }\r\n\r\n    this.task.run();\r\n    this.task.getForceAsync() ? this.requestCallbackAsync(workLoop) : this.requestCallback(workLoop);\r\n\r\n    return true;\r\n  }\r\n\r\n  private execute() {\r\n    const isBusy = detectIsBusy();\r\n    const { high, normal, low } = this.getQueues();\r\n\r\n    if (!isBusy && !this.isMessageLoopRunning) {\r\n      this.pick(high) || this.pick(normal) || this.pick(low);\r\n    }\r\n  }\r\n\r\n  private requestCallbackAsync(callback: WorkLoop) {\r\n    this.scheduledCallback = callback;\r\n\r\n    if (!this.isMessageLoopRunning) {\r\n      this.isMessageLoopRunning = true;\r\n      this.port.postMessage(null);\r\n    }\r\n  }\r\n\r\n  private requestCallback(callback: WorkLoop) {\r\n    callback(false);\r\n    this.task = null;\r\n    this.execute();\r\n  }\r\n\r\n  private performWorkUntilDeadline() {\r\n    if (this.scheduledCallback) {\r\n      this.deadline = getTime() + YIELD_INTERVAL;\r\n      const hasMoreWork = this.scheduledCallback(true);\r\n\r\n      if (hasMoreWork) {\r\n        this.port.postMessage(null);\r\n      } else {\r\n        if (hasMoreWork === null) {\r\n          setTimeout(() => this.port.postMessage(null)); // has promise\r\n        } else {\r\n          this.complete(this.task);\r\n          this.reset();\r\n          this.execute();\r\n        }\r\n      }\r\n    } else {\r\n      this.isMessageLoopRunning = false;\r\n    }\r\n  }\r\n\r\n  private defer(task: Task) {\r\n    const { low } = this.getQueues();\r\n\r\n    low.unshift(task);\r\n  }\r\n\r\n  private getQueues() {\r\n    const high = this.queue[TaskPriority.HIGH];\r\n    const normal = this.queue[TaskPriority.NORMAL];\r\n    const low = this.queue[TaskPriority.LOW];\r\n\r\n    return {\r\n      high,\r\n      normal,\r\n      low,\r\n    };\r\n  }\r\n}\r\n\r\ntype TaskCallback = (fn: TaskRestorer) => void;\r\ntype TaskRestorer = (options: RestoreOptions) => void;\r\ntype LocationCreator = () => string;\r\n\r\nclass Task {\r\n  private id: number;\r\n  private priority: TaskPriority;\r\n  private forceAsync: boolean;\r\n  private isTransition: boolean;\r\n  private isPending: boolean;\r\n  private isUnnecessary: boolean;\r\n  private callback: TaskCallback;\r\n  private taskRestorer?: TaskRestorer = null;\r\n  private locationCreator?: LocationCreator;\r\n  private pendingSetter?: SetPendingStatus = null;\r\n  private static nextTaskId = 0;\r\n\r\n  constructor(callback: TaskCallback, priority: TaskPriority, forceAsync: boolean) {\r\n    this.id = ++Task.nextTaskId;\r\n    this.callback = callback;\r\n    this.priority = priority;\r\n    this.forceAsync = forceAsync;\r\n  }\r\n\r\n  getPriority() {\r\n    return this.priority;\r\n  }\r\n\r\n  getForceAsync() {\r\n    return this.forceAsync;\r\n  }\r\n\r\n  setIsTransition(value: boolean) {\r\n    this.isTransition = value;\r\n  }\r\n\r\n  getIsTransition() {\r\n    return this.isTransition;\r\n  }\r\n\r\n  run() {\r\n    this.callback(this.taskRestorer);\r\n    this.taskRestorer = null;\r\n  }\r\n\r\n  pending(value: boolean) {\r\n    this.isTransition && this.pendingSetter && this.pendingSetter(value);\r\n  }\r\n\r\n  markAsPending() {\r\n    this.isPending = true;\r\n  }\r\n\r\n  canPending() {\r\n    return !this.isPending && detectIsFunction(this.pendingSetter);\r\n  }\r\n\r\n  markAsUnnecessary() {\r\n    this.isUnnecessary = true;\r\n  }\r\n\r\n  getIsUnnecessary() {\r\n    return this.isUnnecessary;\r\n  }\r\n\r\n  setTaskRestorer(fn: TaskRestorer) {\r\n    this.taskRestorer = fn;\r\n  }\r\n\r\n  setLocationCreator(fn: LocationCreator) {\r\n    this.locationCreator = fn;\r\n  }\r\n\r\n  createLocation() {\r\n    return this.locationCreator();\r\n  }\r\n\r\n  setPendingSetter(fn: SetPendingStatus) {\r\n    this.pendingSetter = fn;\r\n  }\r\n\r\n  static detectHasRelatedUpdate(loc: string, tasks: Array<Task>, deep = false) {\r\n    const [$loc] = loc.split(HOOK_DELIMETER);\r\n\r\n    return tasks.some(x => {\r\n      const $$loc = x.createLocation();\r\n      const has = $$loc === loc || (deep && $$loc.length > loc.length && $$loc.indexOf($loc) !== -1);\r\n\r\n      return has;\r\n    });\r\n  }\r\n}\r\n\r\nconst createRootLocation: LocationCreator = () => ROOT;\r\n\r\ntype PortEvent = 'message';\r\ntype PortListener = (value: unknown) => void;\r\n\r\nexport type RestoreOptions = {\r\n  fiber: Fiber;\r\n  setValue?: () => void;\r\n  resetValue?: () => void;\r\n};\r\n\r\nexport type ScheduleCallbackOptions = {\r\n  priority?: TaskPriority;\r\n  forceAsync?: boolean;\r\n  isTransition?: boolean;\r\n  createLocation?: () => string;\r\n  setPendingStatus?: SetPendingStatus;\r\n  onCompleted?: () => void;\r\n};\r\n\r\nconst scheduler = new Scheduler();\r\n\r\nexport { scheduler };\r\n","import { type ScheduleCallbackOptions, scheduler } from '../scheduler';\r\nimport { type Tools, createCallback } from '../workloop';\r\nimport { getRootId, $$scope } from '../scope';\r\nimport { createHookLocation } from '../walk';\r\nimport { detectIsFunction } from '../utils';\r\nimport { TaskPriority } from '../constants';\r\nimport { addBatch } from '../batch';\r\nimport { type Hook } from '../fiber';\r\n\r\nfunction createUpdate(rootId: number, hook: Hook) {\r\n  const { idx } = hook;\r\n  const update = (tools?: () => Tools) => {\r\n    const $scope = $$scope();\r\n    if ($scope.getIsInsertionEffectsZone()) return;\r\n    const { owner } = hook;\r\n    const hasTools = detectIsFunction(tools);\r\n    const isTransition = $scope.getIsTransitionZone();\r\n    const isBatch = $scope.getIsBatchZone();\r\n    const isEvent = $scope.getIsEventZone();\r\n    const priority = isTransition ? TaskPriority.LOW : isEvent ? TaskPriority.HIGH : TaskPriority.NORMAL; // !\r\n    const forceAsync = isTransition;\r\n    const setPendingStatus = $scope.getPendingStatusSetter();\r\n    const callback = createCallback({\r\n      rootId,\r\n      hook,\r\n      isTransition,\r\n      tools: hasTools ? tools : undefined,\r\n    });\r\n    const createLocation = () => createHookLocation(rootId, idx, owner);\r\n    const callbackOptions: ScheduleCallbackOptions = {\r\n      priority,\r\n      forceAsync,\r\n      isTransition,\r\n      createLocation,\r\n      setPendingStatus,\r\n    };\r\n\r\n    if (isBatch) {\r\n      addBatch(\r\n        owner,\r\n        () => scheduler.schedule(callback, callbackOptions),\r\n        () => hasTools && tools().setValue(),\r\n      );\r\n    } else {\r\n      scheduler.schedule(callback, callbackOptions);\r\n    }\r\n  };\r\n\r\n  return update;\r\n}\r\n\r\nfunction useUpdate() {\r\n  const rootId = getRootId();\r\n  const fiber = $$scope().getCursorFiber();\r\n\r\n  return createUpdate(rootId, fiber.hook);\r\n}\r\n\r\nexport { createUpdate, useUpdate };\r\n","import { $$scope } from '../scope';\r\nimport { type Fiber } from '../fiber';\r\nimport { type Callback } from '../shared';\r\n\r\nfunction batch(callback: () => void) {\r\n  const $scope = $$scope();\r\n\r\n  $scope.setIsBatchZone(true);\r\n  callback();\r\n  $scope.setIsBatchZone(false);\r\n}\r\n\r\nfunction addBatch(fiber: Fiber, callback: Callback, change: Callback) {\r\n  const $scope = $$scope();\r\n\r\n  if ($scope.getIsTransitionZone()) {\r\n    callback();\r\n  } else {\r\n    const batch = fiber.batch || { timer: null, changes: [] };\r\n\r\n    fiber.batch = batch;\r\n    batch.changes.push(change);\r\n    batch.timer && clearTimeout(batch.timer);\r\n    batch.timer = setTimeout(() => {\r\n      batch.changes.splice(-1);\r\n      batch.changes.forEach(x => x());\r\n      fiber.batch = null;\r\n      callback();\r\n    });\r\n  }\r\n}\r\n\r\nexport { batch, addBatch };\r\n","import { useCallback } from '../use-callback';\r\nimport { detectIsFunction } from '../utils';\r\nimport { useUpdate } from '../use-update';\r\nimport { type Tools } from '../workloop';\r\nimport { useMemo } from '../use-memo';\r\nimport { $$scope } from '../scope';\r\nimport { trueFn } from '../utils';\r\n\r\ntype CreateToolsOptions<T> = {\r\n  next: Value<T>;\r\n  get: () => T;\r\n  set: (x: T) => void;\r\n  reset: (x: T) => void;\r\n  shouldUpdate?: (p: T, n: T) => boolean;\r\n};\r\n\r\nfunction createTools<T>(options: CreateToolsOptions<T>) {\r\n  const { get, set, reset, next, shouldUpdate: $shouldUpdate = trueFn } = options;\r\n  const $scope = $$scope();\r\n  const isBatch = $scope.getIsBatchZone();\r\n  const tools = (): Tools => {\r\n    const prevValue = get();\r\n    const newValue = detectIsFunction(next) ? next(prevValue) : next;\r\n    const shouldUpdate = () => isBatch || $shouldUpdate(prevValue, newValue);\r\n    const setValue = () => set(newValue);\r\n    const resetValue = () => reset(prevValue);\r\n\r\n    return { shouldUpdate, setValue, resetValue };\r\n  };\r\n\r\n  return tools;\r\n}\r\n\r\ntype Value<T> = T | ((prevValue: T) => T);\r\n\r\nfunction useState<T = unknown>(initialValue: T | (() => T)): [T, (value: Value<T>) => void] {\r\n  const update = useUpdate();\r\n  const scope = useMemo(\r\n    () => ({\r\n      value: detectIsFunction(initialValue) ? initialValue() : initialValue,\r\n    }),\r\n    [],\r\n  );\r\n  const setState = useCallback((next: Value<T>) => {\r\n    const tools = createTools({\r\n      next,\r\n      get: () => scope.value,\r\n      set: (x: T) => (scope.value = x),\r\n      reset: (x: T) => (scope.value = x),\r\n      shouldUpdate: (p: T, n: T) => !Object.is(p, n),\r\n    });\r\n\r\n    update(tools);\r\n  }, []);\r\n\r\n  return [scope.value, setState];\r\n}\r\n\r\nexport { createTools, useState };\r\n","import { useMemo } from '../use-memo';\r\n\r\nfunction useCallback<T = Function>(callback: T, deps: Array<any>): T {\r\n  const value = useMemo(() => callback, deps);\r\n\r\n  return value;\r\n}\r\n\r\nexport { useCallback };\r\n","import { detectIsObject, detectIsNull, detectIsFunction } from '../utils';\r\nimport type { Component, ComponentFactory } from '../component';\r\nimport type { RefProps, KeyProps, FlagProps } from '../shared';\r\nimport { useMemo } from '../use-memo';\r\n\r\nfunction forwardRef<P extends object, R>(\r\n  component: ComponentFactory<P, R>,\r\n): ComponentFactory<P & RefProps<R> & KeyProps & FlagProps, R> {\r\n  type Props = P & RefProps<R>;\r\n\r\n  return (props: Props) => {\r\n    const { ref, ...rest } = (props || {}) as Props;\r\n\r\n    return component(rest as P, ref) as Component<P, R>;\r\n  };\r\n}\r\n\r\nfunction detectIsMutableRef(ref: unknown): ref is MutableRef {\r\n  if (!detectIsObject(ref) || detectIsNull(ref)) return false;\r\n  const mutableRef = ref as MutableRef;\r\n\r\n  for (const key in mutableRef) {\r\n    if (key === 'current' && mutableRef.hasOwnProperty(key)) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nfunction applyRef<T>(ref: Ref<T>, current: T) {\r\n  if (detectIsFunction(ref)) {\r\n    ref(current);\r\n  } else if (detectIsMutableRef(ref)) {\r\n    ref.current = current;\r\n  }\r\n}\r\n\r\nfunction useRef<T>(initialValue: T = null): MutableRef<T> {\r\n  const ref = useMemo(() => ({ current: initialValue }), []) as MutableRef<T>;\r\n\r\n  return ref;\r\n}\r\n\r\nexport type MutableRef<T = unknown> = {\r\n  current: T;\r\n};\r\n\r\nexport type FunctionRef<T = unknown> = (ref: T) => void;\r\n\r\nexport type Ref<T = unknown> = MutableRef<T> | FunctionRef<T>;\r\n\r\nexport { forwardRef, detectIsMutableRef, applyRef, useRef };\r\n","import { type DarkElement, type Fiber, component, useMemo, $$scope, detectIsComponent } from '@dark-engine/core';\r\n\r\nimport type { TagNativeElement } from '../native-element';\r\n\r\nconst $$portal = Symbol('portal');\r\n\r\nfunction createPortal(slot: DarkElement, container: TagNativeElement) {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    if (!(container instanceof Element)) {\r\n      throw new Error(`[Dark]: createPortal receives only Element as container!`);\r\n    }\r\n  }\r\n\r\n  return Portal({ container, slot });\r\n}\r\n\r\ntype PortalProps = {\r\n  container: TagNativeElement;\r\n  slot: DarkElement;\r\n};\r\n\r\nconst Portal = component<PortalProps>(\r\n  props => {\r\n    const element = props.container;\r\n    const fiber = $$scope().getCursorFiber();\r\n\r\n    useMemo(() => (element.innerHTML = ''), []);\r\n\r\n    fiber.element = element;\r\n    props.container = null;\r\n\r\n    return props.slot;\r\n  },\r\n  { token: $$portal },\r\n);\r\n\r\nconst detectIsPortal = (instance: unknown) => detectIsComponent(instance) && instance.token === $$portal;\r\n\r\nconst getPortalContainer = (fiber: Fiber<TagNativeElement>): TagNativeElement | null =>\r\n  detectIsPortal(fiber.inst) ? fiber.element : null;\r\n\r\nfunction unmountPortal(fiber: Fiber<TagNativeElement>) {\r\n  const element = getPortalContainer(fiber);\r\n\r\n  element && (element.innerHTML = '');\r\n}\r\n\r\nexport { createPortal, unmountPortal, detectIsPortal };\r\n","import { detectIsFunction, $$scope, detectIsArray } from '@dark-engine/core';\r\n\r\nimport type { TagNativeElement } from '../native-element';\r\n\r\nexport type EventHandler<E extends Event = Event, T = unknown> =\r\n  | ((e: SyntheticEvent<E, T>) => void)\r\n  | [(...args: Array<any>) => void, ...args: Array<any>];\r\n\r\ntype BrowserEventConstructor = (type: string, event: Event) => void;\r\n\r\nclass SyntheticEvent<E extends Event, T = TagNativeElement> {\r\n  type = '';\r\n  sourceEvent: E = null;\r\n  target: T = null;\r\n  private propagation = true;\r\n\r\n  constructor(options: Pick<SyntheticEvent<E, T>, 'sourceEvent' | 'target'>) {\r\n    this.type = options.sourceEvent.type;\r\n    this.sourceEvent = options.sourceEvent;\r\n    this.target = options.target;\r\n  }\r\n\r\n  stopPropagation() {\r\n    this.propagation = false;\r\n    this.sourceEvent.stopPropagation();\r\n  }\r\n\r\n  preventDefault() {\r\n    this.sourceEvent.preventDefault();\r\n  }\r\n\r\n  getPropagation() {\r\n    return this.propagation;\r\n  }\r\n}\r\n\r\nfunction delegateEvent(target: Element, eventName: string, handler: EventHandler) {\r\n  const $scope = $$scope();\r\n  const eventsMap = $scope.getEvents();\r\n  const handlersMap = eventsMap.get(eventName);\r\n  const $handler = detectIsArray(handler) ? (e: Event) => handler[0](...handler.slice(1), e) : handler;\r\n\r\n  if (!handlersMap) {\r\n    const rootHandler = (event: Event) => {\r\n      const handler = eventsMap.get(eventName).get(event.target);\r\n      const target = event.target as TagNativeElement;\r\n      let $event: SyntheticEvent<Event> = null;\r\n\r\n      if (detectIsFunction(handler)) {\r\n        $event = new SyntheticEvent({ sourceEvent: event, target });\r\n\r\n        $scope.setIsEventZone(true);\r\n        handler($event);\r\n        $scope.setIsEventZone(false);\r\n      }\r\n\r\n      if (target.parentElement) {\r\n        const shouldPropagate = $event ? $event.getPropagation() : true;\r\n\r\n        if (shouldPropagate) {\r\n          const constructor = event.constructor as BrowserEventConstructor;\r\n\r\n          target.parentElement.dispatchEvent(new constructor(event.type, event));\r\n        }\r\n      }\r\n    };\r\n\r\n    eventsMap.set(eventName, new WeakMap([[target, $handler]]));\r\n    document.addEventListener(eventName, rootHandler, true);\r\n    $scope.addEventUnsubscriber(() => document.removeEventListener(eventName, rootHandler, true));\r\n  } else {\r\n    handlersMap.set(target, $handler);\r\n  }\r\n}\r\n\r\nconst detectIsEvent = (attrName: string) => attrName.startsWith('on');\r\n\r\nconst getEventName = (attrName: string) => attrName.slice(2, attrName.length).toLowerCase();\r\n\r\nexport { SyntheticEvent, delegateEvent, detectIsEvent, getEventName };\r\n","export const VERSION = '0.25.1';\r\nexport const STYLE_ATTR = 'style';\r\nexport const CLASS_ATTR = 'class';\r\nexport const CLASS_NAME_ATTR = 'className';\r\nexport const EXCLUDE_ATTR_MARK = '$';\r\n","import {\r\n  type Fiber,\r\n  type VirtualNode,\r\n  type TagVirtualNode,\r\n  type TextVirtualNode,\r\n  type CommentVirtualNode,\r\n  type PlainVirtualNode,\r\n  type Callback,\r\n  REF_ATTR,\r\n  ATTR_BLACK_LIST,\r\n  CREATE_EFFECT_TAG,\r\n  UPDATE_EFFECT_TAG,\r\n  DELETE_EFFECT_TAG,\r\n  SKIP_EFFECT_TAG,\r\n  MOVE_MASK,\r\n  FLUSH_MASK,\r\n  SHADOW_MASK,\r\n  detectIsUndefined,\r\n  detectIsBoolean,\r\n  detectIsObject,\r\n  NodeType,\r\n  detectIsTagVirtualNode,\r\n  detectIsTextVirtualNode,\r\n  detectIsPlainVirtualNode,\r\n  getFiberWithElement,\r\n  collectElements,\r\n  walk,\r\n  dummyFn,\r\n  $$scope,\r\n  applyRef,\r\n} from '@dark-engine/core';\r\n\r\nimport { detectIsPortal } from '../portal';\r\nimport { delegateEvent, detectIsEvent, getEventName } from '../events';\r\nimport { STYLE_ATTR, CLASS_ATTR, CLASS_NAME_ATTR, EXCLUDE_ATTR_MARK } from '../constants';\r\nimport type {\r\n  NativeElement,\r\n  TagNativeElement,\r\n  TextNativeElement,\r\n  CommentNativeElement,\r\n  NativeNode,\r\n  AttributeValue,\r\n} from '../native-element';\r\n\r\nexport type CSSProperties = Record<string, string | number>;\r\n\r\nlet moves: Array<Callback> = [];\r\nlet patches: Array<Callback> = [];\r\nlet trackUpdate: (nativeElement: NativeElement) => void = null;\r\nconst svgTagNames = new Set([\r\n  'svg',\r\n  'animate',\r\n  'animateMotion',\r\n  'animateTransform',\r\n  'circle',\r\n  'clipPath',\r\n  'defs',\r\n  'desc',\r\n  'ellipse',\r\n  'feBlend',\r\n  'feColorMatrix',\r\n  'feComponentTransfer',\r\n  'feComposite',\r\n  'feConvolveMatrix',\r\n  'feDiffuseLighting',\r\n  'feDisplacementMap',\r\n  'feDistantLight',\r\n  'feDropShadow',\r\n  'feFlood',\r\n  'feFuncA',\r\n  'feFuncB',\r\n  'feFuncG',\r\n  'feFuncR',\r\n  'feGaussianBlur',\r\n  'feImage',\r\n  'feMerge',\r\n  'feMergeNode',\r\n  'feMorphology',\r\n  'feOffset',\r\n  'fePointLight',\r\n  'feSpecularLighting',\r\n  'feSpotLight',\r\n  'feTile',\r\n  'feTurbulence',\r\n  'filter',\r\n  'foreignObject',\r\n  'g',\r\n  'image',\r\n  'line',\r\n  'linearGradient',\r\n  'marker',\r\n  'mask',\r\n  'metadata',\r\n  'mpath',\r\n  'path',\r\n  'pattern',\r\n  'polygon',\r\n  'polyline',\r\n  'radialGradient',\r\n  'rect',\r\n  'stop',\r\n  'switch',\r\n  'symbol',\r\n  'text',\r\n  'textPath',\r\n  'tspan',\r\n  'use',\r\n  'view',\r\n]);\r\nconst voidTagNames = new Set([\r\n  'area',\r\n  'base',\r\n  'br',\r\n  'col',\r\n  'embed',\r\n  'hr',\r\n  'img',\r\n  'input',\r\n  'link',\r\n  'meta',\r\n  'param',\r\n  'source',\r\n  'track',\r\n  'wbr',\r\n]);\r\n\r\nconst createNativeElementMap = {\r\n  [NodeType.TAG]: (vNode: VirtualNode): TagNativeElement => {\r\n    const tagNode = vNode as TagVirtualNode;\r\n    const name = tagNode.name;\r\n\r\n    return detectIsSvgElement(name)\r\n      ? document.createElementNS('http://www.w3.org/2000/svg', name)\r\n      : document.createElement(name);\r\n  },\r\n  [NodeType.TEXT]: (vNode: VirtualNode): TextNativeElement => {\r\n    return document.createTextNode((vNode as TextVirtualNode).value);\r\n  },\r\n  [NodeType.COMMENT]: (vNode: VirtualNode): CommentNativeElement => {\r\n    return document.createComment((vNode as CommentVirtualNode).value);\r\n  },\r\n};\r\n\r\nfunction createNativeElement(node: VirtualNode): NativeElement {\r\n  return createNativeElementMap[node.type](node);\r\n}\r\n\r\nfunction detectIsSvgElement(name: string) {\r\n  return svgTagNames.has(name);\r\n}\r\n\r\nfunction detectIsVoidElement(name: string) {\r\n  return voidTagNames.has(name);\r\n}\r\n\r\nfunction setObjectStyle(element: TagNativeElement, style: CSSProperties) {\r\n  const keys = Object.keys(style);\r\n\r\n  for (const key of keys) {\r\n    element.style.setProperty(key, String(style[key]));\r\n  }\r\n}\r\n\r\nfunction addAttributes(element: NativeElement, node: TagVirtualNode, isHydrateZone: boolean) {\r\n  const attrNames = Object.keys(node.attrs);\r\n  const tagElement = element as TagNativeElement;\r\n\r\n  for (const attrName of attrNames) {\r\n    const attrValue = node.attrs[attrName];\r\n\r\n    if (attrName[0] === EXCLUDE_ATTR_MARK) continue;\r\n\r\n    if (attrName === REF_ATTR) {\r\n      applyRef(attrValue, element);\r\n      continue;\r\n    }\r\n\r\n    if (attrName === CLASS_ATTR || attrName === CLASS_NAME_ATTR) {\r\n      toggleAttribute(tagElement, CLASS_ATTR, attrValue);\r\n      continue;\r\n    }\r\n\r\n    if (attrName === STYLE_ATTR && attrValue && detectIsObject(attrValue)) {\r\n      setObjectStyle(tagElement, attrValue as CSSProperties);\r\n      continue;\r\n    }\r\n\r\n    if (detectIsEvent(attrName)) {\r\n      delegateEvent(tagElement, getEventName(attrName), attrValue);\r\n    } else if (!isHydrateZone && !detectIsUndefined(attrValue) && !ATTR_BLACK_LIST[attrName]) {\r\n      const stop = patchProperties({\r\n        tagName: node.name,\r\n        element: tagElement,\r\n        attrValue,\r\n        attrName,\r\n      });\r\n\r\n      !stop && tagElement.setAttribute(attrName, attrValue);\r\n    }\r\n  }\r\n}\r\n\r\nfunction updateAttributes(element: NativeElement, prevNode: TagVirtualNode, nextNode: TagVirtualNode) {\r\n  const attrNames = getAttributeNames(prevNode, nextNode);\r\n  const tagElement = element as TagNativeElement;\r\n\r\n  for (const attrName of attrNames) {\r\n    const prevAttrValue = prevNode.attrs[attrName];\r\n    const nextAttrValue = nextNode.attrs[attrName];\r\n\r\n    if (attrName[0] === EXCLUDE_ATTR_MARK) continue;\r\n\r\n    if (attrName === REF_ATTR) {\r\n      applyRef(prevAttrValue, element);\r\n      continue;\r\n    }\r\n\r\n    if ((attrName === CLASS_ATTR || attrName === CLASS_NAME_ATTR) && prevAttrValue !== nextAttrValue) {\r\n      toggleAttribute(tagElement, CLASS_ATTR, nextAttrValue);\r\n      continue;\r\n    }\r\n\r\n    if (attrName === STYLE_ATTR && nextAttrValue && prevAttrValue !== nextAttrValue && detectIsObject(nextAttrValue)) {\r\n      setObjectStyle(tagElement, nextAttrValue as CSSProperties);\r\n      continue;\r\n    }\r\n\r\n    if (!detectIsUndefined(nextAttrValue)) {\r\n      if (detectIsEvent(attrName)) {\r\n        prevAttrValue !== nextAttrValue && delegateEvent(tagElement, getEventName(attrName), nextAttrValue);\r\n      } else if (!ATTR_BLACK_LIST[attrName] && prevAttrValue !== nextAttrValue) {\r\n        const stop = patchProperties({\r\n          tagName: nextNode.name,\r\n          element: tagElement,\r\n          attrValue: nextAttrValue,\r\n          attrName,\r\n        });\r\n\r\n        !stop && tagElement.setAttribute(attrName, nextAttrValue);\r\n      }\r\n    } else {\r\n      tagElement.removeAttribute(attrName);\r\n    }\r\n  }\r\n}\r\n\r\nfunction toggleAttribute(element: TagNativeElement, name: string, value: string) {\r\n  value ? element.setAttribute(name, value) : element.removeAttribute(name);\r\n}\r\n\r\nfunction getAttributeNames(prevNode: TagVirtualNode, nextNode: TagVirtualNode) {\r\n  const attrNames = new Set<string>();\r\n  const prevAttrs = Object.keys(prevNode.attrs);\r\n  const nextAttrs = Object.keys(nextNode.attrs);\r\n  const size = Math.max(prevAttrs.length, nextAttrs.length);\r\n\r\n  for (let i = 0; i < size; i++) {\r\n    attrNames.add(prevAttrs[i] || nextAttrs[i]);\r\n  }\r\n\r\n  return attrNames;\r\n}\r\n\r\ntype PatchPropertiesOptions = {\r\n  tagName: string;\r\n  element: TagNativeElement;\r\n  attrName: string;\r\n  attrValue: AttributeValue;\r\n};\r\n\r\nfunction patchProperties(options: PatchPropertiesOptions): boolean {\r\n  const { tagName, element, attrName, attrValue } = options;\r\n  const fn = patchPropertiesSpecialCasesMap[tagName];\r\n  let stop = fn ? fn(element, attrName, attrValue) : false;\r\n\r\n  if (canSetProperty(element, attrName)) {\r\n    element[attrName] = attrValue;\r\n  }\r\n\r\n  if (!stop && detectIsBoolean(attrValue)) {\r\n    stop = !attrName.includes('-');\r\n  }\r\n\r\n  return stop;\r\n}\r\n\r\nfunction canSetProperty(element: TagNativeElement, key: string) {\r\n  const prototype = Object.getPrototypeOf(element);\r\n  const descriptor = Object.getOwnPropertyDescriptor(prototype, key);\r\n\r\n  return Boolean(descriptor?.set);\r\n}\r\n\r\nconst patchPropertiesSpecialCasesMap: Record<\r\n  string,\r\n  (element: NativeElement, attrName: string, attrValue: AttributeValue) => boolean\r\n> = {\r\n  input: (element: HTMLInputElement, attrName: string, attrValue: AttributeValue) => {\r\n    if (attrName === 'value') {\r\n      patches.push(() => {\r\n        detectIsBoolean(attrValue) ? (element.checked = attrValue) : (element.value = String(attrValue));\r\n      });\r\n    } else if (attrName === 'autoFocus') {\r\n      patches.push(() => {\r\n        element.autofocus = Boolean(attrValue);\r\n        element.autofocus && element.focus();\r\n      });\r\n    }\r\n\r\n    return false;\r\n  },\r\n  textarea: (element: HTMLTextAreaElement, attrName: string, attrValue: AttributeValue) => {\r\n    if (attrName === 'value') {\r\n      element.innerText = String(attrValue);\r\n\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  },\r\n};\r\n\r\nfunction commitCreation(fiber: Fiber<NativeElement>) {\r\n  const parentFiber = getFiberWithElement<NativeElement, TagNativeElement>(fiber.parent);\r\n  const parentElement = parentFiber.element;\r\n  const childNodes = parentElement.childNodes;\r\n  const isHydrateZone = $$scope().getIsHydrateZone();\r\n\r\n  if (isHydrateZone) {\r\n    const nativeElement = childNodes[fiber.eidx] as NativeElement;\r\n\r\n    if (\r\n      detectIsTextVirtualNode(fiber.inst) &&\r\n      nativeElement instanceof Text &&\r\n      fiber.inst.value.length !== nativeElement.length\r\n    ) {\r\n      nativeElement.splitText(fiber.inst.value.length);\r\n    }\r\n\r\n    fiber.element = nativeElement;\r\n  } else {\r\n    if (!(fiber.mask & SHADOW_MASK)) {\r\n      if (childNodes.length === 0 || fiber.eidx > childNodes.length - 1) {\r\n        !detectIsVoidElement((parentFiber.inst as TagVirtualNode).name) &&\r\n          appendNativeElement(fiber.element, parentElement);\r\n      } else {\r\n        insertNativeElement(fiber.element, parentElement.childNodes[fiber.eidx], parentElement);\r\n      }\r\n    }\r\n  }\r\n\r\n  detectIsTagVirtualNode(fiber.inst) && addAttributes(fiber.element, fiber.inst, isHydrateZone);\r\n}\r\n\r\nfunction commitUpdate(fiber: Fiber<NativeElement>) {\r\n  const element = fiber.element;\r\n  const prevInstance = fiber.alt.inst as VirtualNode;\r\n  const nextInstance = fiber.inst as VirtualNode;\r\n\r\n  detectIsPlainVirtualNode(nextInstance)\r\n    ? (prevInstance as PlainVirtualNode).value !== nextInstance.value && (element.textContent = nextInstance.value)\r\n    : updateAttributes(element, prevInstance as TagVirtualNode, nextInstance as TagVirtualNode);\r\n}\r\n\r\nfunction commitDeletion(fiber: Fiber<NativeElement>) {\r\n  const parentFiber = getFiberWithElement<NativeElement, TagNativeElement>(fiber.parent);\r\n\r\n  if (fiber.mask & FLUSH_MASK) {\r\n    parentFiber.element.innerHTML && (parentFiber.element.innerHTML = '');\r\n    return;\r\n  }\r\n\r\n  walk<NativeElement>(fiber, (fiber, skip) => {\r\n    if (fiber.element) {\r\n      !detectIsPortal(fiber.inst) &&\r\n        canRemoveNativeElement(fiber.element, parentFiber.element) &&\r\n        removeNativeElement(fiber.element, parentFiber.element);\r\n      return skip();\r\n    }\r\n  });\r\n}\r\n\r\nfunction move(fiber: Fiber<NativeElement>) {\r\n  const sourceNodes = collectElements(fiber, x => x.element);\r\n  const sourceNode = sourceNodes[0];\r\n  const parentElement = sourceNode.parentElement;\r\n  const sourceFragment = new DocumentFragment();\r\n  const elementIdx = fiber.eidx;\r\n  let idx = 0;\r\n  const move = () => {\r\n    for (let i = 1; i < sourceNodes.length; i++) {\r\n      removeNativeElement(parentElement.childNodes[elementIdx + 1], parentElement);\r\n    }\r\n\r\n    replaceNativeElement(sourceFragment, parentElement.childNodes[elementIdx], parentElement);\r\n  };\r\n\r\n  for (const node of sourceNodes) {\r\n    insertNativeElement(document.createComment(`${elementIdx}:${idx}`), node, parentElement);\r\n    appendNativeElement(node, sourceFragment);\r\n    idx++;\r\n  }\r\n\r\n  moves.push(move);\r\n}\r\n\r\nconst commitMap: Record<string, (fiber: Fiber<NativeElement>) => void> = {\r\n  [CREATE_EFFECT_TAG]: (fiber: Fiber<NativeElement>) => {\r\n    if (!fiber.element || detectIsPortal(fiber.inst)) return;\r\n    trackUpdate && trackUpdate(fiber.element);\r\n    commitCreation(fiber);\r\n  },\r\n  [UPDATE_EFFECT_TAG]: (fiber: Fiber<NativeElement>) => {\r\n    fiber.mask & MOVE_MASK && (move(fiber), (fiber.mask &= ~MOVE_MASK));\r\n    if (!fiber.element || detectIsPortal(fiber.inst)) return;\r\n    trackUpdate && trackUpdate(fiber.element);\r\n    commitUpdate(fiber);\r\n  },\r\n  [DELETE_EFFECT_TAG]: commitDeletion,\r\n  [SKIP_EFFECT_TAG]: dummyFn,\r\n};\r\n\r\nfunction finishCommit() {\r\n  moves.forEach(x => x());\r\n  patches.forEach(x => x());\r\n  moves = [];\r\n  patches = [];\r\n}\r\n\r\nconst commit = (fiber: Fiber<NativeElement>) => commitMap[fiber.tag](fiber);\r\n\r\nconst setTrackUpdate = (fn: typeof trackUpdate) => (trackUpdate = fn);\r\n\r\nconst appendNativeElement = (element: NativeNode, parent: NativeNode) => parent.appendChild(element);\r\n\r\nconst insertNativeElement = (element: NativeNode, sibling: NativeNode, parent: TagNativeElement) =>\r\n  parent.insertBefore(element, sibling);\r\n\r\nconst insertNativeElementByIndex = (element: NativeNode, idx: number, parent: TagNativeElement) =>\r\n  parent.insertBefore(element, parent.childNodes[idx]);\r\n\r\nconst replaceNativeElement = (element: NativeNode, candidate: NativeNode, parent: TagNativeElement) =>\r\n  parent.replaceChild(element, candidate);\r\n\r\nconst canRemoveNativeElement = (element: NativeNode, parent: NativeNode) => element.parentElement === parent;\r\n\r\nconst removeNativeElement = (element: NativeNode, parent: TagNativeElement) => parent.removeChild(element);\r\n\r\nexport { createNativeElement, commit, finishCommit, setTrackUpdate, insertNativeElementByIndex };\r\n","import {\r\n  type DarkElement,\r\n  type Callback,\r\n  ROOT,\r\n  Fiber,\r\n  CREATE_EFFECT_TAG,\r\n  UPDATE_EFFECT_TAG,\r\n  platform,\r\n  flatten,\r\n  detectIsUndefined,\r\n  detectIsFunction,\r\n  trueFn,\r\n  TagVirtualNode,\r\n  TaskPriority,\r\n  createReplacer,\r\n  setRootId,\r\n  $$scope,\r\n  dummyFn,\r\n  scheduler,\r\n} from '@dark-engine/core';\r\n\r\nimport { createNativeElement, insertNativeElementByIndex, commit, finishCommit } from '../dom';\r\nimport { detectIsPortal, unmountPortal } from '../portal';\r\nimport type { TagNativeElement } from '../native-element';\r\n\r\nconst roots = new Map<Element, number>();\r\nconst raf = requestAnimationFrame.bind(this);\r\nconst caf = cancelAnimationFrame.bind(this);\r\nconst spawn = raf;\r\nlet isInjected = false;\r\n\r\nfunction inject() {\r\n  platform.createElement = createNativeElement as typeof platform.createElement;\r\n  platform.insertElement = insertNativeElementByIndex as typeof platform.insertElement;\r\n  platform.raf = raf;\r\n  platform.caf = caf;\r\n  platform.spawn = spawn;\r\n  platform.commit = commit;\r\n  platform.finishCommit = finishCommit;\r\n  platform.detectIsDynamic = trueFn;\r\n  platform.detectIsPortal = detectIsPortal;\r\n  platform.unmountPortal = unmountPortal;\r\n  platform.chunk = dummyFn;\r\n  isInjected = true;\r\n}\r\n\r\nfunction render(element: DarkElement, container: TagNativeElement, hydrate?: Callback) {\r\n  !isInjected && inject();\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    if (!(container instanceof Element)) {\r\n      throw new Error(`[Dark]: render receives only Element as container!`);\r\n    }\r\n  }\r\n\r\n  const isMounted = !detectIsUndefined(roots.get(container));\r\n  const isHydrate = detectIsFunction(hydrate);\r\n  let rootId: number = null;\r\n\r\n  if (!isMounted) {\r\n    rootId = roots.size;\r\n    roots.set(container, rootId);\r\n    !isHydrate && (container.innerHTML = '');\r\n  } else {\r\n    rootId = roots.get(container);\r\n  }\r\n\r\n  const $scope = $$scope(rootId);\r\n\r\n  // insertion effect can't schedule renders\r\n  if ($scope?.getIsInsertionEffectsZone()) return;\r\n\r\n  const callback = () => {\r\n    setRootId(rootId); // !\r\n    const $scope = $$scope();\r\n    const rootFiber = $scope.getRoot();\r\n    const isUpdate = Boolean(rootFiber);\r\n    const fiber = new Fiber().mutate({\r\n      element: container,\r\n      inst: new TagVirtualNode(ROOT, {}, flatten([element || createReplacer()]) as TagVirtualNode['children']),\r\n      alt: rootFiber,\r\n      tag: isUpdate ? UPDATE_EFFECT_TAG : CREATE_EFFECT_TAG,\r\n    });\r\n\r\n    $scope.resetMount();\r\n    $scope.setWorkInProgress(fiber);\r\n    $scope.setIsHydrateZone(isHydrate);\r\n    $scope.setNextUnitOfWork(fiber);\r\n    isHydrate && hydrate();\r\n  };\r\n\r\n  scheduler.schedule(callback, { priority: TaskPriority.NORMAL });\r\n}\r\n\r\nexport { render, roots, inject };\r\n","export const VERSION = '0.25.1';\r\nexport const STYLE_TAG = 'style';\r\nexport const STYLED_ATTR = 'dark-styled';\r\nexport const GLOBAL_ATTR_VALUE = 'global';\r\nexport const COMPONENTS_ATTR_VALUE = 'components';\r\nexport const INTERLEAVE_GLOBAL_ATTR_VALUE = 'interleave-global';\r\nexport const INTERLEAVE_COMPONENTS_ATTR_VALUE = 'interleave-components';\r\nexport const CLASS_NAME_PREFIX = 'dk';\r\nexport const ANIMATION_NAME_PREFIX = 'dka';\r\nexport const OPENING_CURLY_BRACE_MARK = '{';\r\nexport const CLOSING_CURLY_BRACE_MARK = '}';\r\nexport const OPENING_PARENTHESIS_MARK = '(';\r\nexport const CLOSING_PARENTHESIS_MARK = ')';\r\nexport const COLON_MARK = ':';\r\nexport const SEMICOLON_MARK = ';';\r\nexport const DOT_MARK = '.';\r\nexport const BLANK_SPACE = ' ';\r\nexport const MEDIA_QUERY_MARK = '@media';\r\nexport const CONTAINER_QUERY_MARK = '@container';\r\nexport const KEYFRAMES_MARK = '@keyframes';\r\nexport const NESTING_MARK = '>';\r\nexport const SELF_MARK = '&';\r\nexport const FUNCTION_MARK = '[$]';\r\nexport const SINGLE_LINE_COMMENT_START_MARK = '//';\r\nexport const SINGLE_LINE_COMMENT_END_MARK = '\\n';\r\nexport const MULTI_LINE_COMMENT_START_MARK = '/*';\r\nexport const MULTI_LINE_COMMENT_END_MARK = '*/';\r\nexport const URL_FN_MARK = 'url';\r\n","import { STYLE_TAG, BLANK_SPACE } from '../constants';\r\n\r\nconst uniq = <T>(items: Array<T>, selector: (x: T) => unknown = x => x) => {\r\n  const arr: Array<T> = [];\r\n  const set = new Set();\r\n\r\n  for (const item of items) {\r\n    const key = selector(item);\r\n\r\n    !set.has(key) && arr.push(item);\r\n    set.add(key);\r\n  }\r\n\r\n  return arr;\r\n};\r\n\r\nconst mapProps = <T extends object>(props: T) => Object.keys(props).map(key => props[key]);\r\n\r\nconst mergeClassNames = (classNames: Array<string>) => uniq(classNames.filter(Boolean)).join(BLANK_SPACE);\r\n\r\nconst getElement = (selector: string) => document.querySelector(selector);\r\n\r\nconst getElements = (selector: string) => Array.from(document.querySelectorAll(selector));\r\n\r\nconst createStyleElement = () => document.createElement(STYLE_TAG);\r\n\r\nconst setAttr = (element: Element, attrName: string, attrValue: string) => element.setAttribute(attrName, attrValue);\r\n\r\nconst append = (parent: Element, element: Element) => parent.appendChild(element);\r\n\r\nconst insertBefore = (parent: Element, element: Element, sibling: Element) => parent.insertBefore(element, sibling);\r\n\r\nconst mergeTemplates = (t1: TemplateStringsArray, t2: TemplateStringsArray) => {\r\n  const [first] = t2;\r\n  const $t1 = [...t1];\r\n  const $t2: Array<string> = [];\r\n  let result: Omit<TemplateStringsArray, 'raw'> = null;\r\n\r\n  for (let i = 0; i < t2.length; i++) {\r\n    if (i > 0) {\r\n      $t2.push(t2[i]);\r\n    }\r\n  }\r\n\r\n  $t1[$t1.length - 1] = $t1[$t1.length - 1] + first;\r\n  result = [...$t1, ...$t2];\r\n\r\n  Object.assign(result, { raw: result });\r\n\r\n  return result as TemplateStringsArray;\r\n};\r\n\r\nconst detectIsBrowser = () => typeof globalThis.window !== 'undefined';\r\n\r\nexport {\r\n  uniq,\r\n  mapProps,\r\n  mergeClassNames,\r\n  getElement,\r\n  getElements,\r\n  createStyleElement,\r\n  setAttr,\r\n  append,\r\n  insertBefore,\r\n  mergeTemplates,\r\n  detectIsBrowser,\r\n};\r\n","import { detectIsTextBased } from '@dark-engine/core';\r\n\r\nimport { type TextBased } from '../shared';\r\nimport { hash } from '../hash';\r\nimport { parse } from '../parse';\r\nimport {\r\n  KEYFRAMES_MARK,\r\n  FUNCTION_MARK,\r\n  OPENING_CURLY_BRACE_MARK,\r\n  CLOSING_CURLY_BRACE_MARK,\r\n  ANIMATION_NAME_PREFIX,\r\n} from '../constants';\r\nimport { type KeyframesRule } from '../tokens';\r\n\r\nclass Keyframes {\r\n  constructor(private name: string, private token: KeyframesRule) {}\r\n\r\n  getName() {\r\n    return this.name;\r\n  }\r\n\r\n  getToken() {\r\n    return this.token;\r\n  }\r\n}\r\n\r\nfunction keyframes(source: TemplateStringsArray, ...args: Array<TextBased>) {\r\n  const joined = join(pad(source), args);\r\n  const name = genAnimationName(joined);\r\n  const [token] = parse(joined.replace(FUNCTION_MARK, name)).children;\r\n  const keyframes = new Keyframes(name, token as KeyframesRule);\r\n\r\n  return keyframes;\r\n}\r\n\r\nfunction pad(source: TemplateStringsArray) {\r\n  const start = `${KEYFRAMES_MARK} ${FUNCTION_MARK} ${OPENING_CURLY_BRACE_MARK}`;\r\n  const end = CLOSING_CURLY_BRACE_MARK;\r\n  const strings: Array<string> = [];\r\n\r\n  for (let i = 0; i < source.length; i++) {\r\n    const isStart = i === 0;\r\n    const isEnd = i === source.length - 1;\r\n\r\n    if (isStart) {\r\n      strings.push(start + source[i]);\r\n    } else if (isEnd) {\r\n      strings.push(source[i] + end);\r\n    } else {\r\n      strings.push(source[i]);\r\n    }\r\n  }\r\n\r\n  return strings;\r\n}\r\n\r\nfunction join(source: Array<string>, args: Array<TextBased>) {\r\n  let joined = '';\r\n\r\n  for (let i = 0; i < source.length; i++) {\r\n    joined += source[i];\r\n\r\n    if (detectIsTextBased(args[i])) {\r\n      joined += args[i];\r\n    }\r\n  }\r\n\r\n  return joined;\r\n}\r\n\r\nconst genAnimationName = (key: string) => `${ANIMATION_NAME_PREFIX}-${hash(key)}`;\r\n\r\nconst detectIsKeyframes = (x: unknown): x is Keyframes => x instanceof Keyframes;\r\n\r\nexport { Keyframes, keyframes, detectIsKeyframes };\r\n","import {\r\n  OPENING_CURLY_BRACE_MARK,\r\n  CLOSING_CURLY_BRACE_MARK,\r\n  COLON_MARK,\r\n  SEMICOLON_MARK,\r\n  MEDIA_QUERY_MARK,\r\n  CONTAINER_QUERY_MARK,\r\n  KEYFRAMES_MARK,\r\n  NESTING_MARK,\r\n  SELF_MARK,\r\n  DOT_MARK,\r\n  FUNCTION_MARK,\r\n  BLANK_SPACE,\r\n} from '../constants';\r\n\r\nimport { detectIsKeyframes } from '../keyframes';\r\n\r\nabstract class Token {\r\n  name = '';\r\n  value = '';\r\n  parent: Parent;\r\n  isDynamic = false;\r\n\r\n  normalize() {\r\n    this.name = this.name.trim();\r\n    this.value = this.value.trim();\r\n  }\r\n\r\n  markAsDynamic() {\r\n    this.isDynamic = true;\r\n    detectIsToken(this.parent) && !this.parent.isDynamic && this.parent.markAsDynamic();\r\n  }\r\n\r\n  abstract generate(): string | Tuple;\r\n  abstract generate(props: object, args: Array<Function>): string | Tuple;\r\n  abstract generate(className: string | null, props: object, args: Array<Function>): string | Tuple;\r\n}\r\n\r\nclass StyleRule extends Token {\r\n  override generate(): string {\r\n    return `${this.name}${COLON_MARK}${this.value}${SEMICOLON_MARK}`;\r\n  }\r\n}\r\n\r\nclass NestingRule<P extends object = {}> extends Token {\r\n  name = NESTING_MARK;\r\n  children: Children = [];\r\n\r\n  override generate(...args: Array<unknown>): string {\r\n    const className = args[0] as string | null;\r\n    const props = args[1] as P;\r\n    const fns = args[2] as Array<Function>;\r\n    let styles = `${this.value.replaceAll(SELF_MARK, `${DOT_MARK}${className}`)}${OPENING_CURLY_BRACE_MARK}`;\r\n    let keyframes = '';\r\n\r\n    for (const token of this.children) {\r\n      const [$styles, _, __, ___, $keyframes] = generate({ token, className, props, fns });\r\n\r\n      styles += $styles;\r\n      keyframes += $keyframes;\r\n    }\r\n\r\n    styles += `${CLOSING_CURLY_BRACE_MARK}${keyframes}`;\r\n\r\n    return styles;\r\n  }\r\n}\r\n\r\nclass MediaQueryRule<P extends object = {}> extends Token {\r\n  name = MEDIA_QUERY_MARK;\r\n  children: Children = [];\r\n\r\n  override generate(...args: Array<unknown>): string {\r\n    const className = args[0] as string | null;\r\n    const props = args[1] as P;\r\n    const fns = args[2] as Array<Function>;\r\n    let styles = className\r\n      ? `${this.value}${OPENING_CURLY_BRACE_MARK}${DOT_MARK}${className}${OPENING_CURLY_BRACE_MARK}`\r\n      : `${this.value}${OPENING_CURLY_BRACE_MARK}`;\r\n    let nesting = '';\r\n\r\n    for (const token of this.children) {\r\n      const [$styles, $nesting] = generate({ token, className, props, fns });\r\n\r\n      styles += $styles;\r\n      nesting += $nesting;\r\n    }\r\n\r\n    if (className) {\r\n      styles += `${CLOSING_CURLY_BRACE_MARK}${nesting}${CLOSING_CURLY_BRACE_MARK}`;\r\n    } else {\r\n      styles += `${nesting}${CLOSING_CURLY_BRACE_MARK}`;\r\n    }\r\n\r\n    return styles;\r\n  }\r\n}\r\n\r\nclass ContainerQueryRule<P extends object = {}> extends Token {\r\n  name = CONTAINER_QUERY_MARK;\r\n  children: Children = [];\r\n\r\n  override generate(...args: Array<unknown>): string {\r\n    const className = args[0] as string | null;\r\n    const props = args[1] as P;\r\n    const fns = args[2] as Array<Function>;\r\n    let styles = className\r\n      ? `${this.value}${OPENING_CURLY_BRACE_MARK}${DOT_MARK}${className}${OPENING_CURLY_BRACE_MARK}`\r\n      : `${this.value}${OPENING_CURLY_BRACE_MARK}`;\r\n    let nesting = '';\r\n\r\n    for (const token of this.children) {\r\n      const [$styles, $nesting] = generate({ token, className, props, fns });\r\n\r\n      styles += $styles;\r\n      nesting += $nesting;\r\n    }\r\n\r\n    if (className) {\r\n      styles += `${CLOSING_CURLY_BRACE_MARK}${nesting}${CLOSING_CURLY_BRACE_MARK}`;\r\n    } else {\r\n      styles += `${nesting}${CLOSING_CURLY_BRACE_MARK}`;\r\n    }\r\n\r\n    return styles;\r\n  }\r\n}\r\n\r\nclass KeyframesRule<P extends object = {}> extends Token {\r\n  name = KEYFRAMES_MARK;\r\n  children: Children = [];\r\n\r\n  override generate(...args: Array<unknown>): string {\r\n    const props = args[0] as P;\r\n    const fns = args[1] as Array<Function>;\r\n    let keyframes = `${this.value}${OPENING_CURLY_BRACE_MARK}`;\r\n\r\n    for (const token of this.children) {\r\n      const [$styles, $nesting] = generate({ token, props, fns });\r\n\r\n      keyframes += $styles;\r\n      keyframes += $nesting;\r\n    }\r\n\r\n    keyframes += `${CLOSING_CURLY_BRACE_MARK}`;\r\n\r\n    return keyframes;\r\n  }\r\n}\r\n\r\nclass FunctionRule<P extends object = {}> extends Token {\r\n  name = FUNCTION_MARK;\r\n  args: Array<number> = [];\r\n  style: StyleRule = null;\r\n  private end = '';\r\n  private isSealed = false;\r\n\r\n  add(idx: number) {\r\n    this.args.push(idx);\r\n  }\r\n\r\n  seal(end: string) {\r\n    this.isSealed = true;\r\n    this.end = end;\r\n  }\r\n\r\n  getIsSealed() {\r\n    return this.isSealed;\r\n  }\r\n\r\n  getEnd() {\r\n    return this.end;\r\n  }\r\n\r\n  generate(...args: Array<unknown>): Tuple {\r\n    const className = args[0] as string | null;\r\n    const props = args[1] as P;\r\n    const fns = args[2] as Array<Function>;\r\n    const styleExp = this.style;\r\n    const [idx, ...rest] = this.args;\r\n    const value = fns[idx](props);\r\n    let styles = '';\r\n    let nesting = '';\r\n    let media = '';\r\n    let container = '';\r\n    let keyframes = '';\r\n\r\n    if (detectIsStyleSheet(value)) {\r\n      for (const token of value.children) {\r\n        const [$styles, $nesting, $media, $container, $keyframes] = generate({ token, className, props, fns });\r\n\r\n        styles += $styles;\r\n        nesting += $nesting;\r\n        media += $media;\r\n        container += $container;\r\n        keyframes += $keyframes;\r\n      }\r\n    } else if (styleExp) {\r\n      const end = rest.reduce((acc, x) => (acc += BLANK_SPACE + fns[x](props)), '') + this.end;\r\n\r\n      if (detectIsKeyframes(value)) {\r\n        styleExp.value = replace(this.name, value.getName()) + end;\r\n        styles += styleExp.generate();\r\n        keyframes += value.getToken().generate(props, fns);\r\n      } else {\r\n        styleExp.value = replace(this.name, value) + end;\r\n        styles += styleExp.generate();\r\n      }\r\n    }\r\n\r\n    return [styles, nesting, media, container, keyframes];\r\n  }\r\n}\r\n\r\ntype GenerateOptions<P extends object> = {\r\n  className?: string;\r\n  props?: P;\r\n  fns?: Array<Function>;\r\n};\r\n\r\nclass StyleSheet<P extends object = {}> {\r\n  children: Children = [];\r\n\r\n  generate(options: GenerateOptions<P> = {}) {\r\n    const { className = null, props, fns } = options;\r\n    let styles = className ? `${DOT_MARK}${className}${OPENING_CURLY_BRACE_MARK}` : '';\r\n    let nesting = '';\r\n    let media = '';\r\n    let container = '';\r\n    let keyframes = '';\r\n\r\n    for (const token of this.children) {\r\n      const [$styles, $nesting, $media, $container, $keyframes] = generate({ token, className, props, fns });\r\n\r\n      styles += $styles;\r\n      nesting += $nesting;\r\n      media += $media;\r\n      container += $container;\r\n      keyframes += $keyframes;\r\n    }\r\n\r\n    if (className) {\r\n      styles += `${CLOSING_CURLY_BRACE_MARK}${nesting}${media}${container}${keyframes}`;\r\n    } else {\r\n      styles += `${nesting}${media}${container}${keyframes}`;\r\n    }\r\n\r\n    return styles;\r\n  }\r\n}\r\n\r\ntype GenerateProps<P extends object> = {\r\n  token: Token;\r\n  className?: string | null;\r\n  props?: P;\r\n  fns?: Array<Function>;\r\n};\r\n\r\nfunction generate<P extends object = {}>(options: GenerateProps<P>): Tuple {\r\n  const { token, className = null, props, fns } = options;\r\n  let styles = '';\r\n  let nesting = '';\r\n  let media = '';\r\n  let container = '';\r\n  let keyframes = '';\r\n\r\n  if (detectIsStyleRule(token)) {\r\n    styles += token.generate();\r\n  } else if (detectIsNestingRule(token)) {\r\n    nesting += token.generate(className, props, fns);\r\n  } else if (detectIsMediaQueryRule(token)) {\r\n    media += token.generate(className, props, fns);\r\n  } else if (detectIsContainerQueryRule(token)) {\r\n    container += token.generate(className, props, fns);\r\n  } else if (detectIsKeyframesRule(token)) {\r\n    keyframes += token.generate(props, fns);\r\n  } else if (detectIsFunctionRule(token)) {\r\n    const [$styles, $nesting, $media, $container, $keyframes] = token.generate(className, props, fns);\r\n\r\n    styles += $styles;\r\n    nesting += $nesting;\r\n    media += $media;\r\n    container += $container;\r\n    keyframes += $keyframes;\r\n  }\r\n\r\n  return [styles, nesting, media, container, keyframes];\r\n}\r\n\r\ntype Tuple = [string, string, string, string, string];\r\n\r\nexport type Parent = StyleSheet | Token;\r\n\r\nexport type Children = Array<Token>;\r\n\r\nconst detectIsToken = (x: unknown): x is Token => x instanceof Token;\r\n\r\nconst detectIsStyleRule = (x: unknown): x is StyleRule => x instanceof StyleRule;\r\n\r\nconst detectIsMediaQueryRule = (x: unknown): x is MediaQueryRule => x instanceof MediaQueryRule;\r\n\r\nconst detectIsContainerQueryRule = (x: unknown): x is ContainerQueryRule => x instanceof ContainerQueryRule;\r\n\r\nconst detectIsKeyframesRule = (x: unknown): x is KeyframesRule => x instanceof KeyframesRule;\r\n\r\nconst detectIsNestingRule = (x: unknown): x is NestingRule => x instanceof NestingRule;\r\n\r\nconst detectIsFunctionRule = (x: unknown): x is FunctionRule => x instanceof FunctionRule;\r\n\r\nconst detectIsStyleSheet = (x: unknown): x is StyleSheet => x instanceof StyleSheet;\r\n\r\nconst replace = (target: string, x: string) => target.replace(FUNCTION_MARK, x);\r\n\r\nexport {\r\n  StyleSheet,\r\n  StyleRule,\r\n  MediaQueryRule,\r\n  ContainerQueryRule,\r\n  KeyframesRule,\r\n  NestingRule,\r\n  FunctionRule,\r\n  detectIsStyleSheet,\r\n  detectIsStyleRule,\r\n  detectIsMediaQueryRule,\r\n  detectIsContainerQueryRule,\r\n  detectIsKeyframesRule,\r\n  detectIsNestingRule,\r\n  detectIsFunctionRule,\r\n};\r\n","import type { DarkElement, Subscribe, SubscriberWithValue, SlotProps, KeyProps } from '../shared';\r\nimport { type ComponentFactory, component } from '../component';\r\nimport type { Fiber } from '../fiber';\r\nimport { detectIsFunction } from '../utils';\r\nimport { $$scope } from '../scope';\r\nimport { useEffect } from '../use-effect';\r\nimport { useMemo } from '../use-memo';\r\nimport { useUpdate } from '../use-update';\r\n\r\ntype CreateContextOptions = {\r\n  displayName?: string;\r\n};\r\n\r\nfunction createContext<T>(defaultValue: T, options?: CreateContextOptions): Context<T> {\r\n  const { displayName = 'Context' } = options || {};\r\n  const context: Context<T> = {\r\n    displayName,\r\n    defaultValue,\r\n    Provider: null,\r\n    Consumer: null,\r\n  };\r\n\r\n  context.Provider = createProvider(context, defaultValue, displayName);\r\n  context.Consumer = createConsumer(context, displayName);\r\n\r\n  return context;\r\n}\r\n\r\nfunction createProvider<T>(context: Context<T>, defaultValue: T, displayName: string) {\r\n  return component<ContexProviderProps<T>>(\r\n    ({ value = defaultValue, slot }) => {\r\n      const fiber = $$scope().getCursorFiber();\r\n\r\n      if (!fiber.provider) {\r\n        const providerValue: ContextProviderValue<T> = {\r\n          value,\r\n          subscribers: new Set(),\r\n          subscribe: (subscriber: (value: T) => void) => {\r\n            providerValue.subscribers.add(subscriber);\r\n\r\n            return () => providerValue.subscribers.delete(subscriber);\r\n          },\r\n        };\r\n\r\n        fiber.provider = new Map();\r\n        fiber.provider.set(context, providerValue);\r\n      }\r\n\r\n      const provider = fiber.provider.get(context);\r\n\r\n      useEffect(() => {\r\n        provider.subscribers.forEach(fn => fn(value));\r\n      }, [value]);\r\n\r\n      provider.value = value;\r\n\r\n      return slot;\r\n    },\r\n    { displayName: `${displayName}.Provider` },\r\n  );\r\n}\r\n\r\ntype ConsumerProps<T> = {\r\n  slot: (value: T) => DarkElement;\r\n};\r\n\r\nfunction createConsumer<T>(context: Context<T>, displayName: string) {\r\n  return component<ConsumerProps<T>>(\r\n    ({ slot }) => {\r\n      const value = useContext(context);\r\n\r\n      return detectIsFunction(slot) ? slot(value) : null;\r\n    },\r\n    { displayName: `${displayName}.Consumer` },\r\n  );\r\n}\r\n\r\nfunction useContext<T>(context: Context<T>): T {\r\n  const { defaultValue } = context;\r\n  const fiber = $$scope().getCursorFiber();\r\n  const provider = useMemo(() => getProvider<T>(context, fiber), []);\r\n  const value = provider ? provider.value : defaultValue;\r\n  const update = useUpdate();\r\n  const scope = useMemo(() => ({ value }), []);\r\n  const hasProvider = Boolean(provider);\r\n\r\n  useEffect(() => {\r\n    if (!hasProvider) return;\r\n    const unsubscribe = provider.subscribe((value: T) => {\r\n      if (!Object.is(scope.value, value)) {\r\n        update();\r\n      }\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, [hasProvider]);\r\n\r\n  scope.value = value;\r\n\r\n  return value;\r\n}\r\n\r\nfunction getProvider<T>(context: Context<T>, fiber: Fiber): ContextProviderValue<T> {\r\n  let nextFiber = fiber;\r\n\r\n  while (nextFiber) {\r\n    if (nextFiber.provider && nextFiber.provider.get(context)) {\r\n      return nextFiber.provider.get(context) as ContextProviderValue<T>;\r\n    }\r\n\r\n    nextFiber = nextFiber.parent;\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\ntype ContexProviderProps<T> = {\r\n  value: T;\r\n} & SlotProps &\r\n  KeyProps;\r\n\r\nexport type Context<T = unknown> = {\r\n  Provider: ComponentFactory<ContexProviderProps<T>>;\r\n  Consumer: ComponentFactory<SlotProps<(value: T) => DarkElement>>;\r\n  displayName?: string;\r\n  defaultValue: T;\r\n};\r\n\r\nexport type ContextProviderValue<T = unknown> = {\r\n  value: T;\r\n  subscribers: Set<(value: T) => void>;\r\n  subscribe: Subscribe<SubscriberWithValue<T>>;\r\n};\r\n\r\nexport { createContext, useContext };\r\n","import { type DarkElement, createContext, useContext, component } from '@dark-engine/core';\r\n\r\nimport { type DefaultTheme } from '../';\r\n\r\n// styled.d.ts\r\n// type Theme = {\r\n//   color1: string;\r\n//   color2: string;\r\n//   color3: string;\r\n// };\r\n// declare module '@dark-engine/styled' {\r\n//   export interface DefaultTheme extends Theme {}\r\n// }\r\n\r\nexport type ThemeProps = { theme: DefaultTheme };\r\n\r\nexport type ThemeContextValue = DefaultTheme;\r\n\r\nconst ThemeContext = createContext<ThemeContextValue>(null, { displayName: 'Theme' });\r\n\r\nconst useTheme = () => useContext(ThemeContext);\r\n\r\ntype ThemeProviderProps = {\r\n  theme: DefaultTheme;\r\n  slot: DarkElement;\r\n};\r\n\r\nconst ThemeProvider = component<ThemeProviderProps>(({ theme, slot }) => {\r\n  return ThemeContext.Provider({ value: theme, slot });\r\n});\r\n\r\nexport { ThemeProvider, useTheme };\r\n","import { type DarkElement, type Callback, createContext, useContext, component } from '@dark-engine/core';\r\n\r\nexport enum STYLE_LEVEL {\r\n  GLOBAL,\r\n  COMPONENT,\r\n}\r\n\r\nclass Manager {\r\n  private styles = createStyles();\r\n  private resets = new Set<Callback>();\r\n\r\n  collectGlobalStyle(css: string) {\r\n    this.styles[STYLE_LEVEL.GLOBAL].add(css);\r\n  }\r\n\r\n  collectComponentStyle(css: string) {\r\n    this.styles[STYLE_LEVEL.COMPONENT].add(css);\r\n  }\r\n\r\n  getStyles() {\r\n    return this.styles;\r\n  }\r\n\r\n  reset(fn: Callback) {\r\n    this.resets.add(fn);\r\n  }\r\n\r\n  seal() {\r\n    this.styles = createStyles();\r\n    this.resets.forEach(x => x());\r\n    this.resets = new Set();\r\n  }\r\n}\r\n\r\nconst createStyles = () => ({\r\n  [STYLE_LEVEL.GLOBAL]: new Set<string>(),\r\n  [STYLE_LEVEL.COMPONENT]: new Set<string>(),\r\n});\r\n\r\nconst ManagerContext = createContext<Manager>(null, { displayName: 'Manager' });\r\n\r\nfunction useManager() {\r\n  return useContext(ManagerContext);\r\n}\r\n\r\ntype ThemeProviderProps = {\r\n  manager: Manager;\r\n  slot: DarkElement;\r\n};\r\n\r\nconst ManagerProvider = component<ThemeProviderProps>(({ manager, slot }) => {\r\n  return ManagerContext.Provider({ value: manager, slot });\r\n});\r\n\r\nexport { Manager, useManager, ManagerProvider };\r\n","import {\r\n  OPENING_CURLY_BRACE_MARK,\r\n  CLOSING_CURLY_BRACE_MARK,\r\n  COLON_MARK,\r\n  SEMICOLON_MARK,\r\n  MEDIA_QUERY_MARK,\r\n  CONTAINER_QUERY_MARK,\r\n  KEYFRAMES_MARK,\r\n  FUNCTION_MARK,\r\n  SINGLE_LINE_COMMENT_START_MARK,\r\n  SINGLE_LINE_COMMENT_END_MARK,\r\n  MULTI_LINE_COMMENT_START_MARK,\r\n  MULTI_LINE_COMMENT_END_MARK,\r\n  OPENING_PARENTHESIS_MARK,\r\n  CLOSING_PARENTHESIS_MARK,\r\n  URL_FN_MARK,\r\n} from '../constants';\r\nimport {\r\n  type Children,\r\n  StyleSheet,\r\n  StyleRule,\r\n  MediaQueryRule,\r\n  ContainerQueryRule,\r\n  KeyframesRule,\r\n  NestingRule,\r\n  FunctionRule,\r\n  detectIsStyleSheet,\r\n  detectIsStyleRule,\r\n  detectIsMediaQueryRule,\r\n  detectIsContainerQueryRule,\r\n  detectIsKeyframesRule,\r\n  detectIsNestingRule,\r\n  detectIsFunctionRule,\r\n} from '../tokens';\r\n\r\nfunction parse<P extends object>(css: string) {\r\n  const stylesheet = new StyleSheet<P>();\r\n  const stack: Array<NestingRule | MediaQueryRule> = [];\r\n  let buffer = '';\r\n  let end = '';\r\n  let fnIdx = -1;\r\n  let isSingleLineComment = false;\r\n  let isMultiLineComment = false;\r\n  let isPropValue = false;\r\n  let isUrl = false;\r\n\r\n  for (let i = 0; i < css.length; i++) {\r\n    const char = css[i];\r\n    const parent = stack[stack.length - 1] || stylesheet;\r\n    const last = parent.children[parent.children.length - 1];\r\n\r\n    buffer += char;\r\n\r\n    if (!isSingleLineComment && detectHasSingleLineCommentStartMark(buffer)) {\r\n      isSingleLineComment = !isUrl;\r\n    } else if (isSingleLineComment && detectHasSingleLineCommentEndMark(buffer)) {\r\n      isSingleLineComment = false;\r\n      buffer = '';\r\n    }\r\n\r\n    if (!isMultiLineComment && detectHasMultiLineCommentStartMark(buffer)) {\r\n      isMultiLineComment = true;\r\n      end = detectIsStyleRule(last) ? createEnd(buffer) : '';\r\n    } else if (isMultiLineComment && detectHasMultiLineCommentEndMark(buffer)) {\r\n      isMultiLineComment = false;\r\n      buffer = '';\r\n    }\r\n\r\n    if (isSingleLineComment || isMultiLineComment) continue;\r\n\r\n    if (detectHasFunctionMark(buffer)) {\r\n      const token = new FunctionRule();\r\n\r\n      if (detectIsFunctionRule(last) && !last.getIsSealed() && last.style) {\r\n        last.add(++fnIdx);\r\n        buffer = '';\r\n        continue;\r\n      }\r\n\r\n      token.add(++fnIdx);\r\n      token.parent = parent;\r\n      token.markAsDynamic();\r\n\r\n      if (detectIsStyleRule(last) && !last.value) {\r\n        token.style = last;\r\n        token.name = buffer.trim();\r\n        last.normalize();\r\n        last.isDynamic = true;\r\n        parent.children[parent.children.length - 1] = token;\r\n      } else {\r\n        parent.children.push(token);\r\n      }\r\n\r\n      buffer = '';\r\n      continue;\r\n    }\r\n\r\n    switch (char) {\r\n      case OPENING_CURLY_BRACE_MARK:\r\n        {\r\n          const token = detectHasMediaQueryMark(buffer)\r\n            ? new MediaQueryRule()\r\n            : detectHasContainerQueryMark(buffer)\r\n            ? new ContainerQueryRule()\r\n            : detectHasKeyframesMark(buffer)\r\n            ? new KeyframesRule()\r\n            : new NestingRule();\r\n          const canNest =\r\n            detectIsMediaQueryRule(token) || detectIsContainerQueryRule(token) || detectIsKeyframesRule(token)\r\n              ? detectIsStyleSheet(parent)\r\n              : detectIsNestingRule(token)\r\n              ? detectIsStyleSheet(parent) ||\r\n                detectIsMediaQueryRule(parent) ||\r\n                detectIsContainerQueryRule(parent) ||\r\n                detectIsKeyframesRule(parent)\r\n              : false;\r\n\r\n          if (!canNest) {\r\n            throw new Error('Illegal style nesting!');\r\n          }\r\n\r\n          token.value = sub(buffer);\r\n          token.normalize();\r\n          token.parent = parent;\r\n\r\n          if (!token.value) {\r\n            throw new Error('Empty style nesting!');\r\n          }\r\n\r\n          parent.children.push(token);\r\n          stack.push(token);\r\n          buffer = '';\r\n        }\r\n        break;\r\n      case CLOSING_CURLY_BRACE_MARK:\r\n        stack.pop();\r\n        buffer = '';\r\n        break;\r\n      case COLON_MARK:\r\n        {\r\n          if (!detectIsPropName(buffer, i, css, parent.children)) continue;\r\n          const token = new StyleRule();\r\n\r\n          token.name = sub(buffer);\r\n          token.parent = parent;\r\n          parent.children.push(token);\r\n        }\r\n        buffer = '';\r\n        isPropValue = true;\r\n        break;\r\n      case SEMICOLON_MARK:\r\n        if (!last) {\r\n          throw new Error('Incorrect style!');\r\n        }\r\n\r\n        if (detectIsFunctionRule(last)) {\r\n          last.seal(sub(buffer));\r\n          buffer = '';\r\n          continue;\r\n        }\r\n\r\n        last.value = end || sub(buffer);\r\n        last.normalize();\r\n\r\n        buffer = '';\r\n        end = '';\r\n        isPropValue = false;\r\n        break;\r\n      case OPENING_PARENTHESIS_MARK:\r\n        if (isPropValue && detectHasUrlFnMark(buffer)) {\r\n          isUrl = true;\r\n        }\r\n        break;\r\n      case CLOSING_PARENTHESIS_MARK:\r\n        isUrl = false;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  return stylesheet;\r\n}\r\n\r\nfunction detectIsPropName(name: string, idx: number, css: string, children: Children) {\r\n  const last = children[children.length - 1];\r\n  if (detectHasMediaQueryMark(name) || detectHasContainerQueryMark(name)) return false;\r\n  if (detectIsStyleRule(last) && !last.value) return false;\r\n\r\n  for (let i = idx; i < css.length; i++) {\r\n    const char = css[i];\r\n\r\n    if (char === OPENING_CURLY_BRACE_MARK) return false;\r\n    if (char === SEMICOLON_MARK) return true;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nconst detectHasSingleLineCommentStartMark = (x: string) => x.endsWith(SINGLE_LINE_COMMENT_START_MARK);\r\n\r\nconst detectHasSingleLineCommentEndMark = (x: string) => x.endsWith(SINGLE_LINE_COMMENT_END_MARK);\r\n\r\nconst detectHasMultiLineCommentStartMark = (x: string) => x.endsWith(MULTI_LINE_COMMENT_START_MARK);\r\n\r\nconst detectHasMultiLineCommentEndMark = (x: string) => x.endsWith(MULTI_LINE_COMMENT_END_MARK);\r\n\r\nconst detectHasFunctionMark = (x: string) => x.endsWith(FUNCTION_MARK);\r\n\r\nconst detectHasUrlFnMark = (x: string) => x.endsWith(URL_FN_MARK + OPENING_PARENTHESIS_MARK);\r\n\r\nconst detectHasMediaQueryMark = (x: string) => x.trim().startsWith(MEDIA_QUERY_MARK);\r\n\r\nconst detectHasContainerQueryMark = (x: string) => x.trim().startsWith(CONTAINER_QUERY_MARK);\r\n\r\nconst detectHasKeyframesMark = (x: string) => x.trim().startsWith(KEYFRAMES_MARK);\r\n\r\nconst sub = (x: string) => x.substring(0, x.length - 1);\r\n\r\nconst createEnd = (x: string) => x.replace(MULTI_LINE_COMMENT_START_MARK, '').trim();\r\n\r\nexport { parse };\r\n","const SEED = 5381;\r\nconst SIZE = 6;\r\nconst map = { 0: 'a', 1: 'b', 2: 'c', 3: 'd', 4: 'e', 5: 'f', 6: 'g', 7: 'h', 8: 'i', 9: 'j' };\r\n\r\nfunction phash(h: number, x: string) {\r\n  let i = x.length;\r\n\r\n  while (i) {\r\n    h = (h * 33) ^ x.charCodeAt(--i);\r\n  }\r\n\r\n  return h;\r\n}\r\n\r\nfunction hash(x: string) {\r\n  const source = phash(SEED, x);\r\n  const hash = String(Math.abs(source))\r\n    .slice(0, SIZE)\r\n    .split('')\r\n    .map(x => map[x])\r\n    .join('');\r\n\r\n  return hash;\r\n}\r\n\r\nexport { hash };\r\n","import {\r\n  type ComponentFactory,\r\n  type TagVirtualNodeFactory,\r\n  type StandardComponentProps,\r\n  type Component,\r\n  type VirtualNode,\r\n  View,\r\n  component,\r\n  forwardRef,\r\n  useMemo,\r\n  detectIsString,\r\n  detectIsFunction,\r\n  detectIsTextBased,\r\n  detectIsServer,\r\n  useInsertionEffect,\r\n} from '@dark-engine/core';\r\nimport { type DarkJSX } from '@dark-engine/platform-browser';\r\n\r\nimport {\r\n  CLASS_NAME_PREFIX,\r\n  FUNCTION_MARK,\r\n  DOT_MARK,\r\n  STYLED_ATTR,\r\n  COMPONENTS_ATTR_VALUE,\r\n  INTERLEAVE_COMPONENTS_ATTR_VALUE,\r\n  BLANK_SPACE,\r\n} from '../constants';\r\nimport {\r\n  detectIsBrowser,\r\n  mapProps,\r\n  mergeClassNames,\r\n  getElement,\r\n  getElements,\r\n  createStyleElement,\r\n  setAttr,\r\n  append,\r\n  mergeTemplates,\r\n} from '../utils';\r\nimport { type KeyframesRule, StyleSheet, detectIsStyleSheet, detectIsKeyframesRule } from '../tokens';\r\nimport { type Keyframes, detectIsKeyframes } from '../keyframes';\r\nimport { type ThemeProps, useTheme } from '../theme';\r\nimport { type TextBased } from '../shared';\r\nimport { useManager } from '../server/manager';\r\nimport { parse } from '../parse';\r\nimport { hash } from '../hash';\r\n\r\nlet cache: Map<string, [string, string]> = null;\r\nlet injections: Set<string> = null;\r\nlet tag: HTMLStyleElement = null;\r\nlet isLoaded = false;\r\nconst $$styled = Symbol('styled');\r\n\r\nsetupGlobal();\r\nfunction styled<P extends object, T extends object = {}>(tagName: string | ComponentFactory<P>) {\r\n  const factory = detectIsString(tagName) ? (props: P) => View({ as: tagName, ...props }) : tagName;\r\n\r\n  if (!isLoaded && detectIsBrowser()) {\r\n    reuse(getInterleavedElements(), createTag);\r\n    isLoaded = true;\r\n  }\r\n\r\n  return createStyledComponent<P & T>(factory as Factory<P & T>);\r\n}\r\n\r\nfunction createStyledComponent<P extends StyledProps>(factory: Factory<P>) {\r\n  let transform: TransformFn<P> = x => x;\r\n  const isExtending = detectIsStyled(factory);\r\n  const config = isExtending ? getExtendingConfig(factory as StyledComponentFactory<P>) : null;\r\n  const fn = <T extends P>(source: TemplateStringsArray, ...args: Args<T & ThemeProps>) => {\r\n    const $source = isExtending ? mergeTemplates(config.source, source) : source;\r\n    const $args = isExtending ? [...config.args, ...args] : args;\r\n    const $transform = isExtending ? (p: T) => transform(config.transform(p)) : transform;\r\n    const fns = filterArgs<T>($args);\r\n    const [sheet, sheets] = slice<T>(css($source, ...$args));\r\n    const [baseName, baseStyle, baseKeyframes] = generate({ sheet, cache });\r\n    const styled = forwardRef<T, unknown>(\r\n      component((props, ref) => {\r\n        const { as: component, ...rest } = props;\r\n        const theme = useTheme();\r\n        const isSwap = detectIsFunction(component);\r\n        const $props = (isSwap ? rest : props) as unknown as T;\r\n        const $factory = isSwap ? component : isExtending ? config.factory : factory;\r\n        const [className, styles, keyframes] = useMemo(() => {\r\n          const [names, styles, keyframes] = sheets.reduce(\r\n            (acc, sheet) => {\r\n              const [className, style, keyframes] = generate({ sheet, cache, props: { ...props, theme }, fns });\r\n              const [names, styles, keyframesList] = acc;\r\n\r\n              names.push(className);\r\n              styles.push(style);\r\n              keyframesList.push(keyframes);\r\n\r\n              return acc;\r\n            },\r\n            [[], [baseStyle], [baseKeyframes]] as [Array<string>, Array<string>, Array<string>],\r\n          );\r\n          const className = mergeClassNames([...getClassNamesFrom(props), baseName, ...names]);\r\n\r\n          return [className, filter(styles, injections), filter(keyframes, injections)] as [\r\n            string,\r\n            Array<string>,\r\n            Array<string>,\r\n          ];\r\n        }, [...mapProps(props), theme]);\r\n\r\n        useInsertionEffect(() => {\r\n          if (!tag) {\r\n            const $tag = getTag();\r\n\r\n            if ($tag) {\r\n              tag = $tag; // after hydration\r\n              return;\r\n            } else {\r\n              tag = createTag();\r\n            }\r\n          }\r\n\r\n          styles.forEach(css => inject(css, tag));\r\n          keyframes.forEach(css => inject(css, tag));\r\n        }, [...styles, ...keyframes]);\r\n\r\n        if (detectIsServer()) {\r\n          const manager = useManager(); // special case of hook using, should be last in order\r\n\r\n          styles.forEach(css => manager.collectComponentStyle(css));\r\n          keyframes.forEach(css => manager.collectComponentStyle(css));\r\n          manager.reset(setupGlobal);\r\n        }\r\n\r\n        if (detectIsFunction($props.slot)) {\r\n          $props.slot = $props.slot((x: string) => `${className}_${x}`);\r\n        }\r\n\r\n        return $factory({ ...$transform($props), ref, className });\r\n      }),\r\n    ) as StyledComponentFactory<T>;\r\n\r\n    styled[$$styled] = {\r\n      className: baseName,\r\n      source: $source,\r\n      args: $args,\r\n      factory: (config?.factory || factory) as Factory<T>,\r\n      transform: config ? p => transform(config.transform(p)) : transform,\r\n    };\r\n\r\n    return styled;\r\n  };\r\n\r\n  fn.attrs = (t: TransformFn<P>) => {\r\n    transform = detectIsFunction(t) ? t : transform;\r\n\r\n    return fn;\r\n  };\r\n\r\n  return fn;\r\n}\r\n\r\nfunction filter(styles: Array<string>, injections: Set<string>) {\r\n  const $styles: Array<string> = [];\r\n\r\n  for (const css of styles) {\r\n    if (!injections.has(css)) {\r\n      $styles.push(css);\r\n      injections.add(css);\r\n    }\r\n  }\r\n\r\n  return $styles;\r\n}\r\n\r\nfunction setupGlobal() {\r\n  cache = new Map();\r\n  injections = new Set();\r\n  tag = null;\r\n  isLoaded = false;\r\n}\r\n\r\nfunction getExtendingConfig<P extends object>(factory: StyledComponentFactory<P>) {\r\n  const { className, ...rest } = factory[$$styled];\r\n  const config: ExtendingConfig<P> = rest;\r\n\r\n  return config;\r\n}\r\n\r\ntype GenerateOptions<P extends object> = {\r\n  sheet: StyleSheet<P>;\r\n  cache: Map<string, [string, string]>;\r\n  props?: P;\r\n  fns?: Array<Function>;\r\n};\r\n\r\nfunction generate<P extends object>(options: GenerateOptions<P>): [string, string, string] {\r\n  const { sheet: $sheet, cache, props, fns } = options;\r\n  const [sheet, rules] = split($sheet);\r\n  const key = sheet.generate({ className: FUNCTION_MARK, props, fns });\r\n  const item = cache.get(key);\r\n  const className = item ? item[0] : genClassName(key);\r\n  const css = item ? item[1] : key.replaceAll(FUNCTION_MARK, className);\r\n  let style = '';\r\n  let keyframes = '';\r\n\r\n  style += css;\r\n  cache.set(key, [className, css]);\r\n\r\n  for (const rule of rules) {\r\n    keyframes += rule.generate();\r\n  }\r\n\r\n  return [className, style, keyframes];\r\n}\r\n\r\nfunction split<P extends object>(source: StyleSheet<P>): [StyleSheet<P>, Array<KeyframesRule<P>>] {\r\n  const sheet = new StyleSheet<P>();\r\n  const rules: Array<KeyframesRule<P>> = [];\r\n\r\n  for (const token of source.children) {\r\n    if (detectIsKeyframesRule(token)) {\r\n      rules.push(token);\r\n    } else {\r\n      sheet.children.push(token);\r\n    }\r\n  }\r\n\r\n  return [sheet, rules];\r\n}\r\n\r\nfunction slice<P extends object>(source: StyleSheet<P>): [StyleSheet<P>, Array<StyleSheet<P>>] {\r\n  const sheet = new StyleSheet<P>();\r\n  const sheets: Array<StyleSheet> = [];\r\n\r\n  for (const token of source.children) {\r\n    if (token.isDynamic) {\r\n      const style = new StyleSheet<P>();\r\n\r\n      style.children.push(token);\r\n      sheets.push(style);\r\n    } else {\r\n      sheet.children.push(token);\r\n    }\r\n  }\r\n\r\n  return [sheet, sheets];\r\n}\r\n\r\nfunction join<P>(strings: TemplateStringsArray, args: Args<P>) {\r\n  let joined = '';\r\n  let keyframes = '';\r\n\r\n  for (let i = 0; i < strings.length; i++) {\r\n    const arg = args[i];\r\n\r\n    joined += strings[i];\r\n\r\n    if (detectIsStyled(arg)) {\r\n      joined += `${DOT_MARK}${arg[$$styled].className}`;\r\n    } else if (detectIsStyleSheet(arg)) {\r\n      joined += arg.generate();\r\n    } else if (detectIsKeyframes(arg)) {\r\n      joined += arg.getName();\r\n      keyframes += arg.getToken().generate();\r\n    } else if (detectIsFunction(arg)) {\r\n      joined += FUNCTION_MARK;\r\n    } else if (detectIsTextBased(arg)) {\r\n      joined += arg;\r\n    }\r\n  }\r\n\r\n  joined += keyframes;\r\n\r\n  return joined;\r\n}\r\n\r\nfunction createTag() {\r\n  const tag = createStyleElement();\r\n\r\n  setAttr(tag, STYLED_ATTR, COMPONENTS_ATTR_VALUE);\r\n  append(document.head, tag);\r\n\r\n  return tag;\r\n}\r\n\r\nfunction inject(css: string, tag: HTMLStyleElement) {\r\n  tag.textContent = `${tag.textContent}${css}`;\r\n}\r\n\r\nfunction reuse(elements: Array<HTMLStyleElement>, createTag: () => HTMLStyleElement) {\r\n  if (elements.length === 0) return;\r\n  const tag = createTag();\r\n  let content = '';\r\n\r\n  for (const element of elements) {\r\n    content += element.textContent;\r\n    element.remove();\r\n  }\r\n\r\n  tag.textContent = content;\r\n}\r\n\r\nfunction getInterleavedElements() {\r\n  return getElements(`[${STYLED_ATTR}=\"${INTERLEAVE_COMPONENTS_ATTR_VALUE}\"]`) as Array<HTMLStyleElement>;\r\n}\r\n\r\nconst getTag = () => getElement(`[${STYLED_ATTR}=\"${COMPONENTS_ATTR_VALUE}\"]`) as HTMLStyleElement;\r\n\r\nconst css = <P extends object>(strings: TemplateStringsArray, ...args: Args<P>) => parse<P>(join(strings, args));\r\n\r\nconst getClassNamesFrom = (props: StyledProps) => (props.class || props.className || '').split(BLANK_SPACE);\r\n\r\nconst genClassName = (key: string) => `${CLASS_NAME_PREFIX}-${hash(key)}`;\r\n\r\nconst detectIsStyled = (x: unknown): x is StyledComponentFactory => detectIsFunction(x) && Boolean(x[$$styled]);\r\n\r\nconst filterArgs = <P>(args: Args<unknown>) =>\r\n  args.filter(x => detectIsFunction(x) && !detectIsStyled(x)) as DynamicArgs<P>;\r\n\r\ntype Factory<P extends object> = ComponentFactory<P> | ((props: P) => TagVirtualNodeFactory);\r\n\r\ntype ClassNameFn = (className: string) => string;\r\n\r\ntype StyledElement = Component | VirtualNode | string | Array<Component | VirtualNode | string>;\r\n\r\ntype StyledProps = {\r\n  as?: string | ComponentFactory;\r\n  class?: string;\r\n  className?: string;\r\n  style?: string | Record<string, string>;\r\n  slot?: ((fn: ClassNameFn) => StyledElement) | StyledElement;\r\n};\r\n\r\ntype ExtendingConfig<P extends object = {}> = {\r\n  source: TemplateStringsArray;\r\n  args: Args<P>;\r\n  factory: Factory<P>;\r\n  transform: (x: P) => P;\r\n};\r\n\r\ntype TransformFn<P> = (p: P) => any;\r\n\r\ntype DynamicArgs<P> = Array<ArgFn<P>>;\r\n\r\ntype ArgFn<P> = Function | ((p: P) => TextBased | false);\r\n\r\nexport type Args<P> = Array<TextBased | ArgFn<P> | StyleSheet | Keyframes>;\r\n\r\nexport type StyledComponentFactory<P extends object = {}> = {\r\n  [$$styled]: {\r\n    className: string;\r\n  } & ExtendingConfig<P>;\r\n} & ComponentFactory<P & StandardComponentProps & StyledProps>;\r\n\r\ntype FactoryFn<P extends object> = {\r\n  <T extends P>(source: TemplateStringsArray, ...args: Args<T & ThemeProps>): StyledComponentFactory<T>;\r\n  attrs: (t: TransformFn<P>) => FactoryFn<P>;\r\n};\r\n\r\nstyled.a = styled('a') as FactoryFn<DarkJSX.HTMLTags['a']>;\r\nstyled.abbr = styled('abbr') as FactoryFn<DarkJSX.HTMLTags['abbr']>;\r\nstyled.address = styled('address') as FactoryFn<DarkJSX.HTMLTags['address']>;\r\nstyled.area = styled('area') as FactoryFn<DarkJSX.HTMLTags['area']>;\r\nstyled.article = styled('article') as FactoryFn<DarkJSX.HTMLTags['article']>;\r\nstyled.aside = styled('aside') as FactoryFn<DarkJSX.HTMLTags['aside']>;\r\nstyled.audio = styled('audio') as FactoryFn<DarkJSX.HTMLTags['audio']>;\r\nstyled.b = styled('b') as FactoryFn<DarkJSX.HTMLTags['b']>;\r\nstyled.base = styled('base') as FactoryFn<DarkJSX.HTMLTags['base']>;\r\nstyled.bdi = styled('bdi') as FactoryFn<DarkJSX.HTMLTags['bdi']>;\r\nstyled.bdo = styled('bdo') as FactoryFn<DarkJSX.HTMLTags['bdo']>;\r\nstyled.blockquote = styled('blockquote') as FactoryFn<DarkJSX.HTMLTags['blockquote']>;\r\nstyled.body = styled('body') as FactoryFn<DarkJSX.HTMLTags['body']>;\r\nstyled.br = styled('br') as FactoryFn<DarkJSX.HTMLTags['br']>;\r\nstyled.button = styled('button') as FactoryFn<DarkJSX.HTMLTags['button']>;\r\nstyled.canvas = styled('canvas') as FactoryFn<DarkJSX.HTMLTags['canvas']>;\r\nstyled.caption = styled('caption') as FactoryFn<DarkJSX.HTMLTags['caption']>;\r\nstyled.cite = styled('cite') as FactoryFn<DarkJSX.HTMLTags['cite']>;\r\nstyled.code = styled('code') as FactoryFn<DarkJSX.HTMLTags['code']>;\r\nstyled.col = styled('col') as FactoryFn<DarkJSX.HTMLTags['col']>;\r\nstyled.colgroup = styled('colgroup') as FactoryFn<DarkJSX.HTMLTags['colgroup']>;\r\nstyled.data = styled('data') as FactoryFn<DarkJSX.HTMLTags['data']>;\r\nstyled.datalist = styled('datalist') as FactoryFn<DarkJSX.HTMLTags['datalist']>;\r\nstyled.dd = styled('dd') as FactoryFn<DarkJSX.HTMLTags['dd']>;\r\nstyled.del = styled('del') as FactoryFn<DarkJSX.HTMLTags['del']>;\r\nstyled.details = styled('details') as FactoryFn<DarkJSX.HTMLTags['details']>;\r\nstyled.dfn = styled('dfn') as FactoryFn<DarkJSX.HTMLTags['dfn']>;\r\nstyled.dialog = styled('dialog') as FactoryFn<DarkJSX.HTMLTags['dialog']>;\r\nstyled.div = styled('div') as FactoryFn<DarkJSX.HTMLTags['div']>;\r\nstyled.dl = styled('dl') as FactoryFn<DarkJSX.HTMLTags['dl']>;\r\nstyled.dt = styled('dt') as FactoryFn<DarkJSX.HTMLTags['dt']>;\r\nstyled.em = styled('em') as FactoryFn<DarkJSX.HTMLTags['em']>;\r\nstyled.embed = styled('embed') as FactoryFn<DarkJSX.HTMLTags['embed']>;\r\nstyled.fieldset = styled('fieldset') as FactoryFn<DarkJSX.HTMLTags['fieldset']>;\r\nstyled.figcaption = styled('figcaption') as FactoryFn<DarkJSX.HTMLTags['figcaption']>;\r\nstyled.figure = styled('figure') as FactoryFn<DarkJSX.HTMLTags['figure']>;\r\nstyled.footer = styled('footer') as FactoryFn<DarkJSX.HTMLTags['footer']>;\r\nstyled.form = styled('form') as FactoryFn<DarkJSX.HTMLTags['form']>;\r\nstyled.h1 = styled('h1') as FactoryFn<DarkJSX.HTMLTags['h1']>;\r\nstyled.h2 = styled('h2') as FactoryFn<DarkJSX.HTMLTags['h2']>;\r\nstyled.h3 = styled('h3') as FactoryFn<DarkJSX.HTMLTags['h3']>;\r\nstyled.h4 = styled('h4') as FactoryFn<DarkJSX.HTMLTags['h4']>;\r\nstyled.h5 = styled('h5') as FactoryFn<DarkJSX.HTMLTags['h5']>;\r\nstyled.h6 = styled('h6') as FactoryFn<DarkJSX.HTMLTags['h6']>;\r\nstyled.head = styled('head') as FactoryFn<DarkJSX.HTMLTags['head']>;\r\nstyled.header = styled('header') as FactoryFn<DarkJSX.HTMLTags['header']>;\r\nstyled.hgroup = styled('hgroup') as FactoryFn<DarkJSX.HTMLTags['hgroup']>;\r\nstyled.hr = styled('hr') as FactoryFn<DarkJSX.HTMLTags['hr']>;\r\nstyled.html = styled('html') as FactoryFn<DarkJSX.HTMLTags['html']>;\r\nstyled.i = styled('i') as FactoryFn<DarkJSX.HTMLTags['i']>;\r\nstyled.iframe = styled('iframe') as FactoryFn<DarkJSX.HTMLTags['iframe']>;\r\nstyled.img = styled('img') as FactoryFn<DarkJSX.HTMLTags['img']>;\r\nstyled.input = styled('input') as FactoryFn<DarkJSX.HTMLTags['input']>;\r\nstyled.ins = styled('ins') as FactoryFn<DarkJSX.HTMLTags['ins']>;\r\nstyled.kbd = styled('kbd') as FactoryFn<DarkJSX.HTMLTags['kbd']>;\r\nstyled.label = styled('label') as FactoryFn<DarkJSX.HTMLTags['label']>;\r\nstyled.legend = styled('legend') as FactoryFn<DarkJSX.HTMLTags['legend']>;\r\nstyled.li = styled('li') as FactoryFn<DarkJSX.HTMLTags['li']>;\r\nstyled.link = styled('link') as FactoryFn<DarkJSX.HTMLTags['link']>;\r\nstyled.main = styled('main') as FactoryFn<DarkJSX.HTMLTags['main']>;\r\nstyled.map = styled('map') as FactoryFn<DarkJSX.HTMLTags['map']>;\r\nstyled.mark = styled('mark') as FactoryFn<DarkJSX.HTMLTags['mark']>;\r\nstyled.menu = styled('menu') as FactoryFn<DarkJSX.HTMLTags['menu']>;\r\nstyled.meta = styled('meta') as FactoryFn<DarkJSX.HTMLTags['meta']>;\r\nstyled.meter = styled('meter') as FactoryFn<DarkJSX.HTMLTags['meter']>;\r\nstyled.nav = styled('nav') as FactoryFn<DarkJSX.HTMLTags['nav']>;\r\nstyled.noscript = styled('noscript') as FactoryFn<DarkJSX.HTMLTags['noscript']>;\r\nstyled.object = styled('object') as FactoryFn<DarkJSX.HTMLTags['object']>;\r\nstyled.ol = styled('ol') as FactoryFn<DarkJSX.HTMLTags['ol']>;\r\nstyled.optgroup = styled('optgroup') as FactoryFn<DarkJSX.HTMLTags['optgroup']>;\r\nstyled.option = styled('option') as FactoryFn<DarkJSX.HTMLTags['option']>;\r\nstyled.output = styled('output') as FactoryFn<DarkJSX.HTMLTags['output']>;\r\nstyled.p = styled('p') as FactoryFn<DarkJSX.HTMLTags['p']>;\r\nstyled.param = styled('param') as FactoryFn<DarkJSX.HTMLTags['param']>;\r\nstyled.picture = styled('picture') as FactoryFn<DarkJSX.HTMLTags['picture']>;\r\nstyled.pre = styled('pre') as FactoryFn<DarkJSX.HTMLTags['pre']>;\r\nstyled.progress = styled('progress') as FactoryFn<DarkJSX.HTMLTags['progress']>;\r\nstyled.q = styled('q') as FactoryFn<DarkJSX.HTMLTags['q']>;\r\nstyled.rp = styled('rp') as FactoryFn<DarkJSX.HTMLTags['rp']>;\r\nstyled.rt = styled('rt') as FactoryFn<DarkJSX.HTMLTags['rt']>;\r\nstyled.ruby = styled('ruby') as FactoryFn<DarkJSX.HTMLTags['ruby']>;\r\nstyled.s = styled('s') as FactoryFn<DarkJSX.HTMLTags['s']>;\r\nstyled.samp = styled('samp') as FactoryFn<DarkJSX.HTMLTags['samp']>;\r\nstyled.script = styled('script') as FactoryFn<DarkJSX.HTMLTags['script']>;\r\nstyled.section = styled('section') as FactoryFn<DarkJSX.HTMLTags['section']>;\r\nstyled.select = styled('select') as FactoryFn<DarkJSX.HTMLTags['select']>;\r\nstyled.small = styled('small') as FactoryFn<DarkJSX.HTMLTags['small']>;\r\nstyled.source = styled('source') as FactoryFn<DarkJSX.HTMLTags['source']>;\r\nstyled.span = styled('span') as FactoryFn<DarkJSX.HTMLTags['span']>;\r\nstyled.strong = styled('strong') as FactoryFn<DarkJSX.HTMLTags['strong']>;\r\nstyled.style = styled('style') as FactoryFn<DarkJSX.HTMLTags['style']>;\r\nstyled.sub = styled('sub') as FactoryFn<DarkJSX.HTMLTags['sub']>;\r\nstyled.summary = styled('summary') as FactoryFn<DarkJSX.HTMLTags['summary']>;\r\nstyled.sup = styled('sup') as FactoryFn<DarkJSX.HTMLTags['sup']>;\r\nstyled.table = styled('table') as FactoryFn<DarkJSX.HTMLTags['table']>;\r\nstyled.tbody = styled('tbody') as FactoryFn<DarkJSX.HTMLTags['tbody']>;\r\nstyled.td = styled('td') as FactoryFn<DarkJSX.HTMLTags['td']>;\r\nstyled.template = styled('template') as FactoryFn<DarkJSX.HTMLTags['template']>;\r\nstyled.textarea = styled('textarea') as FactoryFn<DarkJSX.HTMLTags['textarea']>;\r\nstyled.tfoot = styled('tfoot') as FactoryFn<DarkJSX.HTMLTags['tfoot']>;\r\nstyled.th = styled('th') as FactoryFn<DarkJSX.HTMLTags['th']>;\r\nstyled.thead = styled('thead') as FactoryFn<DarkJSX.HTMLTags['thead']>;\r\nstyled.time = styled('time') as FactoryFn<DarkJSX.HTMLTags['time']>;\r\nstyled.title = styled('title') as FactoryFn<DarkJSX.HTMLTags['title']>;\r\nstyled.tr = styled('tr') as FactoryFn<DarkJSX.HTMLTags['tr']>;\r\nstyled.track = styled('track') as FactoryFn<DarkJSX.HTMLTags['track']>;\r\nstyled.u = styled('u') as FactoryFn<DarkJSX.HTMLTags['u']>;\r\nstyled.ul = styled('ul') as FactoryFn<DarkJSX.HTMLTags['ul']>;\r\nstyled.var = styled('var') as FactoryFn<DarkJSX.HTMLTags['var']>;\r\nstyled.video = styled('video') as FactoryFn<DarkJSX.HTMLTags['video']>;\r\nstyled.wbr = styled('wbr') as FactoryFn<DarkJSX.HTMLTags['wbr']>;\r\nstyled.circle = styled('circle') as FactoryFn<DarkJSX.SVGTags['circle']>;\r\nstyled.clipPath = styled('clipPath') as FactoryFn<DarkJSX.SVGTags['clipPath']>;\r\nstyled.defs = styled('defs') as FactoryFn<DarkJSX.SVGTags['defs']>;\r\nstyled.desc = styled('desc') as FactoryFn<DarkJSX.SVGTags['desc']>;\r\nstyled.ellipse = styled('ellipse') as FactoryFn<DarkJSX.SVGTags['ellipse']>;\r\nstyled.feBlend = styled('feBlend') as FactoryFn<DarkJSX.SVGTags['feBlend']>;\r\nstyled.feColorMatrix = styled('feColorMatrix') as FactoryFn<DarkJSX.SVGTags['feColorMatrix']>;\r\nstyled.feComponentTransfer = styled('feComponentTransfer') as FactoryFn<DarkJSX.SVGTags['feComponentTransfer']>;\r\nstyled.feComposite = styled('feComposite') as FactoryFn<DarkJSX.SVGTags['feComposite']>;\r\nstyled.feConvolveMatrix = styled('feConvolveMatrix') as FactoryFn<DarkJSX.SVGTags['feConvolveMatrix']>;\r\nstyled.feDiffuseLighting = styled('feDiffuseLighting') as FactoryFn<DarkJSX.SVGTags['feDiffuseLighting']>;\r\nstyled.feDisplacementMap = styled('feDisplacementMap') as FactoryFn<DarkJSX.SVGTags['feDisplacementMap']>;\r\nstyled.feDistantLight = styled('feDistantLight') as FactoryFn<DarkJSX.SVGTags['feDistantLight']>;\r\nstyled.feFlood = styled('feFlood') as FactoryFn<DarkJSX.SVGTags['feFlood']>;\r\nstyled.feFuncA = styled('feFuncA') as FactoryFn<DarkJSX.SVGTags['feFuncA']>;\r\nstyled.feFuncB = styled('feFuncB') as FactoryFn<DarkJSX.SVGTags['feFuncB']>;\r\nstyled.feFuncG = styled('feFuncG') as FactoryFn<DarkJSX.SVGTags['feFuncG']>;\r\nstyled.feFuncR = styled('feFuncR') as FactoryFn<DarkJSX.SVGTags['feFuncR']>;\r\nstyled.feGaussianBlur = styled('feGaussianBlur') as FactoryFn<DarkJSX.SVGTags['feGaussianBlur']>;\r\nstyled.feImage = styled('feImage') as FactoryFn<DarkJSX.SVGTags['feImage']>;\r\nstyled.feMerge = styled('feMerge') as FactoryFn<DarkJSX.SVGTags['feMerge']>;\r\nstyled.feMergeNode = styled('feMergeNode') as FactoryFn<DarkJSX.SVGTags['feMergeNode']>;\r\nstyled.feMorphology = styled('feMorphology') as FactoryFn<DarkJSX.SVGTags['feMorphology']>;\r\nstyled.feOffset = styled('feOffset') as FactoryFn<DarkJSX.SVGTags['feOffset']>;\r\nstyled.fePointLight = styled('fePointLight') as FactoryFn<DarkJSX.SVGTags['fePointLight']>;\r\nstyled.feSpecularLighting = styled('feSpecularLighting') as FactoryFn<DarkJSX.SVGTags['feSpecularLighting']>;\r\nstyled.feSpotLight = styled('feSpotLight') as FactoryFn<DarkJSX.SVGTags['feSpotLight']>;\r\nstyled.feTile = styled('feTile') as FactoryFn<DarkJSX.SVGTags['feTile']>;\r\nstyled.feTurbulence = styled('feTurbulence') as FactoryFn<DarkJSX.SVGTags['feTurbulence']>;\r\nstyled.filter = styled('filter') as FactoryFn<DarkJSX.SVGTags['filter']>;\r\nstyled.g = styled('g') as FactoryFn<DarkJSX.SVGTags['g']>;\r\nstyled.image = styled('image') as FactoryFn<DarkJSX.SVGTags['image']>;\r\nstyled.line = styled('line') as FactoryFn<DarkJSX.SVGTags['line']>;\r\nstyled.linearGradient = styled('linearGradient') as FactoryFn<DarkJSX.SVGTags['linearGradient']>;\r\nstyled.marker = styled('marker') as FactoryFn<DarkJSX.SVGTags['marker']>;\r\nstyled.mask = styled('mask') as FactoryFn<DarkJSX.SVGTags['mask']>;\r\nstyled.path = styled('path') as FactoryFn<DarkJSX.SVGTags['path']>;\r\nstyled.pattern = styled('pattern') as FactoryFn<DarkJSX.SVGTags['pattern']>;\r\nstyled.polygon = styled('polygon') as FactoryFn<DarkJSX.SVGTags['polygon']>;\r\nstyled.polyline = styled('polyline') as FactoryFn<DarkJSX.SVGTags['polyline']>;\r\nstyled.radialGradient = styled('radialGradient') as FactoryFn<DarkJSX.SVGTags['radialGradient']>;\r\nstyled.rect = styled('rect') as FactoryFn<DarkJSX.SVGTags['rect']>;\r\nstyled.stop = styled('stop') as FactoryFn<DarkJSX.SVGTags['stop']>;\r\nstyled.svg = styled('svg') as FactoryFn<DarkJSX.SVGTags['svg']>;\r\nstyled.switch = styled('switch') as FactoryFn<DarkJSX.SVGTags['switch']>;\r\nstyled.symbol = styled('symbol') as FactoryFn<DarkJSX.SVGTags['symbol']>;\r\nstyled.text = styled('text') as FactoryFn<DarkJSX.SVGTags['text']>;\r\nstyled.textPath = styled('textPath') as FactoryFn<DarkJSX.SVGTags['textPath']>;\r\nstyled.tspan = styled('tspan') as FactoryFn<DarkJSX.SVGTags['tspan']>;\r\nstyled.use = styled('use') as FactoryFn<DarkJSX.SVGTags['use']>;\r\nstyled.view = styled('view') as FactoryFn<DarkJSX.SVGTags['view']>;\r\n\r\nexport { setupGlobal, styled, css, inject, reuse, getTag, filterArgs, detectIsStyled };\r\n","type HighlightItem = {\r\n  text: string;\r\n  highlight: boolean;\r\n};\r\n\r\nconst highlight = {\r\n  match: (text: string, query: string, formatted: string): Array<Array<number>> => {\r\n    const idxs: Array<number> = [];\r\n    const idx = text.toLowerCase().indexOf(query.toLowerCase());\r\n    let idxCorr = 0;\r\n    let queryLengthCorr = 0;\r\n\r\n    if (idx !== -1 && text !== formatted && query.length > 0) {\r\n      for (let i = 0; i < text.length; i++) {\r\n        if (text[i] !== formatted[i + idxs.length]) {\r\n          while (text[i] !== formatted[i + idxs.length]) {\r\n            idxs.push(i + idxs.length);\r\n          }\r\n        }\r\n      }\r\n      for (let i = 0; i < idxs.length; i++) {\r\n        if (idxs[i] <= idx + idxCorr) {\r\n          idxCorr += 1;\r\n        }\r\n        if (idxs[i] < idx + query.length + queryLengthCorr) {\r\n          queryLengthCorr += 1;\r\n        }\r\n      }\r\n    }\r\n\r\n    return idx !== -1 ? [[idx + idxCorr, idx + query.length + queryLengthCorr]] : [];\r\n  },\r\n  parse: (text: string, matches: Array<Array<number>>) => {\r\n    const result: Array<HighlightItem> = [];\r\n\r\n    matches.forEach(match => {\r\n      result.push(\r\n        { text: text.substring(0, match[0]), highlight: false },\r\n        { text: text.substring(match[0], match[1]), highlight: true },\r\n        { text: text.substring(match[1], text.length), highlight: false },\r\n      );\r\n    });\r\n\r\n    if (matches.length === 0) {\r\n      result.push({ text, highlight: false });\r\n    }\r\n\r\n    return result.filter(x => Boolean(x.text));\r\n  },\r\n};\r\n\r\nexport { highlight };\r\n","import { h, Fragment, component, useState, useMemo, useDeferredValue } from '@dark-engine/core';\r\nimport { type SyntheticEvent, createRoot } from '@dark-engine/platform-browser';\r\nimport { styled } from '@dark-engine/styled';\r\n\r\nimport { highlight } from './utils';\r\n\r\nconst Highlight = styled.span<{ $color: string }>`\r\n  color: ${p => p.$color || 'inherit'};\r\n`;\r\n\r\ntype HighlightedTextProps = {\r\n  value: string;\r\n  query: string;\r\n  color?: string;\r\n};\r\n\r\nconst HighlightedText = component<HighlightedTextProps>(props => {\r\n  const { value, query, color = '#E91E63' } = props;\r\n  const matches = highlight.match(value, query, value);\r\n  const parts = highlight.parse(value, matches);\r\n\r\n  return (\r\n    <span>\r\n      {parts.map((x, idx) => {\r\n        return (\r\n          <Highlight key={`${x.text}${idx}`} $color={x.highlight ? color : undefined}>\r\n            {x.text}\r\n          </Highlight>\r\n        );\r\n      })}\r\n    </span>\r\n  );\r\n});\r\n\r\nfunction generateItems() {\r\n  const items: Array<string> = [];\r\n\r\n  for (let i = 0; i < 500; i++) {\r\n    items.push(`Item #${i + 1}`);\r\n  }\r\n\r\n  return items;\r\n}\r\n\r\nconst dummyItems = generateItems();\r\n\r\nfunction filterItems(term: string) {\r\n  if (!term) return dummyItems;\r\n  return dummyItems.filter(x => x.toLowerCase().indexOf(term.toLowerCase()) !== -1);\r\n}\r\n\r\ntype SlowListItemProps = {\r\n  query: string;\r\n  name: string;\r\n};\r\n\r\nconst SlowListItem = component<SlowListItemProps>(({ query, name }) => {\r\n  const startTime = performance.now();\r\n\r\n  while (performance.now() - startTime < 1.5) {\r\n    // Do nothing for 1.5 ms per item to emulate extremely slow code\r\n  }\r\n\r\n  return (\r\n    <li>\r\n      <HighlightedText query={query} value={name} />\r\n    </li>\r\n  );\r\n});\r\n\r\ntype ItemListProps = {\r\n  name: string;\r\n  isStale: boolean;\r\n};\r\n\r\nconst ItemList = component<ItemListProps>(({ name, isStale }) => {\r\n  const items = useMemo(() => {\r\n    const items = filterItems(name);\r\n\r\n    return (\r\n      <>\r\n        {items.map(x => (\r\n          <SlowListItem key={x} query={name} name={x} />\r\n        ))}\r\n      </>\r\n    );\r\n  }, [name]);\r\n\r\n  return <ul style={`color: ${isStale ? '#2196F3' : 'black'}`}>{items}</ul>;\r\n});\r\n\r\nconst App = component(() => {\r\n  const [name, setName] = useState('');\r\n  const deferredName = useDeferredValue(name);\r\n  const isStale = name !== deferredName;\r\n\r\n  const handleInput = (e: SyntheticEvent<InputEvent, HTMLInputElement>) => setName(e.target.value);\r\n\r\n  return (\r\n    <div>\r\n      <div>Try quickly entering the number, erasing and re-entering.</div>\r\n      <div>\r\n        Note: Every list item is artificially slowed down. The lagging version of the UI is marked here in blue.\r\n      </div>\r\n      <br />\r\n      <input value={name} placeholder='type number...' onInput={handleInput} />\r\n      <ItemList name={deferredName} isStale={isStale} />\r\n    </div>\r\n  );\r\n});\r\n\r\ncreateRoot(document.getElementById('root')).render(<App />);\r\n","import { useState } from '../use-state';\r\nimport { startTransition } from '../start-transition';\r\nimport { useMemo } from '../use-memo';\r\n\r\nfunction useDeferredValue<T>(value: T): T {\r\n  const [deferredValue, setDeferredValue] = useState(value);\r\n  const scope = useMemo(() => ({ value }), []);\r\n\r\n  if (scope.value !== value) {\r\n    scope.value = value;\r\n    startTransition(() => setDeferredValue(value));\r\n  }\r\n\r\n  return deferredValue;\r\n}\r\n\r\nexport { useDeferredValue };\r\n","import { $$scope } from '../scope';\r\nimport { useState } from '../use-state';\r\nimport { type Callback } from '../shared';\r\nimport { useEvent } from '../use-event';\r\n\r\nexport type SetPendingStatus = (value: boolean) => void;\r\n\r\nfunction startTransition(callback: Callback) {\r\n  const $scope = $$scope();\r\n\r\n  $scope.setIsTransitionZone(true);\r\n  callback();\r\n  $scope.setIsTransitionZone(false);\r\n}\r\n\r\nfunction useTransition(): [boolean, typeof startTransition] {\r\n  const [isPending, setIsPending] = useState(false);\r\n  const $scope = $$scope();\r\n  const $startTransition = useEvent((callback: Callback) => {\r\n    $scope.setPendingStatusSetter(setIsPending);\r\n    startTransition(callback);\r\n    $scope.setPendingStatusSetter(null);\r\n  });\r\n\r\n  return [isPending, $startTransition];\r\n}\r\n\r\nexport { startTransition, useTransition };\r\n","import { type DarkElement, unmountRoot } from '@dark-engine/core';\r\n\r\nimport { render, roots } from '../render';\r\nimport type { TagNativeElement } from '../native-element';\r\n\r\nfunction createRoot(container: TagNativeElement) {\r\n  return {\r\n    render: (element: DarkElement) => render(element, container),\r\n    unmount: () => unmount(container),\r\n  };\r\n}\r\n\r\nfunction unmount(container: TagNativeElement) {\r\n  const rootId = roots.get(container);\r\n\r\n  unmountRoot(rootId, () => {\r\n    roots.delete(container);\r\n    container.innerHTML = '';\r\n  });\r\n}\r\n\r\nexport { createRoot, unmount };\r\n"],"names":["ROOT","REPLACER","KEY_ATTR","REF_ATTR","CREATE_EFFECT_TAG","UPDATE_EFFECT_TAG","SKIP_EFFECT_TAG","MOVE_MASK","TaskPriority","Flag","ATTR_BLACK_LIST","SKIP_SCAN_OPT","MEMO_SLOT_OPT","STATIC_SLOT_OPT","$$inject","Symbol","Component","constructor","type","token","props","ref","shouldUpdate","displayName","children","this","component","options","$token","factory","defaultInject","detectIsComponent","x","detectIsFunction","o","detectIsUndefined","detectIsString","detectIsObject","detectIsBoolean","detectIsArray","Array","isArray","detectIsNull","detectIsEmpty","getTime","Date","now","dummyFn","trueFn","sameFn","flatten","source","transform","length","list","stack","idx","pop","i","push","detectAreDepsDifferent","prevDeps","nextDeps","max","Math","Object","is","createIndexKey","$$vNode","ATTR_TYPE","VirtualNode","TagVirtualNode","name","attrs","super","NodeType","TAG","TextVirtualNode","TEXT","value","String","CommentVirtualNode","text","COMMENT","View","as","slot","_void","key","from","detectIsTextVirtualNode","detectIsVirtualNode","vNode","detectIsTagVirtualNode","detectIsCommentVirtualNode","detectIsVirtualNodeFactory","detectIsPlainVirtualNode","createReplacer","getElementKey","inst","hasElementFlag","flag","Boolean","hasComponentFlag","hasVirtualNodeFactoryFlag","hasTagVirtualNodeFlag","getElementType","hasChildrenProp","detectAreSameInstanceTypes","prevInst","nextInst","isComponentFactories","nc","createElement","element","defaultRealisation","Error","platform","insertElement","raf","caf","spawn","commit","finishCommit","detectIsDynamic","detectIsPortal","unmountPortal","chunk","detectIsServer","EventEmitter","subscribers","Map","on","e","fn","has","set","Set","get","add","delete","emit","data","forEach","kill","__getSize","size","Scope","root","wip","cursor","unit","mountDeep","mountLevel","mountNav","events","unsubs","actions","candidates","deletions","cancels","asyncEffects","layoutEffects","insertionEffects","resourceId","resources","defers","setPendingStatus","isLayoutEffectsZone","isInsertionEffectsZone","isUpdateZone","isBatchZone","isHydrateZone","isStreamZone","isTransitionZone","isEventZone","isHot","isDynamic","isServer","emitter","resetActions","getActionsById","id","addActionMap","map","replace","insert","remove","move","stable","addReplaceAction","nextKey","addInsertAction","addRemoveAction","prevKey","addMoveAction","addStableAction","copy","scope","getRoot","setRoot","fiber","getWorkInProgress","setWorkInProgress","getNextUnitOfWork","setNextUnitOfWork","getCursorFiber","setCursorFiber","navToChild","navToSibling","navToParent","navToPrev","getMountIndex","setMountDeep","getMountDeep","resetMount","getEvents","addEventUnsubscriber","unsubscribeEvents","getCandidates","addCandidate","resetCandidates","getDeletions","hasDeletion","nextFiber","parent","addDeletion","resetDeletions","addAsyncEffect","resetAsyncEffects","runAsyncEffects","effects","setTimeout","addLayoutEffect","resetLayoutEffects","runLayoutEffects","setIsLayoutEffectsZone","addInsertionEffect","resetInsertionEffects","runInsertionEffects","setIsInsertionEffectsZone","addCancel","applyCancels","resetCancels","getIsLayoutEffectsZone","getIsInsertionEffectsZone","getIsUpdateZone","setIsUpdateZone","getIsBatchZone","setIsBatchZone","getIsHydrateZone","setIsHydrateZone","getIsStreamZone","setIsStreamZone","getIsTransitionZone","setIsTransitionZone","getIsEventZone","setIsEventZone","getIsHot","setIsHot","getPendingStatusSetter","setPendingStatusSetter","flush","getEmitter","defer","getDefers","resetDefers","getResource","setResource","res","getResources","getResourceId","setResourceId","getNextResourceId","runAfterCommit","rootId","scopes","setRootId","$$memo","defaultShouldUpdate","nextProps","keys","detectIsMemo","instance","Memo","memo","getValue","p","n","deps","hook","values","state","$value","detectIsElement","$$fragment","Fragment","Fiber","provider","cc","cec","eidx","mask","tag","child","next","alt","atoms","nextId","mutate","markHost","increment","count","force","$scope","wipFiber","stop","setError","error","catch","static","Hook","owner","walk","onWalk","shouldDeep","shouldStop","skip","getFiberWithElement","$fiber","buildChildNodes","onNode","getKey","buildChildNode","altMap","startEidx","prevIdx","nextIdx","left","right","isFirst","isLast","notifyParents","$$useEffect","createEffect","useEffect","effect","cleanup","undefined","isInsertionEffect","EffectType","INSERTION","isLayoutEffect","LAYOUT","isAsyncEffect","ASYNC","runEffect","dropEffects","$$useLayoutEffect","useLayoutEffect","dropLayoutEffects","$$useInsertionEffect","useInsertionEffect","dropInsertionEffects","shouldUnmountFiber","INSERTION_EFFECT_HOST_MASK","unmountFiber","_","hasPendingPromise","hasRenderError","workLoop","isAsync","shouldYield","hasMoreWork","performUnitOfWork","scheduler","hasPrimaryTask","fork","unmounts","diff","parentFiber","isRight","sync","err","Promise","finally","isDeepWalking","isStream","hasChildren","$inst","createFiber","getAlternate","share","mountChild","mountSibling","prev","shouldMount","pc","mount","hasSameCount","prevKeys","nextKeys","prevKeysMap","nextKeysMap","keyedFibersMap","usedKeysMap","extractKeys","prevKeyFiber","tryOptStaticSlot","hasMove","hasRemove","hasInsert","hasReplace","detectIsStableMemoTree","tryOptMov","tryOptRem","tryOptMemoSlot","reconcile","isUpdate","setup","detectAreSameComponentTypesWithSameKeys","getHook","fromChild","parentId","isMove","isStable","isComponent","result","promise","all","setNextId","args","console","supportConditional","cancel","$$scope$","cancelTask","setValue","resetValue","assign","replaceScope","$tools","MessageChannel","port1","port2","MessagePort","channel","offs","event","callback","off","postMessage","unref","Task","priority","forceAsync","taskRestorer","pendingSetter","nextTaskId","getPriority","getForceAsync","setIsTransition","isTransition","getIsTransition","run","pending","markAsPending","isPending","canPending","markAsUnnecessary","isUnnecessary","getIsUnnecessary","setTaskRestorer","setLocationCreator","locationCreator","createLocation","setPendingSetter","loc","tasks","deep","$loc","split","some","$$loc","indexOf","createRootLocation","queue","HIGH","NORMAL","LOW","deadline","task","scheduledCallback","isMessageLoopRunning","port","performWorkUntilDeadline","bind","reset","schedule","put","execute","high","normal","low","getQueues","hasPrimary","hasLow","detectHasRelatedUpdate","complete","filter","splice","pick","shift","resolve","then","requestCallbackAsync","requestCallback","isBusy","unshift","createUpdate","tools","hasTools","isBatch","isEvent","restore","fromRestore","detectIsFiberAlive","createCallback","callbackOptions","createHookLocation","change","batch","timer","changes","clearTimeout","addBatch","useUpdate","initialValue","update","setState","$shouldUpdate","prevValue","newValue","createTools","applyRef","current","mutableRef","hasOwnProperty","detectIsMutableRef","$$portal","container","innerHTML","getPortalContainer","SyntheticEvent","sourceEvent","target","propagation","stopPropagation","preventDefault","getPropagation","delegateEvent","eventName","handler","eventsMap","handlersMap","$handler","slice","rootHandler","$event","parentElement","dispatchEvent","WeakMap","document","addEventListener","removeEventListener","detectIsEvent","attrName","startsWith","getEventName","toLowerCase","STYLE_ATTR","CLASS_ATTR","CLASS_NAME_ATTR","moves","patches","svgTagNames","voidTagNames","createNativeElementMap","detectIsSvgElement","createElementNS","createTextNode","createComment","createNativeElement","node","setObjectStyle","style","setProperty","toggleAttribute","setAttribute","removeAttribute","patchProperties","tagName","attrValue","patchPropertiesSpecialCasesMap","prototype","getPrototypeOf","descriptor","getOwnPropertyDescriptor","canSetProperty","includes","input","checked","autofocus","focus","textarea","innerText","commitMap","childNodes","nativeElement","Text","splitText","appendNativeElement","insertNativeElement","attrNames","tagElement","addAttributes","commitCreation","sourceNodes","elements","collectElements","sourceFragment","DocumentFragment","elementIdx","removeNativeElement","replaceNativeElement","prevInstance","nextInstance","textContent","prevNode","nextNode","prevAttrs","nextAttrs","getAttributeNames","prevAttrValue","nextAttrValue","updateAttributes","commitUpdate","canRemoveNativeElement","appendChild","sibling","insertBefore","insertNativeElementByIndex","candidate","replaceChild","removeChild","roots","requestAnimationFrame","cancelAnimationFrame","isInjected","STYLED_ATTR","COMPONENTS_ATTR_VALUE","DOT_MARK","MEDIA_QUERY_MARK","CONTAINER_QUERY_MARK","mapProps","Keyframes","getName","getToken","detectIsKeyframes","Token","normalize","trim","markAsDynamic","detectIsToken","StyleRule","generate","NestingRule","className","fns","styles","replaceAll","keyframes","$styles","__","___","$keyframes","MediaQueryRule","nesting","$nesting","ContainerQueryRule","KeyframesRule","FunctionRule","end","isSealed","seal","getIsSealed","getEnd","styleExp","rest","media","detectIsStyleSheet","$media","$container","reduce","acc","StyleSheet","detectIsStyleRule","detectIsNestingRule","detectIsMediaQueryRule","detectIsContainerQueryRule","detectIsKeyframesRule","detectIsFunctionRule","createContext","defaultValue","context","Provider","Consumer","providerValue","subscribe","subscriber","createProvider","useContext","createConsumer","getProvider","hasProvider","unsubscribe","ThemeContext","STYLE_LEVEL","theme","ManagerContext","detectIsPropName","css","last","detectHasMediaQueryMark","detectHasContainerQueryMark","char","manager","detectHasSingleLineCommentEndMark","endsWith","detectHasMultiLineCommentStartMark","detectHasMultiLineCommentEndMark","detectHasFunctionMark","detectHasUrlFnMark","URL_FN_MARK","detectHasKeyframesMark","sub","substring","createEnd","cache","injections","isLoaded","$$styled","styled","selector","globalThis","window","createTag","content","reuse","querySelectorAll","isExtending","detectIsStyled","config","getExtendingConfig","$source","t1","t2","first","$t1","$t2","raw","mergeTemplates","$args","$transform","filterArgs","sheet","sheets","baseName","baseStyle","baseKeyframes","forwardRef","isSwap","$props","$factory","names","keyframesList","classNames","getClassNamesFrom","items","arr","item","uniq","join","$tag","getTag","collectComponentStyle","setupGlobal","t","createStyledComponent","$sheet","rules","genClassName","rule","head","getElement","querySelector","strings","stylesheet","buffer","fnIdx","isSingleLineComment","isMultiLineComment","isPropValue","isUrl","joined","arg","class","h","charCodeAt","phash","abs","a","abbr","address","area","article","aside","audio","b","base","bdi","bdo","blockquote","body","br","button","canvas","caption","cite","code","col","colgroup","datalist","dd","del","details","dfn","dialog","div","dl","dt","em","embed","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","header","hgroup","hr","html","iframe","img","ins","kbd","label","legend","li","link","main","mark","menu","meta","meter","nav","noscript","object","ol","optgroup","option","output","param","picture","pre","progress","q","rp","rt","ruby","s","samp","script","section","select","small","span","strong","summary","sup","table","tbody","td","template","tfoot","th","thead","time","title","tr","track","u","ul","var","video","wbr","circle","clipPath","defs","desc","ellipse","feBlend","feColorMatrix","feComponentTransfer","feComposite","feConvolveMatrix","feDiffuseLighting","feDisplacementMap","feDistantLight","feFlood","feFuncA","feFuncB","feFuncG","feFuncR","feGaussianBlur","feImage","feMerge","feMergeNode","feMorphology","feOffset","fePointLight","feSpecularLighting","feSpotLight","feTile","feTurbulence","g","image","line","linearGradient","marker","path","pattern","polygon","polyline","radialGradient","rect","svg","switch","symbol","textPath","tspan","use","view","Highlight","$color","HighlightedText","query","color","matches","formatted","idxs","idxCorr","queryLengthCorr","highlight","match","dummyItems","generateItems","SlowListItem","startTime","performance","ItemList","isStale","term","App","setName","deferredName","deferredValue","setDeferredValue","startTransition","useDeferredValue","placeholder","onInput","getElementById","render","hydrate","isMounted","isHydrate","rootFiber","unmount","onCompleted","unmountRoot"],"sourceRoot":""}