{"version":3,"file":"build.js","mappings":"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","sources":["webpack://dark-spring-menu/../../packages/core/src/constants.ts","webpack://dark-spring-menu/../../packages/core/src/component/component.ts","webpack://dark-spring-menu/../../packages/core/src/utils/utils.ts","webpack://dark-spring-menu/../../packages/core/src/platform/platform.ts","webpack://dark-spring-menu/../../packages/core/src/emitter/emitter.ts","webpack://dark-spring-menu/../../packages/core/src/scope/scope.ts","webpack://dark-spring-menu/../../packages/core/src/view/view.ts","webpack://dark-spring-menu/../../packages/core/src/fiber/fiber.ts","webpack://dark-spring-menu/../../packages/core/src/memo/memo.ts","webpack://dark-spring-menu/../../packages/core/src/walk/walk.ts","webpack://dark-spring-menu/../../packages/core/src/fragment/fragment.ts","webpack://dark-spring-menu/../../packages/core/src/use-memo/use-memo.ts","webpack://dark-spring-menu/../../packages/core/src/use-effect/use-effect.ts","webpack://dark-spring-menu/../../packages/core/src/use-layout-effect/use-layout-effect.ts","webpack://dark-spring-menu/../../packages/core/src/use-insertion-effect/use-insertion-effect.ts","webpack://dark-spring-menu/../../packages/core/src/unmount/unmount.ts","webpack://dark-spring-menu/../../packages/core/src/workloop/workloop.ts","webpack://dark-spring-menu/../../packages/core/src/scheduler/scheduler.ts","webpack://dark-spring-menu/../../packages/core/src/use-update/use-update.ts","webpack://dark-spring-menu/../../packages/core/src/batch/batch.ts","webpack://dark-spring-menu/../../packages/core/src/element/element.ts","webpack://dark-spring-menu/../../packages/core/src/ref/ref.ts","webpack://dark-spring-menu/../../packages/platform-browser/src/portal/portal.ts","webpack://dark-spring-menu/../../packages/platform-browser/src/events/events.ts","webpack://dark-spring-menu/../../packages/platform-browser/src/constants.ts","webpack://dark-spring-menu/../../packages/platform-browser/src/dom/dom.ts","webpack://dark-spring-menu/../../packages/platform-browser/src/render/render.ts","webpack://dark-spring-menu/../../packages/animations/src/state/state.ts","webpack://dark-spring-menu/../../packages/animations/src/preset/preset.ts","webpack://dark-spring-menu/../../packages/animations/src/shared/shared.ts","webpack://dark-spring-menu/../../packages/core/src/atom/atom.ts","webpack://dark-spring-menu/../../packages/animations/src/spring/spring.ts","webpack://dark-spring-menu/../../packages/animations/src/utils/utils.ts","webpack://dark-spring-menu/../../packages/animations/src/stepper/stepper.ts","webpack://dark-spring-menu/../../packages/animations/src/controller/controller.ts","webpack://dark-spring-menu/../../packages/animations/src/use-transition/use-transition.ts","webpack://dark-spring-menu/../../packages/animations/src/animated/animated.ts","webpack://dark-spring-menu/./index.tsx","webpack://dark-spring-menu/../../packages/core/src/use-state/use-state.ts","webpack://dark-spring-menu/../../packages/core/src/use-callback/use-callback.ts","webpack://dark-spring-menu/../../packages/animations/src/use-spring/use-spring.ts","webpack://dark-spring-menu/../../packages/animations/src/use-springs/use-springs.ts","webpack://dark-spring-menu/../../packages/animations/src/use-chain/use-chain.ts","webpack://dark-spring-menu/../../packages/platform-browser/src/create-root/create-root.tsx"],"sourcesContent":["export const VERSION = '0.25.1';\r\nexport const ROOT = 'dark:root';\r\nexport const REPLACER = 'dark:matter';\r\nexport const INDEX_KEY = 'dark:idx';\r\nexport const KEY_ATTR = 'key';\r\nexport const REF_ATTR = 'ref';\r\nexport const CREATE_EFFECT_TAG = 'C';\r\nexport const UPDATE_EFFECT_TAG = 'U';\r\nexport const DELETE_EFFECT_TAG = 'D';\r\nexport const SKIP_EFFECT_TAG = 'S';\r\nexport const INSERTION_EFFECT_HOST_MASK = 1;\r\nexport const LAYOUT_EFFECT_HOST_MASK = 2;\r\nexport const ASYNC_EFFECT_HOST_MASK = 4;\r\nexport const ATOM_HOST_MASK = 8;\r\nexport const PORTAL_HOST_MASK = 16;\r\nexport const SHADOW_MASK = 32;\r\nexport const FLUSH_MASK = 64;\r\nexport const MOVE_MASK = 128;\r\nexport const HOOK_DELIMETER = ':';\r\nexport const YIELD_INTERVAL = 6;\r\nexport const APP_STATE_ATTR = 'dark-app-state';\r\n\r\nexport enum TaskPriority {\r\n  LOW = 0,\r\n  NORMAL = 1,\r\n  HIGH = 2,\r\n}\r\n\r\nexport enum Flag {\r\n  SKIP_SCAN_OPT = '__skipScanOpt',\r\n  MEMO_SLOT_OPT = '__memoSlotOpt',\r\n  STATIC_SLOT_OPT = '__staticSlotOpt',\r\n}\r\n\r\nexport const FLAGS = {\r\n  __skipScanOpt: true,\r\n  __memoSlotOpt: true,\r\n  __staticSlotOpt: true,\r\n};\r\n\r\nexport const ATTR_BLACK_LIST = {\r\n  [KEY_ATTR]: true,\r\n  [REF_ATTR]: true,\r\n  [Flag.SKIP_SCAN_OPT]: true,\r\n  [Flag.MEMO_SLOT_OPT]: true,\r\n  [Flag.STATIC_SLOT_OPT]: true,\r\n};\r\n","import type { ElementKey, Instance, DarkElement, RefProps, KeyProps, FlagProps } from '../shared';\r\nimport { KEY_ATTR } from '../constants';\r\nimport { error } from '../utils';\r\nimport { type Ref } from '../ref';\r\n\r\nconst $$inject = Symbol('inject');\r\nclass Component<P extends StandardComponentProps = any, R = any> {\r\n  public type: CreateElement<P>;\r\n  public props: P;\r\n  public ref?: Ref<R>;\r\n  public token?: Symbol;\r\n  public displayName?: string;\r\n  public shouldUpdate?: ShouldUpdate<P>;\r\n  public children: Array<Instance> = [];\r\n\r\n  constructor(\r\n    type: CreateElement<P>,\r\n    token: Symbol,\r\n    props: P,\r\n    ref: Ref<R>,\r\n    shouldUpdate: ShouldUpdate<P>,\r\n    displayName: string,\r\n  ) {\r\n    this.type = type;\r\n    this.props = props;\r\n    ref && (this.ref = ref);\r\n    token && (this.token = token);\r\n    shouldUpdate && (this.shouldUpdate = shouldUpdate);\r\n    displayName && (this.displayName = displayName);\r\n  }\r\n}\r\n\r\nfunction component<P extends object, R = unknown>(type: CreateElement<P, R>, options: ComponentOptions = {}) {\r\n  const { token: $token, displayName } = options;\r\n  type Props = P & StandardComponentProps;\r\n  const factory: ComponentFactoryWithPossiblyInject<Props, R> = (props = {} as Props, ref?: Ref<R>) => {\r\n    const { token = $token, shouldUpdate } = factory[$$inject] || defaultInject;\r\n\r\n    if (props.ref) {\r\n      delete props.ref;\r\n\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        process.env.NODE_ENV === 'development' &&\r\n          error(`[Dark]: To use ref you need to wrap the component with forwardRef!`);\r\n      }\r\n    }\r\n\r\n    return new Component(type, token, props, ref, shouldUpdate, displayName);\r\n  };\r\n\r\n  return factory as ComponentFactory<Props, R>;\r\n}\r\n\r\nconst defaultInject: ComponentInject = {};\r\n\r\nconst detectIsComponent = (x: unknown): x is Component => x instanceof Component;\r\n\r\nconst getComponentKey = (x: Component): ElementKey => x.props[KEY_ATTR] ?? null;\r\n\r\nconst hasComponentFlag = (inst: Component, flag: string) => Boolean(inst.props[flag]);\r\n\r\ntype ComponentOptions = Readonly<{\r\n  displayName?: string;\r\n  token?: Symbol;\r\n}>;\r\n\r\ntype ComponentFactoryWithPossiblyInject<P extends object = {}, R = unknown> = {\r\n  (props?: P, ref?: Ref<R>): Component<P, R>;\r\n  [$$inject]?: ComponentInject<P>;\r\n};\r\n\r\ntype CreateElement<P extends StandardComponentProps, R = unknown> = (props: P, ref?: Ref<R>) => DarkElement;\r\n\r\nexport type ComponentInject<P extends object = {}> = Readonly<{\r\n  token?: Symbol;\r\n  shouldUpdate?: ShouldUpdate<P>;\r\n}>;\r\n\r\nexport type ShouldUpdate<P> = (prevProps: P, nextProps: P) => boolean;\r\n\r\nexport type StandardComponentProps = KeyProps & RefProps & FlagProps;\r\n\r\nexport type ComponentFactory<P extends object = {}, R = unknown> = (props?: P, ref?: Ref<R>) => Component<P, R>;\r\n\r\nexport { Component, component, $$inject, detectIsComponent, getComponentKey, hasComponentFlag };\r\n","import type { NestedArray } from '../shared';\r\nimport { INDEX_KEY } from '../constants';\r\n\r\nconst detectIsFunction = (o: any): o is Function => typeof o === 'function';\r\n\r\nconst detectIsUndefined = (o: any): o is undefined => typeof o === 'undefined';\r\n\r\nconst detectIsNumber = (o: any): o is number => typeof o === 'number';\r\n\r\nconst detectIsString = (o: any): o is string => typeof o === 'string';\r\n\r\nconst detectIsTextBased = (o: any): o is string | number => typeof o === 'string' || typeof o === 'number';\r\n\r\nconst detectIsObject = (o: any): o is object => typeof o === 'object';\r\n\r\nconst detectIsBoolean = (o: any): o is boolean => typeof o === 'boolean';\r\n\r\nconst detectIsArray = (o: any): o is Array<any> => Array.isArray(o);\r\n\r\nconst detectIsNull = (o: any): o is null => o === null;\r\n\r\nconst detectIsEmpty = (o: any) => detectIsNull(o) || detectIsUndefined(o);\r\n\r\nconst detectIsFalsy = (o: any) => detectIsEmpty(o) || o === false;\r\n\r\nconst getTime = () => Date.now();\r\n\r\nconst dummyFn = () => {};\r\n\r\nconst trueFn = () => true;\r\n\r\nconst falseFn = () => false;\r\n\r\nconst sameFn = <T = any>(x: T) => x;\r\n\r\nconst error = (...args: Array<any>) => !detectIsUndefined(console) && console.error(...args);\r\n\r\nfunction flatten<T = any>(source: Array<NestedArray<T>>, transform: (x: T) => any = sameFn): Array<T> {\r\n  if (detectIsArray(source)) {\r\n    if (source.length === 0) return [];\r\n  } else {\r\n    return [transform(source)];\r\n  }\r\n  const list: Array<T> = [];\r\n  const stack = [source[0]];\r\n  let idx = 0;\r\n\r\n  while (stack.length > 0) {\r\n    const x = stack.pop();\r\n\r\n    if (detectIsArray(x)) {\r\n      for (let i = x.length - 1; i >= 0; i--) {\r\n        stack.push(x[i]);\r\n      }\r\n    } else {\r\n      list.push(transform(x));\r\n\r\n      if (stack.length === 0 && idx < source.length - 1) {\r\n        idx++;\r\n        stack.push(source[idx]);\r\n      }\r\n    }\r\n  }\r\n\r\n  return list;\r\n}\r\n\r\nfunction keyBy<T = any>(\r\n  list: Array<T>,\r\n  fn: (o: T) => string | number,\r\n  value = false,\r\n): Record<string | number, T | boolean> {\r\n  return list.reduce((acc, x) => ((acc[fn(x)] = value ? x : true), acc), {});\r\n}\r\n\r\nfunction detectAreDepsDifferent(prevDeps: Array<unknown>, nextDeps: Array<unknown>): boolean {\r\n  if (prevDeps === nextDeps) return false;\r\n  const max = Math.max(prevDeps.length, nextDeps.length);\r\n\r\n  for (let i = 0; i < max; i++) {\r\n    if (!Object.is(prevDeps[i], nextDeps[i])) return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nfunction nextTick(callback: () => void) {\r\n  Promise.resolve().then(callback);\r\n}\r\n\r\nconst createIndexKey = (idx: number) => `${INDEX_KEY}:${idx}`;\r\n\r\nexport {\r\n  detectIsFunction,\r\n  detectIsUndefined,\r\n  detectIsNumber,\r\n  detectIsString,\r\n  detectIsTextBased,\r\n  detectIsObject,\r\n  detectIsBoolean,\r\n  detectIsArray,\r\n  detectIsNull,\r\n  detectIsEmpty,\r\n  detectIsFalsy,\r\n  getTime,\r\n  dummyFn,\r\n  trueFn,\r\n  falseFn,\r\n  error,\r\n  flatten,\r\n  keyBy,\r\n  detectAreDepsDifferent,\r\n  nextTick,\r\n  createIndexKey,\r\n};\r\n","import { type Fiber } from '../fiber';\r\nimport { type VirtualNode } from '../view';\r\nimport { type Callback } from '../shared';\r\n\r\nexport type Platform = {\r\n  createElement: <N>(vNode: VirtualNode) => N;\r\n  insertElement: <N>(node: N, idx: number, parent: N) => void;\r\n  raf: typeof requestAnimationFrame;\r\n  caf: typeof cancelAnimationFrame;\r\n  spawn: (callback: Callback) => void;\r\n  commit: (fiber: Fiber) => void;\r\n  finishCommit: () => void;\r\n  detectIsDynamic: () => boolean;\r\n  detectIsPortal: (instance: unknown) => boolean;\r\n  unmountPortal: (fiber: Fiber) => void;\r\n  chunk: (fiber: Fiber) => void;\r\n};\r\n\r\nconst defaultRealisation = () => {\r\n  throw new Error('Function not installed by renderer!');\r\n};\r\n\r\nconst platform: Platform = {\r\n  createElement: defaultRealisation,\r\n  insertElement: defaultRealisation,\r\n  raf: defaultRealisation,\r\n  caf: defaultRealisation,\r\n  spawn: defaultRealisation,\r\n  commit: defaultRealisation,\r\n  finishCommit: defaultRealisation,\r\n  detectIsDynamic: defaultRealisation,\r\n  detectIsPortal: defaultRealisation,\r\n  unmountPortal: defaultRealisation,\r\n  chunk: defaultRealisation,\r\n};\r\n\r\nconst detectIsServer = () => !platform.detectIsDynamic();\r\n\r\nexport { platform, detectIsServer };\r\n","import { type SubscriberWithValue } from '../shared';\r\n\r\ntype EventName = 'finish' | 'chunk';\r\n\r\nclass EventEmitter<E extends string = EventName, T = unknown> {\r\n  private subscribers: Map<Partial<E>, Set<SubscriberWithValue<unknown>>> = new Map();\r\n\r\n  on<T>(e: E, fn: SubscriberWithValue<T>) {\r\n    !this.subscribers.has(e) && this.subscribers.set(e, new Set());\r\n    this.subscribers.get(e).add(fn);\r\n\r\n    return () => this.subscribers.has(e) && this.subscribers.get(e).delete(fn);\r\n  }\r\n\r\n  emit(e: E, data?: T) {\r\n    this.subscribers.has(e) && this.subscribers.get(e).forEach(x => x(data));\r\n  }\r\n\r\n  kill() {\r\n    this.subscribers = new Map();\r\n  }\r\n\r\n  __getSize() {\r\n    return this.subscribers.size;\r\n  }\r\n}\r\n\r\nexport { EventEmitter };\r\n","import type { Callback, ElementKey, AppResources, AppResource } from '../shared';\r\nimport { type SetPendingStatus } from '../start-transition';\r\nimport { platform, detectIsServer } from '../platform';\r\nimport { EventEmitter } from '../emitter';\r\nimport { type Fiber } from '../fiber';\r\n\r\nclass Scope {\r\n  private root: Fiber = null;\r\n  private wip: Fiber = null;\r\n  private cursor: Fiber = null;\r\n  private unit: Fiber = null;\r\n  private mountDeep = true;\r\n  private mountLevel = 0;\r\n  private mountNav: Record<number, number> = {};\r\n  private events: Map<string, WeakMap<object, Function>> = new Map();\r\n  private unsubs: Set<Callback> = new Set();\r\n  private actions: Actions = {};\r\n  private candidates: Set<Fiber> = new Set();\r\n  private deletions: Set<Fiber> = new Set();\r\n  private cancels: Array<Callback> = [];\r\n  private asyncEffects: Set<Callback> = new Set();\r\n  private layoutEffects: Set<Callback> = new Set();\r\n  private insertionEffects: Set<Callback> = new Set();\r\n  private resourceId = 0;\r\n  private resources: AppResources = new Map();\r\n  private defers: Array<() => Promise<unknown>> = [];\r\n  private setPendingStatus: SetPendingStatus = null;\r\n  private isLayoutEffectsZone = false;\r\n  private isInsertionEffectsZone = false;\r\n  private isUpdateZone = false;\r\n  private isBatchZone = false;\r\n  private isHydrateZone = false;\r\n  private isStreamZone = false;\r\n  private isTransitionZone = false;\r\n  private isEventZone = false;\r\n  private isHot = false;\r\n  private isDynamic = platform.detectIsDynamic();\r\n  private isServer = detectIsServer();\r\n  private emitter = new EventEmitter();\r\n\r\n  private resetActions() {\r\n    this.actions = {};\r\n  }\r\n\r\n  getActionsById(id: number) {\r\n    return this.actions[id];\r\n  }\r\n\r\n  addActionMap(id: number, map: Record<ElementKey, Fiber>) {\r\n    this.actions[id] = {\r\n      map,\r\n      replace: null,\r\n      insert: null,\r\n      remove: null,\r\n      move: null,\r\n      stable: null,\r\n    };\r\n  }\r\n\r\n  addReplaceAction(id: number, nextKey: ElementKey) {\r\n    !this.actions[id].replace && (this.actions[id].replace = {});\r\n    this.actions[id].replace[nextKey] = true;\r\n  }\r\n\r\n  addInsertAction(id: number, nextKey: ElementKey) {\r\n    !this.actions[id].insert && (this.actions[id].insert = {});\r\n    this.actions[id].insert[nextKey] = true;\r\n  }\r\n\r\n  addRemoveAction(id: number, prevKey: ElementKey) {\r\n    !this.actions[id].remove && (this.actions[id].remove = {});\r\n    this.actions[id].remove[prevKey] = true;\r\n  }\r\n\r\n  addMoveAction(id: number, nextKey: ElementKey) {\r\n    !this.actions[id].move && (this.actions[id].move = {});\r\n    this.actions[id].move[nextKey] = true;\r\n  }\r\n\r\n  addStableAction(id: number, nextKey: ElementKey) {\r\n    !this.actions[id].stable && (this.actions[id].stable = {});\r\n    this.actions[id].stable[nextKey] = true;\r\n  }\r\n\r\n  copy() {\r\n    const scope = new Scope();\r\n\r\n    scope.root = null;\r\n    scope.wip = null;\r\n    scope.cursor = null;\r\n    scope.unit = this.unit;\r\n    scope.mountDeep = this.mountDeep;\r\n    scope.mountLevel = this.mountLevel;\r\n    scope.mountNav = { ...this.mountNav };\r\n    scope.events = this.events;\r\n    scope.unsubs = this.unsubs;\r\n    scope.actions = { ...this.actions };\r\n    scope.candidates = new Set([...this.candidates]);\r\n    scope.deletions = new Set([...this.deletions]);\r\n    scope.asyncEffects = new Set([...this.asyncEffects]);\r\n    scope.layoutEffects = new Set([...this.layoutEffects]);\r\n    scope.insertionEffects = new Set([...this.insertionEffects]);\r\n    scope.isUpdateZone = this.isUpdateZone;\r\n    scope.emitter = this.emitter;\r\n\r\n    return scope;\r\n  }\r\n\r\n  getRoot() {\r\n    return this.root;\r\n  }\r\n\r\n  setRoot(fiber: Fiber) {\r\n    this.root = fiber;\r\n  }\r\n\r\n  getWorkInProgress() {\r\n    return this.wip;\r\n  }\r\n\r\n  setWorkInProgress(fiber: Fiber) {\r\n    this.wip = fiber;\r\n  }\r\n\r\n  getNextUnitOfWork() {\r\n    return this.unit;\r\n  }\r\n\r\n  setNextUnitOfWork(fiber: Fiber) {\r\n    this.unit = fiber;\r\n  }\r\n\r\n  getCursorFiber() {\r\n    return this.cursor;\r\n  }\r\n\r\n  setCursorFiber(fiber: Fiber) {\r\n    this.cursor = fiber;\r\n  }\r\n\r\n  navToChild() {\r\n    this.mountLevel = this.mountLevel + 1;\r\n    this.mountNav[this.mountLevel] = 0;\r\n  }\r\n\r\n  navToSibling() {\r\n    this.mountNav[this.mountLevel] = this.mountNav[this.mountLevel] + 1;\r\n  }\r\n\r\n  navToParent() {\r\n    this.mountLevel = this.mountLevel - 1;\r\n  }\r\n\r\n  navToPrev() {\r\n    const idx = this.getMountIndex();\r\n\r\n    if (idx === 0) {\r\n      this.navToParent();\r\n      this.setMountDeep(true);\r\n    } else {\r\n      this.mountNav[this.mountLevel] = this.mountNav[this.mountLevel] - 1;\r\n      this.setMountDeep(false);\r\n    }\r\n  }\r\n\r\n  getMountIndex() {\r\n    return this.mountNav[this.mountLevel];\r\n  }\r\n\r\n  getMountDeep() {\r\n    return this.mountDeep;\r\n  }\r\n\r\n  setMountDeep(value: boolean) {\r\n    this.mountDeep = value;\r\n  }\r\n\r\n  resetMount() {\r\n    this.mountLevel = 0;\r\n    this.mountNav = {};\r\n    this.mountDeep = true;\r\n  }\r\n\r\n  getEvents() {\r\n    return this.events;\r\n  }\r\n\r\n  addEventUnsubscriber(fn: Callback) {\r\n    this.unsubs.add(fn);\r\n  }\r\n\r\n  unsubscribeEvents() {\r\n    this.unsubs.forEach(x => x());\r\n    this.unsubs = new Set();\r\n  }\r\n\r\n  getCandidates() {\r\n    return this.candidates;\r\n  }\r\n\r\n  addCandidate(fiber: Fiber) {\r\n    this.candidates.add(fiber);\r\n  }\r\n\r\n  resetCandidates() {\r\n    this.candidates = new Set();\r\n  }\r\n\r\n  getDeletions() {\r\n    return this.deletions;\r\n  }\r\n\r\n  hasDeletion(fiber: Fiber) {\r\n    let nextFiber = fiber;\r\n\r\n    while (nextFiber) {\r\n      if (this.deletions.has(nextFiber)) return true;\r\n      nextFiber = nextFiber.parent;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  addDeletion(fiber: Fiber) {\r\n    !this.hasDeletion(fiber) && this.deletions.add(fiber);\r\n  }\r\n\r\n  resetDeletions() {\r\n    this.deletions = new Set();\r\n  }\r\n\r\n  addAsyncEffect(fn: Callback) {\r\n    this.asyncEffects.add(fn);\r\n  }\r\n\r\n  resetAsyncEffects() {\r\n    this.asyncEffects = new Set();\r\n  }\r\n\r\n  runAsyncEffects() {\r\n    if (!this.isDynamic) return;\r\n    const effects = this.asyncEffects;\r\n    effects.size > 0 && setTimeout(() => effects.forEach(fn => fn()));\r\n  }\r\n\r\n  addLayoutEffect(fn: Callback) {\r\n    this.layoutEffects.add(fn);\r\n  }\r\n\r\n  resetLayoutEffects() {\r\n    this.layoutEffects = new Set();\r\n  }\r\n\r\n  runLayoutEffects() {\r\n    if (!this.isDynamic) return;\r\n    this.setIsLayoutEffectsZone(true);\r\n    this.layoutEffects.forEach(fn => fn());\r\n    this.setIsLayoutEffectsZone(false);\r\n  }\r\n\r\n  addInsertionEffect(fn: Callback) {\r\n    this.insertionEffects.add(fn);\r\n  }\r\n\r\n  resetInsertionEffects() {\r\n    this.insertionEffects = new Set();\r\n  }\r\n\r\n  runInsertionEffects() {\r\n    if (!this.isDynamic) return;\r\n    this.setIsInsertionEffectsZone(true);\r\n    this.insertionEffects.forEach(fn => fn());\r\n    this.setIsInsertionEffectsZone(false);\r\n  }\r\n\r\n  addCancel(fn: Callback) {\r\n    this.cancels.push(fn);\r\n  }\r\n\r\n  applyCancels() {\r\n    for (let i = this.cancels.length - 1; i >= 0; i--) {\r\n      this.cancels[i]();\r\n    }\r\n  }\r\n\r\n  resetCancels() {\r\n    this.cancels = [];\r\n  }\r\n\r\n  getIsLayoutEffectsZone() {\r\n    return this.isLayoutEffectsZone;\r\n  }\r\n\r\n  setIsLayoutEffectsZone(value: boolean) {\r\n    this.isLayoutEffectsZone = value;\r\n  }\r\n\r\n  getIsInsertionEffectsZone() {\r\n    return this.isInsertionEffectsZone;\r\n  }\r\n\r\n  setIsInsertionEffectsZone(value: boolean) {\r\n    this.isInsertionEffectsZone = value;\r\n  }\r\n\r\n  getIsUpdateZone() {\r\n    return this.isUpdateZone;\r\n  }\r\n\r\n  setIsUpdateZone(value: boolean) {\r\n    this.isUpdateZone = value;\r\n  }\r\n\r\n  getIsBatchZone() {\r\n    return this.isBatchZone;\r\n  }\r\n\r\n  setIsBatchZone(value: boolean) {\r\n    this.isBatchZone = value;\r\n  }\r\n\r\n  getIsHydrateZone() {\r\n    return this.isHydrateZone;\r\n  }\r\n\r\n  setIsHydrateZone(value: boolean) {\r\n    this.isHydrateZone = value;\r\n  }\r\n\r\n  getIsStreamZone() {\r\n    return this.isStreamZone;\r\n  }\r\n\r\n  setIsStreamZone(value: boolean) {\r\n    this.isStreamZone = value;\r\n  }\r\n\r\n  getIsTransitionZone() {\r\n    return this.isTransitionZone;\r\n  }\r\n\r\n  setIsTransitionZone(value: boolean) {\r\n    this.isTransitionZone = value;\r\n  }\r\n\r\n  getIsEventZone() {\r\n    return this.isEventZone;\r\n  }\r\n\r\n  setIsEventZone(value: boolean) {\r\n    this.isEventZone = value;\r\n  }\r\n\r\n  getIsHot() {\r\n    return this.isHot;\r\n  }\r\n\r\n  setIsHot(value: boolean) {\r\n    this.isHot = value;\r\n  }\r\n\r\n  getPendingStatusSetter() {\r\n    return this.setPendingStatus;\r\n  }\r\n\r\n  setPendingStatusSetter(fn: SetPendingStatus) {\r\n    this.setPendingStatus = fn;\r\n  }\r\n\r\n  flush() {\r\n    !this.isUpdateZone && this.setRoot(this.wip); // !\r\n    this.setWorkInProgress(null);\r\n    this.setNextUnitOfWork(null);\r\n    this.setCursorFiber(null);\r\n    this.resetMount();\r\n    this.resetCandidates();\r\n    this.resetDeletions();\r\n    this.resetCancels();\r\n    this.resetInsertionEffects();\r\n    this.resetLayoutEffects();\r\n    this.resetAsyncEffects();\r\n    this.setIsHydrateZone(false);\r\n    this.setIsUpdateZone(false);\r\n    this.resetActions();\r\n  }\r\n\r\n  getEmitter() {\r\n    return this.emitter;\r\n  }\r\n\r\n  defer(fn: () => Promise<unknown>) {\r\n    this.defers.push(fn);\r\n  }\r\n\r\n  getDefers() {\r\n    return this.defers;\r\n  }\r\n\r\n  resetDefers() {\r\n    this.defers = [];\r\n  }\r\n\r\n  getResource(id: number) {\r\n    return this.resources.get(id);\r\n  }\r\n\r\n  setResource(id: number, res: AppResource) {\r\n    this.resources.set(id, res);\r\n  }\r\n\r\n  getResources() {\r\n    return this.resources;\r\n  }\r\n\r\n  getResourceId() {\r\n    return this.resourceId;\r\n  }\r\n\r\n  setResourceId(id: number) {\r\n    this.resourceId = id;\r\n  }\r\n\r\n  getNextResourceId() {\r\n    return ++this.resourceId;\r\n  }\r\n\r\n  runAfterCommit() {\r\n    this.resources = new Map();\r\n    this.isServer && (this.resourceId = 0);\r\n  }\r\n}\r\n\r\ntype Actions = Record<\r\n  number,\r\n  {\r\n    map: Record<ElementKey, Fiber>;\r\n    replace: Record<ElementKey, true>;\r\n    insert: Record<ElementKey, true>;\r\n    remove: Record<ElementKey, true>;\r\n    move: Record<ElementKey, true>;\r\n    stable: Record<ElementKey, true>;\r\n  }\r\n>;\r\n\r\nlet rootId: number = null;\r\nconst scopes = new Map<number, Scope>();\r\n\r\nconst getRootId = () => rootId;\r\n\r\nconst setRootId = (id: number) => {\r\n  rootId = id;\r\n  !scopes.has(rootId) && scopes.set(rootId, new Scope());\r\n};\r\n\r\nconst removeScope = (id: number) => scopes.delete(id);\r\n\r\nconst replaceScope = (scope: Scope, id: number = rootId) => {\r\n  Object.assign(scopes.get(id), scope);\r\n};\r\n\r\nconst $$scope = (id: number = rootId) => scopes.get(id);\r\n\r\nexport { type Scope, getRootId, setRootId, removeScope, replaceScope, $$scope };\r\n","import type { ElementKey, DarkElement, Instance, SlotProps, RefProps, KeyProps, FlagProps } from '../shared';\r\nimport { type Component, detectIsComponent, getComponentKey, hasComponentFlag } from '../component';\r\nimport { detectIsArray, detectIsFunction } from '../utils';\r\nimport { REPLACER, KEY_ATTR } from '../constants';\r\nimport { $$scope } from '../scope';\r\n\r\nconst $$vNode = Symbol('vNode');\r\nconst ATTR_TYPE = 'type';\r\n\r\nclass VirtualNode {\r\n  public type: NodeType = null;\r\n\r\n  constructor(type: NodeType) {\r\n    this.type = type;\r\n  }\r\n}\r\n\r\nclass TagVirtualNode extends VirtualNode {\r\n  public name: string;\r\n  public attrs: Record<string, any>;\r\n  public children: Array<TextVirtualNode | CommentVirtualNode | TagVirtualNode | VirtualNodeFactory | Component>;\r\n\r\n  constructor(name: string, attrs: TagVirtualNode['attrs'], children: TagVirtualNode['children']) {\r\n    super(NodeType.TAG);\r\n    this.name = name;\r\n    this.attrs = attrs;\r\n    this.children = children;\r\n  }\r\n}\r\n\r\nclass TextVirtualNode extends VirtualNode {\r\n  public value: string;\r\n\r\n  constructor(source: TextSource) {\r\n    super(NodeType.TEXT);\r\n    this.value = String(source);\r\n  }\r\n}\r\n\r\nclass CommentVirtualNode extends VirtualNode {\r\n  public value = '';\r\n\r\n  constructor(text: string) {\r\n    super(NodeType.COMMENT);\r\n    this.value = text;\r\n  }\r\n}\r\n\r\nfunction View(options: ViewOptions) {\r\n  const factory: TagVirtualNodeFactory = () => {\r\n    const { as: name, slot, _void = false, ...attrs } = options;\r\n    const children = (_void ? [] : detectIsArray(slot) ? slot : slot ? [slot] : []) as TagVirtualNode['children'];\r\n\r\n    return new TagVirtualNode(name, attrs, children);\r\n  };\r\n\r\n  factory[$$vNode] = true;\r\n  factory[ATTR_TYPE] = options.as;\r\n  factory[KEY_ATTR] = options.key;\r\n\r\n  return factory;\r\n}\r\n\r\nconst Text = (source: TextSource) => new TextVirtualNode(source);\r\n\r\nText.from = (source: DarkElement) => (detectIsTextVirtualNode(source) ? source.value : source + '');\r\n\r\nconst Comment = (text: string) => new CommentVirtualNode(text);\r\n\r\nconst detectIsVirtualNode = (vNode: unknown): vNode is VirtualNode => vNode instanceof VirtualNode;\r\n\r\nconst detectIsTagVirtualNode = (vNode: unknown): vNode is TagVirtualNode => vNode instanceof TagVirtualNode;\r\n\r\nconst detectIsCommentVirtualNode = (vNode: unknown): vNode is CommentVirtualNode => vNode instanceof CommentVirtualNode;\r\n\r\nconst detectIsTextVirtualNode = (vNode: unknown): vNode is TextVirtualNode => vNode instanceof TextVirtualNode;\r\n\r\nconst detectIsVirtualNodeFactory = (factory: unknown): factory is VirtualNodeFactory =>\r\n  detectIsFunction(factory) && factory[$$vNode] === true;\r\n\r\nconst getTagVirtualNodeKey = (vNode: TagVirtualNode): ElementKey | null =>\r\n  vNode.attrs ? vNode.attrs[KEY_ATTR] ?? null : null;\r\n\r\nconst hasTagVirtualNodeFlag = (vNode: TagVirtualNode, flag: string) => Boolean(vNode.attrs && vNode.attrs[flag]);\r\n\r\nconst getVirtualNodeFactoryKey = (factory: VirtualNodeFactory): ElementKey | null => factory[KEY_ATTR] ?? null;\r\n\r\nconst hasVirtualNodeFactoryFlag = (factory: VirtualNodeFactory, flag: string) => Boolean(factory[flag]);\r\n\r\nconst detectIsPlainVirtualNode = (vNode: unknown): vNode is PlainVirtualNode =>\r\n  detectIsTextVirtualNode(vNode) || detectIsCommentVirtualNode(vNode);\r\n\r\nconst createReplacer = () => new CommentVirtualNode(REPLACER);\r\n\r\nconst detectIsReplacer = (vNode: unknown) => detectIsCommentVirtualNode(vNode) && vNode.value === REPLACER;\r\n\r\nfunction getElementKey(inst: Instance): ElementKey | null {\r\n  return detectIsComponent(inst)\r\n    ? getComponentKey(inst)\r\n    : detectIsVirtualNodeFactory(inst)\r\n    ? getVirtualNodeFactoryKey(inst)\r\n    : detectIsTagVirtualNode(inst)\r\n    ? getTagVirtualNodeKey(inst)\r\n    : null;\r\n}\r\n\r\nfunction hasElementFlag(inst: Instance, flag: string) {\r\n  return detectIsComponent(inst)\r\n    ? hasComponentFlag(inst, flag)\r\n    : detectIsVirtualNodeFactory(inst)\r\n    ? hasVirtualNodeFactoryFlag(inst, flag)\r\n    : detectIsTagVirtualNode(inst)\r\n    ? hasTagVirtualNodeFlag(inst, flag)\r\n    : false;\r\n}\r\n\r\nfunction getElementType(inst: Instance): string | Function {\r\n  return detectIsComponent(inst)\r\n    ? inst.type\r\n    : detectIsVirtualNodeFactory(inst)\r\n    ? inst[ATTR_TYPE]\r\n    : detectIsTagVirtualNode(inst)\r\n    ? inst.name\r\n    : detectIsVirtualNode(inst)\r\n    ? inst.type\r\n    : null;\r\n}\r\n\r\nfunction hasChildrenProp(inst: Instance): inst is TagVirtualNode | Component {\r\n  return detectIsTagVirtualNode(inst) || detectIsComponent(inst);\r\n}\r\n\r\nfunction detectAreSameInstanceTypes(prevInst: Instance, nextInst: Instance, isComponentFactories = false) {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    if (process.env.NODE_ENV === 'development' && $$scope().getIsHot()) {\r\n      if (detectIsComponent(prevInst) && detectIsComponent(nextInst)) {\r\n        return prevInst.displayName === nextInst.displayName;\r\n      }\r\n    }\r\n  }\r\n\r\n  if (isComponentFactories) {\r\n    const pc = prevInst as Component;\r\n    const nc = nextInst as Component;\r\n\r\n    return pc.type === nc.type;\r\n  }\r\n\r\n  return getElementType(prevInst) === getElementType(nextInst);\r\n}\r\n\r\nfunction detectAreSameComponentTypesWithSameKeys(prevInst: Instance | null, nextInst: Instance | null) {\r\n  if (\r\n    prevInst &&\r\n    nextInst &&\r\n    detectIsComponent(prevInst) &&\r\n    detectIsComponent(nextInst) &&\r\n    detectAreSameInstanceTypes(prevInst, nextInst, true)\r\n  ) {\r\n    return getElementKey(prevInst) === getElementKey(nextInst);\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\ntype TextSource = string | number;\r\n\r\nexport type VirtualNodeFactory = () => VirtualNode;\r\n\r\nexport type TagVirtualNodeFactory = () => TagVirtualNode;\r\n\r\nexport type PlainVirtualNode = TextVirtualNode | CommentVirtualNode;\r\n\r\nexport type ViewOptions = {\r\n  as: string;\r\n  _void?: boolean;\r\n  [prop: string]: any;\r\n} & Partial<SlotProps> &\r\n  RefProps &\r\n  KeyProps &\r\n  FlagProps;\r\n\r\nexport enum NodeType {\r\n  TAG = 'TAG',\r\n  TEXT = 'TEXT',\r\n  COMMENT = 'COMMENT',\r\n}\r\n\r\nexport {\r\n  View,\r\n  Text,\r\n  Comment,\r\n  VirtualNode,\r\n  TagVirtualNode,\r\n  TextVirtualNode,\r\n  CommentVirtualNode,\r\n  createReplacer,\r\n  detectIsReplacer,\r\n  getElementKey,\r\n  hasElementFlag,\r\n  getElementType,\r\n  hasChildrenProp,\r\n  detectIsVirtualNode,\r\n  detectIsTagVirtualNode,\r\n  detectIsCommentVirtualNode,\r\n  detectIsTextVirtualNode,\r\n  detectIsPlainVirtualNode,\r\n  detectIsVirtualNodeFactory,\r\n  detectAreSameInstanceTypes,\r\n  detectAreSameComponentTypesWithSameKeys,\r\n};\r\n","import { detectIsTagVirtualNode, detectIsPlainVirtualNode, detectAreSameComponentTypesWithSameKeys } from '../view';\r\nimport { type Instance, type Callback, type TimerId } from '../shared';\r\nimport { type Context, type ContextProviderValue } from '../context';\r\nimport { detectIsComponent } from '../component';\r\nimport { detectIsFunction } from '../utils';\r\nimport { type Atom } from '../atom';\r\nimport { $$scope } from '../scope';\r\n\r\nclass Fiber<N = NativeElement> {\r\n  id = 0;\r\n  cc = 0; // child fibers count\r\n  cec = 0; // child native elements count\r\n  idx = 0; // idx of fiber in the parent fiber\r\n  eidx = 0; // native element idx\r\n  mask = 0; // bit mask\r\n  element: N = null; // native element\r\n  tag: string = null; // effect tag (CREATE, UPDATE, DELETE, SKIP)\r\n  parent: Fiber<N> = null; // parent fiber\r\n  child: Fiber<N> = null; // child fiber\r\n  next: Fiber<N> = null; // next sibling fiber\r\n  alt: Fiber<N> = null; // alternate fiber (previous)\r\n  inst: Instance = null; // instance of component or virtual node\r\n  hook: Hook | null = null; // hook\r\n  provider: Map<Context, ContextProviderValue> = null; // provider of context\r\n  atoms: Map<Atom, Callback> = null;\r\n  marker: string; // for dev\r\n  batch: Batch;\r\n  catch: (error: Error) => void;\r\n\r\n  constructor(hook: Hook = null, provider: Fiber['provider'] = null, idx = 0) {\r\n    this.id = ++Fiber.nextId;\r\n    this.idx = idx;\r\n    hook && (this.hook = hook);\r\n    provider && (this.provider = provider);\r\n  }\r\n\r\n  mutate(fiber: Partial<Fiber<N>>) {\r\n    const keys = Object.keys(fiber);\r\n\r\n    for (const key of keys) {\r\n      this[key] = fiber[key];\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  markHost(mask: number) {\r\n    this.mask |= mask;\r\n    this.parent && !(this.parent.mask & mask) && this.parent.markHost(mask);\r\n  }\r\n\r\n  increment(count = 1, force = false) {\r\n    if (!this.parent) return;\r\n    const $scope = $$scope();\r\n    const isUpdateZone = $scope.getIsUpdateZone();\r\n    const wipFiber = $scope.getWorkInProgress();\r\n    const stop = isUpdateZone && wipFiber.parent === this.parent;\r\n\r\n    if (\r\n      detectIsPlainVirtualNode(this.inst) ||\r\n      (detectIsTagVirtualNode(this.inst) && this.inst.children?.length === 0)\r\n    ) {\r\n      this.cec = 1;\r\n    }\r\n\r\n    if (isUpdateZone && stop && !force) return;\r\n\r\n    this.parent.cec += count;\r\n\r\n    if (!this.parent.element) {\r\n      this.parent.increment(count);\r\n    }\r\n  }\r\n\r\n  setError(error: Error) {\r\n    if (detectIsFunction(this.catch)) {\r\n      this.catch(error);\r\n    } else if (this.parent) {\r\n      this.parent.setError(error);\r\n    }\r\n  }\r\n\r\n  static setNextId(id: number) {\r\n    Fiber.nextId = id;\r\n  }\r\n\r\n  private static nextId = 0;\r\n}\r\n\r\nclass Hook<T = any> {\r\n  id = 0;\r\n  idx = 0;\r\n  values: Array<T> = [];\r\n  owner: Fiber = null;\r\n  private static nextId = 0;\r\n\r\n  constructor() {\r\n    this.id = ++Hook.nextId;\r\n  }\r\n}\r\n\r\nfunction getHook(alt: Fiber, prevInst: Instance, nextInst: Instance): Hook | null {\r\n  if (alt && detectAreSameComponentTypesWithSameKeys(prevInst, nextInst)) return alt.hook;\r\n  if (detectIsComponent(nextInst)) return new Hook();\r\n\r\n  return null;\r\n}\r\n\r\ntype Batch = {\r\n  timer: TimerId;\r\n  changes: Array<Callback>;\r\n};\r\n\r\nexport type NativeElement = unknown;\r\nexport type HookValue<T = any> = { deps: Array<any>; value: T };\r\n\r\nexport { Fiber, Hook, getHook };\r\n","import {\r\n  type ComponentFactory,\r\n  type StandardComponentProps,\r\n  type ShouldUpdate,\r\n  type ComponentInject,\r\n  $$inject,\r\n  detectIsComponent,\r\n} from '../component';\r\nimport type { SlotProps, RefProps } from '../shared';\r\n\r\nconst $$memo = Symbol('memo');\r\n\r\nconst defaultShouldUpdate = (props: {}, nextProps: {}): boolean => {\r\n  const keys = Object.keys(nextProps);\r\n\r\n  for (const key of keys) {\r\n    if (key !== 'slot' && nextProps[key] !== props[key]) return true;\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\nfunction memo<P extends object, R = unknown>(\r\n  factory: ComponentFactory<P, R>,\r\n  shouldUpdate: ShouldUpdate<P & SlotProps> = defaultShouldUpdate,\r\n) {\r\n  type P1 = P & Omit<StandardComponentProps, 'ref'> & RefProps<R>;\r\n\r\n  factory[$$inject] = {\r\n    token: $$memo,\r\n    shouldUpdate,\r\n  } as ComponentInject<P1>;\r\n\r\n  return factory as ComponentFactory<P1, R>;\r\n}\r\n\r\nconst detectIsMemo = (instance: unknown) => detectIsComponent(instance) && instance.token === $$memo;\r\n\r\nexport { memo, detectIsMemo };\r\n","import {\r\n  DELETE_EFFECT_TAG,\r\n  UPDATE_EFFECT_TAG,\r\n  SKIP_EFFECT_TAG,\r\n  INSERTION_EFFECT_HOST_MASK,\r\n  LAYOUT_EFFECT_HOST_MASK,\r\n  ASYNC_EFFECT_HOST_MASK,\r\n  ATOM_HOST_MASK,\r\n  PORTAL_HOST_MASK,\r\n  MOVE_MASK,\r\n  HOOK_DELIMETER,\r\n} from '../constants';\r\nimport { Fiber } from '../fiber';\r\nimport { platform } from '../platform';\r\nimport { type TagVirtualNode, getElementKey, hasChildrenProp } from '../view';\r\nimport { type Scope } from '../scope';\r\nimport { type Component } from '../component';\r\nimport { detectIsMemo } from '../memo';\r\nimport { type Instance, type ElementKey } from '../shared';\r\nimport { createIndexKey } from '../utils';\r\n\r\nfunction walk<T = unknown>(fiber: Fiber<T>, onWalk: (fiber: Fiber<T>, skip: () => void, stop: () => void) => void) {\r\n  let shouldDeep = true;\r\n  let shouldStop = false;\r\n  const skip = () => (shouldDeep = false);\r\n  const stop = () => (shouldStop = true);\r\n  const stack: Array<Fiber<T>> = [fiber];\r\n\r\n  while (stack.length !== 0) {\r\n    const unit = stack.pop();\r\n\r\n    onWalk(unit, skip, stop);\r\n    if (shouldStop) break;\r\n    unit !== fiber && unit.next && stack.push(unit.next);\r\n    shouldDeep && unit.child && stack.push(unit.child);\r\n    shouldDeep = true;\r\n  }\r\n}\r\n\r\nfunction collectElements<T, P = T>(fiber: Fiber<T>, transform: (fiber: Fiber<T>) => P): Array<P> {\r\n  const elements: Array<P> = [];\r\n\r\n  walk<T>(fiber, (fiber, skip) => {\r\n    if (fiber.element) {\r\n      !platform.detectIsPortal(fiber.inst) && elements.push(transform(fiber));\r\n      return skip();\r\n    }\r\n  });\r\n\r\n  return elements;\r\n}\r\n\r\nfunction getFiberWithElement<T1, T2 = T1>(fiber: Fiber<T1>): Fiber<T2> {\r\n  let $fiber = fiber as unknown as Fiber<T2>;\r\n\r\n  while ($fiber) {\r\n    if ($fiber.element) return $fiber;\r\n    $fiber = $fiber.parent;\r\n  }\r\n\r\n  return $fiber;\r\n}\r\n\r\nfunction detectIsFiberAlive(fiber: Fiber) {\r\n  let $fiber = fiber;\r\n\r\n  while ($fiber) {\r\n    if ($fiber.tag === DELETE_EFFECT_TAG) return false;\r\n    $fiber = $fiber.parent;\r\n  }\r\n\r\n  return Boolean(fiber);\r\n}\r\n\r\nfunction createHookLocation(rootId: number, idx: number, fiber: Fiber) {\r\n  let $fiber = fiber;\r\n  let loc = `${fiber.idx}${HOOK_DELIMETER}${idx}`;\r\n\r\n  while ($fiber) {\r\n    $fiber = $fiber.parent;\r\n    $fiber && (loc = `${$fiber.idx}.${loc}`);\r\n  }\r\n\r\n  loc = `[${rootId}]${loc}`;\r\n\r\n  return loc;\r\n}\r\n\r\nfunction detectIsStableMemoTree(fiber: Fiber, $scope: Scope) {\r\n  if (!hasChildrenProp(fiber.inst)) return;\r\n  const actions = $scope.getActionsById(fiber.id);\r\n  const children = fiber.inst.children;\r\n\r\n  for (let i = 0; i < children.length; i++) {\r\n    const inst = children[i];\r\n    const key = getElementKey(inst);\r\n    if (key === null) return false;\r\n    const alt = actions.map[key];\r\n    if (!alt) return false;\r\n    const pc = alt.inst as Component;\r\n    const nc = inst as Component;\r\n    const isStable =\r\n      detectIsMemo(nc) && detectIsMemo(pc) && nc.type === pc.type && !nc.shouldUpdate(pc.props, nc.props);\r\n\r\n    if (!isStable) return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction tryOptStaticSlot(fiber: Fiber, alt: Fiber, $scope: Scope) {\r\n  const actions = $scope.getActionsById(fiber.id);\r\n  const inst = fiber.inst as Component | TagVirtualNode;\r\n\r\n  alt.element && (fiber.element = alt.element); //!\r\n\r\n  for (let i = 0; i < inst.children.length; i++) {\r\n    buildChildNode(inst.children, fiber, actions.map, i, fiber.eidx);\r\n  }\r\n\r\n  fiber.cc = inst.children.length;\r\n  $scope.setMountDeep(false);\r\n}\r\n\r\nfunction tryOptMemoSlot(fiber: Fiber, alt: Fiber, $scope: Scope) {\r\n  const actions = $scope.getActionsById(fiber.id);\r\n  const hasMove = Boolean(actions.move);\r\n  const hasRemove = Boolean(actions.remove);\r\n  const hasInsert = Boolean(actions.insert);\r\n  const hasReplace = Boolean(actions.insert);\r\n  const canOptimize = ((hasMove && !hasRemove) || (hasRemove && !hasMove)) && !hasInsert && !hasReplace;\r\n\r\n  if (!canOptimize || !detectIsStableMemoTree(fiber, $scope)) return;\r\n\r\n  hasMove && tryOptMov(fiber, alt, $scope);\r\n  hasRemove && tryOptRem(fiber, alt, $scope);\r\n}\r\n\r\nfunction tryOptMov(fiber: Fiber, alt: Fiber, $scope: Scope) {\r\n  const actions = $scope.getActionsById(fiber.id);\r\n\r\n  buildChildNodes(fiber, alt, $scope, (fiber, key) => {\r\n    if (!actions.move[key]) return;\r\n    fiber.alt = new Fiber().mutate(fiber);\r\n    fiber.tag = UPDATE_EFFECT_TAG;\r\n    fiber.mask |= MOVE_MASK;\r\n    $scope.addCandidate(fiber);\r\n  });\r\n}\r\n\r\nfunction tryOptRem(fiber: Fiber, alt: Fiber, $scope: Scope) {\r\n  buildChildNodes(fiber, alt, $scope);\r\n}\r\n\r\nfunction buildChildNodes(fiber: Fiber, alt: Fiber, $scope: Scope, onNode?: (fiber: Fiber, key: ElementKey) => void) {\r\n  const actions = $scope.getActionsById(fiber.id);\r\n  const inst = fiber.inst as Component | TagVirtualNode;\r\n  const children = inst.children;\r\n\r\n  alt.element && (fiber.element = alt.element); //!\r\n\r\n  for (let i = 0; i < children.length; i++) {\r\n    const key = getKey(children[i], i);\r\n    const $fiber = actions.map[key];\r\n\r\n    buildChildNode(children, fiber, actions.map, i, fiber.eidx);\r\n    onNode && onNode($fiber, key);\r\n  }\r\n\r\n  fiber.cc = children.length;\r\n  $scope.setMountDeep(false);\r\n}\r\n\r\nfunction buildChildNode(\r\n  children: Array<Instance>,\r\n  parent: Fiber,\r\n  altMap: Record<string, Fiber>,\r\n  idx: number,\r\n  startEidx: number,\r\n) {\r\n  const prevIdx = idx - 1;\r\n  const nextIdx = idx + 1;\r\n  const key = getKey(children[idx], idx);\r\n  const prevKey = getKey(children[prevIdx], prevIdx);\r\n  const nextKey = getKey(children[nextIdx], nextIdx);\r\n  const fiber = altMap[key];\r\n  const left = altMap[prevKey];\r\n  const right = altMap[nextKey];\r\n  const isFirst = idx === 0;\r\n  const isLast = idx === children.length - 1;\r\n\r\n  isFirst && (parent.child = fiber);\r\n  fiber.alt = null;\r\n  fiber.parent = parent;\r\n  fiber.tag = SKIP_EFFECT_TAG;\r\n  fiber.idx = idx;\r\n  left ? (fiber.eidx = left.eidx + (left.element ? 1 : left.cec)) : (fiber.eidx = startEidx);\r\n  right && (fiber.next = right);\r\n  isLast && (fiber.next = null);\r\n  notifyParents(fiber);\r\n}\r\n\r\nfunction getKey(inst: Instance, idx: number) {\r\n  const key = getElementKey(inst);\r\n  return key !== null ? key : createIndexKey(idx);\r\n}\r\n\r\nfunction notifyParents(fiber: Fiber, alt: Fiber = fiber) {\r\n  fiber.increment(alt.element ? 1 : alt.cec);\r\n  alt.mask & INSERTION_EFFECT_HOST_MASK && fiber.markHost(INSERTION_EFFECT_HOST_MASK);\r\n  alt.mask & LAYOUT_EFFECT_HOST_MASK && fiber.markHost(LAYOUT_EFFECT_HOST_MASK);\r\n  alt.mask & ASYNC_EFFECT_HOST_MASK && fiber.markHost(ASYNC_EFFECT_HOST_MASK);\r\n  alt.mask & ATOM_HOST_MASK && fiber.markHost(ATOM_HOST_MASK);\r\n  alt.mask & PORTAL_HOST_MASK && fiber.markHost(PORTAL_HOST_MASK);\r\n}\r\n\r\nexport {\r\n  walk,\r\n  collectElements,\r\n  getFiberWithElement,\r\n  detectIsFiberAlive,\r\n  createHookLocation,\r\n  tryOptStaticSlot,\r\n  tryOptMemoSlot,\r\n  notifyParents,\r\n};\r\n","import { component, detectIsComponent } from '../component';\r\nimport type { KeyProps, SlotProps } from '../shared';\r\n\r\ntype FragmentProps = Required<SlotProps> & KeyProps;\r\n\r\nconst $$fragment = Symbol('fragment');\r\n\r\nconst Fragment = component<FragmentProps>(({ slot }) => slot || null, { token: $$fragment });\r\n\r\nconst detectIsFragment = (instance: unknown) => detectIsComponent(instance) && instance.token === $$fragment;\r\n\r\nexport { Fragment, detectIsFragment };\r\n","import { type VirtualNodeFactory, detectIsVirtualNodeFactory } from '../view';\r\nimport { type Component, detectIsComponent, component } from '../component';\r\nimport { type Hook, type HookValue } from '../fiber';\r\nimport { detectAreDepsDifferent } from '../utils';\r\nimport { $$scope } from '../scope';\r\nimport { memo } from '../memo';\r\n\r\ntype GetMemoValue = () => Component | VirtualNodeFactory;\r\n\r\ntype MemoProps = {\r\n  deps: Array<any>;\r\n  getValue: GetMemoValue;\r\n};\r\n\r\nconst Memo = memo(\r\n  component<MemoProps>(({ getValue }) => getValue()),\r\n  (p, n) => detectAreDepsDifferent(p.deps, n.deps),\r\n);\r\n\r\nfunction detectIsElement<T>(value: T) {\r\n  return detectIsComponent(value) || detectIsVirtualNodeFactory(value);\r\n}\r\n\r\nfunction useMemo<T>(getValue: () => T, deps: Array<any>): T {\r\n  const fiber = $$scope().getCursorFiber();\r\n  const { hook } = fiber;\r\n  const { idx, values } = hook as Hook<HookValue<T>>;\r\n  const state =\r\n    values[idx] ||\r\n    (values[idx] = {\r\n      deps,\r\n      value: getValue(),\r\n    });\r\n  let value: T = null;\r\n  let $value: T = null;\r\n\r\n  if (detectIsElement(state.value)) {\r\n    value = state.value;\r\n    $value = Memo({ getValue: getValue as GetMemoValue, deps }) as unknown as T;\r\n  } else {\r\n    value = detectAreDepsDifferent(state.deps, deps) ? getValue() : state.value;\r\n    $value = value;\r\n  }\r\n\r\n  state.deps = deps;\r\n  state.value = value;\r\n  hook.idx++;\r\n\r\n  return $value;\r\n}\r\n\r\nexport { useMemo };\r\n","import { detectIsFunction } from '../utils';\r\nimport { INSERTION_EFFECT_HOST_MASK, LAYOUT_EFFECT_HOST_MASK, ASYNC_EFFECT_HOST_MASK } from '../constants';\r\nimport { $$scope } from '../scope';\r\nimport { useMemo } from '../use-memo';\r\nimport { type Hook, type HookValue } from '../fiber';\r\n\r\nconst $$useEffect = Symbol('use-effect');\r\n\r\ntype UseEffectValue = {\r\n  token: Symbol;\r\n  cleanup: DropEffect;\r\n};\r\n\r\nfunction createEffect(token: Symbol, type: EffectType) {\r\n  function useEffect(effect: Effect, deps: Array<any> = [{}]) {\r\n    const $scope = $$scope();\r\n    const fiber = $scope.getCursorFiber();\r\n    const scope = useMemo<UseEffectValue>(() => ({ token, cleanup: undefined }), []);\r\n    const isInsertionEffect = type === EffectType.INSERTION;\r\n    const isLayoutEffect = type === EffectType.LAYOUT;\r\n    const isAsyncEffect = type === EffectType.ASYNC;\r\n\r\n    isInsertionEffect && fiber.markHost(INSERTION_EFFECT_HOST_MASK);\r\n    isLayoutEffect && fiber.markHost(LAYOUT_EFFECT_HOST_MASK);\r\n    isAsyncEffect && fiber.markHost(ASYNC_EFFECT_HOST_MASK);\r\n\r\n    useMemo(() => {\r\n      const runEffect = () => (scope.cleanup = effect());\r\n\r\n      isInsertionEffect && $scope.addInsertionEffect(runEffect);\r\n      isLayoutEffect && $scope.addLayoutEffect(runEffect);\r\n      isAsyncEffect && $scope.addAsyncEffect(runEffect);\r\n\r\n      detectIsFunction(scope.cleanup) && scope.cleanup();\r\n\r\n      return null;\r\n    }, deps);\r\n  }\r\n\r\n  function dropEffects(hook: Hook<HookValue<UseEffectValue>>) {\r\n    for (const { value: effect } of hook.values) {\r\n      effect && effect.token === token && detectIsFunction(effect.cleanup) && effect.cleanup();\r\n    }\r\n  }\r\n\r\n  return {\r\n    useEffect,\r\n    dropEffects,\r\n  };\r\n}\r\n\r\nexport type DropEffect = void | (() => void);\r\n\r\nexport type Effect = () => DropEffect;\r\n\r\nexport enum EffectType {\r\n  ASYNC = 'ASYNC',\r\n  LAYOUT = 'LAYOUT',\r\n  INSERTION = 'INSERTION',\r\n}\r\n\r\nconst { useEffect, dropEffects } = createEffect($$useEffect, EffectType.ASYNC);\r\n\r\nexport { useEffect, dropEffects, createEffect };\r\n","import { createEffect, EffectType } from '../use-effect';\r\n\r\nconst $$useLayoutEffect = Symbol('use-layout-effect');\r\nconst { useEffect: useLayoutEffect, dropEffects: dropLayoutEffects } = createEffect(\r\n  $$useLayoutEffect,\r\n  EffectType.LAYOUT,\r\n);\r\n\r\nexport { useLayoutEffect, dropLayoutEffects };\r\n","import { createEffect, EffectType } from '../use-effect';\r\n\r\nconst $$useInsertionEffect = Symbol('use-insertion-effect');\r\nconst { useEffect: useInsertionEffect, dropEffects: dropInsertionEffects } = createEffect(\r\n  $$useInsertionEffect,\r\n  EffectType.INSERTION,\r\n);\r\n\r\nexport { useInsertionEffect, dropInsertionEffects };\r\n","import { type Fiber } from '../fiber';\r\nimport { platform } from '../platform';\r\nimport { dropEffects } from '../use-effect';\r\nimport { dropLayoutEffects } from '../use-layout-effect';\r\nimport { dropInsertionEffects } from '../use-insertion-effect';\r\nimport { walk } from '../walk';\r\nimport { detectIsUndefined } from '../utils';\r\nimport { removeScope, $$scope } from '../scope';\r\nimport {\r\n  INSERTION_EFFECT_HOST_MASK,\r\n  LAYOUT_EFFECT_HOST_MASK,\r\n  ASYNC_EFFECT_HOST_MASK,\r\n  ATOM_HOST_MASK,\r\n  PORTAL_HOST_MASK,\r\n} from '../constants';\r\n\r\nconst combinedMask =\r\n  INSERTION_EFFECT_HOST_MASK | LAYOUT_EFFECT_HOST_MASK | ASYNC_EFFECT_HOST_MASK | ATOM_HOST_MASK | PORTAL_HOST_MASK;\r\n\r\nconst shouldUnmountFiber = (fiber: Fiber) => fiber.mask & combinedMask;\r\n\r\nfunction unmountFiber(fiber: Fiber) {\r\n  if (!shouldUnmountFiber(fiber)) return;\r\n  walk(fiber, (fiber, skip) => {\r\n    if (!shouldUnmountFiber(fiber)) return skip();\r\n\r\n    if (fiber.hook && fiber.hook.values.length > 0) {\r\n      fiber.mask & INSERTION_EFFECT_HOST_MASK && dropInsertionEffects(fiber.hook);\r\n      fiber.mask & LAYOUT_EFFECT_HOST_MASK && dropLayoutEffects(fiber.hook);\r\n      fiber.mask & ASYNC_EFFECT_HOST_MASK && dropEffects(fiber.hook);\r\n    }\r\n\r\n    if (fiber.atoms) {\r\n      for (const [_, cleanup] of fiber.atoms) {\r\n        cleanup();\r\n      }\r\n      fiber.atoms = null;\r\n    }\r\n\r\n    fiber.mask & PORTAL_HOST_MASK && platform.unmountPortal(fiber);\r\n  });\r\n}\r\n\r\nfunction unmountRoot(rootId: number, onCompleted: () => void) {\r\n  if (detectIsUndefined(rootId)) return;\r\n  const $scope = $$scope(rootId);\r\n\r\n  unmountFiber($scope.getRoot());\r\n  $scope.unsubscribeEvents();\r\n  removeScope(rootId);\r\n  onCompleted();\r\n}\r\n\r\nexport { unmountFiber, unmountRoot };\r\n","import { platform } from '../platform';\r\nimport {\r\n  CREATE_EFFECT_TAG,\r\n  UPDATE_EFFECT_TAG,\r\n  DELETE_EFFECT_TAG,\r\n  SKIP_EFFECT_TAG,\r\n  INSERTION_EFFECT_HOST_MASK,\r\n  LAYOUT_EFFECT_HOST_MASK,\r\n  ASYNC_EFFECT_HOST_MASK,\r\n  ATOM_HOST_MASK,\r\n  PORTAL_HOST_MASK,\r\n  MOVE_MASK,\r\n  FLUSH_MASK,\r\n  SHADOW_MASK,\r\n  Flag,\r\n} from '../constants';\r\nimport {\r\n  flatten,\r\n  error,\r\n  detectIsEmpty,\r\n  detectIsFalsy,\r\n  detectIsArray,\r\n  detectIsFunction,\r\n  detectIsTextBased,\r\n  createIndexKey,\r\n  trueFn,\r\n} from '../utils';\r\nimport { type Scope, setRootId, $$scope, replaceScope } from '../scope';\r\nimport { type Component, detectIsComponent } from '../component';\r\nimport { type ElementKey, type Instance } from '../shared';\r\nimport { Fiber, getHook, Hook } from '../fiber';\r\nimport {\r\n  Text,\r\n  detectIsVirtualNode,\r\n  detectIsVirtualNodeFactory,\r\n  getElementKey,\r\n  hasElementFlag,\r\n  hasChildrenProp,\r\n  detectIsReplacer,\r\n  createReplacer,\r\n  detectAreSameInstanceTypes,\r\n} from '../view';\r\nimport { detectIsMemo } from '../memo';\r\nimport {\r\n  walk,\r\n  getFiberWithElement,\r\n  detectIsFiberAlive,\r\n  notifyParents,\r\n  tryOptStaticSlot,\r\n  tryOptMemoSlot,\r\n} from '../walk';\r\nimport { type RestoreOptions, scheduler } from '../scheduler';\r\nimport { Fragment, detectIsFragment } from '../fragment';\r\nimport { unmountFiber } from '../unmount';\r\n\r\nlet hasPendingPromise = false;\r\nlet hasRenderError = false;\r\n\r\nexport type WorkLoop = (isAsync: boolean) => boolean;\r\n\r\nfunction workLoop(isAsync: boolean): boolean | null {\r\n  if (hasPendingPromise) return null;\r\n  if (hasRenderError) return false;\r\n  const $scope = $$scope();\r\n  const wipFiber = $scope.getWorkInProgress();\r\n  let unit = $scope.getNextUnitOfWork();\r\n  let shouldYield = false;\r\n  let hasMoreWork = Boolean(unit);\r\n\r\n  try {\r\n    while (unit && !shouldYield) {\r\n      unit = performUnitOfWork(unit, $scope);\r\n      $scope.setNextUnitOfWork(unit);\r\n      hasMoreWork = Boolean(unit);\r\n      shouldYield = isAsync && scheduler.shouldYield();\r\n      if (shouldYield && scheduler.hasPrimaryTask()) return fork($scope);\r\n    }\r\n\r\n    if (!unit && wipFiber) {\r\n      commit($scope);\r\n    }\r\n  } catch (err) {\r\n    if (err instanceof Promise) {\r\n      hasPendingPromise = true;\r\n      err.finally(() => {\r\n        hasPendingPromise = false;\r\n        !isAsync && workLoop(false);\r\n      });\r\n    } else {\r\n      hasRenderError = true;\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  return hasMoreWork;\r\n}\r\n\r\nfunction performUnitOfWork(fiber: Fiber, $scope: Scope): Fiber | null {\r\n  const wipFiber = $scope.getWorkInProgress();\r\n  const isDeepWalking = $scope.getMountDeep();\r\n  const isStream = $scope.getIsStreamZone();\r\n  const hasChildren = isDeepWalking && hasChildrenProp(fiber.inst) && fiber.inst.children.length > 0;\r\n\r\n  fiber.hook && (fiber.hook.idx = 0);\r\n\r\n  if (hasChildren) {\r\n    const child = mountChild(fiber, $scope);\r\n\r\n    isStream && platform.chunk(child);\r\n\r\n    return child;\r\n  } else {\r\n    while (fiber.parent && fiber !== wipFiber) {\r\n      const next = mountSibling(fiber, $scope);\r\n\r\n      isStream && platform.chunk(fiber);\r\n\r\n      if (next) {\r\n        isStream && platform.chunk(next);\r\n        return next;\r\n      }\r\n\r\n      fiber = fiber.parent;\r\n    }\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nfunction mountChild(parent: Fiber, $scope: Scope) {\r\n  $scope.navToChild();\r\n  const $inst = parent.inst;\r\n  const idx = 0;\r\n  const inst = hasChildrenProp($inst) ? $inst.children[idx] : null;\r\n  const alt = getAlternate(parent, inst, true, $scope);\r\n  const fiber = createFiber(alt, inst, idx);\r\n\r\n  fiber.parent = parent;\r\n  parent.child = fiber;\r\n  fiber.eidx = parent.element ? 0 : parent.eidx;\r\n\r\n  share(fiber, parent, inst, $scope);\r\n\r\n  return fiber;\r\n}\r\n\r\nfunction mountSibling(left: Fiber, $scope: Scope) {\r\n  $scope.navToSibling();\r\n  const $inst = left.parent.inst;\r\n  const idx = $scope.getMountIndex();\r\n  const inst = hasChildrenProp($inst) && $inst.children ? $inst.children[idx] : null;\r\n  const hasSibling = Boolean(inst);\r\n\r\n  if (!hasSibling) {\r\n    $scope.navToParent();\r\n    $scope.setMountDeep(false);\r\n\r\n    return null;\r\n  }\r\n\r\n  $scope.setMountDeep(true);\r\n  const alt = getAlternate(left, inst, false, $scope);\r\n  const fiber = createFiber(alt, inst, idx);\r\n\r\n  fiber.parent = left.parent;\r\n  left.next = fiber;\r\n  fiber.eidx = left.eidx + (left.element ? 1 : left.cec);\r\n\r\n  share(fiber, left, inst, $scope);\r\n\r\n  return fiber;\r\n}\r\n\r\nfunction share(fiber: Fiber, prev: Fiber, inst: Instance, $scope: Scope) {\r\n  const { alt } = fiber;\r\n  const shouldMount = alt && detectIsMemo(inst) ? shouldUpdate(fiber, inst, $scope) : true;\r\n\r\n  $scope.setCursorFiber(fiber);\r\n  fiber.inst = inst;\r\n\r\n  if (alt && alt.mask & MOVE_MASK) {\r\n    fiber.mask |= MOVE_MASK;\r\n    alt.mask &= ~MOVE_MASK;\r\n  }\r\n\r\n  fiber.hook && (fiber.hook.owner = fiber); // !\r\n\r\n  if (shouldMount) {\r\n    fiber.inst = mount(fiber, prev, $scope);\r\n    alt && reconcile(fiber, alt, $scope);\r\n    setup(fiber, alt);\r\n  } else if (fiber.mask & MOVE_MASK) {\r\n    fiber.tag = UPDATE_EFFECT_TAG;\r\n  }\r\n\r\n  $scope.addCandidate(fiber); // !\r\n}\r\n\r\nfunction createFiber(alt: Fiber, inst: Instance, idx: number) {\r\n  const fiber = new Fiber(getHook(alt, alt ? alt.inst : null, inst), alt ? alt.provider : null, idx);\r\n\r\n  fiber.alt = alt || null;\r\n\r\n  return fiber;\r\n}\r\n\r\nfunction getAlternate(fiber: Fiber, inst: Instance, fromChild: boolean, $scope: Scope) {\r\n  const key = getElementKey(inst);\r\n\r\n  if (key !== null) {\r\n    const parentId = fromChild ? fiber.id : fiber.parent.id;\r\n    const actions = $scope.getActionsById(parentId);\r\n\r\n    if (actions) {\r\n      const isMove = actions.move && Boolean(actions.move[key]);\r\n      const isStable = actions.stable && Boolean(actions.stable[key]);\r\n\r\n      if (isMove || isStable) {\r\n        const alt = actions.map[key];\r\n\r\n        isMove && (alt.mask |= MOVE_MASK);\r\n\r\n        return alt;\r\n      }\r\n\r\n      return null;\r\n    }\r\n  }\r\n\r\n  const alt = fiber.alt ? (fromChild ? fiber.alt.child || null : fiber.alt.next || null) : null;\r\n\r\n  return alt;\r\n}\r\n\r\nfunction reconcile(fiber: Fiber, alt: Fiber, $scope: Scope) {\r\n  const { id, inst } = fiber;\r\n  const areSameTypes = detectAreSameInstanceTypes(alt.inst, inst);\r\n\r\n  if (!areSameTypes) {\r\n    $scope.addDeletion(alt);\r\n  } else if (hasChildrenProp(alt.inst) && hasChildrenProp(inst) && alt.cc !== 0) {\r\n    const hasSameCount = alt.cc === inst.children.length;\r\n    const check = hasElementFlag(inst, Flag.SKIP_SCAN_OPT) ? !hasSameCount : true;\r\n\r\n    if (check) {\r\n      const { prevKeys, nextKeys, prevKeysMap, nextKeysMap, keyedFibersMap } = extractKeys(alt.child, inst.children);\r\n      const flush = nextKeys.length === 0;\r\n      let size = Math.max(prevKeys.length, nextKeys.length);\r\n      let p = 0;\r\n      let n = 0;\r\n\r\n      $scope.addActionMap(id, keyedFibersMap);\r\n\r\n      for (let i = 0; i < size; i++) {\r\n        const nextKey = nextKeys[i - n] ?? null;\r\n        const prevKey = prevKeys[i - p] ?? null;\r\n        const prevKeyFiber = keyedFibersMap[prevKey] || null;\r\n\r\n        if (nextKey !== prevKey) {\r\n          if (nextKey !== null && !prevKeysMap[nextKey]) {\r\n            if (prevKey !== null && !nextKeysMap[prevKey]) {\r\n              $scope.addReplaceAction(id, nextKey);\r\n              $scope.addDeletion(prevKeyFiber);\r\n            } else {\r\n              $scope.addInsertAction(id, nextKey);\r\n              p++;\r\n              size++;\r\n            }\r\n          } else if (!nextKeysMap[prevKey]) {\r\n            $scope.addRemoveAction(id, prevKey);\r\n            $scope.addDeletion(prevKeyFiber);\r\n            flush && (prevKeyFiber.mask |= FLUSH_MASK);\r\n            n++;\r\n            size++;\r\n          } else if (nextKeysMap[prevKey] && nextKeysMap[nextKey]) {\r\n            $scope.addMoveAction(id, nextKey);\r\n          }\r\n        } else if (nextKey !== null) {\r\n          $scope.addStableAction(id, nextKey);\r\n        }\r\n      }\r\n\r\n      hasElementFlag(inst, Flag.STATIC_SLOT_OPT) && tryOptStaticSlot(fiber, alt, $scope);\r\n      hasElementFlag(inst, Flag.MEMO_SLOT_OPT) && tryOptMemoSlot(fiber, alt, $scope);\r\n    }\r\n  }\r\n}\r\n\r\nfunction setup(fiber: Fiber, alt: Fiber) {\r\n  const inst = fiber.inst;\r\n  let isUpdate = false;\r\n\r\n  fiber.parent.tag === CREATE_EFFECT_TAG && (fiber.tag = fiber.parent.tag);\r\n  fiber.parent.mask & SHADOW_MASK && !fiber.parent.element && !detectIsReplacer(inst) && (fiber.mask |= SHADOW_MASK);\r\n  isUpdate =\r\n    alt &&\r\n    fiber.tag !== CREATE_EFFECT_TAG &&\r\n    detectAreSameInstanceTypes(alt.inst, inst) &&\r\n    getElementKey(alt.inst) === getElementKey(inst);\r\n  isUpdate && !fiber.element && alt.element && (fiber.element = alt.element);\r\n  fiber.tag = isUpdate ? UPDATE_EFFECT_TAG : CREATE_EFFECT_TAG;\r\n  hasChildrenProp(fiber.inst) && (fiber.cc = fiber.inst.children.length);\r\n  !fiber.element && detectIsVirtualNode(fiber.inst) && (fiber.element = platform.createElement(fiber.inst));\r\n  fiber.element && fiber.increment();\r\n}\r\n\r\nfunction shouldUpdate(fiber: Fiber, inst: Instance, $scope: Scope) {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    if ($scope.getIsHot()) return true;\r\n  }\r\n\r\n  const alt = fiber.alt;\r\n  const pc = alt.inst as Component;\r\n  const nc = inst as Component;\r\n\r\n  if (nc.type !== pc.type || nc.shouldUpdate(pc.props, nc.props)) return true;\r\n\r\n  $scope.setMountDeep(false);\r\n  fiber.tag = SKIP_EFFECT_TAG;\r\n  fiber.child = alt.child;\r\n  fiber.child.parent = fiber;\r\n  fiber.hook = alt.hook;\r\n  fiber.cc = alt.cc;\r\n  fiber.cec = alt.cec;\r\n  alt.element && (fiber.element = alt.element);\r\n  alt.provider && (fiber.provider = alt.provider);\r\n  alt.catch && (fiber.catch = alt.catch);\r\n  alt.atoms && (fiber.atoms = alt.atoms);\r\n\r\n  const diff = fiber.eidx - alt.eidx;\r\n  const deep = diff !== 0;\r\n\r\n  if (deep) {\r\n    walk(fiber.child, ($fiber, skip) => {\r\n      $fiber.eidx += diff;\r\n      if ($fiber.element) return skip();\r\n    });\r\n  }\r\n\r\n  notifyParents(fiber, alt);\r\n\r\n  return false;\r\n}\r\n\r\nfunction mount(fiber: Fiber, prev: Fiber, $scope: Scope) {\r\n  let inst = fiber.inst;\r\n  const isComponent = detectIsComponent(inst);\r\n  const component = inst as Component;\r\n\r\n  if (isComponent) {\r\n    try {\r\n      const id = $scope.getResourceId();\r\n      let result = component.type(component.props, component.ref);\r\n      const defers = $scope.getDefers();\r\n\r\n      if (defers.length > 0) {\r\n        const promise = Promise.all(defers.map(x => x()));\r\n\r\n        $scope.setResourceId(id);\r\n        $scope.resetDefers();\r\n        $scope.navToPrev();\r\n        $scope.setNextUnitOfWork(prev);\r\n        Fiber.setNextId(prev.id);\r\n\r\n        throw promise;\r\n      }\r\n\r\n      if (detectIsArray(result)) {\r\n        !detectIsFragment(component) && (result = Fragment({ slot: result }));\r\n      } else if (detectIsTextBased(result)) {\r\n        result = Text(result);\r\n      }\r\n\r\n      component.children = result as Array<Instance>;\r\n      platform.detectIsPortal(inst) && fiber.markHost(PORTAL_HOST_MASK);\r\n    } catch (err) {\r\n      if (err instanceof Promise) throw err;\r\n      component.children = [];\r\n      fiber.setError(err);\r\n      error(err);\r\n    }\r\n  } else if (detectIsVirtualNodeFactory(inst)) {\r\n    inst = inst();\r\n  }\r\n\r\n  if (hasChildrenProp(inst)) {\r\n    inst.children = flatten(inst.children, x => (detectIsTextBased(x) ? Text(x) : x || supportConditional(x)));\r\n    isComponent && component.children.length === 0 && component.children.push(createReplacer());\r\n  }\r\n\r\n  return inst;\r\n}\r\n\r\nfunction extractKeys(alt: Fiber, children: Array<Instance>) {\r\n  let nextFiber = alt;\r\n  let idx = 0;\r\n  const prevKeys: Array<ElementKey> = [];\r\n  const nextKeys: Array<ElementKey> = [];\r\n  const prevKeysMap: Record<ElementKey, boolean> = {};\r\n  const nextKeysMap: Record<ElementKey, boolean> = {};\r\n  const keyedFibersMap: Record<ElementKey, Fiber> = {};\r\n  const usedKeysMap: Record<ElementKey, boolean> = {};\r\n\r\n  while (nextFiber || idx < children.length) {\r\n    if (nextFiber) {\r\n      const key = getElementKey(nextFiber.inst);\r\n      const prevKey = detectIsEmpty(key) ? createIndexKey(idx) : key;\r\n\r\n      if (!prevKeysMap[prevKey]) {\r\n        prevKeysMap[prevKey] = true; // !\r\n        prevKeys.push(prevKey);\r\n      }\r\n\r\n      keyedFibersMap[prevKey] = nextFiber;\r\n    }\r\n\r\n    if (children[idx]) {\r\n      const inst = children[idx];\r\n      const key = getElementKey(inst);\r\n      const nextKey = detectIsEmpty(key) ? createIndexKey(idx) : key;\r\n\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        if (usedKeysMap[nextKey]) {\r\n          error(`[Dark]: The key of node [${nextKey}] already has been used!`, [inst]);\r\n        }\r\n      }\r\n\r\n      if (!nextKeysMap[nextKey]) {\r\n        nextKeysMap[nextKey] = true; // !\r\n        nextKeys.push(nextKey);\r\n      }\r\n\r\n      usedKeysMap[nextKey] = true;\r\n    }\r\n\r\n    nextFiber = nextFiber ? nextFiber.next : null;\r\n    idx++;\r\n  }\r\n\r\n  return {\r\n    prevKeys,\r\n    nextKeys,\r\n    prevKeysMap,\r\n    nextKeysMap,\r\n    keyedFibersMap,\r\n  };\r\n}\r\n\r\nfunction supportConditional(inst: Instance) {\r\n  return detectIsFalsy(inst) ? createReplacer() : inst;\r\n}\r\n\r\nfunction commit($scope: Scope) {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    process.env.NODE_ENV === 'development' && $scope.setIsHot(false);\r\n  }\r\n\r\n  const wipFiber = $scope.getWorkInProgress();\r\n  const deletions = $scope.getDeletions();\r\n  const candidates = $scope.getCandidates();\r\n  const isUpdateZone = $scope.getIsUpdateZone();\r\n  const unmounts: Array<Fiber> = [];\r\n  const combinedMask = INSERTION_EFFECT_HOST_MASK | LAYOUT_EFFECT_HOST_MASK | ASYNC_EFFECT_HOST_MASK | PORTAL_HOST_MASK;\r\n\r\n  // !\r\n  for (const fiber of deletions) {\r\n    const withNextTick = fiber.mask & ATOM_HOST_MASK && !(fiber.mask & combinedMask);\r\n\r\n    withNextTick ? unmounts.push(fiber) : unmountFiber(fiber);\r\n    fiber.tag = DELETE_EFFECT_TAG;\r\n    platform.commit(fiber);\r\n  }\r\n\r\n  isUpdateZone && sync(wipFiber);\r\n  $scope.runInsertionEffects();\r\n\r\n  for (const fiber of candidates) {\r\n    fiber.tag !== SKIP_EFFECT_TAG && platform.commit(fiber);\r\n    fiber.alt = null;\r\n    hasChildrenProp(fiber.inst) && (fiber.inst.children = null);\r\n  }\r\n\r\n  wipFiber.alt = null;\r\n  platform.finishCommit(); // !\r\n  $scope.runLayoutEffects();\r\n  $scope.runAsyncEffects();\r\n  unmounts.length > 0 && setTimeout(() => unmounts.forEach(x => unmountFiber(x)));\r\n  flush($scope);\r\n}\r\n\r\nfunction flush($scope: Scope, cancel = false) {\r\n  $scope.flush();\r\n  !cancel && $scope.getEmitter().emit('finish');\r\n  $scope.runAfterCommit(); // !\r\n}\r\n\r\nfunction sync(fiber: Fiber) {\r\n  const diff = fiber.cec - fiber.alt.cec;\r\n  if (diff === 0) return;\r\n  const parentFiber = getFiberWithElement(fiber.parent);\r\n  let isRight = false;\r\n\r\n  fiber.increment(diff, true);\r\n\r\n  walk(parentFiber.child, ($fiber, skip) => {\r\n    if ($fiber === fiber) {\r\n      isRight = true;\r\n      return skip();\r\n    }\r\n\r\n    $fiber.element && skip();\r\n    isRight && ($fiber.eidx += diff);\r\n  });\r\n}\r\n\r\nfunction fork($scope: Scope): false {\r\n  const $$scope$ = $scope.copy();\r\n  const wipFiber = $scope.getWorkInProgress();\r\n  const child = wipFiber.child;\r\n  child && (child.parent = null);\r\n  const restore = (options: RestoreOptions) => {\r\n    const { fiber: wipFiber, setValue, resetValue } = options;\r\n    const $scope = $$scope();\r\n\r\n    detectIsFunction(setValue) && setValue();\r\n    detectIsFunction(resetValue) && $$scope$.addCancel(resetValue);\r\n\r\n    wipFiber.alt = new Fiber().mutate(wipFiber);\r\n    wipFiber.tag = UPDATE_EFFECT_TAG;\r\n    wipFiber.child = child;\r\n    child && (child.parent = wipFiber);\r\n\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      wipFiber.marker = '✌️';\r\n    }\r\n\r\n    $$scope$.setRoot($scope.getRoot());\r\n    $$scope$.setWorkInProgress(wipFiber);\r\n    replaceScope($$scope$);\r\n  };\r\n\r\n  wipFiber.child = wipFiber.alt.child;\r\n  wipFiber.alt = null;\r\n  $scope.applyCancels();\r\n  flush($scope, true);\r\n  scheduler.cancelTask(restore);\r\n\r\n  return false;\r\n}\r\n\r\nexport type CreateUpdateOptions = {\r\n  rootId: number;\r\n  isTransition?: boolean;\r\n  hook: Hook;\r\n  createChanger?: () => UpdateChanger;\r\n};\r\n\r\nexport type UpdateChanger = {\r\n  shouldUpdate: () => boolean;\r\n} & Pick<RestoreOptions, 'setValue' | 'resetValue'>;\r\n\r\nfunction createUpdate(options: CreateUpdateOptions) {\r\n  const { rootId, hook, isTransition, createChanger = $createChanger } = options;\r\n  const callback = (restore?: (options: RestoreOptions) => void) => {\r\n    setRootId(rootId); // !\r\n    const fromRestore = detectIsFunction(restore);\r\n    const { shouldUpdate, setValue, resetValue } = createChanger();\r\n    const $scope = $$scope();\r\n    const owner = hook.owner;\r\n    const fiber = owner.alt || owner;\r\n\r\n    if (!shouldUpdate() || !detectIsFiberAlive(fiber) || fromRestore) {\r\n      fromRestore && restore({ fiber, setValue, resetValue });\r\n      return;\r\n    }\r\n\r\n    detectIsFunction(setValue) && setValue();\r\n    detectIsFunction(resetValue) && isTransition && $scope.addCancel(resetValue);\r\n\r\n    fiber.alt = new Fiber().mutate(fiber);\r\n    fiber.tag = UPDATE_EFFECT_TAG;\r\n    fiber.cc = 0;\r\n    fiber.cec = 0;\r\n    fiber.child = null;\r\n\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      fiber.marker = '🔥';\r\n    }\r\n\r\n    $scope.setIsUpdateZone(true);\r\n    $scope.resetMount();\r\n    $scope.setWorkInProgress(fiber);\r\n    $scope.setCursorFiber(fiber);\r\n    fiber.inst = mount(fiber, null, $scope);\r\n    $scope.setNextUnitOfWork(fiber);\r\n  };\r\n\r\n  return callback;\r\n}\r\n\r\nconst $createChanger = (): UpdateChanger => ({\r\n  shouldUpdate: trueFn,\r\n  setValue: null,\r\n  resetValue: null,\r\n});\r\n\r\nconst detectIsBusy = () => Boolean($$scope()?.getWorkInProgress());\r\n\r\nexport { Fiber, workLoop, createUpdate, detectIsBusy };\r\n","import { type WorkLoop, workLoop, detectIsBusy } from '../workloop';\r\nimport { type SetPendingStatus } from '../start-transition';\r\nimport { type Callback } from '../shared';\r\nimport { type Fiber } from '../fiber';\r\nimport { ROOT, HOOK_DELIMETER, YIELD_INTERVAL, TaskPriority } from '../constants';\r\nimport { getTime, detectIsFunction, nextTick } from '../utils';\r\nimport { EventEmitter } from '../emitter';\r\nimport { platform } from '../platform';\r\n\r\nclass MessageChannel extends EventEmitter<PortEvent> {\r\n  port1: MessagePort = null;\r\n  port2: MessagePort = null;\r\n\r\n  constructor() {\r\n    super();\r\n    this.port1 = new MessagePort(this);\r\n    this.port2 = new MessagePort(this);\r\n  }\r\n}\r\n\r\nclass MessagePort {\r\n  channel: MessageChannel;\r\n  offs: Array<Callback> = [];\r\n\r\n  constructor(channel: MessageChannel) {\r\n    this.channel = channel;\r\n  }\r\n\r\n  on(event: PortEvent, callback: PortListener) {\r\n    const off = this.channel.on(event, callback);\r\n\r\n    this.offs.push(off);\r\n  }\r\n\r\n  postMessage(value: unknown) {\r\n    platform.spawn(() => {\r\n      this.channel.emit('message', value);\r\n    });\r\n  }\r\n\r\n  unref() {\r\n    this.offs.forEach(x => x());\r\n  }\r\n}\r\n\r\nclass Scheduler {\r\n  private queue: Record<TaskPriority, Array<Task>> = {\r\n    [TaskPriority.HIGH]: [],\r\n    [TaskPriority.NORMAL]: [],\r\n    [TaskPriority.LOW]: [],\r\n  };\r\n  private deadline = 0;\r\n  private task: Task = null;\r\n  private scheduledCallback: WorkLoop = null;\r\n  private isMessageLoopRunning = false;\r\n  private channel: MessageChannel = null;\r\n  private port: MessagePort = null;\r\n\r\n  constructor() {\r\n    this.channel = new MessageChannel();\r\n    this.port = this.channel.port2;\r\n    this.channel.port1.on('message', this.performWorkUntilDeadline.bind(this));\r\n  }\r\n\r\n  reset() {\r\n    this.deadline = 0;\r\n    this.task = null;\r\n    this.scheduledCallback = null;\r\n    this.isMessageLoopRunning = false;\r\n  }\r\n\r\n  shouldYield() {\r\n    return getTime() >= this.deadline;\r\n  }\r\n\r\n  schedule(callback: Callback, options?: ScheduleCallbackOptions) {\r\n    const {\r\n      priority = TaskPriority.NORMAL,\r\n      forceAsync = false,\r\n      isTransition = false,\r\n      createLocation,\r\n      setPendingStatus,\r\n    } = options || {};\r\n    const task = new Task(callback, priority, forceAsync);\r\n\r\n    task.setIsTransition(isTransition);\r\n    task.setPendingSetter(setPendingStatus);\r\n    task.setLocationCreator(createLocation || createRootLocation);\r\n    this.put(task);\r\n    this.execute();\r\n  }\r\n\r\n  hasPrimaryTask() {\r\n    if (!this.task.getIsTransition()) return false;\r\n    const { high, normal, low } = this.getQueues();\r\n    const hasPrimary = high.length > 0 || normal.length > 0;\r\n    const hasLow = low.length > 0;\r\n\r\n    if (hasPrimary || hasLow) {\r\n      const loc = this.task.createLocation();\r\n\r\n      if (hasPrimary) {\r\n        const has = Task.detectHasRelatedUpdate(loc, high, true) || Task.detectHasRelatedUpdate(loc, normal, true);\r\n\r\n        if (has) {\r\n          this.task.markAsUnnecessary();\r\n        }\r\n\r\n        return true;\r\n      }\r\n\r\n      if (hasLow) {\r\n        const has = Task.detectHasRelatedUpdate(loc, low);\r\n\r\n        if (has) {\r\n          this.task.markAsUnnecessary();\r\n\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  cancelTask(fn: TaskRestorer) {\r\n    if (this.task.getIsUnnecessary()) return this.complete(this.task);\r\n    this.task.setTaskRestorer(fn);\r\n    this.defer(this.task);\r\n  }\r\n\r\n  private complete(task: Task) {\r\n    task.pending(false);\r\n  }\r\n\r\n  private put(task: Task) {\r\n    const queue = this.queue[task.getPriority()];\r\n\r\n    if (task.getIsTransition()) {\r\n      const loc = task.createLocation();\r\n      const tasks = queue.filter(x => x.createLocation() !== loc);\r\n\r\n      queue.splice(0, queue.length, ...tasks);\r\n    }\r\n\r\n    queue.push(task);\r\n  }\r\n\r\n  private pick(queue: Array<Task>) {\r\n    if (queue.length === 0) return false;\r\n    this.task = queue.shift();\r\n\r\n    if (this.task.getIsTransition() && this.task.canPending()) {\r\n      const task = this.task;\r\n\r\n      task.markAsPending();\r\n      this.defer(this.task);\r\n      this.task = null;\r\n\r\n      nextTick(() => task.pending(true));\r\n\r\n      return true;\r\n    }\r\n\r\n    this.task.run();\r\n    this.task.getForceAsync() ? this.requestCallbackAsync(workLoop) : this.requestCallback(workLoop);\r\n\r\n    return true;\r\n  }\r\n\r\n  private execute() {\r\n    const isBusy = detectIsBusy();\r\n    const { high, normal, low } = this.getQueues();\r\n\r\n    if (!isBusy && !this.isMessageLoopRunning) {\r\n      this.pick(high) || this.pick(normal) || this.pick(low);\r\n    }\r\n  }\r\n\r\n  private requestCallbackAsync(callback: WorkLoop) {\r\n    this.scheduledCallback = callback;\r\n\r\n    if (!this.isMessageLoopRunning) {\r\n      this.isMessageLoopRunning = true;\r\n      this.port.postMessage(null);\r\n    }\r\n  }\r\n\r\n  private requestCallback(callback: WorkLoop) {\r\n    callback(false);\r\n    this.task = null;\r\n    this.execute();\r\n  }\r\n\r\n  private performWorkUntilDeadline() {\r\n    if (this.scheduledCallback) {\r\n      this.deadline = getTime() + YIELD_INTERVAL;\r\n      const hasMoreWork = this.scheduledCallback(true);\r\n\r\n      if (hasMoreWork) {\r\n        this.port.postMessage(null);\r\n      } else {\r\n        if (hasMoreWork === null) {\r\n          setTimeout(() => this.port.postMessage(null)); // has promise\r\n        } else {\r\n          this.complete(this.task);\r\n          this.reset();\r\n          this.execute();\r\n        }\r\n      }\r\n    } else {\r\n      this.isMessageLoopRunning = false;\r\n    }\r\n  }\r\n\r\n  private defer(task: Task) {\r\n    const { low } = this.getQueues();\r\n\r\n    low.unshift(task);\r\n  }\r\n\r\n  private getQueues() {\r\n    const high = this.queue[TaskPriority.HIGH];\r\n    const normal = this.queue[TaskPriority.NORMAL];\r\n    const low = this.queue[TaskPriority.LOW];\r\n\r\n    return {\r\n      high,\r\n      normal,\r\n      low,\r\n    };\r\n  }\r\n}\r\n\r\ntype TaskCallback = (fn: TaskRestorer) => void;\r\ntype TaskRestorer = (options: RestoreOptions) => void;\r\ntype LocationCreator = () => string;\r\n\r\nclass Task {\r\n  private id: number;\r\n  private priority: TaskPriority;\r\n  private forceAsync: boolean;\r\n  private isTransition: boolean;\r\n  private isPending: boolean;\r\n  private isUnnecessary: boolean;\r\n  private callback: TaskCallback;\r\n  private taskRestorer?: TaskRestorer = null;\r\n  private locationCreator?: LocationCreator;\r\n  private pendingSetter?: SetPendingStatus = null;\r\n  private static nextTaskId = 0;\r\n\r\n  constructor(callback: TaskCallback, priority: TaskPriority, forceAsync: boolean) {\r\n    this.id = ++Task.nextTaskId;\r\n    this.callback = callback;\r\n    this.priority = priority;\r\n    this.forceAsync = forceAsync;\r\n  }\r\n\r\n  getPriority() {\r\n    return this.priority;\r\n  }\r\n\r\n  getForceAsync() {\r\n    return this.forceAsync;\r\n  }\r\n\r\n  setIsTransition(value: boolean) {\r\n    this.isTransition = value;\r\n  }\r\n\r\n  getIsTransition() {\r\n    return this.isTransition;\r\n  }\r\n\r\n  run() {\r\n    this.callback(this.taskRestorer);\r\n    this.taskRestorer = null;\r\n  }\r\n\r\n  pending(value: boolean) {\r\n    this.isTransition && this.pendingSetter && this.pendingSetter(value);\r\n  }\r\n\r\n  markAsPending() {\r\n    this.isPending = true;\r\n  }\r\n\r\n  canPending() {\r\n    return !this.isPending && detectIsFunction(this.pendingSetter);\r\n  }\r\n\r\n  markAsUnnecessary() {\r\n    this.isUnnecessary = true;\r\n  }\r\n\r\n  getIsUnnecessary() {\r\n    return this.isUnnecessary;\r\n  }\r\n\r\n  setTaskRestorer(fn: TaskRestorer) {\r\n    this.taskRestorer = fn;\r\n  }\r\n\r\n  setLocationCreator(fn: LocationCreator) {\r\n    this.locationCreator = fn;\r\n  }\r\n\r\n  createLocation() {\r\n    return this.locationCreator();\r\n  }\r\n\r\n  setPendingSetter(fn: SetPendingStatus) {\r\n    this.pendingSetter = fn;\r\n  }\r\n\r\n  static detectHasRelatedUpdate(loc: string, tasks: Array<Task>, deep = false) {\r\n    const [$loc] = loc.split(HOOK_DELIMETER);\r\n\r\n    return tasks.some(x => {\r\n      const $$loc = x.createLocation();\r\n      const has = $$loc === loc || (deep && $$loc.length > loc.length && $$loc.indexOf($loc) !== -1);\r\n\r\n      return has;\r\n    });\r\n  }\r\n}\r\n\r\nconst createRootLocation: LocationCreator = () => ROOT;\r\n\r\ntype PortEvent = 'message';\r\ntype PortListener = (value: unknown) => void;\r\n\r\nexport type RestoreOptions = {\r\n  fiber: Fiber;\r\n  setValue?: () => void;\r\n  resetValue?: () => void;\r\n};\r\n\r\nexport type ScheduleCallbackOptions = {\r\n  priority?: TaskPriority;\r\n  forceAsync?: boolean;\r\n  isTransition?: boolean;\r\n  createLocation?: () => string;\r\n  setPendingStatus?: SetPendingStatus;\r\n  onCompleted?: () => void;\r\n};\r\n\r\nconst scheduler = new Scheduler();\r\n\r\nexport { scheduler };\r\n","import { type ScheduleCallbackOptions, scheduler } from '../scheduler';\r\nimport { type UpdateChanger, createUpdate } from '../workloop';\r\nimport { getRootId, $$scope } from '../scope';\r\nimport { TaskPriority } from '../constants';\r\nimport { addBatch } from '../batch';\r\nimport { detectIsFunction } from '../utils';\r\nimport { createHookLocation } from '../walk';\r\n\r\nexport type UpdateOptions = UpdateChanger;\r\n\r\nfunction useUpdate() {\r\n  const rootId = getRootId();\r\n  const fiber = $$scope().getCursorFiber();\r\n  const hook = fiber.hook; // !\r\n  const { idx } = hook;\r\n  const update = (createChanger?: () => UpdateChanger) => {\r\n    const $scope = $$scope();\r\n    if ($scope.getIsInsertionEffectsZone()) return;\r\n    const { owner } = hook;\r\n    const hasChanger = detectIsFunction(createChanger);\r\n    const isTransition = $scope.getIsTransitionZone();\r\n    const isBatch = $scope.getIsBatchZone();\r\n    const isEvent = $scope.getIsEventZone();\r\n    const priority = isTransition ? TaskPriority.LOW : isEvent ? TaskPriority.HIGH : TaskPriority.NORMAL; // !\r\n    const forceAsync = isTransition;\r\n    const setPendingStatus = $scope.getPendingStatusSetter();\r\n    const callback = createUpdate({\r\n      rootId,\r\n      hook,\r\n      isTransition,\r\n      createChanger: hasChanger ? createChanger : undefined,\r\n    });\r\n    const createLocation = () => createHookLocation(rootId, idx, owner);\r\n    const callbackOptions: ScheduleCallbackOptions = {\r\n      priority,\r\n      forceAsync,\r\n      isTransition,\r\n      createLocation,\r\n      setPendingStatus,\r\n    };\r\n\r\n    if (isBatch) {\r\n      addBatch(\r\n        owner,\r\n        () => scheduler.schedule(callback, callbackOptions),\r\n        () => hasChanger && createChanger().setValue(),\r\n      );\r\n    } else {\r\n      scheduler.schedule(callback, callbackOptions);\r\n    }\r\n  };\r\n\r\n  return update;\r\n}\r\n\r\nexport { useUpdate };\r\n","import { $$scope } from '../scope';\r\nimport { type Fiber } from '../fiber';\r\nimport { type Callback } from '../shared';\r\n\r\nfunction batch(callback: () => void) {\r\n  const $scope = $$scope();\r\n\r\n  $scope.setIsBatchZone(true);\r\n  callback();\r\n  $scope.setIsBatchZone(false);\r\n}\r\n\r\nfunction addBatch(fiber: Fiber, callback: Callback, change: Callback) {\r\n  const $scope = $$scope();\r\n\r\n  if ($scope.getIsTransitionZone()) {\r\n    callback();\r\n  } else {\r\n    const batch = fiber.batch || { timer: null, changes: [] };\r\n\r\n    fiber.batch = batch;\r\n    batch.changes.push(change);\r\n    batch.timer && clearTimeout(batch.timer);\r\n    batch.timer = setTimeout(() => {\r\n      batch.changes.splice(-1);\r\n      batch.changes.forEach(x => x());\r\n      fiber.batch = null;\r\n      callback();\r\n    });\r\n  }\r\n}\r\n\r\nexport { batch, addBatch };\r\n","import { detectIsString, detectIsFunction } from '../utils';\r\nimport { type TagVirtualNodeFactory, type ViewOptions, View } from '../view';\r\nimport { type ComponentFactory } from '../component';\r\n\r\nfunction createElement(\r\n  element: string | Function,\r\n  props: object,\r\n  ...slot: Array<any>\r\n): ComponentFactory | TagVirtualNodeFactory | null {\r\n  if (detectIsString(element)) {\r\n    const options = (props || {}) as ViewOptions;\r\n\r\n    options.as = element;\r\n    options.slot = slot;\r\n\r\n    return View(options);\r\n  }\r\n\r\n  if (detectIsFunction(element)) {\r\n    const options = (props || {}) as { slot: unknown };\r\n\r\n    options.slot = slot.length === 1 ? slot[0] : slot;\r\n\r\n    return element(options);\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nexport { createElement, createElement as h };\r\n","import { detectIsObject, detectIsNull, detectIsFunction } from '../utils';\r\nimport type { Component, ComponentFactory } from '../component';\r\nimport type { RefProps, KeyProps, FlagProps } from '../shared';\r\nimport { useMemo } from '../use-memo';\r\n\r\nfunction forwardRef<P extends object, R>(\r\n  component: ComponentFactory<P, R>,\r\n): ComponentFactory<P & RefProps<R> & KeyProps & FlagProps, R> {\r\n  type Props = P & RefProps<R>;\r\n\r\n  return (props: Props) => {\r\n    const { ref, ...rest } = (props || {}) as Props;\r\n\r\n    return component(rest as P, ref) as Component<P, R>;\r\n  };\r\n}\r\n\r\nfunction detectIsMutableRef(ref: unknown): ref is MutableRef {\r\n  if (!detectIsObject(ref) || detectIsNull(ref)) return false;\r\n  const mutableRef = ref as MutableRef;\r\n\r\n  for (const key in mutableRef) {\r\n    if (key === 'current' && mutableRef.hasOwnProperty(key)) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nfunction applyRef<T>(ref: Ref<T>, current: T) {\r\n  if (detectIsFunction(ref)) {\r\n    ref(current);\r\n  } else if (detectIsMutableRef(ref)) {\r\n    ref.current = current;\r\n  }\r\n}\r\n\r\nfunction useRef<T>(initialValue: T = null): MutableRef<T> {\r\n  const ref = useMemo(() => ({ current: initialValue }), []) as MutableRef<T>;\r\n\r\n  return ref;\r\n}\r\n\r\nexport type MutableRef<T = unknown> = {\r\n  current: T;\r\n};\r\n\r\nexport type FunctionRef<T = unknown> = (ref: T) => void;\r\n\r\nexport type Ref<T = unknown> = MutableRef<T> | FunctionRef<T>;\r\n\r\nexport { forwardRef, detectIsMutableRef, applyRef, useRef };\r\n","import { type DarkElement, type Fiber, component, useMemo, $$scope, detectIsComponent } from '@dark-engine/core';\r\n\r\nimport type { TagNativeElement } from '../native-element';\r\n\r\nconst $$portal = Symbol('portal');\r\n\r\nfunction createPortal(slot: DarkElement, container: TagNativeElement) {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    if (!(container instanceof Element)) {\r\n      throw new Error(`[Dark]: createPortal receives only Element as container!`);\r\n    }\r\n  }\r\n\r\n  return Portal({ container, slot });\r\n}\r\n\r\ntype PortalProps = {\r\n  container: TagNativeElement;\r\n  slot: DarkElement;\r\n};\r\n\r\nconst Portal = component<PortalProps>(\r\n  props => {\r\n    const element = props.container;\r\n    const fiber = $$scope().getCursorFiber();\r\n\r\n    useMemo(() => (element.innerHTML = ''), []);\r\n\r\n    fiber.element = element;\r\n    props.container = null;\r\n\r\n    return props.slot;\r\n  },\r\n  { token: $$portal },\r\n);\r\n\r\nconst detectIsPortal = (instance: unknown) => detectIsComponent(instance) && instance.token === $$portal;\r\n\r\nconst getPortalContainer = (fiber: Fiber<TagNativeElement>): TagNativeElement | null =>\r\n  detectIsPortal(fiber.inst) ? fiber.element : null;\r\n\r\nfunction unmountPortal(fiber: Fiber<TagNativeElement>) {\r\n  const element = getPortalContainer(fiber);\r\n\r\n  element && (element.innerHTML = '');\r\n}\r\n\r\nexport { createPortal, unmountPortal, detectIsPortal };\r\n","import { detectIsFunction, $$scope, detectIsArray } from '@dark-engine/core';\r\n\r\nimport type { TagNativeElement } from '../native-element';\r\n\r\ntype BrowserEventConstructor = (type: string, event: Event) => void;\r\n\r\nclass SyntheticEvent<E extends Event, T = TagNativeElement> {\r\n  public type = '';\r\n  public sourceEvent: E = null;\r\n  public target: T = null;\r\n  private propagation = true;\r\n\r\n  constructor(options: Pick<SyntheticEvent<E, T>, 'sourceEvent' | 'target'>) {\r\n    this.type = options.sourceEvent.type;\r\n    this.sourceEvent = options.sourceEvent;\r\n    this.target = options.target;\r\n  }\r\n\r\n  public stopPropagation() {\r\n    this.propagation = false;\r\n    this.sourceEvent.stopPropagation();\r\n  }\r\n\r\n  public preventDefault() {\r\n    this.sourceEvent.preventDefault();\r\n  }\r\n\r\n  public getPropagation() {\r\n    return this.propagation;\r\n  }\r\n}\r\n\r\nfunction delegateEvent(\r\n  target: Element,\r\n  eventName: string,\r\n  handler: (e: Event) => void | [fn: () => void, ...args: Array<any>],\r\n) {\r\n  const $scope = $$scope();\r\n  const eventsMap = $scope.getEvents();\r\n  const handlersMap = eventsMap.get(eventName);\r\n  const $handler = detectIsArray(handler) ? (e: Event) => handler[0](...handler.slice(1), e) : handler;\r\n\r\n  if (!handlersMap) {\r\n    const rootHandler = (event: Event) => {\r\n      const handler = eventsMap.get(eventName).get(event.target);\r\n      const target = event.target as TagNativeElement;\r\n      let $event: SyntheticEvent<Event> = null;\r\n\r\n      if (detectIsFunction(handler)) {\r\n        $event = new SyntheticEvent({ sourceEvent: event, target });\r\n\r\n        $scope.setIsEventZone(true);\r\n        handler($event);\r\n        $scope.setIsEventZone(false);\r\n      }\r\n\r\n      if (target.parentElement) {\r\n        const shouldPropagate = $event ? $event.getPropagation() : true;\r\n\r\n        if (shouldPropagate) {\r\n          const constructor = event.constructor as BrowserEventConstructor;\r\n\r\n          target.parentElement.dispatchEvent(new constructor(event.type, event));\r\n        }\r\n      }\r\n    };\r\n\r\n    eventsMap.set(eventName, new WeakMap([[target, $handler]]));\r\n    document.addEventListener(eventName, rootHandler, true);\r\n    $scope.addEventUnsubscriber(() => document.removeEventListener(eventName, rootHandler, true));\r\n  } else {\r\n    handlersMap.set(target, $handler);\r\n  }\r\n}\r\n\r\nconst detectIsEvent = (attrName: string) => attrName.startsWith('on');\r\n\r\nconst getEventName = (attrName: string) => attrName.slice(2, attrName.length).toLowerCase();\r\n\r\nexport { SyntheticEvent, delegateEvent, detectIsEvent, getEventName };\r\n","export const VERSION = '0.25.1';\r\nexport const STYLE_ATTR = 'style';\r\nexport const CLASS_ATTR = 'class';\r\nexport const CLASS_NAME_ATTR = 'className';\r\nexport const EXCLUDE_ATTR_MARK = '$';\r\n","import {\r\n  type Fiber,\r\n  type VirtualNode,\r\n  type TagVirtualNode,\r\n  type TextVirtualNode,\r\n  type CommentVirtualNode,\r\n  type PlainVirtualNode,\r\n  type Callback,\r\n  REF_ATTR,\r\n  ATTR_BLACK_LIST,\r\n  CREATE_EFFECT_TAG,\r\n  UPDATE_EFFECT_TAG,\r\n  DELETE_EFFECT_TAG,\r\n  SKIP_EFFECT_TAG,\r\n  MOVE_MASK,\r\n  FLUSH_MASK,\r\n  SHADOW_MASK,\r\n  detectIsUndefined,\r\n  detectIsBoolean,\r\n  detectIsObject,\r\n  NodeType,\r\n  detectIsTagVirtualNode,\r\n  detectIsTextVirtualNode,\r\n  detectIsPlainVirtualNode,\r\n  getFiberWithElement,\r\n  collectElements,\r\n  walk,\r\n  dummyFn,\r\n  $$scope,\r\n  applyRef,\r\n} from '@dark-engine/core';\r\n\r\nimport { detectIsPortal } from '../portal';\r\nimport { delegateEvent, detectIsEvent, getEventName } from '../events';\r\nimport { STYLE_ATTR, CLASS_ATTR, CLASS_NAME_ATTR, EXCLUDE_ATTR_MARK } from '../constants';\r\nimport type {\r\n  NativeElement,\r\n  TagNativeElement,\r\n  TextNativeElement,\r\n  CommentNativeElement,\r\n  NativeNode,\r\n  AttributeValue,\r\n} from '../native-element';\r\n\r\nlet moves: Array<Callback> = [];\r\nlet patches: Array<Callback> = [];\r\nlet trackUpdate: (nativeElement: NativeElement) => void = null;\r\nconst svgTagNames = new Set([\r\n  'svg',\r\n  'animate',\r\n  'animateMotion',\r\n  'animateTransform',\r\n  'circle',\r\n  'clipPath',\r\n  'defs',\r\n  'desc',\r\n  'ellipse',\r\n  'feBlend',\r\n  'feColorMatrix',\r\n  'feComponentTransfer',\r\n  'feComposite',\r\n  'feConvolveMatrix',\r\n  'feDiffuseLighting',\r\n  'feDisplacementMap',\r\n  'feDistantLight',\r\n  'feDropShadow',\r\n  'feFlood',\r\n  'feFuncA',\r\n  'feFuncB',\r\n  'feFuncG',\r\n  'feFuncR',\r\n  'feGaussianBlur',\r\n  'feImage',\r\n  'feMerge',\r\n  'feMergeNode',\r\n  'feMorphology',\r\n  'feOffset',\r\n  'fePointLight',\r\n  'feSpecularLighting',\r\n  'feSpotLight',\r\n  'feTile',\r\n  'feTurbulence',\r\n  'filter',\r\n  'foreignObject',\r\n  'g',\r\n  'image',\r\n  'line',\r\n  'linearGradient',\r\n  'marker',\r\n  'mask',\r\n  'metadata',\r\n  'mpath',\r\n  'path',\r\n  'pattern',\r\n  'polygon',\r\n  'polyline',\r\n  'radialGradient',\r\n  'rect',\r\n  'stop',\r\n  'switch',\r\n  'symbol',\r\n  'text',\r\n  'textPath',\r\n  'tspan',\r\n  'use',\r\n  'view',\r\n]);\r\nconst voidTagNames = new Set([\r\n  'area',\r\n  'base',\r\n  'br',\r\n  'col',\r\n  'embed',\r\n  'hr',\r\n  'img',\r\n  'input',\r\n  'link',\r\n  'meta',\r\n  'param',\r\n  'source',\r\n  'track',\r\n  'wbr',\r\n]);\r\n\r\nconst createNativeElementMap = {\r\n  [NodeType.TAG]: (vNode: VirtualNode): TagNativeElement => {\r\n    const tagNode = vNode as TagVirtualNode;\r\n    const name = tagNode.name;\r\n\r\n    return detectIsSvgElement(name)\r\n      ? document.createElementNS('http://www.w3.org/2000/svg', name)\r\n      : document.createElement(name);\r\n  },\r\n  [NodeType.TEXT]: (vNode: VirtualNode): TextNativeElement => {\r\n    return document.createTextNode((vNode as TextVirtualNode).value);\r\n  },\r\n  [NodeType.COMMENT]: (vNode: VirtualNode): CommentNativeElement => {\r\n    return document.createComment((vNode as CommentVirtualNode).value);\r\n  },\r\n};\r\n\r\nfunction createNativeElement(node: VirtualNode): NativeElement {\r\n  return createNativeElementMap[node.type](node);\r\n}\r\n\r\nfunction detectIsSvgElement(name: string) {\r\n  return svgTagNames.has(name);\r\n}\r\n\r\nfunction detectIsVoidElement(name: string) {\r\n  return voidTagNames.has(name);\r\n}\r\n\r\nfunction setObjectStyle(element: TagNativeElement, style: object) {\r\n  const keys = Object.keys(style);\r\n\r\n  for (const key of keys) {\r\n    element.style.setProperty(key, String(style[key]));\r\n  }\r\n}\r\n\r\nfunction addAttributes(element: NativeElement, node: TagVirtualNode, isHydrateZone: boolean) {\r\n  const attrNames = Object.keys(node.attrs);\r\n  const tagElement = element as TagNativeElement;\r\n\r\n  for (const attrName of attrNames) {\r\n    const attrValue = node.attrs[attrName];\r\n\r\n    if (attrName[0] === EXCLUDE_ATTR_MARK) continue;\r\n\r\n    if (attrName === REF_ATTR) {\r\n      applyRef(attrValue, element);\r\n      continue;\r\n    }\r\n\r\n    if (attrName === CLASS_ATTR || attrName === CLASS_NAME_ATTR) {\r\n      toggleAttribute(tagElement, CLASS_ATTR, attrValue);\r\n      continue;\r\n    }\r\n\r\n    if (attrName === STYLE_ATTR && attrValue && detectIsObject(attrValue)) {\r\n      setObjectStyle(tagElement, attrValue);\r\n      continue;\r\n    }\r\n\r\n    if (detectIsEvent(attrName)) {\r\n      delegateEvent(tagElement, getEventName(attrName), attrValue);\r\n    } else if (!isHydrateZone && !detectIsUndefined(attrValue) && !ATTR_BLACK_LIST[attrName]) {\r\n      const stop = patchProperties({\r\n        tagName: node.name,\r\n        element: tagElement,\r\n        attrValue,\r\n        attrName,\r\n      });\r\n\r\n      !stop && tagElement.setAttribute(attrName, attrValue);\r\n    }\r\n  }\r\n}\r\n\r\nfunction updateAttributes(element: NativeElement, prevNode: TagVirtualNode, nextNode: TagVirtualNode) {\r\n  const attrNames = getAttributeNames(prevNode, nextNode);\r\n  const tagElement = element as TagNativeElement;\r\n\r\n  for (const attrName of attrNames) {\r\n    const prevAttrValue = prevNode.attrs[attrName];\r\n    const nextAttrValue = nextNode.attrs[attrName];\r\n\r\n    if (attrName[0] === EXCLUDE_ATTR_MARK) continue;\r\n\r\n    if (attrName === REF_ATTR) {\r\n      applyRef(prevAttrValue, element);\r\n      continue;\r\n    }\r\n\r\n    if ((attrName === CLASS_ATTR || attrName === CLASS_NAME_ATTR) && prevAttrValue !== nextAttrValue) {\r\n      toggleAttribute(tagElement, CLASS_ATTR, nextAttrValue);\r\n      continue;\r\n    }\r\n\r\n    if (attrName === STYLE_ATTR && nextAttrValue && prevAttrValue !== nextAttrValue && detectIsObject(nextAttrValue)) {\r\n      setObjectStyle(tagElement, nextAttrValue);\r\n      continue;\r\n    }\r\n\r\n    if (!detectIsUndefined(nextAttrValue)) {\r\n      if (detectIsEvent(attrName)) {\r\n        prevAttrValue !== nextAttrValue && delegateEvent(tagElement, getEventName(attrName), nextAttrValue);\r\n      } else if (!ATTR_BLACK_LIST[attrName] && prevAttrValue !== nextAttrValue) {\r\n        const stop = patchProperties({\r\n          tagName: nextNode.name,\r\n          element: tagElement,\r\n          attrValue: nextAttrValue,\r\n          attrName,\r\n        });\r\n\r\n        !stop && tagElement.setAttribute(attrName, nextAttrValue);\r\n      }\r\n    } else {\r\n      tagElement.removeAttribute(attrName);\r\n    }\r\n  }\r\n}\r\n\r\nfunction toggleAttribute(element: TagNativeElement, name: string, value: string) {\r\n  value ? element.setAttribute(name, value) : element.removeAttribute(name);\r\n}\r\n\r\nfunction getAttributeNames(prevNode: TagVirtualNode, nextNode: TagVirtualNode) {\r\n  const attrNames = new Set<string>();\r\n  const prevAttrs = Object.keys(prevNode.attrs);\r\n  const nextAttrs = Object.keys(nextNode.attrs);\r\n  const size = Math.max(prevAttrs.length, nextAttrs.length);\r\n\r\n  for (let i = 0; i < size; i++) {\r\n    attrNames.add(prevAttrs[i] || nextAttrs[i]);\r\n  }\r\n\r\n  return attrNames;\r\n}\r\n\r\ntype PatchPropertiesOptions = {\r\n  tagName: string;\r\n  element: TagNativeElement;\r\n  attrName: string;\r\n  attrValue: AttributeValue;\r\n};\r\n\r\nfunction patchProperties(options: PatchPropertiesOptions): boolean {\r\n  const { tagName, element, attrName, attrValue } = options;\r\n  const fn = patchPropertiesSpecialCasesMap[tagName];\r\n  let stop = fn ? fn(element, attrName, attrValue) : false;\r\n\r\n  if (canSetProperty(element, attrName)) {\r\n    element[attrName] = attrValue;\r\n  }\r\n\r\n  if (!stop && detectIsBoolean(attrValue)) {\r\n    stop = !attrName.includes('-');\r\n  }\r\n\r\n  return stop;\r\n}\r\n\r\nfunction canSetProperty(element: TagNativeElement, key: string) {\r\n  const prototype = Object.getPrototypeOf(element);\r\n  const descriptor = Object.getOwnPropertyDescriptor(prototype, key);\r\n\r\n  return Boolean(descriptor?.set);\r\n}\r\n\r\nconst patchPropertiesSpecialCasesMap: Record<\r\n  string,\r\n  (element: NativeElement, attrName: string, attrValue: AttributeValue) => boolean\r\n> = {\r\n  input: (element: HTMLInputElement, attrName: string, attrValue: AttributeValue) => {\r\n    if (attrName === 'value') {\r\n      patches.push(() => {\r\n        detectIsBoolean(attrValue) ? (element.checked = attrValue) : (element.value = String(attrValue));\r\n      });\r\n    } else if (attrName === 'autoFocus') {\r\n      patches.push(() => {\r\n        element.autofocus = Boolean(attrValue);\r\n        element.autofocus && element.focus();\r\n      });\r\n    }\r\n\r\n    return false;\r\n  },\r\n  textarea: (element: HTMLTextAreaElement, attrName: string, attrValue: AttributeValue) => {\r\n    if (attrName === 'value') {\r\n      element.innerText = String(attrValue);\r\n\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  },\r\n};\r\n\r\nfunction commitCreation(fiber: Fiber<NativeElement>) {\r\n  const parentFiber = getFiberWithElement<NativeElement, TagNativeElement>(fiber.parent);\r\n  const parentElement = parentFiber.element;\r\n  const childNodes = parentElement.childNodes;\r\n  const isHydrateZone = $$scope().getIsHydrateZone();\r\n\r\n  if (isHydrateZone) {\r\n    const nativeElement = childNodes[fiber.eidx] as NativeElement;\r\n\r\n    if (\r\n      detectIsTextVirtualNode(fiber.inst) &&\r\n      nativeElement instanceof Text &&\r\n      fiber.inst.value.length !== nativeElement.length\r\n    ) {\r\n      nativeElement.splitText(fiber.inst.value.length);\r\n    }\r\n\r\n    fiber.element = nativeElement;\r\n  } else {\r\n    if (!(fiber.mask & SHADOW_MASK)) {\r\n      if (childNodes.length === 0 || fiber.eidx > childNodes.length - 1) {\r\n        !detectIsVoidElement((parentFiber.inst as TagVirtualNode).name) &&\r\n          appendNativeElement(fiber.element, parentElement);\r\n      } else {\r\n        insertNativeElement(fiber.element, parentElement.childNodes[fiber.eidx], parentElement);\r\n      }\r\n    }\r\n  }\r\n\r\n  detectIsTagVirtualNode(fiber.inst) && addAttributes(fiber.element, fiber.inst, isHydrateZone);\r\n}\r\n\r\nfunction commitUpdate(fiber: Fiber<NativeElement>) {\r\n  const element = fiber.element;\r\n  const prevInstance = fiber.alt.inst as VirtualNode;\r\n  const nextInstance = fiber.inst as VirtualNode;\r\n\r\n  detectIsPlainVirtualNode(nextInstance)\r\n    ? (prevInstance as PlainVirtualNode).value !== nextInstance.value && (element.textContent = nextInstance.value)\r\n    : updateAttributes(element, prevInstance as TagVirtualNode, nextInstance as TagVirtualNode);\r\n}\r\n\r\nfunction commitDeletion(fiber: Fiber<NativeElement>) {\r\n  const parentFiber = getFiberWithElement<NativeElement, TagNativeElement>(fiber.parent);\r\n\r\n  if (fiber.mask & FLUSH_MASK) {\r\n    parentFiber.element.innerHTML && (parentFiber.element.innerHTML = '');\r\n    return;\r\n  }\r\n\r\n  walk<NativeElement>(fiber, (fiber, skip) => {\r\n    if (fiber.element) {\r\n      !detectIsPortal(fiber.inst) &&\r\n        canRemoveNativeElement(fiber.element, parentFiber.element) &&\r\n        removeNativeElement(fiber.element, parentFiber.element);\r\n      return skip();\r\n    }\r\n  });\r\n}\r\n\r\nfunction move(fiber: Fiber<NativeElement>) {\r\n  const sourceNodes = collectElements(fiber, x => x.element);\r\n  const sourceNode = sourceNodes[0];\r\n  const parentElement = sourceNode.parentElement;\r\n  const sourceFragment = new DocumentFragment();\r\n  const elementIdx = fiber.eidx;\r\n  let idx = 0;\r\n  const move = () => {\r\n    for (let i = 1; i < sourceNodes.length; i++) {\r\n      removeNativeElement(parentElement.childNodes[elementIdx + 1], parentElement);\r\n    }\r\n\r\n    replaceNativeElement(sourceFragment, parentElement.childNodes[elementIdx], parentElement);\r\n  };\r\n\r\n  for (const node of sourceNodes) {\r\n    insertNativeElement(document.createComment(`${elementIdx}:${idx}`), node, parentElement);\r\n    appendNativeElement(node, sourceFragment);\r\n    idx++;\r\n  }\r\n\r\n  moves.push(move);\r\n}\r\n\r\nconst commitMap: Record<string, (fiber: Fiber<NativeElement>) => void> = {\r\n  [CREATE_EFFECT_TAG]: (fiber: Fiber<NativeElement>) => {\r\n    if (!fiber.element || detectIsPortal(fiber.inst)) return;\r\n    trackUpdate && trackUpdate(fiber.element);\r\n    commitCreation(fiber);\r\n  },\r\n  [UPDATE_EFFECT_TAG]: (fiber: Fiber<NativeElement>) => {\r\n    fiber.mask & MOVE_MASK && (move(fiber), (fiber.mask &= ~MOVE_MASK));\r\n    if (!fiber.element || detectIsPortal(fiber.inst)) return;\r\n    trackUpdate && trackUpdate(fiber.element);\r\n    commitUpdate(fiber);\r\n  },\r\n  [DELETE_EFFECT_TAG]: commitDeletion,\r\n  [SKIP_EFFECT_TAG]: dummyFn,\r\n};\r\n\r\nfunction finishCommit() {\r\n  moves.forEach(x => x());\r\n  patches.forEach(x => x());\r\n  moves = [];\r\n  patches = [];\r\n}\r\n\r\nconst commit = (fiber: Fiber<NativeElement>) => commitMap[fiber.tag](fiber);\r\n\r\nconst setTrackUpdate = (fn: typeof trackUpdate) => (trackUpdate = fn);\r\n\r\nconst appendNativeElement = (element: NativeNode, parent: NativeNode) => parent.appendChild(element);\r\n\r\nconst insertNativeElement = (element: NativeNode, sibling: NativeNode, parent: TagNativeElement) =>\r\n  parent.insertBefore(element, sibling);\r\n\r\nconst insertNativeElementByIndex = (element: NativeNode, idx: number, parent: TagNativeElement) =>\r\n  parent.insertBefore(element, parent.childNodes[idx]);\r\n\r\nconst replaceNativeElement = (element: NativeNode, candidate: NativeNode, parent: TagNativeElement) =>\r\n  parent.replaceChild(element, candidate);\r\n\r\nconst canRemoveNativeElement = (element: NativeNode, parent: NativeNode) => element.parentElement === parent;\r\n\r\nconst removeNativeElement = (element: NativeNode, parent: TagNativeElement) => parent.removeChild(element);\r\n\r\nexport { createNativeElement, commit, finishCommit, setTrackUpdate, insertNativeElementByIndex };\r\n","import {\r\n  type DarkElement,\r\n  type Callback,\r\n  ROOT,\r\n  Fiber,\r\n  CREATE_EFFECT_TAG,\r\n  UPDATE_EFFECT_TAG,\r\n  platform,\r\n  flatten,\r\n  detectIsUndefined,\r\n  detectIsFunction,\r\n  trueFn,\r\n  TagVirtualNode,\r\n  TaskPriority,\r\n  createReplacer,\r\n  setRootId,\r\n  $$scope,\r\n  dummyFn,\r\n  scheduler,\r\n} from '@dark-engine/core';\r\n\r\nimport { createNativeElement, insertNativeElementByIndex, commit, finishCommit } from '../dom';\r\nimport { detectIsPortal, unmountPortal } from '../portal';\r\nimport type { TagNativeElement } from '../native-element';\r\n\r\nconst roots = new Map<Element, number>();\r\nconst raf = requestAnimationFrame.bind(window);\r\nconst caf = cancelAnimationFrame.bind(window);\r\nconst spawn = raf;\r\nlet isInjected = false;\r\n\r\nfunction inject() {\r\n  platform.createElement = createNativeElement as typeof platform.createElement;\r\n  platform.insertElement = insertNativeElementByIndex as typeof platform.insertElement;\r\n  platform.raf = raf;\r\n  platform.caf = caf;\r\n  platform.spawn = spawn;\r\n  platform.commit = commit;\r\n  platform.finishCommit = finishCommit;\r\n  platform.detectIsDynamic = trueFn;\r\n  platform.detectIsPortal = detectIsPortal;\r\n  platform.unmountPortal = unmountPortal;\r\n  platform.chunk = dummyFn;\r\n  isInjected = true;\r\n}\r\n\r\nfunction render(element: DarkElement, container: TagNativeElement, hydrate?: Callback) {\r\n  !isInjected && inject();\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    if (!(container instanceof Element)) {\r\n      throw new Error(`[Dark]: render receives only Element as container!`);\r\n    }\r\n  }\r\n\r\n  const isMounted = !detectIsUndefined(roots.get(container));\r\n  const isHydrate = detectIsFunction(hydrate);\r\n  let rootId: number = null;\r\n\r\n  if (!isMounted) {\r\n    rootId = roots.size;\r\n    roots.set(container, rootId);\r\n    !isHydrate && (container.innerHTML = '');\r\n  } else {\r\n    rootId = roots.get(container);\r\n  }\r\n\r\n  const $scope = $$scope(rootId);\r\n\r\n  // insertion effect can't schedule renders\r\n  if ($scope?.getIsInsertionEffectsZone()) return;\r\n\r\n  const callback = () => {\r\n    setRootId(rootId); // !\r\n    const $scope = $$scope();\r\n    const rootFiber = $scope.getRoot();\r\n    const isUpdate = Boolean(rootFiber);\r\n    const fiber = new Fiber().mutate({\r\n      element: container,\r\n      inst: new TagVirtualNode(ROOT, {}, flatten([element || createReplacer()]) as TagVirtualNode['children']),\r\n      alt: rootFiber,\r\n      tag: isUpdate ? UPDATE_EFFECT_TAG : CREATE_EFFECT_TAG,\r\n    });\r\n\r\n    $scope.resetMount();\r\n    $scope.setWorkInProgress(fiber);\r\n    $scope.setIsHydrateZone(isHydrate);\r\n    $scope.setNextUnitOfWork(fiber);\r\n    isHydrate && hydrate();\r\n  };\r\n\r\n  scheduler.schedule(callback, { priority: TaskPriority.NORMAL });\r\n}\r\n\r\nexport { render, roots, inject };\r\n","import { type ElementKey, type TimerId, detectIsEmpty } from '@dark-engine/core';\r\n\r\nimport { type Controller, type StartFn } from '../controller';\r\nimport { type SpringValue } from '../shared';\r\n\r\nclass SharedState<T extends string = string> {\r\n  private ctrls: Array<Controller<T>> = [];\r\n  private stack = new Set<ElementKey>();\r\n  private flow = Flow.RIGHT;\r\n  private isTrail = false;\r\n  private isPaused = false;\r\n  private isCanceled = false;\r\n  private timeout = 0;\r\n  private timerId: TimerId = null;\r\n  private events = new Map<AnimationEventName, Set<AnimationEventHandler<T>>>();\r\n\r\n  getCtrls() {\r\n    return this.ctrls;\r\n  }\r\n\r\n  setCtrls(ctrls: Array<Controller<T>>) {\r\n    this.ctrls = ctrls;\r\n  }\r\n\r\n  setIsTrail(x: boolean) {\r\n    this.isTrail = x;\r\n  }\r\n\r\n  getIsTrail() {\r\n    return this.isTrail;\r\n  }\r\n\r\n  setFlow(x: Flow) {\r\n    this.flow = x;\r\n  }\r\n\r\n  getIsPaused() {\r\n    return this.isPaused;\r\n  }\r\n\r\n  getIsCanceled() {\r\n    return this.isCanceled;\r\n  }\r\n\r\n  detectIsRightFlow() {\r\n    return this.flow === Flow.RIGHT;\r\n  }\r\n\r\n  setIsPlaying(x: boolean, key: ElementKey) {\r\n    if (x) {\r\n      this.stack.add(key);\r\n    } else {\r\n      this.stack.delete(key);\r\n    }\r\n  }\r\n\r\n  detectIsPlaying(key?: ElementKey) {\r\n    return detectIsEmpty(key) ? this.stack.size > 0 : this.stack.has(key);\r\n  }\r\n\r\n  start(fn?: StartFn<T>) {\r\n    this.defer(() => {\r\n      if (this.ctrls.length === 0) return;\r\n      this.event('series-start');\r\n\r\n      if (this.isTrail) {\r\n        const ctrl = this.flow === Flow.RIGHT ? this.ctrls[0] : this.ctrls[this.ctrls.length - 1];\r\n\r\n        ctrl.start(fn);\r\n      } else {\r\n        this.ctrls.forEach(x => x.start(fn));\r\n      }\r\n    });\r\n  }\r\n\r\n  pause() {\r\n    this.isPaused = true;\r\n  }\r\n\r\n  resume() {\r\n    this.isPaused = false;\r\n  }\r\n\r\n  delay(timeout: number) {\r\n    this.timeout = timeout;\r\n  }\r\n\r\n  reset() {\r\n    this.ctrls.forEach(x => x.reset());\r\n  }\r\n\r\n  cancel() {\r\n    this.ctrls.forEach(x => x.cancel());\r\n    this.resetTimer();\r\n    this.isCanceled = true;\r\n  }\r\n\r\n  on(event: AnimationEventName, handler: AnimationEventHandler<T>) {\r\n    if (!this.events.has(event)) {\r\n      this.events.set(event, new Set());\r\n    }\r\n\r\n    const subs = this.events.get(event);\r\n\r\n    subs.add(handler);\r\n\r\n    return () => subs.delete(handler);\r\n  }\r\n\r\n  event(name: AnimationEventName, value: AnimationEventValue<T> = null) {\r\n    this.events.has(name) && this.events.get(name).forEach(x => x(value));\r\n  }\r\n\r\n  completeSeries() {\r\n    const isCompleted = !this.detectIsPlaying();\r\n\r\n    isCompleted && this.event('series-end');\r\n  }\r\n\r\n  defer(fn: () => void) {\r\n    this.resetTimer();\r\n\r\n    if (this.timeout > 0) {\r\n      this.timerId = setTimeout(() => {\r\n        this.timerId = null;\r\n        fn();\r\n      }, this.timeout);\r\n    } else {\r\n      fn();\r\n    }\r\n  }\r\n\r\n  private resetTimer() {\r\n    this.timerId && clearTimeout(this.timerId);\r\n    this.timerId = null;\r\n  }\r\n}\r\n\r\nexport enum Flow {\r\n  RIGHT = 'RIGHT',\r\n  LEFT = 'LEFT',\r\n}\r\n\r\nlet sharedState: SharedState = null;\r\n\r\nfunction setSharedState(state: SharedState) {\r\n  sharedState = state;\r\n}\r\n\r\nfunction getSharedState() {\r\n  const state = sharedState;\r\n\r\n  sharedState = null;\r\n\r\n  return state;\r\n}\r\n\r\nexport type AnimationEventName = 'series-start' | 'item-start' | 'item-change' | 'item-end' | 'series-end';\r\n\r\nexport type AnimationEventValue<T extends string = string> = {\r\n  value: SpringValue<T>;\r\n  idx: number;\r\n  key: ElementKey;\r\n};\r\n\r\nexport type AnimationEventHandler<T extends string = string> = (value?: AnimationEventValue<T>) => void;\r\n\r\nexport { SharedState, setSharedState, getSharedState };\r\n","import { type SpringConfig } from '../shared';\r\n\r\ntype Preset = Pick<SpringConfig, 'tension' | 'friction'>;\r\ntype PresetName = 'no-wobble' | 'gentle' | 'wobbly' | 'stiff';\r\n\r\nconst presets: Record<PresetName, Preset> = {\r\n  'no-wobble': { tension: 170, friction: 26 },\r\n  gentle: { tension: 120, friction: 14 },\r\n  wobbly: { tension: 180, friction: 12 },\r\n  stiff: { tension: 210, friction: 20 },\r\n};\r\n\r\nfunction preset(name: PresetName): Preset {\r\n  return presets[name] || ({} as Preset);\r\n}\r\n\r\nexport { preset };\r\n","import { preset } from '../preset';\r\n\r\nexport type SpringValue<T extends string = string> = Record<T, number>;\r\n\r\nexport type SpringConfig = {\r\n  mass: number;\r\n  tension: number;\r\n  friction: number;\r\n  precision: number;\r\n  fix: number;\r\n};\r\n\r\nconst defaultSpringConfig: SpringConfig = {\r\n  ...preset('no-wobble'),\r\n  mass: 1,\r\n  precision: 3,\r\n  fix: 4,\r\n};\r\n\r\nexport { defaultSpringConfig };\r\n","import { detectIsFunction, detectIsEmpty, detectAreDepsDifferent, trueFn, error } from '../utils';\r\nimport { useLayoutEffect } from '../use-layout-effect';\r\nimport { type SubscriberWithValue } from '../shared';\r\nimport { ATOM_HOST_MASK } from '../constants';\r\nimport { $$scope, getRootId } from '../scope';\r\nimport { createUpdate } from '../workloop';\r\nimport { useUpdate } from '../use-update';\r\nimport { EventEmitter } from '../emitter';\r\nimport { scheduler } from '../scheduler';\r\nimport { useMemo } from '../use-memo';\r\nimport { type Hook } from '../fiber';\r\nimport { batch } from '../batch';\r\n\r\nclass Atom<T = unknown> {\r\n  private value: T;\r\n  private connections1: Map<Hook, Tuple<T>>;\r\n  private connections2: Map<T, Tuple<T>>;\r\n  private subjects: Set<ReadableAtom>;\r\n  private emitter: EventEmitter<'data', EmitterValue<T>>;\r\n\r\n  constructor(value: T) {\r\n    this.value = value;\r\n  }\r\n\r\n  val(fn?: ShouldUpdate<T>, key?: T) {\r\n    try {\r\n      this.__connect(fn, key);\r\n    } catch (err) {\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        error('[Dark]: Illegal invocation atom.val() outside render process!');\r\n      }\r\n    }\r\n\r\n    return this.value;\r\n  }\r\n\r\n  get() {\r\n    return this.value;\r\n  }\r\n\r\n  on(fn: SubscriberWithValue<EmitterValue<T>>) {\r\n    !this.emitter && (this.emitter = new EventEmitter());\r\n\r\n    return this.emitter.on('data', fn);\r\n  }\r\n\r\n  kill() {\r\n    if (this.connections1) {\r\n      for (const [hook, [_, __, ___, key]] of this.connections1) {\r\n        this.off(hook, key);\r\n      }\r\n    }\r\n\r\n    if (this.connections2) {\r\n      for (const [key, [_, hook]] of this.connections2) {\r\n        this.off(hook, key);\r\n      }\r\n    }\r\n\r\n    this.connections1 = null;\r\n    this.connections2 = null;\r\n    this.emitter = null;\r\n    this.subjects = null;\r\n  }\r\n\r\n  toString() {\r\n    return String(this.value);\r\n  }\r\n\r\n  toJSON() {\r\n    return this.value;\r\n  }\r\n\r\n  valueOf() {\r\n    return this.value;\r\n  }\r\n\r\n  __connect(fn: ShouldUpdate<T>, key: T) {\r\n    const rootId = getRootId();\r\n    const fiber = $$scope().getCursorFiber();\r\n    const { hook } = fiber;\r\n    const disconnect = () => this.off(hook, key);\r\n\r\n    !fiber.atoms && (fiber.atoms = new Map());\r\n    fiber.atoms.set(this, disconnect);\r\n    fiber.markHost(ATOM_HOST_MASK);\r\n\r\n    if (detectIsEmpty(key)) {\r\n      !this.connections1 && (this.connections1 = new Map());\r\n      this.connections1.set(hook, [rootId, hook, fn, key]);\r\n    } else {\r\n      !this.connections2 && (this.connections2 = new Map());\r\n      this.connections2.set(key, [rootId, hook, fn, key]);\r\n    }\r\n\r\n    return disconnect;\r\n  }\r\n\r\n  __addSubject(atom$: ReadableAtom) {\r\n    !this.subjects && (this.subjects = new Set());\r\n    this.subjects.add(atom$);\r\n  }\r\n\r\n  __removeSubject(atom$: ReadableAtom) {\r\n    return this.subjects && this.subjects.delete(atom$);\r\n  }\r\n\r\n  __getSize() {\r\n    const size1 = this.connections1 ? this.connections1.size : 0;\r\n    const size2 = this.connections2 ? this.connections2.size : 0;\r\n    const size3 = this.subjects ? this.subjects.size : 0;\r\n    const size4 = this.emitter ? this.emitter.__getSize() : 0;\r\n\r\n    return size1 + size2 + size3 + size4;\r\n  }\r\n\r\n  protected setValue(value: T | ((prevValue: T) => T)) {\r\n    const prev = this.value;\r\n    const next = detectIsFunction(value) ? value(this.value) : value;\r\n    const data: EmitterValue<T> = { prev, next };\r\n    const make = (tuple: Tuple<T>, prev: T, next: T) => {\r\n      const [rootId, hook, shouldUpdate, key] = tuple;\r\n      const fn = shouldUpdate || trueFn;\r\n\r\n      fn(prev, next, key) && scheduler.schedule(createUpdate({ rootId, hook }));\r\n    };\r\n\r\n    this.value = next;\r\n\r\n    if (this.connections1) {\r\n      for (const [_, tuple] of this.connections1) {\r\n        make(tuple, prev, next);\r\n      }\r\n    }\r\n\r\n    if (this.connections2) {\r\n      if (this.connections2.has(next)) {\r\n        make(this.connections2.get(next), prev, next);\r\n        this.connections2.has(prev) && make(this.connections2.get(prev), prev, next);\r\n      }\r\n    }\r\n\r\n    this.emitter && this.emitter.emit('data', data);\r\n    this.subjects && this.subjects.forEach(x => x.__notify());\r\n  }\r\n\r\n  private off(hook: Hook, key: T) {\r\n    hook.owner.atoms.delete(this);\r\n    this.connections1 && this.connections1.delete(hook);\r\n    this.connections2 && this.connections2.delete(key);\r\n  }\r\n}\r\n\r\nclass WritableAtom<T = unknown> extends Atom<T> {\r\n  set(value: T | ((prevValue: T) => T)) {\r\n    super.setValue(value);\r\n  }\r\n}\r\n\r\nclass ReadableAtom<T = unknown> extends Atom<T> {\r\n  private deps$: Array<Atom> = [];\r\n  private fn: ComputedFn<T> = null;\r\n  private values: Array<unknown> = [];\r\n\r\n  constructor(deps$: Array<Atom>, fn: ComputedFn<T>) {\r\n    const values = ReadableAtom.values(deps$);\r\n\r\n    super(ReadableAtom.compute(fn, values));\r\n    this.deps$ = deps$;\r\n    this.fn = fn;\r\n    this.values = values;\r\n    deps$.forEach(x => x.__addSubject(this));\r\n  }\r\n\r\n  __notify() {\r\n    const values = ReadableAtom.values(this.deps$);\r\n\r\n    if (detectAreDepsDifferent(this.values, values)) {\r\n      super.setValue(ReadableAtom.compute(this.fn, values));\r\n    }\r\n\r\n    this.values = values;\r\n  }\r\n\r\n  override kill() {\r\n    super.kill();\r\n    this.deps$.forEach(x => x.__removeSubject(this));\r\n    this.deps$ = [];\r\n    this.fn = null;\r\n  }\r\n\r\n  private static compute(fn: Function, values: Array<unknown>) {\r\n    return fn(...values);\r\n  }\r\n\r\n  private static values(deps$: Array<Atom>) {\r\n    return deps$.map(x => x.get());\r\n  }\r\n}\r\n\r\nconst detectIsAtom = (x: unknown): x is Atom => x instanceof Atom;\r\n\r\nconst detectIsWritableAtom = (x: unknown): x is WritableAtom => x instanceof WritableAtom;\r\n\r\nconst detectIsReadableAtom = (x: unknown): x is ReadableAtom => x instanceof ReadableAtom;\r\n\r\nconst atom = <T>(value?: T) => new WritableAtom(value);\r\n\r\nconst computed = <T, A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\r\n  deps$: [\r\n    Atom<A>,\r\n    Atom<B>?,\r\n    Atom<C>?,\r\n    Atom<D>?,\r\n    Atom<E>?,\r\n    Atom<F>?,\r\n    Atom<G>?,\r\n    Atom<H>?,\r\n    Atom<I>?,\r\n    Atom<J>?,\r\n    Atom<K>?,\r\n    Atom<L>?,\r\n    Atom<M>?,\r\n    Atom<N>?,\r\n  ],\r\n  fn: ComputedFn<T, A, B, C, D, E, F, G, H, I, J, K, L, M, N>,\r\n) => new ReadableAtom(deps$, fn) as ReadableAtom<ReturnType<typeof fn>>;\r\n\r\nfunction useAtom<T>(value?: T): WritableAtom<T> {\r\n  const atom$ = useMemo(() => atom<T>(value), []);\r\n\r\n  useLayoutEffect(() => () => atom$.kill(), []);\r\n\r\n  return atom$;\r\n}\r\n\r\nfunction useComputed<T, A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\r\n  deps$: [\r\n    Atom<A>,\r\n    Atom<B>?,\r\n    Atom<C>?,\r\n    Atom<D>?,\r\n    Atom<E>?,\r\n    Atom<F>?,\r\n    Atom<G>?,\r\n    Atom<H>?,\r\n    Atom<I>?,\r\n    Atom<J>?,\r\n    Atom<K>?,\r\n    Atom<L>?,\r\n    Atom<M>?,\r\n    Atom<N>?,\r\n  ],\r\n  fn: ComputedFn<T, A, B, C, D, E, F, G, H, I, J, K, L, M, N>,\r\n) {\r\n  const atom$ = useMemo(() => computed(deps$, fn), []);\r\n\r\n  useLayoutEffect(() => () => atom$.kill(), []);\r\n\r\n  return atom$;\r\n}\r\n\r\nfunction useStore<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\r\n  atoms$: [\r\n    Atom<A>,\r\n    Atom<B>?,\r\n    Atom<C>?,\r\n    Atom<D>?,\r\n    Atom<E>?,\r\n    Atom<F>?,\r\n    Atom<G>?,\r\n    Atom<H>?,\r\n    Atom<I>?,\r\n    Atom<J>?,\r\n    Atom<K>?,\r\n    Atom<L>?,\r\n    Atom<M>?,\r\n    Atom<N>?,\r\n  ],\r\n) {\r\n  const forceUpdate = useUpdate();\r\n  const update = () => batch(forceUpdate);\r\n\r\n  useLayoutEffect(() => {\r\n    const offs = atoms$.map(x => x.on(update));\r\n\r\n    return () => offs.forEach(x => x());\r\n  }, [...atoms$]);\r\n\r\n  return atoms$.map(x => x.get()) as [A, B, C, D, E, F, G, H, I, J, K, L, M, N];\r\n}\r\n\r\ntype ShouldUpdate<T> = (p: T, n: T, key?: T) => boolean;\r\ntype EmitterValue<T> = { prev: T; next: T };\r\ntype Tuple<T> = [number, Hook, ShouldUpdate<T>, T];\r\ntype ComputedFn<\r\n  T,\r\n  A = unknown,\r\n  B = unknown,\r\n  C = unknown,\r\n  D = unknown,\r\n  E = unknown,\r\n  F = unknown,\r\n  G = unknown,\r\n  H = unknown,\r\n  I = unknown,\r\n  J = unknown,\r\n  K = unknown,\r\n  L = unknown,\r\n  M = unknown,\r\n  N = unknown,\r\n> = (a: A, b?: B, c?: C, d?: D, e?: E, f?: F, g?: G, h?: H, i?: I, j?: J, k?: K, l?: L, m?: M, n?: N) => T;\r\n\r\nexport {\r\n  type Atom,\r\n  WritableAtom,\r\n  ReadableAtom,\r\n  detectIsAtom,\r\n  detectIsWritableAtom,\r\n  detectIsReadableAtom,\r\n  atom,\r\n  computed,\r\n  useAtom,\r\n  useComputed,\r\n  useStore,\r\n};\r\n","import { type WritableAtom, type SubscriberWithValue, atom } from '@dark-engine/core';\r\n\r\nimport { type SpringValue } from '../shared';\r\n\r\nclass Spring<T extends string = string> {\r\n  private props: Record<T, WritableAtom<number>> = {} as Record<T, WritableAtom<number>>;\r\n  private subscribers = new Set<SubscriberWithValue<SpringValue<T>>>();\r\n\r\n  prop(key: T) {\r\n    return this.props[key] ? this.props[key].get() : null;\r\n  }\r\n\r\n  prop$(key: T) {\r\n    return this.props[key] || null;\r\n  }\r\n\r\n  setProp(key: T, value: number) {\r\n    !this.props[key] && (this.props[key] = atom(value));\r\n    this.props[key].set(value);\r\n  }\r\n\r\n  value(): SpringValue<T> {\r\n    const value = Object.keys(this.props).reduce((acc, x) => ((acc[x] = this.props[x].get()), acc), {});\r\n\r\n    return value as SpringValue<T>;\r\n  }\r\n\r\n  on(fn: SubscriberWithValue<SpringValue<T>>) {\r\n    this.subscribers.add(fn);\r\n\r\n    return () => this.subscribers.delete(fn);\r\n  }\r\n\r\n  notify() {\r\n    this.subscribers.forEach(x => x(this.value()));\r\n  }\r\n}\r\n\r\nexport { Spring };\r\n","const time = () => performance.now();\r\n\r\nconst fix = (x: number, precision = 4) => Number(x.toFixed(precision));\r\n\r\nconst illegal = (value: string) => {\r\n  throw new Error(value);\r\n};\r\n\r\nconst range = (x: number) =>\r\n  Array(x)\r\n    .fill(null)\r\n    .map((_, idx) => idx);\r\n\r\nconst uniq = <T>(items: Array<T>, selector: (x: T) => unknown) => {\r\n  const arr: Array<T> = [];\r\n  const set = new Set();\r\n\r\n  for (const item of items) {\r\n    const key = selector(item);\r\n\r\n    !set.has(key) && arr.push(item);\r\n    set.add(key);\r\n  }\r\n\r\n  return arr;\r\n};\r\n\r\nexport { time, fix, illegal, range, uniq };\r\n","import { type SpringConfig } from '../shared';\r\n\r\nfunction stepper(pos: number, vel: number, dest: number, step: number, config: Omit<SpringConfig, 'fix'>) {\r\n  const { tension, friction, mass, precision } = config;\r\n  const [nPos, nVel] = spring(pos, vel, dest, step, tension, friction, mass);\r\n\r\n  if (Math.abs(nPos - dest) < 10 ** (-1 * precision)) return [dest, 0];\r\n\r\n  return [nPos, nVel];\r\n}\r\n\r\nfunction spring(pos: number, vel: number, dest: number, step: number, tension: number, friction: number, mass: number) {\r\n  const disp = pos - dest;\r\n  const sf = -1 * tension * disp;\r\n  const df = -1 * friction * vel;\r\n  const a = (sf + df) / mass;\r\n  const nVel = vel + a * step;\r\n  const nPos = pos + nVel * step;\r\n\r\n  return [nPos, nVel];\r\n}\r\n\r\nexport { stepper };\r\n","import { type ElementKey, platform, falseFn, detectIsUndefined } from '@dark-engine/core';\r\n\r\nimport { type SpringValue, type SpringConfig, defaultSpringConfig } from '../shared';\r\nimport { type AnimationEventName, SharedState } from '../state';\r\nimport { Spring } from '../spring';\r\nimport { time, fix } from '../utils';\r\nimport { stepper } from '../stepper';\r\n\r\nconst BASE_FRAME_TIME_IN_MS = 1000 / 60;\r\nconst MAX_SKIPPED_FRAMES = 10;\r\nconst MAX_DELTA_TIME_IN_SEC = MAX_SKIPPED_FRAMES * (BASE_FRAME_TIME_IN_MS / 1000);\r\nconst MIN_STEP = 0.01;\r\n\r\nclass Controller<T extends string, I = unknown> {\r\n  private key: ElementKey;\r\n  private idx: number;\r\n  private from: SpringValue<T>;\r\n  private to: SpringValue<T>;\r\n  private value: SpringValue<T>;\r\n  private dest: SpringValue<T>;\r\n  private state: SharedState = null;\r\n  private frameTime: number;\r\n  private frameId: number;\r\n  private results: Record<string, [number, number]> = {};\r\n  private completed: Record<string, boolean> = {};\r\n  private queue: Array<SpringValue<T>> = [];\r\n  private left: Controller<T> = null;\r\n  private right: Controller<T> = null;\r\n  private springConfigFn: SpringConfigFn<T>;\r\n  private configurator: ConfiguratorFn<T>;\r\n  private immediate: ImmediateFn<T> = falseFn;\r\n  private immediates: Array<() => void> = [];\r\n  private primaryKey: ElementKey;\r\n  private isReplaced = false;\r\n  private item: I = null;\r\n  private spring = new Spring<T>();\r\n\r\n  constructor(state: SharedState) {\r\n    this.state = state;\r\n    this.key = String(++Controller.key);\r\n  }\r\n\r\n  getKey() {\r\n    return this.key;\r\n  }\r\n\r\n  setKey(x: ElementKey) {\r\n    this.key = x;\r\n  }\r\n\r\n  getIdx() {\r\n    return this.idx;\r\n  }\r\n\r\n  setIdx(x: number) {\r\n    this.idx = x;\r\n  }\r\n\r\n  setFrom(x: SpringValue<T>) {\r\n    this.from = x;\r\n    this.value = this.value || { ...x };\r\n  }\r\n\r\n  setTo(x: SpringValue<T>) {\r\n    this.to = x || { ...this.from };\r\n    this.dest = this.dest || { ...(x || this.from) };\r\n  }\r\n\r\n  setSpringConfigFn(fn?: PatialConfigFn<T>) {\r\n    this.springConfigFn = fn ? (key: T) => ({ ...defaultSpringConfig, ...fn(key) }) : () => defaultSpringConfig;\r\n  }\r\n\r\n  setLeft(x: Controller<T>) {\r\n    this.left = x;\r\n  }\r\n\r\n  setRight(x: Controller<T>) {\r\n    this.right = x;\r\n  }\r\n\r\n  notify() {\r\n    this.sync();\r\n    this.event('item-change');\r\n  }\r\n\r\n  setConfigurator(fn: ConfiguratorFn<T>) {\r\n    this.configurator = fn;\r\n  }\r\n\r\n  setImmediate(fn: ImmediateFn<T>) {\r\n    this.immediate = fn || this.immediate;\r\n  }\r\n\r\n  replaceValue(x: SpringValue<T>) {\r\n    this.value = x;\r\n    this.sync();\r\n  }\r\n\r\n  markAsFake(x: ElementKey) {\r\n    this.primaryKey = x;\r\n\r\n    return Controller.generateFakeKey(x);\r\n  }\r\n\r\n  detectIsFake() {\r\n    return !detectIsUndefined(this.primaryKey);\r\n  }\r\n\r\n  getIsReplaced() {\r\n    return this.isReplaced;\r\n  }\r\n\r\n  setIsReplaced(x: boolean) {\r\n    this.isReplaced = x;\r\n  }\r\n\r\n  getItem() {\r\n    return this.item;\r\n  }\r\n\r\n  setItem(x: I) {\r\n    this.item = x;\r\n  }\r\n\r\n  getState() {\r\n    return this.state;\r\n  }\r\n\r\n  getSpring() {\r\n    this.sync();\r\n\r\n    return this.spring;\r\n  }\r\n\r\n  start(fn?: StartFn<T>) {\r\n    if (this.state.getIsCanceled()) return; // !\r\n    const config1 = this.configurator(this.idx);\r\n    const config2 = fn ? fn(this.idx) : this.configurator(this.idx);\r\n    const from = { ...config1.from, ...config2.from };\r\n    const to = { ...config1.to, ...config2.to };\r\n    const config = config2.config || config1.config;\r\n    const immediate = config2.immediate || config1.immediate;\r\n\r\n    this.setFrom(config1.from || from);\r\n    this.setTo(config1.to || to);\r\n    this.setSpringConfigFn(config);\r\n    this.setImmediate(immediate);\r\n    Object.assign(this.dest, to);\r\n\r\n    this.play(this.dest);\r\n  }\r\n\r\n  reset() {\r\n    this.value = { ...this.from };\r\n    this.dest = { ...(this.to || this.from) };\r\n    this.sync();\r\n  }\r\n\r\n  cancel() {\r\n    this.frameId && platform.caf(this.frameId);\r\n    this.frameId = null;\r\n  }\r\n\r\n  setIsPlaying(x: boolean) {\r\n    this.state.setIsPlaying(x, this.key);\r\n  }\r\n\r\n  private play(to: SpringValue<T>) {\r\n    this.queue.push(to);\r\n    if (this.frameId) return false;\r\n    this.setIsPlaying(true);\r\n    this.event('item-start');\r\n    this.motion(to);\r\n  }\r\n\r\n  private motion(to: SpringValue<T>) {\r\n    const { value, results, completed, springConfigFn } = this;\r\n    const keys = Object.keys(value) as Array<T>;\r\n    const make = () => this.motion(to);\r\n\r\n    this.frameTime = time();\r\n    this.frameId = platform.raf(() => {\r\n      if (this.state.getIsPaused()) return make();\r\n      let step = (time() - this.frameTime) / 1000;\r\n\r\n      if (step > MAX_DELTA_TIME_IN_SEC) {\r\n        step = MIN_STEP;\r\n      }\r\n\r\n      if (this.queue.length === 0) {\r\n        this.queue.push(this.dest);\r\n      }\r\n\r\n      for (const key of keys) {\r\n        if (this.immediate(key)) {\r\n          completed[key] = true;\r\n\r\n          const complete = () => {\r\n            value[key] = to[key];\r\n            results[key] = [to[key], 0];\r\n          };\r\n\r\n          if (to[key] === this.from[key]) {\r\n            this.immediates.push(complete);\r\n          } else {\r\n            complete();\r\n          }\r\n        } else {\r\n          if (!results[key]) {\r\n            results[key] = [value[key], 0];\r\n          }\r\n\r\n          const config = springConfigFn(key);\r\n          let pos = results[key][0];\r\n          let vel = results[key][1];\r\n\r\n          for (const update of this.queue) {\r\n            const dest = update[key] as number;\r\n\r\n            [pos, vel] = stepper(pos, vel, dest, step, config);\r\n            results[key] = [pos, vel];\r\n            completed[key] = pos === dest;\r\n          }\r\n\r\n          value[key] = pos;\r\n        }\r\n      }\r\n\r\n      this.queue = [];\r\n      this.change();\r\n\r\n      if (this.checkCompleted(keys)) {\r\n        this.complete();\r\n      } else {\r\n        make();\r\n      }\r\n    });\r\n  }\r\n\r\n  private event(name: AnimationEventName) {\r\n    this.state.event(name, { value: this.value, idx: this.idx, key: this.key });\r\n  }\r\n\r\n  private change() {\r\n    this.notify();\r\n\r\n    if (this.state.getIsTrail()) {\r\n      if (this.state.detectIsRightFlow()) {\r\n        this.right && this.right.start(() => ({ to: this.value }));\r\n      } else {\r\n        this.left && this.left.start(() => ({ to: this.value }));\r\n      }\r\n    }\r\n  }\r\n\r\n  private complete() {\r\n    this.setIsPlaying(false);\r\n    this.frameTime = null;\r\n    this.frameId = null;\r\n    this.results = {};\r\n    this.completed = {};\r\n    this.immediates.forEach(x => x());\r\n    this.immediates.length > 0 && this.notify();\r\n    this.immediates = [];\r\n    this.event('item-end');\r\n    this.state.completeSeries();\r\n  }\r\n\r\n  private checkCompleted(keys: Array<string>) {\r\n    for (const key of keys) {\r\n      if (!this.completed[key]) return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  private sync() {\r\n    const keys = Object.keys(this.value) as Array<T>;\r\n\r\n    for (const key of keys) {\r\n      const config = this.springConfigFn(key);\r\n      const value = fix(this.value[key], config.fix);\r\n\r\n      this.spring.setProp(key, value);\r\n    }\r\n\r\n    this.spring.notify();\r\n  }\r\n\r\n  private static generateFakeKey(x: ElementKey) {\r\n    return `__${x}:${++Controller.fakeKey}__`;\r\n  }\r\n\r\n  private static key = -1;\r\n  private static fakeKey = -1;\r\n}\r\n\r\nexport type BaseItemConfig<T extends string> = {\r\n  from: SpringValue<T>;\r\n  to?: SpringValue<T>;\r\n  config?: PatialConfigFn<T>;\r\n  immediate?: ImmediateFn<T>;\r\n};\r\n\r\nexport type StartFnConfig<T extends string> = {\r\n  from?: SpringValue<T>;\r\n  to: Partial<SpringValue<T>>;\r\n} & Omit<BaseItemConfig<T>, 'from' | 'to'>;\r\n\r\nexport type ConfiguratorFn<T extends string> = (idx: number) => BaseItemConfig<T>;\r\n\r\nexport type StartFn<T extends string> = (idx: number) => StartFnConfig<T>;\r\n\r\nexport type SpringConfigFn<T extends string> = (key: T) => SpringConfig;\r\n\r\nexport type PatialConfigFn<T extends string> = (key: T) => Partial<SpringConfig>;\r\n\r\nexport type ImmediateFn<T extends string> = (key: T) => boolean;\r\n\r\nexport type NotifierFn<T extends string> = (x: SpringValue<T>) => void;\r\n\r\nexport { Controller };\r\n","import {\r\n  type Component,\r\n  type TagVirtualNodeFactory,\r\n  type Callback,\r\n  type ElementKey,\r\n  Fragment,\r\n  batch,\r\n  useMemo,\r\n  useUpdate,\r\n  useEffect,\r\n  useLayoutEffect,\r\n  detectIsArray,\r\n  detectIsNumber,\r\n} from '@dark-engine/core';\r\n\r\nimport { type SpringValue } from '../shared';\r\nimport { type AnimationEventValue, SharedState } from '../state';\r\nimport { type BaseItemConfig, type ConfiguratorFn, Controller } from '../controller';\r\nimport { type SpringApi } from '../use-springs';\r\nimport { type Spring } from '../spring';\r\nimport { uniq } from '../utils';\r\n\r\nexport type TransitionItemConfig<T extends string> = {\r\n  from: SpringValue<T>;\r\n  enter: SpringValue<T>;\r\n  leave?: SpringValue<T>;\r\n  update?: SpringValue<T>;\r\n  trail?: number;\r\n} & Pick<BaseItemConfig<T>, 'config' | 'immediate'>;\r\n\r\nfunction useTransition<T extends string, I = unknown>(\r\n  items: Array<I>,\r\n  getKey: KeyExtractor<I>,\r\n  configurator: TransitionConfiguratorFn<T, I>,\r\n): [TransitionFn<T, I>, TransitionApi<T>] {\r\n  const forceUpdate = useUpdate();\r\n  const update = () => batch(forceUpdate);\r\n  const state = useMemo(() => new SharedState<T>(), []);\r\n  const scope = useMemo<Scope<T, I>>(\r\n    () => ({\r\n      ctrlsMap: new Map(),\r\n      itemsMap: new Map(),\r\n      fakesMap: new Map(),\r\n      items: [],\r\n      queue: [],\r\n      hasReplaces: false,\r\n      fromApi: false,\r\n      inChain: false,\r\n      pending: null,\r\n      configurator,\r\n    }),\r\n    [],\r\n  );\r\n\r\n  scope.configurator = configurator;\r\n\r\n  useMemo(() => setup({ items, getKey, configurator, state, ctrlsMap: scope.ctrlsMap }), []);\r\n\r\n  const transition = useMemo<TransitionFn<T, I>>(\r\n    () => (render: TransitionRenderFn<T, I>) => {\r\n      const { ctrlsMap } = scope;\r\n      const elements: Array<TransitionElement> = [];\r\n\r\n      for (const [key, ctrl] of ctrlsMap) {\r\n        const idx = ctrl.getIdx();\r\n        const item = ctrl.getItem();\r\n        const spring = ctrl.getSpring();\r\n        const element = Fragment({ key, slot: render({ spring, item, idx }) });\r\n\r\n        if (elements[idx]) {\r\n          const sibling = elements[idx];\r\n\r\n          if (detectIsArray(sibling)) {\r\n            sibling.push(element);\r\n          } else {\r\n            elements[idx] = [sibling, element] as unknown as TransitionElement;\r\n          }\r\n        } else {\r\n          elements[idx] = element;\r\n        }\r\n      }\r\n\r\n      return Fragment({ slot: elements });\r\n    },\r\n    [],\r\n  );\r\n\r\n  const api = useMemo<TransitionApi<T>>(() => {\r\n    return {\r\n      start: fn => {\r\n        scope.fromApi = true;\r\n\r\n        if (scope.inChain) {\r\n          scope.pending && scope.pending();\r\n          scope.pending = null;\r\n        } else {\r\n          state.start(fn);\r\n        }\r\n      },\r\n      chain: (value: boolean) => (scope.inChain = value),\r\n      delay: state.delay.bind(state),\r\n      cancel: state.cancel.bind(state),\r\n      pause: state.pause.bind(state),\r\n      resume: state.resume.bind(state),\r\n      on: state.on.bind(state),\r\n      isCanceled: state.getIsCanceled.bind(state),\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const { inChain } = scope;\r\n    const nextItems = uniq(items, getKey);\r\n    const start = (items: Array<I>) => {\r\n      const { ctrlsMap, fakesMap, items: $items } = scope;\r\n      const configurator: TransitionConfiguratorFn<T, I> = (idx, item) => scope.configurator(idx, item);\r\n      const { ctrls, itemsMap } = setup({ items, getKey, configurator, state, ctrlsMap });\r\n      const { hasChanges, insMap, remMap, movMap, stabMap, replaced } = diff($items, items, getKey);\r\n\r\n      scope.hasReplaces = replaced.size > 0;\r\n      state.setCtrls(ctrls);\r\n      replaced.forEach(key => ctrlsMap.get(key).setIsReplaced(true));\r\n\r\n      state.event('series-start');\r\n      animate({ action: Action.LEAVE, space: fakesMap, state, scope }); // !\r\n      animate({ action: Action.ENTER, space: insMap, state, scope });\r\n      animate({ action: Action.LEAVE, space: remMap, state, scope });\r\n      animate({ action: Action.UPDATE, space: movMap, state, scope });\r\n      animate({ action: Action.UPDATE, space: stabMap, state, scope });\r\n\r\n      scope.items = items; // !\r\n      scope.itemsMap = itemsMap;\r\n      scope.fromApi = false;\r\n      hasChanges && forceUpdate(); // !\r\n    };\r\n\r\n    if (inChain) {\r\n      scope.pending = () => state.defer(() => start(nextItems));\r\n    } else {\r\n      start(nextItems);\r\n    }\r\n  }, [items]);\r\n\r\n  useLayoutEffect(() => {\r\n    const offs: Array<Callback> = [];\r\n\r\n    offs.push(\r\n      api.on('item-end', e => handleItemEnd(e, scope)),\r\n      api.on('series-end', () => handleSeriesEnd(update, state, scope)),\r\n    );\r\n\r\n    return () => offs.forEach(x => x());\r\n  }, []);\r\n\r\n  useLayoutEffect(() => () => api.cancel(), []);\r\n\r\n  return [transition, api];\r\n}\r\n\r\ntype SetupOptions<T extends string, I = unknown> = {\r\n  items: Array<I>;\r\n  getKey: KeyExtractor<I>;\r\n  state: SharedState<T>;\r\n} & Pick<Scope<T, I>, 'configurator' | 'ctrlsMap'>;\r\n\r\nfunction setup<T extends string, I = unknown>(options: SetupOptions<T, I>) {\r\n  const { items, getKey, configurator, state, ctrlsMap } = options;\r\n  const itemsMap = new Map<ElementKey, I>();\r\n  const ctrls = items.map((item, idx) => {\r\n    const key = getKey(item);\r\n\r\n    itemsMap.set(key, item);\r\n\r\n    return getController<T, I>({ idx, item, getKey, configurator, state, ctrlsMap });\r\n  });\r\n\r\n  return { ctrls, itemsMap };\r\n}\r\n\r\ntype GetControllerOptions<T extends string, I = unknown> = {\r\n  idx: number;\r\n  item: I;\r\n} & Pick<SetupOptions<T, I>, 'getKey' | 'configurator' | 'state' | 'ctrlsMap'>;\r\n\r\nfunction getController<T extends string, I = unknown>(options: GetControllerOptions<T, I>) {\r\n  const { idx, item, getKey, configurator, state, ctrlsMap } = options;\r\n  const key = getKey(item);\r\n  const ctrl = ctrlsMap.get(key) || new Controller<T, I>(state);\r\n\r\n  prepare({ ctrl, key, idx, item, configurator });\r\n  ctrlsMap.set(key, ctrl);\r\n\r\n  return ctrl;\r\n}\r\n\r\nfunction extractKeys<I = unknown>(prevItems: Array<I>, nextItems: Array<I>, getKey: KeyExtractor<I>) {\r\n  const prevKeys: Array<ElementKey> = [];\r\n  const nextKeys: Array<ElementKey> = [];\r\n  const prevKeysMap: Record<ElementKey, boolean> = {};\r\n  const nextKeysMap: Record<ElementKey, boolean> = {};\r\n  const max = Math.max(prevItems.length, nextItems.length);\r\n\r\n  for (let i = 0; i < max; i++) {\r\n    const prevItem = prevItems[i];\r\n    const nextItem = nextItems[i];\r\n\r\n    if (prevItem) {\r\n      const prevKey = getKey(prevItem);\r\n\r\n      if (!prevKeysMap[prevKey]) {\r\n        prevKeysMap[prevKey] = true;\r\n        prevKeys.push(prevKey);\r\n      }\r\n    }\r\n\r\n    if (nextItem) {\r\n      const nextKey = getKey(nextItem);\r\n\r\n      if (!nextKeysMap[nextKey]) {\r\n        nextKeysMap[nextKey] = true;\r\n        nextKeys.push(nextKey);\r\n      }\r\n    }\r\n  }\r\n\r\n  return {\r\n    prevKeys,\r\n    nextKeys,\r\n    prevKeysMap,\r\n    nextKeysMap,\r\n  };\r\n}\r\n\r\nfunction diff<I = unknown>(prevItems: Array<I>, nextItems: Array<I>, getKey: KeyExtractor<I>) {\r\n  const { prevKeys, nextKeys, prevKeysMap, nextKeysMap } = extractKeys(prevItems, nextItems, getKey);\r\n  let size = Math.max(prevKeys.length, nextKeys.length);\r\n  let p = 0;\r\n  let n = 0;\r\n  let hasChanges = false;\r\n  const insMap = new Map<ElementKey, number>();\r\n  const remMap = new Map<ElementKey, number>();\r\n  const movMap = new Map<ElementKey, number>();\r\n  const stabMap = new Map<ElementKey, number>();\r\n  const replaced = new Set<ElementKey>();\r\n\r\n  for (let i = 0; i < size; i++) {\r\n    const nextKey = nextKeys[i - n] ?? null;\r\n    const prevKey = prevKeys[i - p] ?? null;\r\n\r\n    if (nextKey !== prevKey) {\r\n      if (nextKey !== null && !prevKeysMap[nextKey]) {\r\n        if (prevKey !== null && !nextKeysMap[prevKey]) {\r\n          insMap.set(nextKey, i);\r\n          remMap.set(prevKey, i);\r\n          replaced.add(prevKey);\r\n          hasChanges = true;\r\n        } else {\r\n          insMap.set(nextKey, i);\r\n          hasChanges = true;\r\n          p++;\r\n          size++;\r\n        }\r\n      } else if (!nextKeysMap[prevKey]) {\r\n        remMap.set(prevKey, i);\r\n        hasChanges = true;\r\n        n++;\r\n        size++;\r\n      } else if (nextKeysMap[prevKey] && nextKeysMap[nextKey]) {\r\n        movMap.set(nextKey, i);\r\n        hasChanges = true;\r\n      }\r\n    } else if (nextKey !== null) {\r\n      stabMap.set(nextKey, i);\r\n    }\r\n  }\r\n\r\n  return {\r\n    hasChanges,\r\n    insMap,\r\n    remMap,\r\n    movMap,\r\n    stabMap,\r\n    replaced,\r\n  };\r\n}\r\n\r\ntype AnimateOptions<T extends string, I = unknown> = {\r\n  action: Action;\r\n  space: Map<ElementKey, number>;\r\n  state: SharedState<T>;\r\n  scope: Scope<T, I>;\r\n};\r\n\r\nfunction animate<T extends string, I = unknown>(options: AnimateOptions<T, I>) {\r\n  const { space, action, state, scope } = options;\r\n  const { configurator, ctrlsMap, fakesMap } = scope;\r\n  const ctrls = state.getCtrls();\r\n  const isEnter = action === Action.ENTER;\r\n  const isLeave = action === Action.LEAVE;\r\n  let $idx = 0;\r\n\r\n  for (const [key, idx] of space) {\r\n    const ctrl = ctrlsMap.get(key);\r\n    const item = ctrl.getItem();\r\n    const config = configurator(idx, item);\r\n    const { trail } = config;\r\n    const to = isLeave && !config[action] ? config.from : config[action];\r\n    let $ctrl = ctrl;\r\n\r\n    if (isEnter) {\r\n      const isReplaced = ctrl.getIsReplaced();\r\n      const isPlaying = state.detectIsPlaying(key);\r\n\r\n      if (isReplaced) {\r\n        if (isPlaying) {\r\n          const fake = new Controller<T, I>(state);\r\n          const fakeKey = fake.markAsFake(key);\r\n\r\n          $ctrl = fake;\r\n          prepare({ ctrl: fake, key: fakeKey, idx, item, configurator });\r\n          ctrlsMap.set(fakeKey, fake);\r\n          fakesMap.set(fakeKey, idx);\r\n          ctrls.push(fake);\r\n        } else {\r\n          ctrl.setIsReplaced(false);\r\n        }\r\n      }\r\n    }\r\n\r\n    to && withTrail(() => $ctrl.start(() => ({ to })), $idx, trail);\r\n    $idx++;\r\n  }\r\n}\r\n\r\nfunction withTrail(fn: () => void, idx: number, trail?: number) {\r\n  if (detectIsNumber(trail)) {\r\n    setTimeout(fn, idx * trail);\r\n  } else {\r\n    fn();\r\n  }\r\n}\r\n\r\ntype PrepareOptions<T extends string, I = unknown> = {\r\n  ctrl: Controller<T, I>;\r\n  idx: number;\r\n  key: ElementKey;\r\n  item: I;\r\n  configurator: TransitionConfiguratorFn<T, I>;\r\n};\r\n\r\nfunction prepare<T extends string, I = unknown>(options: PrepareOptions<T, I>) {\r\n  const { ctrl, key, idx, item, configurator } = options;\r\n  const { from, enter, config } = configurator(idx, item);\r\n  const $configurator: ConfiguratorFn<T> = (idx: number) => {\r\n    const { enter, leave, update, trail, ...rest } = configurator(idx, item);\r\n\r\n    return { ...rest };\r\n  };\r\n\r\n  ctrl.setKey(key);\r\n  ctrl.setIdx(idx);\r\n  ctrl.setItem(item);\r\n  ctrl.setFrom(from);\r\n  ctrl.setTo(enter);\r\n  ctrl.setSpringConfigFn(config);\r\n  ctrl.setConfigurator($configurator);\r\n}\r\n\r\nfunction handleItemEnd<T extends string, I = unknown>({ key }: AnimationEventValue<T>, scope: Scope<T, I>) {\r\n  const { ctrlsMap, fakesMap, itemsMap, hasReplaces, queue, fromApi } = scope;\r\n\r\n  if (ctrlsMap.has(key) && ctrlsMap.get(key).detectIsFake()) {\r\n    ctrlsMap.delete(key);\r\n    fakesMap.delete(key);\r\n  }\r\n\r\n  if (fromApi || hasReplaces) {\r\n    !itemsMap.has(key) && ctrlsMap.delete(key);\r\n  } else {\r\n    queue.push(() => !scope.itemsMap.has(key) && ctrlsMap.delete(key));\r\n  }\r\n}\r\n\r\nfunction handleSeriesEnd<T extends string, I = unknown>(update: () => void, state: SharedState<T>, scope: Scope<T, I>) {\r\n  const { ctrlsMap, configurator, fromApi } = scope;\r\n  const ctrls: Array<Controller<T, I>> = [];\r\n\r\n  if (fromApi) return;\r\n  scope.queue.forEach(x => x());\r\n  scope.queue = [];\r\n\r\n  for (const [_, ctrl] of ctrlsMap) {\r\n    const { enter } = configurator(ctrl.getIdx(), ctrl.getItem());\r\n\r\n    ctrl.replaceValue({ ...enter });\r\n    ctrl.notify();\r\n    ctrls.push(ctrl);\r\n  }\r\n\r\n  state.setCtrls(ctrls);\r\n  update();\r\n}\r\n\r\ntype Scope<T extends string, I = unknown> = {\r\n  items: Array<I>;\r\n  configurator: TransitionConfiguratorFn<T, I>;\r\n  ctrlsMap: Map<ElementKey, Controller<T, I>>;\r\n  itemsMap: Map<ElementKey, I>;\r\n  fakesMap: Map<ElementKey, number>;\r\n  queue: Array<Callback>;\r\n  hasReplaces: boolean;\r\n  fromApi: boolean;\r\n  inChain: boolean;\r\n  pending: Callback;\r\n};\r\n\r\nenum Action {\r\n  ENTER = 'enter',\r\n  LEAVE = 'leave',\r\n  UPDATE = 'update',\r\n}\r\n\r\ntype KeyExtractor<I> = (x: I) => ElementKey;\r\n\r\ntype TransitionElement = Component | TagVirtualNodeFactory;\r\n\r\ntype TransitionConfiguratorFn<T extends string = string, I = unknown> = (\r\n  idx: number,\r\n  item: I,\r\n) => TransitionItemConfig<T>;\r\n\r\nexport type TransitionApi<T extends string = string> = Omit<SpringApi<T>, 'reset'>;\r\n\r\nexport type TransitionRenderFn<T extends string = string, I = unknown> = (options: {\r\n  spring: Spring<T>;\r\n  item: I;\r\n  idx: number;\r\n}) => TransitionElement;\r\n\r\nexport type TransitionFn<T extends string = string, I = unknown> = (render: TransitionRenderFn<T, I>) => Component;\r\n\r\nexport { useTransition };\r\n","import {\r\n  type Component,\r\n  type TagVirtualNodeFactory,\r\n  type Callback,\r\n  component,\r\n  useMemo,\r\n  useInsertionEffect,\r\n  $$scope,\r\n  walk,\r\n  nextTick,\r\n} from '@dark-engine/core';\r\n\r\nimport { type SpringValue } from '../shared';\r\nimport { type Spring } from '../spring';\r\n\r\ntype AnimatedProps<E = unknown, T extends string = string> = {\r\n  spring: Spring<T>;\r\n  fn: StyleFn<E, T>;\r\n  slot: Component | TagVirtualNodeFactory;\r\n};\r\n\r\nconst Animated = component<AnimatedProps>(({ spring, fn, slot }) => {\r\n  const cursor = $$scope().getCursorFiber();\r\n  const scope = useMemo<Scope>(() => ({ element: null, notify: null }), []);\r\n  const notify = () => scope.element && fn(scope.element, spring.value());\r\n\r\n  scope.notify = notify;\r\n\r\n  useInsertionEffect(() => {\r\n    const make = () => {\r\n      const fiber = cursor.hook.owner;\r\n\r\n      walk(fiber.child, (fiber, _, stop) => {\r\n        if (fiber.element) {\r\n          scope.element = fiber.element;\r\n          return stop();\r\n        }\r\n      });\r\n\r\n      notify();\r\n    };\r\n\r\n    if ($$scope().getIsHydrateZone()) {\r\n      nextTick(make);\r\n    } else {\r\n      make();\r\n    }\r\n\r\n    return spring.on(() => scope.notify());\r\n  }, [spring]);\r\n\r\n  notify();\r\n\r\n  return slot;\r\n});\r\n\r\ntype Scope = { element: unknown; notify: Callback };\r\ntype StyleFn<E = unknown, T extends string = string> = (element: E, value: SpringValue<T>) => void;\r\n\r\nexport { Animated };\r\n","import { h, Fragment, component, useState } from '@dark-engine/core';\r\nimport { createRoot } from '@dark-engine/platform-browser';\r\nimport { type SpringValue, Animated, useTransition, useSpring, useChain, preset } from '@dark-engine/animations';\r\n\r\ntype SpringProps = 'size' | 'green' | 'blue';\r\ntype TransitionProps = 'opacity' | 'scale';\r\n\r\nconst App = component(() => {\r\n  const [isOpen, setIsOpen] = useState<boolean>(null);\r\n  const [spring, springApi] = useSpring<SpringProps>(\r\n    {\r\n      from: { size: 20, green: 105, blue: 180 },\r\n      to: { size: isOpen ? 100 : 20, green: isOpen ? 255 : 105, blue: isOpen ? 255 : 180 },\r\n      config: () => preset('stiff'),\r\n    },\r\n    [isOpen],\r\n  );\r\n  const [transition, transitionApi] = useTransition<TransitionProps, typeof data[0]>(\r\n    isOpen ? data : [],\r\n    x => x.name,\r\n    () => ({\r\n      from: { opacity: 0, scale: 0 },\r\n      enter: { opacity: 1, scale: 1 },\r\n      leave: { opacity: 0, scale: 0 },\r\n      trail: 400 / data.length,\r\n    }),\r\n  );\r\n\r\n  useChain(isOpen ? [springApi, transitionApi] : [transitionApi, springApi], [0, isOpen ? 0.1 : 0.6]);\r\n\r\n  //console.log('render');\r\n\r\n  return (\r\n    <>\r\n      <div class='wrapper'>\r\n        <Animated spring={spring} fn={springStyleFn}>\r\n          <div class='container' onClick={() => setIsOpen(x => !x)}>\r\n            {transition(({ spring, item }) => {\r\n              return (\r\n                <Animated spring={spring} fn={transitionStyleFn(item)}>\r\n                  <div class='item' />\r\n                </Animated>\r\n              );\r\n            })}\r\n          </div>\r\n        </Animated>\r\n      </div>\r\n    </>\r\n  );\r\n});\r\n\r\nconst springStyleFn = (element: HTMLDivElement, value: SpringValue<SpringProps>) => {\r\n  const { size, green, blue } = value;\r\n  const setProp = setPropOf(element);\r\n\r\n  setProp('width', `${size}%`);\r\n  setProp('height', `${size}%`);\r\n  setProp('background-color', `rgb(255, ${green}, ${blue})`);\r\n};\r\n\r\nconst transitionStyleFn = (item: DataItem) => (element: HTMLDivElement, value: SpringValue<TransitionProps>) => {\r\n  const { opacity, scale } = value;\r\n  const setProp = setPropOf(element);\r\n\r\n  setProp('opacity', `${opacity}`);\r\n  setProp('transform', `scale(${scale})`);\r\n  setProp('background-image', `${item.css}`);\r\n};\r\n\r\nconst setPropOf = (element: HTMLDivElement) => (k: string, v: string) => element.style.setProperty(k, v);\r\n\r\ntype DataItem = {\r\n  name: string;\r\n  description: string;\r\n  css: string;\r\n  height: number;\r\n};\r\n\r\nconst data: Array<DataItem> = [\r\n  {\r\n    name: 'Rare Wind',\r\n    description: '#a8edea → #fed6e3',\r\n    css: 'linear-gradient(135deg, #a8edea 0%, #fed6e3 100%)',\r\n    height: 200,\r\n  },\r\n  {\r\n    name: 'Saint Petersburg',\r\n    description: '#f5f7fa → #c3cfe2',\r\n    css: 'linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%)',\r\n    height: 400,\r\n  },\r\n  {\r\n    name: 'Deep Blue',\r\n    description: '#e0c3fc → #8ec5fc',\r\n    css: 'linear-gradient(135deg, #e0c3fc 0%, #8ec5fc 100%)',\r\n    height: 400,\r\n  },\r\n  {\r\n    name: 'Ripe Malinka',\r\n    description: '#f093fb → #f5576c',\r\n    css: 'linear-gradient(135deg, #f093fb 0%, #f5576c 100%)',\r\n    height: 400,\r\n  },\r\n  {\r\n    name: 'Perfect White',\r\n    description: '#fdfbfb → #ebedee',\r\n    css: 'linear-gradient(135deg, #E3FDF5 0%, #FFE6FA 100%)',\r\n    height: 400,\r\n  },\r\n  {\r\n    name: 'Near Moon',\r\n    description: '#5ee7df → #b490ca',\r\n    css: 'linear-gradient(135deg, #5ee7df 0%, #b490ca 100%)',\r\n    height: 400,\r\n  },\r\n  {\r\n    name: 'Wild Apple',\r\n    description: '#d299c2 → #fef9d7',\r\n    css: 'linear-gradient(135deg, #d299c2 0%, #fef9d7 100%)',\r\n    height: 200,\r\n  },\r\n  {\r\n    name: 'Ladoga Bottom',\r\n    description: '#ebc0fd → #d9ded8',\r\n    css: 'linear-gradient(135deg, #ebc0fd 0%, #d9ded8 100%)',\r\n    height: 400,\r\n  },\r\n  {\r\n    name: 'Sunny Morning',\r\n    description: '#f6d365 → #fda085',\r\n    css: 'linear-gradient(135deg, #f6d365 0%, #fda085 100%)',\r\n    height: 200,\r\n  },\r\n  {\r\n    name: 'Lemon Gate',\r\n    description: '#96fbc4 → #f9f586',\r\n    css: 'linear-gradient(135deg, #96fbc4 0%, #f9f586 100%)',\r\n    height: 400,\r\n  },\r\n  {\r\n    name: 'Salt Mountain',\r\n    description: ' #FFFEFF → #D7FFFE',\r\n    css: 'linear-gradient(135deg, #FFFEFF 0%, #D7FFFE 100%)',\r\n    height: 200,\r\n  },\r\n  {\r\n    name: 'New York',\r\n    description: ' #fff1eb → #ace0f9',\r\n    css: 'linear-gradient(135deg, #fff1eb 0%, #ace0f9 100%)',\r\n    height: 400,\r\n  },\r\n  {\r\n    name: 'Soft Grass',\r\n    description: ' #c1dfc4 → #deecdd',\r\n    css: 'linear-gradient(135deg, #c1dfc4 0%, #deecdd 100%)',\r\n    height: 400,\r\n  },\r\n  {\r\n    name: 'Japan Blush',\r\n    description: ' #ddd6f3 → #faaca8',\r\n    css: 'linear-gradient(135deg, #ddd6f3 0%, #faaca8 100%, #faaca8 100%)',\r\n    height: 200,\r\n  },\r\n];\r\n\r\ncreateRoot(document.getElementById('root')).render(<App />);\r\n","import { detectIsFunction } from '../utils';\r\nimport { type UpdateOptions, useUpdate } from '../use-update';\r\nimport { useMemo } from '../use-memo';\r\nimport { $$scope } from '../scope';\r\nimport { useCallback } from '../use-callback';\r\n\r\ntype Value<T> = T | ((prevValue: T) => T);\r\n\r\nfunction useState<T = unknown>(initialValue: T | (() => T)): [T, (value: Value<T>) => void] {\r\n  const update = useUpdate();\r\n  const scope = useMemo(\r\n    () => ({\r\n      value: detectIsFunction(initialValue) ? initialValue() : initialValue,\r\n    }),\r\n    [],\r\n  );\r\n  const setState = useCallback((sourceValue: Value<T>) => {\r\n    const $scope = $$scope();\r\n    const isBatch = $scope.getIsBatchZone();\r\n    const create = (): UpdateOptions => {\r\n      const prevValue = scope.value;\r\n      const newValue = detectIsFunction(sourceValue) ? sourceValue(prevValue) : sourceValue;\r\n      const shouldUpdate = () => isBatch || !Object.is(prevValue, newValue);\r\n      const setValue = () => (scope.value = newValue);\r\n      const resetValue = () => (scope.value = prevValue);\r\n\r\n      return { shouldUpdate, setValue, resetValue };\r\n    };\r\n\r\n    update(create);\r\n  }, []);\r\n\r\n  return [scope.value, setState];\r\n}\r\n\r\nexport { useState };\r\n","import { useMemo } from '../use-memo';\r\n\r\nfunction useCallback<T = Function>(callback: T, deps: Array<any>): T {\r\n  const value = useMemo(() => callback, deps);\r\n\r\n  return value;\r\n}\r\n\r\nexport { useCallback };\r\n","import { type SpringItemConfig, type SpringApi, useSprings } from '../use-springs';\r\nimport { type Spring } from '../spring';\r\n\r\nfunction useSpring<T extends string>(options: SpringItemConfig<T>, deps?: Array<any>): [Spring<T>, SpringApi<T>] {\r\n  const [items, api] = useSprings(1, () => options, deps);\r\n\r\n  return [items[0], api];\r\n}\r\n\r\nexport { useSpring };\r\n","import { type Callback, useMemo, useLayoutEffect, useEffect } from '@dark-engine/core';\r\n\r\nimport { type AnimationEventName, type AnimationEventHandler, SharedState, getSharedState } from '../state';\r\nimport { type BaseItemConfig, type StartFn, Controller } from '../controller';\r\nimport { type Spring } from '../spring';\r\nimport { range } from '../utils';\r\n\r\nexport type SpringItemConfig<T extends string> = BaseItemConfig<T>;\r\n\r\nfunction useSprings<T extends string>(\r\n  count: number,\r\n  configurator: SpringConfiguratorFn<T>,\r\n  deps?: Array<any>,\r\n): [Array<Spring<T>>, SpringApi<T>] {\r\n  const state = useMemo(() => getSharedState() || new SharedState(), []);\r\n  const scope = useMemo<Scope<T>>(() => {\r\n    return {\r\n      configurator,\r\n      prevCount: count,\r\n      ctrls: range(count).map(() => new Controller<T>(state)),\r\n      inChain: false,\r\n      pending: null,\r\n    };\r\n  }, []);\r\n\r\n  scope.configurator = configurator;\r\n\r\n  const springs = useMemo(() => {\r\n    const configurator = (idx: number) => scope.configurator(idx);\r\n    const { ctrls, prevCount } = scope;\r\n\r\n    if (count > prevCount) {\r\n      ctrls.push(...range(count - prevCount).map(() => new Controller<T>(state)));\r\n    } else if (count < prevCount) {\r\n      const deleted = ctrls.splice(count, ctrls.length);\r\n\r\n      deleted.forEach(ctrl => ctrl.setIsPlaying(false));\r\n    }\r\n\r\n    state.setCtrls(ctrls);\r\n    scope.prevCount = count;\r\n    prepare(ctrls, configurator);\r\n\r\n    return ctrls.map(ctrl => ctrl.getSpring());\r\n  }, [count]);\r\n\r\n  const api = useMemo<SpringApi<T>>(() => {\r\n    return {\r\n      start: fn => {\r\n        if (scope.inChain) {\r\n          scope.pending && scope.pending();\r\n          scope.pending = null;\r\n        } else {\r\n          state.start(fn);\r\n        }\r\n      },\r\n      chain: (value: boolean) => (scope.inChain = value),\r\n      delay: state.delay.bind(state),\r\n      pause: state.pause.bind(state),\r\n      resume: state.resume.bind(state),\r\n      reset: state.reset.bind(state),\r\n      cancel: state.cancel.bind(state),\r\n      on: state.on.bind(state),\r\n      isCanceled: state.getIsCanceled.bind(state),\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!deps) return;\r\n    const { inChain } = scope;\r\n\r\n    if (inChain) {\r\n      scope.pending = () => state.start();\r\n    } else {\r\n      state.start();\r\n    }\r\n  }, deps || []);\r\n\r\n  useLayoutEffect(() => () => api.cancel(), []);\r\n\r\n  return [springs, api];\r\n}\r\n\r\nfunction prepare<T extends string>(ctrls: Array<Controller<T>>, configurator: (idx: number) => SpringItemConfig<T>) {\r\n  ctrls.forEach((ctrl, idx) => {\r\n    const { from, to, config } = configurator(idx);\r\n    const left = ctrls[idx - 1] || null;\r\n    const right = ctrls[idx + 1] || null;\r\n\r\n    ctrl.setIdx(idx);\r\n    ctrl.setFrom(from);\r\n    ctrl.setTo(to);\r\n    ctrl.setSpringConfigFn(config);\r\n    ctrl.setConfigurator(configurator);\r\n    ctrl.setLeft(left);\r\n    ctrl.setRight(right);\r\n  });\r\n}\r\n\r\ntype SpringConfiguratorFn<T extends string> = (idx: number) => SpringItemConfig<T>;\r\n\r\ntype Scope<T extends string> = {\r\n  prevCount: number;\r\n  configurator: SpringConfiguratorFn<T>;\r\n  ctrls: Array<Controller<T>>;\r\n  inChain: boolean;\r\n  pending: Callback;\r\n};\r\n\r\nexport type SpringApi<T extends string = string> = {\r\n  start: (fn?: StartFn<T>) => void;\r\n  chain: (value: boolean) => void;\r\n  delay: (timeout: number) => void;\r\n  pause: () => void;\r\n  resume: () => void;\r\n  reset: () => void;\r\n  cancel: () => void;\r\n  on: (event: AnimationEventName, handler: AnimationEventHandler<T>) => () => void;\r\n  isCanceled: () => void;\r\n};\r\n\r\nexport { useSprings };\r\n","import { useMemo, useLayoutEffect, nextTick } from '@dark-engine/core';\r\n\r\nimport { type SpringApi } from '../use-springs';\r\n\r\ntype Api = Pick<SpringApi, 'start' | 'chain' | 'delay' | 'on'>;\r\n\r\nfunction useChain(chain: Array<Api>, timesteps?: Array<number>, timeframe = 1000) {\r\n  useMemo(() => {\r\n    chain.forEach((api, idx) => {\r\n      api.chain(idx > 0);\r\n      api.delay(0);\r\n    });\r\n  }, [...chain]);\r\n\r\n  useLayoutEffect(() => {\r\n    const offs: Array<() => void> = [];\r\n\r\n    for (let i = 0; i < chain.length; i++) {\r\n      const api = chain[i];\r\n      const nextApi = chain[i + 1];\r\n\r\n      if (nextApi) {\r\n        if (timesteps) {\r\n          const time = timesteps[i + 1] * timeframe;\r\n          const off = api.on('series-start', () => nextTick(() => nextApi.start()));\r\n\r\n          nextApi.delay(time);\r\n          offs.push(off);\r\n        } else {\r\n          offs.push(api.on('series-end', () => nextApi.start()));\r\n        }\r\n      }\r\n    }\r\n\r\n    return () => offs.forEach(x => x());\r\n  }, [...chain]);\r\n}\r\n\r\nexport { useChain };\r\n","import { type DarkElement, unmountRoot } from '@dark-engine/core';\r\n\r\nimport { render, roots } from '../render';\r\nimport type { TagNativeElement } from '../native-element';\r\n\r\nfunction createRoot(container: TagNativeElement) {\r\n  return {\r\n    render: (element: DarkElement) => render(element, container),\r\n    unmount: () => unmount(container),\r\n  };\r\n}\r\n\r\nfunction unmount(container: TagNativeElement) {\r\n  const rootId = roots.get(container);\r\n\r\n  unmountRoot(rootId, () => {\r\n    roots.delete(container);\r\n    container.innerHTML = '';\r\n  });\r\n}\r\n\r\nexport { createRoot, unmount };\r\n"],"names":["ROOT","REPLACER","KEY_ATTR","REF_ATTR","CREATE_EFFECT_TAG","UPDATE_EFFECT_TAG","SKIP_EFFECT_TAG","MOVE_MASK","TaskPriority","Flag","ATTR_BLACK_LIST","SKIP_SCAN_OPT","MEMO_SLOT_OPT","STATIC_SLOT_OPT","$$inject","Symbol","Component","constructor","type","token","props","ref","shouldUpdate","displayName","children","this","component","options","$token","factory","defaultInject","detectIsComponent","x","detectIsFunction","o","detectIsUndefined","detectIsTextBased","detectIsObject","detectIsBoolean","detectIsArray","Array","isArray","detectIsNull","detectIsEmpty","getTime","Date","now","dummyFn","trueFn","falseFn","sameFn","flatten","source","transform","length","list","stack","idx","pop","i","push","prevDeps","nextDeps","max","Math","Object","is","nextTick","callback","Promise","resolve","then","createIndexKey","defaultRealisation","Error","platform","createElement","insertElement","raf","caf","spawn","commit","finishCommit","detectIsDynamic","detectIsPortal","unmountPortal","chunk","EventEmitter","subscribers","Map","on","e","fn","has","set","Set","get","add","delete","emit","data","forEach","kill","__getSize","size","Scope","root","wip","cursor","unit","mountDeep","mountLevel","mountNav","events","unsubs","actions","candidates","deletions","cancels","asyncEffects","layoutEffects","insertionEffects","resourceId","resources","defers","setPendingStatus","isLayoutEffectsZone","isInsertionEffectsZone","isUpdateZone","isBatchZone","isHydrateZone","isStreamZone","isTransitionZone","isEventZone","isHot","isDynamic","isServer","emitter","resetActions","getActionsById","id","addActionMap","map","replace","insert","remove","move","stable","addReplaceAction","nextKey","addInsertAction","addRemoveAction","prevKey","addMoveAction","addStableAction","copy","scope","getRoot","setRoot","fiber","getWorkInProgress","setWorkInProgress","getNextUnitOfWork","setNextUnitOfWork","getCursorFiber","setCursorFiber","navToChild","navToSibling","navToParent","navToPrev","getMountIndex","setMountDeep","getMountDeep","value","resetMount","getEvents","addEventUnsubscriber","unsubscribeEvents","getCandidates","addCandidate","resetCandidates","getDeletions","hasDeletion","nextFiber","parent","addDeletion","resetDeletions","addAsyncEffect","resetAsyncEffects","runAsyncEffects","effects","setTimeout","addLayoutEffect","resetLayoutEffects","runLayoutEffects","setIsLayoutEffectsZone","addInsertionEffect","resetInsertionEffects","runInsertionEffects","setIsInsertionEffectsZone","addCancel","applyCancels","resetCancels","getIsLayoutEffectsZone","getIsInsertionEffectsZone","getIsUpdateZone","setIsUpdateZone","getIsBatchZone","setIsBatchZone","getIsHydrateZone","setIsHydrateZone","getIsStreamZone","setIsStreamZone","getIsTransitionZone","setIsTransitionZone","getIsEventZone","setIsEventZone","getIsHot","setIsHot","getPendingStatusSetter","setPendingStatusSetter","flush","getEmitter","defer","getDefers","resetDefers","getResource","setResource","res","getResources","getResourceId","setResourceId","getNextResourceId","runAfterCommit","rootId","scopes","getRootId","setRootId","$$scope","$$vNode","ATTR_TYPE","VirtualNode","TagVirtualNode","name","attrs","super","NodeType","TAG","TextVirtualNode","TEXT","String","CommentVirtualNode","text","COMMENT","from","detectIsTextVirtualNode","detectIsVirtualNode","vNode","detectIsTagVirtualNode","detectIsCommentVirtualNode","detectIsVirtualNodeFactory","detectIsPlainVirtualNode","createReplacer","getElementKey","inst","hasElementFlag","flag","Boolean","hasComponentFlag","hasVirtualNodeFactoryFlag","hasTagVirtualNodeFlag","getElementType","hasChildrenProp","detectAreSameInstanceTypes","prevInst","nextInst","isComponentFactories","nc","Fiber","hook","provider","cc","cec","eidx","mask","element","tag","child","next","alt","atoms","nextId","mutate","keys","key","markHost","increment","count","force","$scope","wipFiber","stop","setError","error","catch","static","Hook","values","owner","$$memo","defaultShouldUpdate","nextProps","detectIsMemo","instance","walk","onWalk","shouldDeep","shouldStop","skip","getFiberWithElement","$fiber","buildChildNodes","onNode","getKey","buildChildNode","altMap","startEidx","prevIdx","nextIdx","left","right","isFirst","isLast","notifyParents","$$fragment","Fragment","slot","Memo","memo","getValue","p","n","deps","state","$value","detectIsElement","$$useEffect","createEffect","useEffect","effect","cleanup","undefined","isInsertionEffect","EffectType","INSERTION","isLayoutEffect","LAYOUT","isAsyncEffect","ASYNC","runEffect","dropEffects","$$useLayoutEffect","dropLayoutEffects","$$useInsertionEffect","useInsertionEffect","dropInsertionEffects","shouldUnmountFiber","INSERTION_EFFECT_HOST_MASK","unmountFiber","_","hasPendingPromise","hasRenderError","workLoop","isAsync","shouldYield","hasMoreWork","performUnitOfWork","scheduler","hasPrimaryTask","fork","unmounts","diff","parentFiber","isRight","sync","err","finally","isDeepWalking","isStream","hasChildren","$inst","createFiber","getAlternate","share","mountChild","mountSibling","prev","shouldMount","pc","mount","hasSameCount","prevKeys","nextKeys","prevKeysMap","nextKeysMap","keyedFibersMap","usedKeysMap","extractKeys","prevKeyFiber","tryOptStaticSlot","hasMove","hasRemove","hasInsert","hasReplace","detectIsStableMemoTree","tryOptMov","tryOptRem","tryOptMemoSlot","reconcile","isUpdate","setup","detectAreSameComponentTypesWithSameKeys","getHook","fromChild","parentId","isMove","isStable","isComponent","result","promise","all","setNextId","args","console","supportConditional","cancel","$$scope$","cancelTask","setValue","resetValue","assign","replaceScope","createUpdate","isTransition","createChanger","$createChanger","restore","fromRestore","detectIsFiberAlive","MessageChannel","port1","port2","MessagePort","channel","offs","event","off","postMessage","unref","Task","priority","forceAsync","taskRestorer","pendingSetter","nextTaskId","getPriority","getForceAsync","setIsTransition","getIsTransition","run","pending","markAsPending","isPending","canPending","markAsUnnecessary","isUnnecessary","getIsUnnecessary","setTaskRestorer","setLocationCreator","locationCreator","createLocation","setPendingSetter","loc","tasks","deep","$loc","split","some","$$loc","indexOf","createRootLocation","queue","HIGH","NORMAL","LOW","deadline","task","scheduledCallback","isMessageLoopRunning","port","performWorkUntilDeadline","bind","reset","schedule","put","execute","high","normal","low","getQueues","hasPrimary","hasLow","detectHasRelatedUpdate","complete","filter","splice","pick","shift","requestCallbackAsync","requestCallback","isBusy","unshift","hasChanger","isBatch","isEvent","callbackOptions","createHookLocation","change","batch","timer","changes","clearTimeout","addBatch","as","_void","View","applyRef","current","mutableRef","hasOwnProperty","detectIsMutableRef","$$portal","container","innerHTML","getPortalContainer","SyntheticEvent","sourceEvent","target","propagation","stopPropagation","preventDefault","getPropagation","delegateEvent","eventName","handler","eventsMap","handlersMap","$handler","slice","rootHandler","$event","parentElement","dispatchEvent","WeakMap","document","addEventListener","removeEventListener","detectIsEvent","attrName","startsWith","getEventName","toLowerCase","STYLE_ATTR","CLASS_ATTR","CLASS_NAME_ATTR","moves","patches","svgTagNames","voidTagNames","createNativeElementMap","detectIsSvgElement","createElementNS","createTextNode","createComment","createNativeElement","node","setObjectStyle","style","setProperty","toggleAttribute","setAttribute","removeAttribute","patchProperties","tagName","attrValue","patchPropertiesSpecialCasesMap","prototype","getPrototypeOf","descriptor","getOwnPropertyDescriptor","canSetProperty","includes","input","checked","autofocus","focus","textarea","innerText","commitMap","childNodes","nativeElement","Text","splitText","appendNativeElement","insertNativeElement","attrNames","tagElement","addAttributes","commitCreation","sourceNodes","elements","collectElements","sourceFragment","DocumentFragment","elementIdx","removeNativeElement","replaceNativeElement","prevInstance","nextInstance","textContent","prevNode","nextNode","prevAttrs","nextAttrs","getAttributeNames","prevAttrValue","nextAttrValue","updateAttributes","commitUpdate","canRemoveNativeElement","appendChild","sibling","insertBefore","insertNativeElementByIndex","candidate","replaceChild","removeChild","roots","requestAnimationFrame","window","cancelAnimationFrame","isInjected","SharedState","ctrls","flow","Flow","RIGHT","isTrail","isPaused","isCanceled","timeout","timerId","getCtrls","setCtrls","setIsTrail","getIsTrail","setFlow","getIsPaused","getIsCanceled","detectIsRightFlow","setIsPlaying","detectIsPlaying","start","pause","resume","delay","resetTimer","subs","completeSeries","sharedState","presets","tension","friction","gentle","wobbly","stiff","preset","defaultSpringConfig","mass","precision","fix","Atom","val","__connect","connections1","__","___","connections2","subjects","toString","toJSON","valueOf","disconnect","__addSubject","atom$","__removeSubject","make","tuple","__notify","WritableAtom","Spring","prop","prop$","setProp","atom","reduce","acc","notify","time","performance","Number","toFixed","range","fill","stepper","pos","vel","dest","step","config","nPos","nVel","spring","abs","Controller","results","completed","immediate","immediates","isReplaced","item","setKey","getIdx","setIdx","setFrom","setTo","to","setSpringConfigFn","springConfigFn","setLeft","setRight","setConfigurator","configurator","setImmediate","replaceValue","markAsFake","primaryKey","generateFakeKey","detectIsFake","getIsReplaced","setIsReplaced","getItem","setItem","getState","getSpring","config1","config2","play","frameId","motion","frameTime","MAX_SKIPPED_FRAMES","update","checkCompleted","fakeKey","items","ctrlsMap","itemsMap","ctrl","getController","animate","space","action","fakesMap","isEnter","Action","ENTER","isLeave","LEAVE","$idx","trail","$ctrl","isPlaying","fake","withTrail","enter","leave","rest","Animated","App","isOpen","setIsOpen","initialValue","setState","sourceValue","prevValue","newValue","useState","springApi","api","getSharedState","prevCount","inChain","springs","prepare","chain","useSprings","useSpring","green","blue","transition","transitionApi","forceUpdate","hasReplaces","fromApi","render","nextItems","selector","arr","uniq","$items","hasChanges","insMap","remMap","movMap","stabMap","replaced","prevItems","prevItem","nextItem","UPDATE","handleItemEnd","handleSeriesEnd","useTransition","opacity","scale","timesteps","timeframe","nextApi","useChain","class","springStyleFn","onClick","transitionStyleFn","setPropOf","css","k","v","description","height","getElementById","hydrate","isMounted","isHydrate","rootFiber","unmount","onCompleted","unmountRoot"],"sourceRoot":""}