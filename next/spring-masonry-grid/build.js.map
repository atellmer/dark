{"version":3,"file":"build.js","mappings":"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","sources":["webpack://dark-spring-masonry-grid/../../packages/core/src/constants.ts","webpack://dark-spring-masonry-grid/../../packages/core/src/component/component.ts","webpack://dark-spring-masonry-grid/../../packages/core/src/utils/utils.ts","webpack://dark-spring-masonry-grid/../../packages/core/src/view/view.ts","webpack://dark-spring-masonry-grid/../../packages/core/src/platform/platform.ts","webpack://dark-spring-masonry-grid/../../packages/core/src/emitter/emitter.ts","webpack://dark-spring-masonry-grid/../../packages/core/src/scope/scope.ts","webpack://dark-spring-masonry-grid/../../packages/core/src/memo/memo.ts","webpack://dark-spring-masonry-grid/../../packages/core/src/use-memo/use-memo.ts","webpack://dark-spring-masonry-grid/../../packages/core/src/fiber/fiber.ts","webpack://dark-spring-masonry-grid/../../packages/core/src/walk/walk.ts","webpack://dark-spring-masonry-grid/../../packages/core/src/fragment/fragment.ts","webpack://dark-spring-masonry-grid/../../packages/core/src/use-effect/use-effect.ts","webpack://dark-spring-masonry-grid/../../packages/core/src/use-layout-effect/use-layout-effect.ts","webpack://dark-spring-masonry-grid/../../packages/core/src/use-insertion-effect/use-insertion-effect.ts","webpack://dark-spring-masonry-grid/../../packages/core/src/unmount/unmount.ts","webpack://dark-spring-masonry-grid/../../packages/core/src/workloop/workloop.ts","webpack://dark-spring-masonry-grid/../../packages/core/src/scheduler/scheduler.ts","webpack://dark-spring-masonry-grid/../../packages/core/src/use-update/use-update.ts","webpack://dark-spring-masonry-grid/../../packages/core/src/batch/batch.ts","webpack://dark-spring-masonry-grid/../../packages/core/src/use-state/use-state.ts","webpack://dark-spring-masonry-grid/../../packages/core/src/use-callback/use-callback.ts","webpack://dark-spring-masonry-grid/../../packages/core/src/ref/ref.ts","webpack://dark-spring-masonry-grid/../../packages/core/src/element/element.ts","webpack://dark-spring-masonry-grid/../../packages/platform-browser/src/portal/portal.ts","webpack://dark-spring-masonry-grid/../../packages/platform-browser/src/events/events.ts","webpack://dark-spring-masonry-grid/../../packages/platform-browser/src/constants.ts","webpack://dark-spring-masonry-grid/../../packages/platform-browser/src/dom/dom.ts","webpack://dark-spring-masonry-grid/../../packages/platform-browser/src/render/render.ts","webpack://dark-spring-masonry-grid/../../packages/animations/src/state/state.ts","webpack://dark-spring-masonry-grid/../../packages/animations/src/shared/shared.ts","webpack://dark-spring-masonry-grid/../../packages/animations/src/preset/preset.ts","webpack://dark-spring-masonry-grid/../../packages/core/src/atom/atom.ts","webpack://dark-spring-masonry-grid/../../packages/animations/src/spring/spring.ts","webpack://dark-spring-masonry-grid/../../packages/animations/src/utils/utils.ts","webpack://dark-spring-masonry-grid/../../packages/animations/src/stepper/stepper.ts","webpack://dark-spring-masonry-grid/../../packages/animations/src/controller/controller.ts","webpack://dark-spring-masonry-grid/../../packages/animations/src/use-transition/use-transition.ts","webpack://dark-spring-masonry-grid/../../packages/animations/src/animated/animated.ts","webpack://dark-spring-masonry-grid/./index.tsx","webpack://dark-spring-masonry-grid/../../packages/platform-browser/src/create-root/create-root.tsx"],"sourcesContent":["export const VERSION = '0.25.1';\r\nexport const ROOT = 'dark:root';\r\nexport const REPLACER = 'dark:matter';\r\nexport const INDEX_KEY = 'dark:idx';\r\nexport const KEY_ATTR = 'key';\r\nexport const REF_ATTR = 'ref';\r\nexport const CREATE_EFFECT_TAG = 'C';\r\nexport const UPDATE_EFFECT_TAG = 'U';\r\nexport const DELETE_EFFECT_TAG = 'D';\r\nexport const SKIP_EFFECT_TAG = 'S';\r\nexport const INSERTION_EFFECT_HOST_MASK = 1;\r\nexport const LAYOUT_EFFECT_HOST_MASK = 2;\r\nexport const ASYNC_EFFECT_HOST_MASK = 4;\r\nexport const ATOM_HOST_MASK = 8;\r\nexport const PORTAL_HOST_MASK = 16;\r\nexport const SHADOW_MASK = 32;\r\nexport const FLUSH_MASK = 64;\r\nexport const MOVE_MASK = 128;\r\nexport const HOOK_DELIMETER = ':';\r\nexport const YIELD_INTERVAL = 6;\r\nexport const APP_STATE_ATTR = 'dark-app-state';\r\n\r\nexport enum TaskPriority {\r\n  LOW = 0,\r\n  NORMAL = 1,\r\n  HIGH = 2,\r\n}\r\n\r\nexport enum Flag {\r\n  SKIP_SCAN_OPT = '__skipScanOpt',\r\n  MEMO_SLOT_OPT = '__memoSlotOpt',\r\n  STATIC_SLOT_OPT = '__staticSlotOpt',\r\n}\r\n\r\nexport const FLAGS = {\r\n  __skipScanOpt: true,\r\n  __memoSlotOpt: true,\r\n  __staticSlotOpt: true,\r\n};\r\n\r\nexport const ATTR_BLACK_LIST = {\r\n  [KEY_ATTR]: true,\r\n  [REF_ATTR]: true,\r\n  [Flag.SKIP_SCAN_OPT]: true,\r\n  [Flag.MEMO_SLOT_OPT]: true,\r\n  [Flag.STATIC_SLOT_OPT]: true,\r\n};\r\n","import type { ElementKey, Instance, DarkElement, RefProps, KeyProps, FlagProps } from '../shared';\r\nimport { KEY_ATTR } from '../constants';\r\nimport { error } from '../utils';\r\nimport { type Ref } from '../ref';\r\n\r\nconst $$inject = Symbol('inject');\r\nclass Component<P extends StandardComponentProps = any, R = any> {\r\n  type: CreateElement<P>;\r\n  props: P;\r\n  ref?: Ref<R>;\r\n  token?: Symbol;\r\n  displayName?: string;\r\n  shouldUpdate?: ShouldUpdate<P>;\r\n  children: Array<Instance> = [];\r\n\r\n  constructor(\r\n    type: CreateElement<P>,\r\n    token: Symbol,\r\n    props: P,\r\n    ref: Ref<R>,\r\n    shouldUpdate: ShouldUpdate<P>,\r\n    displayName: string,\r\n  ) {\r\n    this.type = type;\r\n    this.props = props;\r\n    ref && (this.ref = ref);\r\n    token && (this.token = token);\r\n    shouldUpdate && (this.shouldUpdate = shouldUpdate);\r\n    displayName && (this.displayName = displayName);\r\n  }\r\n}\r\n\r\nfunction component<P extends object, R = unknown>(type: CreateElement<P, R>, options: ComponentOptions = {}) {\r\n  const { token: $token, displayName } = options;\r\n  type Props = P & StandardComponentProps;\r\n  const factory: ComponentFactoryWithPossiblyInject<Props, R> = (props = {} as Props, ref?: Ref<R>) => {\r\n    const { token = $token, shouldUpdate } = factory[$$inject] || defaultInject;\r\n\r\n    if (props.ref) {\r\n      delete props.ref;\r\n\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        process.env.NODE_ENV === 'development' &&\r\n          error(`[Dark]: To use ref you need to wrap the component with forwardRef!`);\r\n      }\r\n    }\r\n\r\n    return new Component(type, token, props, ref, shouldUpdate, displayName);\r\n  };\r\n\r\n  return factory as ComponentFactory<Props, R>;\r\n}\r\n\r\nconst defaultInject: ComponentInject = {};\r\n\r\nconst detectIsComponent = (x: unknown): x is Component => x instanceof Component;\r\n\r\nconst getComponentKey = (x: Component): ElementKey => x.props[KEY_ATTR] ?? null;\r\n\r\nconst hasComponentFlag = (inst: Component, flag: string) => Boolean(inst.props[flag]);\r\n\r\ntype ComponentOptions = Readonly<{\r\n  displayName?: string;\r\n  token?: Symbol;\r\n}>;\r\n\r\ntype ComponentFactoryWithPossiblyInject<P extends object = {}, R = unknown> = {\r\n  (props?: P, ref?: Ref<R>): Component<P, R>;\r\n  [$$inject]?: ComponentInject<P>;\r\n};\r\n\r\ntype CreateElement<P extends StandardComponentProps, R = unknown> = (props: P, ref?: Ref<R>) => DarkElement;\r\n\r\nexport type ComponentInject<P extends object = {}> = Readonly<{\r\n  token?: Symbol;\r\n  shouldUpdate?: ShouldUpdate<P>;\r\n}>;\r\n\r\nexport type ShouldUpdate<P> = (prevProps: P, nextProps: P) => boolean;\r\n\r\nexport type StandardComponentProps = KeyProps & RefProps & FlagProps;\r\n\r\nexport type ComponentFactory<P extends object = {}, R = unknown> = (props?: P, ref?: Ref<R>) => Component<P, R>;\r\n\r\nexport { Component, component, $$inject, detectIsComponent, getComponentKey, hasComponentFlag };\r\n","import type { NestedArray } from '../shared';\r\nimport { INDEX_KEY } from '../constants';\r\n\r\nconst detectIsFunction = (o: any): o is Function => typeof o === 'function';\r\n\r\nconst detectIsUndefined = (o: any): o is undefined => typeof o === 'undefined';\r\n\r\nconst detectIsNumber = (o: any): o is number => typeof o === 'number';\r\n\r\nconst detectIsString = (o: any): o is string => typeof o === 'string';\r\n\r\nconst detectIsTextBased = (o: any): o is string | number => typeof o === 'string' || typeof o === 'number';\r\n\r\nconst detectIsObject = (o: any): o is object => typeof o === 'object';\r\n\r\nconst detectIsBoolean = (o: any): o is boolean => typeof o === 'boolean';\r\n\r\nconst detectIsArray = (o: any): o is Array<any> => Array.isArray(o);\r\n\r\nconst detectIsNull = (o: any): o is null => o === null;\r\n\r\nconst detectIsEmpty = (o: any) => detectIsNull(o) || detectIsUndefined(o);\r\n\r\nconst detectIsFalsy = (o: any) => detectIsEmpty(o) || o === false;\r\n\r\nconst getTime = () => Date.now();\r\n\r\nconst dummyFn = () => {};\r\n\r\nconst trueFn = () => true;\r\n\r\nconst falseFn = () => false;\r\n\r\nconst sameFn = <T = any>(x: T) => x;\r\n\r\nconst error = (...args: Array<any>) => !detectIsUndefined(console) && console.error(...args);\r\n\r\nfunction flatten<T = any>(source: Array<NestedArray<T>>, transform: (x: T) => any = sameFn): Array<T> {\r\n  if (detectIsArray(source)) {\r\n    if (source.length === 0) return [];\r\n  } else {\r\n    return [transform(source)];\r\n  }\r\n  const list: Array<T> = [];\r\n  const stack = [source[0]];\r\n  let idx = 0;\r\n\r\n  while (stack.length > 0) {\r\n    const x = stack.pop();\r\n\r\n    if (detectIsArray(x)) {\r\n      for (let i = x.length - 1; i >= 0; i--) {\r\n        stack.push(x[i]);\r\n      }\r\n    } else {\r\n      list.push(transform(x));\r\n\r\n      if (stack.length === 0 && idx < source.length - 1) {\r\n        idx++;\r\n        stack.push(source[idx]);\r\n      }\r\n    }\r\n  }\r\n\r\n  return list;\r\n}\r\n\r\nfunction keyBy<T = any>(\r\n  list: Array<T>,\r\n  fn: (o: T) => string | number,\r\n  value = false,\r\n): Record<string | number, T | boolean> {\r\n  return list.reduce((acc, x) => ((acc[fn(x)] = value ? x : true), acc), {});\r\n}\r\n\r\nfunction detectAreDepsDifferent(prevDeps: Array<unknown>, nextDeps: Array<unknown>): boolean {\r\n  if (prevDeps === nextDeps) return false;\r\n  const max = Math.max(prevDeps.length, nextDeps.length);\r\n\r\n  for (let i = 0; i < max; i++) {\r\n    if (!Object.is(prevDeps[i], nextDeps[i])) return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nfunction nextTick(callback: () => void) {\r\n  Promise.resolve().then(callback);\r\n}\r\n\r\nconst createIndexKey = (idx: number) => `${INDEX_KEY}:${idx}`;\r\n\r\nexport {\r\n  detectIsFunction,\r\n  detectIsUndefined,\r\n  detectIsNumber,\r\n  detectIsString,\r\n  detectIsTextBased,\r\n  detectIsObject,\r\n  detectIsBoolean,\r\n  detectIsArray,\r\n  detectIsNull,\r\n  detectIsEmpty,\r\n  detectIsFalsy,\r\n  getTime,\r\n  dummyFn,\r\n  trueFn,\r\n  falseFn,\r\n  error,\r\n  flatten,\r\n  keyBy,\r\n  detectAreDepsDifferent,\r\n  nextTick,\r\n  createIndexKey,\r\n};\r\n","import type { ElementKey, DarkElement, Instance, SlotProps, RefProps, KeyProps, FlagProps } from '../shared';\r\nimport { type Component, detectIsComponent, getComponentKey, hasComponentFlag } from '../component';\r\nimport { detectIsArray, detectIsFunction } from '../utils';\r\nimport { REPLACER, KEY_ATTR } from '../constants';\r\nimport { $$scope } from '../scope';\r\n\r\nconst $$vNode = Symbol('vNode');\r\nconst ATTR_TYPE = 'type';\r\n\r\nclass VirtualNode {\r\n  type: NodeType = null;\r\n\r\n  constructor(type: NodeType) {\r\n    this.type = type;\r\n  }\r\n}\r\n\r\nclass TagVirtualNode extends VirtualNode {\r\n  name: string;\r\n  attrs: Record<string, any>;\r\n  children: Array<TextVirtualNode | CommentVirtualNode | TagVirtualNode | VirtualNodeFactory | Component>;\r\n\r\n  constructor(name: string, attrs: TagVirtualNode['attrs'], children: TagVirtualNode['children']) {\r\n    super(NodeType.TAG);\r\n    this.name = name;\r\n    this.attrs = attrs;\r\n    this.children = children;\r\n  }\r\n}\r\n\r\nclass TextVirtualNode extends VirtualNode {\r\n  value: string;\r\n\r\n  constructor(source: TextSource) {\r\n    super(NodeType.TEXT);\r\n    this.value = String(source);\r\n  }\r\n}\r\n\r\nclass CommentVirtualNode extends VirtualNode {\r\n  value = '';\r\n\r\n  constructor(text: string) {\r\n    super(NodeType.COMMENT);\r\n    this.value = text;\r\n  }\r\n}\r\n\r\nfunction View(options: ViewOptions) {\r\n  const factory: TagVirtualNodeFactory = () => {\r\n    const { as: name, slot, _void = false, ...attrs } = options;\r\n    const children = (_void ? [] : detectIsArray(slot) ? slot : slot ? [slot] : []) as TagVirtualNode['children'];\r\n\r\n    return new TagVirtualNode(name, attrs, children);\r\n  };\r\n\r\n  factory[$$vNode] = true;\r\n  factory[ATTR_TYPE] = options.as;\r\n  factory[KEY_ATTR] = options.key;\r\n\r\n  return factory;\r\n}\r\n\r\nconst Text = (source: TextSource) => new TextVirtualNode(source);\r\n\r\nText.from = (source: DarkElement) => (detectIsTextVirtualNode(source) ? source.value : String(source));\r\n\r\nconst Comment = (text: string) => new CommentVirtualNode(text);\r\n\r\nconst detectIsVirtualNode = (vNode: unknown): vNode is VirtualNode => vNode instanceof VirtualNode;\r\n\r\nconst detectIsTagVirtualNode = (vNode: unknown): vNode is TagVirtualNode => vNode instanceof TagVirtualNode;\r\n\r\nconst detectIsCommentVirtualNode = (vNode: unknown): vNode is CommentVirtualNode => vNode instanceof CommentVirtualNode;\r\n\r\nconst detectIsTextVirtualNode = (vNode: unknown): vNode is TextVirtualNode => vNode instanceof TextVirtualNode;\r\n\r\nconst detectIsVirtualNodeFactory = (factory: unknown): factory is VirtualNodeFactory =>\r\n  detectIsFunction(factory) && factory[$$vNode] === true;\r\n\r\nconst getTagVirtualNodeKey = (vNode: TagVirtualNode): ElementKey | null =>\r\n  vNode.attrs ? vNode.attrs[KEY_ATTR] ?? null : null;\r\n\r\nconst hasTagVirtualNodeFlag = (vNode: TagVirtualNode, flag: string) => Boolean(vNode.attrs && vNode.attrs[flag]);\r\n\r\nconst getVirtualNodeFactoryKey = (factory: VirtualNodeFactory): ElementKey | null => factory[KEY_ATTR] ?? null;\r\n\r\nconst hasVirtualNodeFactoryFlag = (factory: VirtualNodeFactory, flag: string) => Boolean(factory[flag]);\r\n\r\nconst detectIsPlainVirtualNode = (vNode: unknown): vNode is PlainVirtualNode =>\r\n  detectIsTextVirtualNode(vNode) || detectIsCommentVirtualNode(vNode);\r\n\r\nconst createReplacer = () => new CommentVirtualNode(REPLACER);\r\n\r\nconst detectIsReplacer = (vNode: unknown) => detectIsCommentVirtualNode(vNode) && vNode.value === REPLACER;\r\n\r\nfunction getElementKey(inst: Instance): ElementKey | null {\r\n  return detectIsComponent(inst)\r\n    ? getComponentKey(inst)\r\n    : detectIsVirtualNodeFactory(inst)\r\n    ? getVirtualNodeFactoryKey(inst)\r\n    : detectIsTagVirtualNode(inst)\r\n    ? getTagVirtualNodeKey(inst)\r\n    : null;\r\n}\r\n\r\nfunction hasElementFlag(inst: Instance, flag: string) {\r\n  return detectIsComponent(inst)\r\n    ? hasComponentFlag(inst, flag)\r\n    : detectIsVirtualNodeFactory(inst)\r\n    ? hasVirtualNodeFactoryFlag(inst, flag)\r\n    : detectIsTagVirtualNode(inst)\r\n    ? hasTagVirtualNodeFlag(inst, flag)\r\n    : false;\r\n}\r\n\r\nfunction getElementType(inst: Instance): string | Function {\r\n  return detectIsComponent(inst)\r\n    ? inst.type\r\n    : detectIsVirtualNodeFactory(inst)\r\n    ? inst[ATTR_TYPE]\r\n    : detectIsTagVirtualNode(inst)\r\n    ? inst.name\r\n    : detectIsVirtualNode(inst)\r\n    ? inst.type\r\n    : null;\r\n}\r\n\r\nfunction hasChildrenProp(inst: Instance): inst is TagVirtualNode | Component {\r\n  return detectIsTagVirtualNode(inst) || detectIsComponent(inst);\r\n}\r\n\r\nfunction detectAreSameInstanceTypes(prevInst: Instance, nextInst: Instance, isComponentFactories = false) {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    if (process.env.NODE_ENV === 'development' && $$scope().getIsHot()) {\r\n      if (detectIsComponent(prevInst) && detectIsComponent(nextInst)) {\r\n        return prevInst.displayName === nextInst.displayName;\r\n      }\r\n    }\r\n  }\r\n\r\n  if (isComponentFactories) {\r\n    const pc = prevInst as Component;\r\n    const nc = nextInst as Component;\r\n\r\n    return pc.type === nc.type;\r\n  }\r\n\r\n  return getElementType(prevInst) === getElementType(nextInst);\r\n}\r\n\r\nfunction detectAreSameComponentTypesWithSameKeys(prevInst: Instance | null, nextInst: Instance | null) {\r\n  if (\r\n    prevInst &&\r\n    nextInst &&\r\n    detectIsComponent(prevInst) &&\r\n    detectIsComponent(nextInst) &&\r\n    detectAreSameInstanceTypes(prevInst, nextInst, true)\r\n  ) {\r\n    return getElementKey(prevInst) === getElementKey(nextInst);\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\ntype TextSource = string | number;\r\n\r\nexport type VirtualNodeFactory = () => VirtualNode;\r\n\r\nexport type TagVirtualNodeFactory = () => TagVirtualNode;\r\n\r\nexport type PlainVirtualNode = TextVirtualNode | CommentVirtualNode;\r\n\r\nexport type ViewOptions = {\r\n  as: string;\r\n  _void?: boolean;\r\n  [prop: string]: any;\r\n} & Partial<SlotProps> &\r\n  RefProps &\r\n  KeyProps &\r\n  FlagProps;\r\n\r\nexport enum NodeType {\r\n  TAG = 'TAG',\r\n  TEXT = 'TEXT',\r\n  COMMENT = 'COMMENT',\r\n}\r\n\r\nexport {\r\n  View,\r\n  Text,\r\n  Comment,\r\n  VirtualNode,\r\n  TagVirtualNode,\r\n  TextVirtualNode,\r\n  CommentVirtualNode,\r\n  createReplacer,\r\n  detectIsReplacer,\r\n  getElementKey,\r\n  hasElementFlag,\r\n  getElementType,\r\n  hasChildrenProp,\r\n  detectIsVirtualNode,\r\n  detectIsTagVirtualNode,\r\n  detectIsCommentVirtualNode,\r\n  detectIsTextVirtualNode,\r\n  detectIsPlainVirtualNode,\r\n  detectIsVirtualNodeFactory,\r\n  detectAreSameInstanceTypes,\r\n  detectAreSameComponentTypesWithSameKeys,\r\n};\r\n","import { type Fiber } from '../fiber';\r\nimport { type VirtualNode } from '../view';\r\nimport { type Callback } from '../shared';\r\n\r\nexport type Platform = {\r\n  createElement: <N>(vNode: VirtualNode) => N;\r\n  insertElement: <N>(node: N, idx: number, parent: N) => void;\r\n  raf: typeof requestAnimationFrame;\r\n  caf: typeof cancelAnimationFrame;\r\n  spawn: (callback: Callback) => void;\r\n  commit: (fiber: Fiber) => void;\r\n  finishCommit: () => void;\r\n  detectIsDynamic: () => boolean;\r\n  detectIsPortal: (instance: unknown) => boolean;\r\n  unmountPortal: (fiber: Fiber) => void;\r\n  chunk: (fiber: Fiber) => void;\r\n};\r\n\r\nconst defaultRealisation = () => {\r\n  throw new Error('Function not installed by renderer!');\r\n};\r\n\r\nconst platform: Platform = {\r\n  createElement: defaultRealisation,\r\n  insertElement: defaultRealisation,\r\n  raf: defaultRealisation,\r\n  caf: defaultRealisation,\r\n  spawn: defaultRealisation,\r\n  commit: defaultRealisation,\r\n  finishCommit: defaultRealisation,\r\n  detectIsDynamic: defaultRealisation,\r\n  detectIsPortal: defaultRealisation,\r\n  unmountPortal: defaultRealisation,\r\n  chunk: defaultRealisation,\r\n};\r\n\r\nconst detectIsServer = () => !platform.detectIsDynamic();\r\n\r\nexport { platform, detectIsServer };\r\n","import { type SubscriberWithValue } from '../shared';\r\n\r\ntype EventName = 'finish' | 'chunk';\r\n\r\nclass EventEmitter<E extends string = EventName, T = unknown> {\r\n  private subscribers: Map<Partial<E>, Set<SubscriberWithValue<unknown>>> = new Map();\r\n\r\n  on<T>(e: E, fn: SubscriberWithValue<T>) {\r\n    !this.subscribers.has(e) && this.subscribers.set(e, new Set());\r\n    this.subscribers.get(e).add(fn);\r\n\r\n    return () => this.subscribers.has(e) && this.subscribers.get(e).delete(fn);\r\n  }\r\n\r\n  emit(e: E, data?: T) {\r\n    this.subscribers.has(e) && this.subscribers.get(e).forEach(x => x(data));\r\n  }\r\n\r\n  kill() {\r\n    this.subscribers = new Map();\r\n  }\r\n\r\n  __getSize() {\r\n    return this.subscribers.size;\r\n  }\r\n}\r\n\r\nexport { EventEmitter };\r\n","import type { Callback, ElementKey, AppResources, AppResource } from '../shared';\r\nimport { type SetPendingStatus } from '../start-transition';\r\nimport { platform, detectIsServer } from '../platform';\r\nimport { EventEmitter } from '../emitter';\r\nimport { type Fiber } from '../fiber';\r\n\r\nclass Scope {\r\n  private root: Fiber = null;\r\n  private wip: Fiber = null;\r\n  private cursor: Fiber = null;\r\n  private unit: Fiber = null;\r\n  private mountDeep = true;\r\n  private mountLevel = 0;\r\n  private mountNav: Record<number, number> = {};\r\n  private events: Map<string, WeakMap<object, Function>> = new Map();\r\n  private unsubs: Set<Callback> = new Set();\r\n  private actions: Actions = {};\r\n  private candidates: Set<Fiber> = new Set();\r\n  private deletions: Set<Fiber> = new Set();\r\n  private cancels: Array<Callback> = [];\r\n  private asyncEffects: Set<Callback> = new Set();\r\n  private layoutEffects: Set<Callback> = new Set();\r\n  private insertionEffects: Set<Callback> = new Set();\r\n  private resourceId = 0;\r\n  private resources: AppResources = new Map();\r\n  private defers: Array<() => Promise<unknown>> = [];\r\n  private setPendingStatus: SetPendingStatus = null;\r\n  private isLayoutEffectsZone = false;\r\n  private isInsertionEffectsZone = false;\r\n  private isUpdateZone = false;\r\n  private isBatchZone = false;\r\n  private isHydrateZone = false;\r\n  private isStreamZone = false;\r\n  private isTransitionZone = false;\r\n  private isEventZone = false;\r\n  private isHot = false;\r\n  private isDynamic = platform.detectIsDynamic();\r\n  private isServer = detectIsServer();\r\n  private emitter = new EventEmitter();\r\n\r\n  private resetActions() {\r\n    this.actions = {};\r\n  }\r\n\r\n  getActionsById(id: number) {\r\n    return this.actions[id];\r\n  }\r\n\r\n  addActionMap(id: number, map: Record<ElementKey, Fiber>) {\r\n    this.actions[id] = {\r\n      map,\r\n      replace: null,\r\n      insert: null,\r\n      remove: null,\r\n      move: null,\r\n      stable: null,\r\n    };\r\n  }\r\n\r\n  addReplaceAction(id: number, nextKey: ElementKey) {\r\n    !this.actions[id].replace && (this.actions[id].replace = {});\r\n    this.actions[id].replace[nextKey] = true;\r\n  }\r\n\r\n  addInsertAction(id: number, nextKey: ElementKey) {\r\n    !this.actions[id].insert && (this.actions[id].insert = {});\r\n    this.actions[id].insert[nextKey] = true;\r\n  }\r\n\r\n  addRemoveAction(id: number, prevKey: ElementKey) {\r\n    !this.actions[id].remove && (this.actions[id].remove = {});\r\n    this.actions[id].remove[prevKey] = true;\r\n  }\r\n\r\n  addMoveAction(id: number, nextKey: ElementKey) {\r\n    !this.actions[id].move && (this.actions[id].move = {});\r\n    this.actions[id].move[nextKey] = true;\r\n  }\r\n\r\n  addStableAction(id: number, nextKey: ElementKey) {\r\n    !this.actions[id].stable && (this.actions[id].stable = {});\r\n    this.actions[id].stable[nextKey] = true;\r\n  }\r\n\r\n  copy() {\r\n    const scope = new Scope();\r\n\r\n    scope.root = null;\r\n    scope.wip = null;\r\n    scope.cursor = null;\r\n    scope.unit = this.unit;\r\n    scope.mountDeep = this.mountDeep;\r\n    scope.mountLevel = this.mountLevel;\r\n    scope.mountNav = { ...this.mountNav };\r\n    scope.events = this.events;\r\n    scope.unsubs = this.unsubs;\r\n    scope.actions = { ...this.actions };\r\n    scope.candidates = new Set([...this.candidates]);\r\n    scope.deletions = new Set([...this.deletions]);\r\n    scope.asyncEffects = new Set([...this.asyncEffects]);\r\n    scope.layoutEffects = new Set([...this.layoutEffects]);\r\n    scope.insertionEffects = new Set([...this.insertionEffects]);\r\n    scope.isUpdateZone = this.isUpdateZone;\r\n    scope.emitter = this.emitter;\r\n\r\n    return scope;\r\n  }\r\n\r\n  getRoot() {\r\n    return this.root;\r\n  }\r\n\r\n  setRoot(fiber: Fiber) {\r\n    this.root = fiber;\r\n  }\r\n\r\n  getWorkInProgress() {\r\n    return this.wip;\r\n  }\r\n\r\n  setWorkInProgress(fiber: Fiber) {\r\n    this.wip = fiber;\r\n  }\r\n\r\n  getNextUnitOfWork() {\r\n    return this.unit;\r\n  }\r\n\r\n  setNextUnitOfWork(fiber: Fiber) {\r\n    this.unit = fiber;\r\n  }\r\n\r\n  getCursorFiber() {\r\n    return this.cursor;\r\n  }\r\n\r\n  setCursorFiber(fiber: Fiber) {\r\n    this.cursor = fiber;\r\n  }\r\n\r\n  navToChild() {\r\n    this.mountLevel = this.mountLevel + 1;\r\n    this.mountNav[this.mountLevel] = 0;\r\n  }\r\n\r\n  navToSibling() {\r\n    this.mountNav[this.mountLevel] = this.mountNav[this.mountLevel] + 1;\r\n  }\r\n\r\n  navToParent() {\r\n    this.mountLevel = this.mountLevel - 1;\r\n  }\r\n\r\n  navToPrev() {\r\n    const idx = this.getMountIndex();\r\n\r\n    if (idx === 0) {\r\n      this.navToParent();\r\n      this.setMountDeep(true);\r\n    } else {\r\n      this.mountNav[this.mountLevel] = this.mountNav[this.mountLevel] - 1;\r\n      this.setMountDeep(false);\r\n    }\r\n  }\r\n\r\n  getMountIndex() {\r\n    return this.mountNav[this.mountLevel];\r\n  }\r\n\r\n  getMountDeep() {\r\n    return this.mountDeep;\r\n  }\r\n\r\n  setMountDeep(value: boolean) {\r\n    this.mountDeep = value;\r\n  }\r\n\r\n  resetMount() {\r\n    this.mountLevel = 0;\r\n    this.mountNav = {};\r\n    this.mountDeep = true;\r\n  }\r\n\r\n  getEvents() {\r\n    return this.events;\r\n  }\r\n\r\n  addEventUnsubscriber(fn: Callback) {\r\n    this.unsubs.add(fn);\r\n  }\r\n\r\n  unsubscribeEvents() {\r\n    this.unsubs.forEach(x => x());\r\n    this.unsubs = new Set();\r\n  }\r\n\r\n  getCandidates() {\r\n    return this.candidates;\r\n  }\r\n\r\n  addCandidate(fiber: Fiber) {\r\n    this.candidates.add(fiber);\r\n  }\r\n\r\n  resetCandidates() {\r\n    this.candidates = new Set();\r\n  }\r\n\r\n  getDeletions() {\r\n    return this.deletions;\r\n  }\r\n\r\n  hasDeletion(fiber: Fiber) {\r\n    let nextFiber = fiber;\r\n\r\n    while (nextFiber) {\r\n      if (this.deletions.has(nextFiber)) return true;\r\n      nextFiber = nextFiber.parent;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  addDeletion(fiber: Fiber) {\r\n    !this.hasDeletion(fiber) && this.deletions.add(fiber);\r\n  }\r\n\r\n  resetDeletions() {\r\n    this.deletions = new Set();\r\n  }\r\n\r\n  addAsyncEffect(fn: Callback) {\r\n    this.asyncEffects.add(fn);\r\n  }\r\n\r\n  resetAsyncEffects() {\r\n    this.asyncEffects = new Set();\r\n  }\r\n\r\n  runAsyncEffects() {\r\n    if (!this.isDynamic) return;\r\n    const effects = this.asyncEffects;\r\n    effects.size > 0 && setTimeout(() => effects.forEach(fn => fn()));\r\n  }\r\n\r\n  addLayoutEffect(fn: Callback) {\r\n    this.layoutEffects.add(fn);\r\n  }\r\n\r\n  resetLayoutEffects() {\r\n    this.layoutEffects = new Set();\r\n  }\r\n\r\n  runLayoutEffects() {\r\n    if (!this.isDynamic) return;\r\n    this.setIsLayoutEffectsZone(true);\r\n    this.layoutEffects.forEach(fn => fn());\r\n    this.setIsLayoutEffectsZone(false);\r\n  }\r\n\r\n  addInsertionEffect(fn: Callback) {\r\n    this.insertionEffects.add(fn);\r\n  }\r\n\r\n  resetInsertionEffects() {\r\n    this.insertionEffects = new Set();\r\n  }\r\n\r\n  runInsertionEffects() {\r\n    if (!this.isDynamic) return;\r\n    this.setIsInsertionEffectsZone(true);\r\n    this.insertionEffects.forEach(fn => fn());\r\n    this.setIsInsertionEffectsZone(false);\r\n  }\r\n\r\n  addCancel(fn: Callback) {\r\n    this.cancels.push(fn);\r\n  }\r\n\r\n  applyCancels() {\r\n    for (let i = this.cancels.length - 1; i >= 0; i--) {\r\n      this.cancels[i]();\r\n    }\r\n  }\r\n\r\n  resetCancels() {\r\n    this.cancels = [];\r\n  }\r\n\r\n  getIsLayoutEffectsZone() {\r\n    return this.isLayoutEffectsZone;\r\n  }\r\n\r\n  setIsLayoutEffectsZone(value: boolean) {\r\n    this.isLayoutEffectsZone = value;\r\n  }\r\n\r\n  getIsInsertionEffectsZone() {\r\n    return this.isInsertionEffectsZone;\r\n  }\r\n\r\n  setIsInsertionEffectsZone(value: boolean) {\r\n    this.isInsertionEffectsZone = value;\r\n  }\r\n\r\n  getIsUpdateZone() {\r\n    return this.isUpdateZone;\r\n  }\r\n\r\n  setIsUpdateZone(value: boolean) {\r\n    this.isUpdateZone = value;\r\n  }\r\n\r\n  getIsBatchZone() {\r\n    return this.isBatchZone;\r\n  }\r\n\r\n  setIsBatchZone(value: boolean) {\r\n    this.isBatchZone = value;\r\n  }\r\n\r\n  getIsHydrateZone() {\r\n    return this.isHydrateZone;\r\n  }\r\n\r\n  setIsHydrateZone(value: boolean) {\r\n    this.isHydrateZone = value;\r\n  }\r\n\r\n  getIsStreamZone() {\r\n    return this.isStreamZone;\r\n  }\r\n\r\n  setIsStreamZone(value: boolean) {\r\n    this.isStreamZone = value;\r\n  }\r\n\r\n  getIsTransitionZone() {\r\n    return this.isTransitionZone;\r\n  }\r\n\r\n  setIsTransitionZone(value: boolean) {\r\n    this.isTransitionZone = value;\r\n  }\r\n\r\n  getIsEventZone() {\r\n    return this.isEventZone;\r\n  }\r\n\r\n  setIsEventZone(value: boolean) {\r\n    this.isEventZone = value;\r\n  }\r\n\r\n  getIsHot() {\r\n    return this.isHot;\r\n  }\r\n\r\n  setIsHot(value: boolean) {\r\n    this.isHot = value;\r\n  }\r\n\r\n  getPendingStatusSetter() {\r\n    return this.setPendingStatus;\r\n  }\r\n\r\n  setPendingStatusSetter(fn: SetPendingStatus) {\r\n    this.setPendingStatus = fn;\r\n  }\r\n\r\n  flush() {\r\n    !this.isUpdateZone && this.setRoot(this.wip); // !\r\n    this.setWorkInProgress(null);\r\n    this.setNextUnitOfWork(null);\r\n    this.setCursorFiber(null);\r\n    this.resetMount();\r\n    this.resetCandidates();\r\n    this.resetDeletions();\r\n    this.resetCancels();\r\n    this.resetInsertionEffects();\r\n    this.resetLayoutEffects();\r\n    this.resetAsyncEffects();\r\n    this.setIsHydrateZone(false);\r\n    this.setIsUpdateZone(false);\r\n    this.resetActions();\r\n  }\r\n\r\n  getEmitter() {\r\n    return this.emitter;\r\n  }\r\n\r\n  defer(fn: () => Promise<unknown>) {\r\n    this.defers.push(fn);\r\n  }\r\n\r\n  getDefers() {\r\n    return this.defers;\r\n  }\r\n\r\n  resetDefers() {\r\n    this.defers = [];\r\n  }\r\n\r\n  getResource(id: number) {\r\n    return this.resources.get(id);\r\n  }\r\n\r\n  setResource(id: number, res: AppResource) {\r\n    this.resources.set(id, res);\r\n  }\r\n\r\n  getResources() {\r\n    return this.resources;\r\n  }\r\n\r\n  getResourceId() {\r\n    return this.resourceId;\r\n  }\r\n\r\n  setResourceId(id: number) {\r\n    this.resourceId = id;\r\n  }\r\n\r\n  getNextResourceId() {\r\n    return ++this.resourceId;\r\n  }\r\n\r\n  runAfterCommit() {\r\n    this.resources = new Map();\r\n    this.isServer && (this.resourceId = 0);\r\n  }\r\n}\r\n\r\ntype Actions = Record<\r\n  number,\r\n  {\r\n    map: Record<ElementKey, Fiber>;\r\n    replace: Record<ElementKey, true>;\r\n    insert: Record<ElementKey, true>;\r\n    remove: Record<ElementKey, true>;\r\n    move: Record<ElementKey, true>;\r\n    stable: Record<ElementKey, true>;\r\n  }\r\n>;\r\n\r\nlet rootId: number = null;\r\nconst scopes = new Map<number, Scope>();\r\n\r\nconst getRootId = () => rootId;\r\n\r\nconst setRootId = (id: number) => {\r\n  rootId = id;\r\n  !scopes.has(rootId) && scopes.set(rootId, new Scope());\r\n};\r\n\r\nconst removeScope = (id: number) => scopes.delete(id);\r\n\r\nconst replaceScope = (scope: Scope, id: number = rootId) => {\r\n  Object.assign(scopes.get(id), scope);\r\n};\r\n\r\nconst $$scope = (id: number = rootId) => scopes.get(id);\r\n\r\nexport { type Scope, getRootId, setRootId, removeScope, replaceScope, $$scope };\r\n","import {\r\n  type ComponentFactory,\r\n  type StandardComponentProps,\r\n  type ShouldUpdate,\r\n  type ComponentInject,\r\n  $$inject,\r\n  detectIsComponent,\r\n} from '../component';\r\nimport type { SlotProps, RefProps } from '../shared';\r\n\r\nconst $$memo = Symbol('memo');\r\n\r\nconst defaultShouldUpdate = (props: {}, nextProps: {}): boolean => {\r\n  const keys = Object.keys(nextProps);\r\n\r\n  for (const key of keys) {\r\n    if (key !== 'slot' && nextProps[key] !== props[key]) return true;\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\nfunction memo<P extends object, R = unknown>(\r\n  factory: ComponentFactory<P, R>,\r\n  shouldUpdate: ShouldUpdate<P & SlotProps> = defaultShouldUpdate,\r\n) {\r\n  type P1 = P & Omit<StandardComponentProps, 'ref'> & RefProps<R>;\r\n\r\n  factory[$$inject] = {\r\n    token: $$memo,\r\n    shouldUpdate,\r\n  } as ComponentInject<P1>;\r\n\r\n  return factory as ComponentFactory<P1, R>;\r\n}\r\n\r\nconst detectIsMemo = (instance: unknown) => detectIsComponent(instance) && instance.token === $$memo;\r\n\r\nexport { memo, detectIsMemo };\r\n","import { type VirtualNodeFactory, detectIsVirtualNodeFactory } from '../view';\r\nimport { type Component, detectIsComponent, component } from '../component';\r\nimport { type Hook, type HookValue } from '../fiber';\r\nimport { detectAreDepsDifferent } from '../utils';\r\nimport { $$scope } from '../scope';\r\nimport { memo } from '../memo';\r\n\r\ntype GetMemoValue = () => Component | VirtualNodeFactory;\r\n\r\ntype MemoProps = {\r\n  deps: Array<any>;\r\n  getValue: GetMemoValue;\r\n};\r\n\r\nconst Memo = memo(\r\n  component<MemoProps>(({ getValue }) => getValue()),\r\n  (p, n) => detectAreDepsDifferent(p.deps, n.deps),\r\n);\r\n\r\nfunction detectIsElement<T>(value: T) {\r\n  return detectIsComponent(value) || detectIsVirtualNodeFactory(value);\r\n}\r\n\r\nfunction useMemo<T>(getValue: () => T, deps: Array<any>): T {\r\n  const fiber = $$scope().getCursorFiber();\r\n  const { hook } = fiber;\r\n  const { idx, values } = hook as Hook<HookValue<T>>;\r\n  const state =\r\n    values[idx] ||\r\n    (values[idx] = {\r\n      deps,\r\n      value: getValue(),\r\n    });\r\n  let value: T = null;\r\n  let $value: T = null;\r\n\r\n  if (detectIsElement(state.value)) {\r\n    value = state.value;\r\n    $value = Memo({ getValue: getValue as GetMemoValue, deps }) as unknown as T;\r\n  } else {\r\n    value = detectAreDepsDifferent(state.deps, deps) ? getValue() : state.value;\r\n    $value = value;\r\n  }\r\n\r\n  state.deps = deps;\r\n  state.value = value;\r\n  hook.idx++;\r\n\r\n  return $value;\r\n}\r\n\r\nexport { useMemo };\r\n","import { detectIsTagVirtualNode, detectIsPlainVirtualNode, detectAreSameComponentTypesWithSameKeys } from '../view';\r\nimport { type Instance, type Callback, type TimerId } from '../shared';\r\nimport { type Context, type ContextProviderValue } from '../context';\r\nimport { detectIsComponent } from '../component';\r\nimport { detectIsFunction } from '../utils';\r\nimport { type Atom } from '../atom';\r\nimport { $$scope } from '../scope';\r\n\r\nclass Fiber<N = NativeElement> {\r\n  id = 0;\r\n  cc = 0; // child fibers count\r\n  cec = 0; // child native elements count\r\n  idx = 0; // idx of fiber in the parent fiber\r\n  eidx = 0; // native element idx\r\n  mask = 0; // bit mask\r\n  element: N = null; // native element\r\n  tag: string = null; // effect tag (CREATE, UPDATE, DELETE, SKIP)\r\n  parent: Fiber<N> = null; // parent fiber\r\n  child: Fiber<N> = null; // child fiber\r\n  next: Fiber<N> = null; // next sibling fiber\r\n  alt: Fiber<N> = null; // alternate fiber (previous)\r\n  inst: Instance = null; // instance of component or virtual node\r\n  hook: Hook | null = null; // hook\r\n  provider: Map<Context, ContextProviderValue> = null; // provider of context\r\n  atoms: Map<Atom, Callback> = null;\r\n  marker: string; // for dev\r\n  batch: Batch;\r\n  catch: (error: Error) => void;\r\n\r\n  constructor(hook: Hook = null, provider: Fiber['provider'] = null, idx = 0) {\r\n    this.id = ++Fiber.nextId;\r\n    this.idx = idx;\r\n    hook && (this.hook = hook);\r\n    provider && (this.provider = provider);\r\n  }\r\n\r\n  mutate(fiber: Partial<Fiber<N>>) {\r\n    const keys = Object.keys(fiber);\r\n\r\n    for (const key of keys) {\r\n      this[key] = fiber[key];\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  markHost(mask: number) {\r\n    this.mask |= mask;\r\n    this.parent && !(this.parent.mask & mask) && this.parent.markHost(mask);\r\n  }\r\n\r\n  increment(count = 1, force = false) {\r\n    if (!this.parent) return;\r\n    const $scope = $$scope();\r\n    const isUpdateZone = $scope.getIsUpdateZone();\r\n    const wipFiber = $scope.getWorkInProgress();\r\n    const stop = isUpdateZone && wipFiber.parent === this.parent;\r\n\r\n    if (\r\n      detectIsPlainVirtualNode(this.inst) ||\r\n      (detectIsTagVirtualNode(this.inst) && this.inst.children?.length === 0)\r\n    ) {\r\n      this.cec = 1;\r\n    }\r\n\r\n    if (isUpdateZone && stop && !force) return;\r\n\r\n    this.parent.cec += count;\r\n\r\n    if (!this.parent.element) {\r\n      this.parent.increment(count);\r\n    }\r\n  }\r\n\r\n  setError(error: Error) {\r\n    if (detectIsFunction(this.catch)) {\r\n      this.catch(error);\r\n    } else if (this.parent) {\r\n      this.parent.setError(error);\r\n    }\r\n  }\r\n\r\n  static setNextId(id: number) {\r\n    Fiber.nextId = id;\r\n  }\r\n\r\n  private static nextId = 0;\r\n}\r\n\r\nclass Hook<T = any> {\r\n  id = 0;\r\n  idx = 0;\r\n  values: Array<T> = [];\r\n  owner: Fiber = null;\r\n  private static nextId = 0;\r\n\r\n  constructor() {\r\n    this.id = ++Hook.nextId;\r\n  }\r\n}\r\n\r\nfunction getHook(alt: Fiber, prevInst: Instance, nextInst: Instance): Hook | null {\r\n  if (alt && detectAreSameComponentTypesWithSameKeys(prevInst, nextInst)) return alt.hook;\r\n  if (detectIsComponent(nextInst)) return new Hook();\r\n\r\n  return null;\r\n}\r\n\r\ntype Batch = {\r\n  timer: TimerId;\r\n  changes: Array<Callback>;\r\n};\r\n\r\nexport type NativeElement = unknown;\r\nexport type HookValue<T = any> = { deps: Array<any>; value: T };\r\n\r\nexport { Fiber, Hook, getHook };\r\n","import {\r\n  DELETE_EFFECT_TAG,\r\n  UPDATE_EFFECT_TAG,\r\n  SKIP_EFFECT_TAG,\r\n  INSERTION_EFFECT_HOST_MASK,\r\n  LAYOUT_EFFECT_HOST_MASK,\r\n  ASYNC_EFFECT_HOST_MASK,\r\n  ATOM_HOST_MASK,\r\n  PORTAL_HOST_MASK,\r\n  MOVE_MASK,\r\n  HOOK_DELIMETER,\r\n} from '../constants';\r\nimport { Fiber } from '../fiber';\r\nimport { platform } from '../platform';\r\nimport { type TagVirtualNode, getElementKey, hasChildrenProp } from '../view';\r\nimport { type Scope } from '../scope';\r\nimport { type Component } from '../component';\r\nimport { detectIsMemo } from '../memo';\r\nimport { type Instance, type ElementKey } from '../shared';\r\nimport { createIndexKey } from '../utils';\r\n\r\nfunction walk<T = unknown>(fiber: Fiber<T>, onWalk: (fiber: Fiber<T>, skip: () => void, stop: () => void) => void) {\r\n  let shouldDeep = true;\r\n  let shouldStop = false;\r\n  const skip = () => (shouldDeep = false);\r\n  const stop = () => (shouldStop = true);\r\n  const stack: Array<Fiber<T>> = [fiber];\r\n\r\n  while (stack.length !== 0) {\r\n    const unit = stack.pop();\r\n\r\n    onWalk(unit, skip, stop);\r\n    if (shouldStop) break;\r\n    unit !== fiber && unit.next && stack.push(unit.next);\r\n    shouldDeep && unit.child && stack.push(unit.child);\r\n    shouldDeep = true;\r\n  }\r\n}\r\n\r\nfunction collectElements<T, P = T>(fiber: Fiber<T>, transform: (fiber: Fiber<T>) => P): Array<P> {\r\n  const elements: Array<P> = [];\r\n\r\n  walk<T>(fiber, (fiber, skip) => {\r\n    if (fiber.element) {\r\n      !platform.detectIsPortal(fiber.inst) && elements.push(transform(fiber));\r\n      return skip();\r\n    }\r\n  });\r\n\r\n  return elements;\r\n}\r\n\r\nfunction getFiberWithElement<T1, T2 = T1>(fiber: Fiber<T1>): Fiber<T2> {\r\n  let $fiber = fiber as unknown as Fiber<T2>;\r\n\r\n  while ($fiber) {\r\n    if ($fiber.element) return $fiber;\r\n    $fiber = $fiber.parent;\r\n  }\r\n\r\n  return $fiber;\r\n}\r\n\r\nfunction detectIsFiberAlive(fiber: Fiber) {\r\n  let $fiber = fiber;\r\n\r\n  while ($fiber) {\r\n    if ($fiber.tag === DELETE_EFFECT_TAG) return false;\r\n    $fiber = $fiber.parent;\r\n  }\r\n\r\n  return Boolean(fiber);\r\n}\r\n\r\nfunction createHookLocation(rootId: number, idx: number, fiber: Fiber) {\r\n  let $fiber = fiber;\r\n  let loc = `${fiber.idx}${HOOK_DELIMETER}${idx}`;\r\n\r\n  while ($fiber) {\r\n    $fiber = $fiber.parent;\r\n    $fiber && (loc = `${$fiber.idx}.${loc}`);\r\n  }\r\n\r\n  loc = `[${rootId}]${loc}`;\r\n\r\n  return loc;\r\n}\r\n\r\nfunction detectIsStableMemoTree(fiber: Fiber, $scope: Scope) {\r\n  if (!hasChildrenProp(fiber.inst)) return;\r\n  const actions = $scope.getActionsById(fiber.id);\r\n  const children = fiber.inst.children;\r\n\r\n  for (let i = 0; i < children.length; i++) {\r\n    const inst = children[i];\r\n    const key = getElementKey(inst);\r\n    if (key === null) return false;\r\n    const alt = actions.map[key];\r\n    if (!alt) return false;\r\n    const pc = alt.inst as Component;\r\n    const nc = inst as Component;\r\n    const isStable =\r\n      detectIsMemo(nc) && detectIsMemo(pc) && nc.type === pc.type && !nc.shouldUpdate(pc.props, nc.props);\r\n\r\n    if (!isStable) return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction tryOptStaticSlot(fiber: Fiber, alt: Fiber, $scope: Scope) {\r\n  const actions = $scope.getActionsById(fiber.id);\r\n  const inst = fiber.inst as Component | TagVirtualNode;\r\n\r\n  alt.element && (fiber.element = alt.element); //!\r\n\r\n  for (let i = 0; i < inst.children.length; i++) {\r\n    buildChildNode(inst.children, fiber, actions.map, i, fiber.eidx);\r\n  }\r\n\r\n  fiber.cc = inst.children.length;\r\n  $scope.setMountDeep(false);\r\n}\r\n\r\nfunction tryOptMemoSlot(fiber: Fiber, alt: Fiber, $scope: Scope) {\r\n  const actions = $scope.getActionsById(fiber.id);\r\n  const hasMove = Boolean(actions.move);\r\n  const hasRemove = Boolean(actions.remove);\r\n  const hasInsert = Boolean(actions.insert);\r\n  const hasReplace = Boolean(actions.insert);\r\n  const canOptimize = ((hasMove && !hasRemove) || (hasRemove && !hasMove)) && !hasInsert && !hasReplace;\r\n\r\n  if (!canOptimize || !detectIsStableMemoTree(fiber, $scope)) return;\r\n\r\n  hasMove && tryOptMov(fiber, alt, $scope);\r\n  hasRemove && tryOptRem(fiber, alt, $scope);\r\n}\r\n\r\nfunction tryOptMov(fiber: Fiber, alt: Fiber, $scope: Scope) {\r\n  const actions = $scope.getActionsById(fiber.id);\r\n\r\n  buildChildNodes(fiber, alt, $scope, (fiber, key) => {\r\n    if (!actions.move[key]) return;\r\n    fiber.alt = new Fiber().mutate(fiber);\r\n    fiber.tag = UPDATE_EFFECT_TAG;\r\n    fiber.mask |= MOVE_MASK;\r\n    $scope.addCandidate(fiber);\r\n  });\r\n}\r\n\r\nfunction tryOptRem(fiber: Fiber, alt: Fiber, $scope: Scope) {\r\n  buildChildNodes(fiber, alt, $scope);\r\n}\r\n\r\nfunction buildChildNodes(fiber: Fiber, alt: Fiber, $scope: Scope, onNode?: (fiber: Fiber, key: ElementKey) => void) {\r\n  const actions = $scope.getActionsById(fiber.id);\r\n  const inst = fiber.inst as Component | TagVirtualNode;\r\n  const children = inst.children;\r\n\r\n  alt.element && (fiber.element = alt.element); //!\r\n\r\n  for (let i = 0; i < children.length; i++) {\r\n    const key = getKey(children[i], i);\r\n    const $fiber = actions.map[key];\r\n\r\n    buildChildNode(children, fiber, actions.map, i, fiber.eidx);\r\n    onNode && onNode($fiber, key);\r\n  }\r\n\r\n  fiber.cc = children.length;\r\n  $scope.setMountDeep(false);\r\n}\r\n\r\nfunction buildChildNode(\r\n  children: Array<Instance>,\r\n  parent: Fiber,\r\n  altMap: Record<string, Fiber>,\r\n  idx: number,\r\n  startEidx: number,\r\n) {\r\n  const prevIdx = idx - 1;\r\n  const nextIdx = idx + 1;\r\n  const key = getKey(children[idx], idx);\r\n  const prevKey = getKey(children[prevIdx], prevIdx);\r\n  const nextKey = getKey(children[nextIdx], nextIdx);\r\n  const fiber = altMap[key];\r\n  const left = altMap[prevKey];\r\n  const right = altMap[nextKey];\r\n  const isFirst = idx === 0;\r\n  const isLast = idx === children.length - 1;\r\n\r\n  isFirst && (parent.child = fiber);\r\n  fiber.alt = null;\r\n  fiber.parent = parent;\r\n  fiber.tag = SKIP_EFFECT_TAG;\r\n  fiber.idx = idx;\r\n  left ? (fiber.eidx = left.eidx + (left.element ? 1 : left.cec)) : (fiber.eidx = startEidx);\r\n  right && (fiber.next = right);\r\n  isLast && (fiber.next = null);\r\n  notifyParents(fiber);\r\n}\r\n\r\nfunction getKey(inst: Instance, idx: number) {\r\n  const key = getElementKey(inst);\r\n  return key !== null ? key : createIndexKey(idx);\r\n}\r\n\r\nfunction notifyParents(fiber: Fiber, alt: Fiber = fiber) {\r\n  fiber.increment(alt.element ? 1 : alt.cec);\r\n  alt.mask & INSERTION_EFFECT_HOST_MASK && fiber.markHost(INSERTION_EFFECT_HOST_MASK);\r\n  alt.mask & LAYOUT_EFFECT_HOST_MASK && fiber.markHost(LAYOUT_EFFECT_HOST_MASK);\r\n  alt.mask & ASYNC_EFFECT_HOST_MASK && fiber.markHost(ASYNC_EFFECT_HOST_MASK);\r\n  alt.mask & ATOM_HOST_MASK && fiber.markHost(ATOM_HOST_MASK);\r\n  alt.mask & PORTAL_HOST_MASK && fiber.markHost(PORTAL_HOST_MASK);\r\n}\r\n\r\nexport {\r\n  walk,\r\n  collectElements,\r\n  getFiberWithElement,\r\n  detectIsFiberAlive,\r\n  createHookLocation,\r\n  tryOptStaticSlot,\r\n  tryOptMemoSlot,\r\n  notifyParents,\r\n};\r\n","import { component, detectIsComponent } from '../component';\r\nimport type { KeyProps, SlotProps } from '../shared';\r\n\r\ntype FragmentProps = Required<SlotProps> & KeyProps;\r\n\r\nconst $$fragment = Symbol('fragment');\r\n\r\nconst Fragment = component<FragmentProps>(({ slot }) => slot || null, { token: $$fragment });\r\n\r\nconst detectIsFragment = (instance: unknown) => detectIsComponent(instance) && instance.token === $$fragment;\r\n\r\nexport { Fragment, detectIsFragment };\r\n","import { detectIsFunction } from '../utils';\r\nimport { INSERTION_EFFECT_HOST_MASK, LAYOUT_EFFECT_HOST_MASK, ASYNC_EFFECT_HOST_MASK } from '../constants';\r\nimport { $$scope } from '../scope';\r\nimport { useMemo } from '../use-memo';\r\nimport { type Hook, type HookValue } from '../fiber';\r\n\r\nconst $$useEffect = Symbol('use-effect');\r\n\r\ntype UseEffectValue = {\r\n  token: Symbol;\r\n  cleanup: DropEffect;\r\n};\r\n\r\nfunction createEffect(token: Symbol, type: EffectType) {\r\n  function useEffect(effect: Effect, deps: Array<any> = [{}]) {\r\n    const $scope = $$scope();\r\n    const fiber = $scope.getCursorFiber();\r\n    const scope = useMemo<UseEffectValue>(() => ({ token, cleanup: undefined }), []);\r\n    const isInsertionEffect = type === EffectType.INSERTION;\r\n    const isLayoutEffect = type === EffectType.LAYOUT;\r\n    const isAsyncEffect = type === EffectType.ASYNC;\r\n\r\n    isInsertionEffect && fiber.markHost(INSERTION_EFFECT_HOST_MASK);\r\n    isLayoutEffect && fiber.markHost(LAYOUT_EFFECT_HOST_MASK);\r\n    isAsyncEffect && fiber.markHost(ASYNC_EFFECT_HOST_MASK);\r\n\r\n    useMemo(() => {\r\n      const runEffect = () => (scope.cleanup = effect());\r\n\r\n      isInsertionEffect && $scope.addInsertionEffect(runEffect);\r\n      isLayoutEffect && $scope.addLayoutEffect(runEffect);\r\n      isAsyncEffect && $scope.addAsyncEffect(runEffect);\r\n\r\n      detectIsFunction(scope.cleanup) && scope.cleanup();\r\n\r\n      return null;\r\n    }, deps);\r\n  }\r\n\r\n  function dropEffects(hook: Hook<HookValue<UseEffectValue>>) {\r\n    for (const { value: effect } of hook.values) {\r\n      effect && effect.token === token && detectIsFunction(effect.cleanup) && effect.cleanup();\r\n    }\r\n  }\r\n\r\n  return {\r\n    useEffect,\r\n    dropEffects,\r\n  };\r\n}\r\n\r\nexport type DropEffect = void | (() => void);\r\n\r\nexport type Effect = () => DropEffect;\r\n\r\nexport enum EffectType {\r\n  ASYNC = 'ASYNC',\r\n  LAYOUT = 'LAYOUT',\r\n  INSERTION = 'INSERTION',\r\n}\r\n\r\nconst { useEffect, dropEffects } = createEffect($$useEffect, EffectType.ASYNC);\r\n\r\nexport { useEffect, dropEffects, createEffect };\r\n","import { createEffect, EffectType } from '../use-effect';\r\n\r\nconst $$useLayoutEffect = Symbol('use-layout-effect');\r\nconst { useEffect: useLayoutEffect, dropEffects: dropLayoutEffects } = createEffect(\r\n  $$useLayoutEffect,\r\n  EffectType.LAYOUT,\r\n);\r\n\r\nexport { useLayoutEffect, dropLayoutEffects };\r\n","import { createEffect, EffectType } from '../use-effect';\r\n\r\nconst $$useInsertionEffect = Symbol('use-insertion-effect');\r\nconst { useEffect: useInsertionEffect, dropEffects: dropInsertionEffects } = createEffect(\r\n  $$useInsertionEffect,\r\n  EffectType.INSERTION,\r\n);\r\n\r\nexport { useInsertionEffect, dropInsertionEffects };\r\n","import { type Fiber } from '../fiber';\r\nimport { platform } from '../platform';\r\nimport { dropEffects } from '../use-effect';\r\nimport { dropLayoutEffects } from '../use-layout-effect';\r\nimport { dropInsertionEffects } from '../use-insertion-effect';\r\nimport { walk } from '../walk';\r\nimport { detectIsUndefined } from '../utils';\r\nimport { removeScope, $$scope } from '../scope';\r\nimport {\r\n  INSERTION_EFFECT_HOST_MASK,\r\n  LAYOUT_EFFECT_HOST_MASK,\r\n  ASYNC_EFFECT_HOST_MASK,\r\n  ATOM_HOST_MASK,\r\n  PORTAL_HOST_MASK,\r\n} from '../constants';\r\n\r\nconst combinedMask =\r\n  INSERTION_EFFECT_HOST_MASK | LAYOUT_EFFECT_HOST_MASK | ASYNC_EFFECT_HOST_MASK | ATOM_HOST_MASK | PORTAL_HOST_MASK;\r\n\r\nconst shouldUnmountFiber = (fiber: Fiber) => fiber.mask & combinedMask;\r\n\r\nfunction unmountFiber(fiber: Fiber) {\r\n  if (!shouldUnmountFiber(fiber)) return;\r\n  walk(fiber, (fiber, skip) => {\r\n    if (!shouldUnmountFiber(fiber)) return skip();\r\n\r\n    if (fiber.hook && fiber.hook.values.length > 0) {\r\n      fiber.mask & INSERTION_EFFECT_HOST_MASK && dropInsertionEffects(fiber.hook);\r\n      fiber.mask & LAYOUT_EFFECT_HOST_MASK && dropLayoutEffects(fiber.hook);\r\n      fiber.mask & ASYNC_EFFECT_HOST_MASK && dropEffects(fiber.hook);\r\n    }\r\n\r\n    if (fiber.atoms) {\r\n      for (const [_, cleanup] of fiber.atoms) {\r\n        cleanup();\r\n      }\r\n      fiber.atoms = null;\r\n    }\r\n\r\n    fiber.mask & PORTAL_HOST_MASK && platform.unmountPortal(fiber);\r\n  });\r\n}\r\n\r\nfunction unmountRoot(rootId: number, onCompleted: () => void) {\r\n  if (detectIsUndefined(rootId)) return;\r\n  const $scope = $$scope(rootId);\r\n\r\n  unmountFiber($scope.getRoot());\r\n  $scope.unsubscribeEvents();\r\n  removeScope(rootId);\r\n  onCompleted();\r\n}\r\n\r\nexport { unmountFiber, unmountRoot };\r\n","import { platform } from '../platform';\r\nimport {\r\n  CREATE_EFFECT_TAG,\r\n  UPDATE_EFFECT_TAG,\r\n  DELETE_EFFECT_TAG,\r\n  SKIP_EFFECT_TAG,\r\n  INSERTION_EFFECT_HOST_MASK,\r\n  LAYOUT_EFFECT_HOST_MASK,\r\n  ASYNC_EFFECT_HOST_MASK,\r\n  ATOM_HOST_MASK,\r\n  PORTAL_HOST_MASK,\r\n  MOVE_MASK,\r\n  FLUSH_MASK,\r\n  SHADOW_MASK,\r\n  Flag,\r\n} from '../constants';\r\nimport {\r\n  flatten,\r\n  error,\r\n  detectIsEmpty,\r\n  detectIsFalsy,\r\n  detectIsArray,\r\n  detectIsFunction,\r\n  detectIsTextBased,\r\n  createIndexKey,\r\n  trueFn,\r\n} from '../utils';\r\nimport { type Scope, setRootId, $$scope, replaceScope } from '../scope';\r\nimport { type Component, detectIsComponent } from '../component';\r\nimport { type ElementKey, type Instance } from '../shared';\r\nimport { Fiber, getHook, Hook } from '../fiber';\r\nimport {\r\n  Text,\r\n  detectIsVirtualNode,\r\n  detectIsVirtualNodeFactory,\r\n  getElementKey,\r\n  hasElementFlag,\r\n  hasChildrenProp,\r\n  detectIsReplacer,\r\n  createReplacer,\r\n  detectAreSameInstanceTypes,\r\n} from '../view';\r\nimport { detectIsMemo } from '../memo';\r\nimport {\r\n  walk,\r\n  getFiberWithElement,\r\n  detectIsFiberAlive,\r\n  notifyParents,\r\n  tryOptStaticSlot,\r\n  tryOptMemoSlot,\r\n} from '../walk';\r\nimport { type RestoreOptions, scheduler } from '../scheduler';\r\nimport { Fragment, detectIsFragment } from '../fragment';\r\nimport { unmountFiber } from '../unmount';\r\n\r\nlet hasPendingPromise = false;\r\nlet hasRenderError = false;\r\n\r\nexport type WorkLoop = (isAsync: boolean) => boolean;\r\n\r\nfunction workLoop(isAsync: boolean): boolean | null {\r\n  if (hasPendingPromise) return null;\r\n  if (hasRenderError) return false;\r\n  const $scope = $$scope();\r\n  const wipFiber = $scope.getWorkInProgress();\r\n  let unit = $scope.getNextUnitOfWork();\r\n  let shouldYield = false;\r\n  let hasMoreWork = Boolean(unit);\r\n\r\n  try {\r\n    while (unit && !shouldYield) {\r\n      unit = performUnitOfWork(unit, $scope);\r\n      $scope.setNextUnitOfWork(unit);\r\n      hasMoreWork = Boolean(unit);\r\n      shouldYield = isAsync && scheduler.shouldYield();\r\n      if (shouldYield && scheduler.hasPrimaryTask()) return fork($scope);\r\n    }\r\n\r\n    if (!unit && wipFiber) {\r\n      commit($scope);\r\n    }\r\n  } catch (err) {\r\n    if (err instanceof Promise) {\r\n      hasPendingPromise = true;\r\n      err.finally(() => {\r\n        hasPendingPromise = false;\r\n        !isAsync && workLoop(false);\r\n      });\r\n    } else {\r\n      hasRenderError = true;\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  return hasMoreWork;\r\n}\r\n\r\nfunction performUnitOfWork(fiber: Fiber, $scope: Scope): Fiber | null {\r\n  const wipFiber = $scope.getWorkInProgress();\r\n  const isDeepWalking = $scope.getMountDeep();\r\n  const isStream = $scope.getIsStreamZone();\r\n  const hasChildren = isDeepWalking && hasChildrenProp(fiber.inst) && fiber.inst.children.length > 0;\r\n\r\n  fiber.hook && (fiber.hook.idx = 0);\r\n\r\n  if (hasChildren) {\r\n    const child = mountChild(fiber, $scope);\r\n\r\n    isStream && platform.chunk(child);\r\n\r\n    return child;\r\n  } else {\r\n    while (fiber.parent && fiber !== wipFiber) {\r\n      const next = mountSibling(fiber, $scope);\r\n\r\n      isStream && platform.chunk(fiber);\r\n\r\n      if (next) {\r\n        isStream && platform.chunk(next);\r\n        return next;\r\n      }\r\n\r\n      fiber = fiber.parent;\r\n    }\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nfunction mountChild(parent: Fiber, $scope: Scope) {\r\n  $scope.navToChild();\r\n  const $inst = parent.inst;\r\n  const idx = 0;\r\n  const inst = hasChildrenProp($inst) ? $inst.children[idx] : null;\r\n  const alt = getAlternate(parent, inst, true, $scope);\r\n  const fiber = createFiber(alt, inst, idx);\r\n\r\n  fiber.parent = parent;\r\n  parent.child = fiber;\r\n  fiber.eidx = parent.element ? 0 : parent.eidx;\r\n\r\n  share(fiber, parent, inst, $scope);\r\n\r\n  return fiber;\r\n}\r\n\r\nfunction mountSibling(left: Fiber, $scope: Scope) {\r\n  $scope.navToSibling();\r\n  const $inst = left.parent.inst;\r\n  const idx = $scope.getMountIndex();\r\n  const inst = hasChildrenProp($inst) && $inst.children ? $inst.children[idx] : null;\r\n  const hasSibling = Boolean(inst);\r\n\r\n  if (!hasSibling) {\r\n    $scope.navToParent();\r\n    $scope.setMountDeep(false);\r\n\r\n    return null;\r\n  }\r\n\r\n  $scope.setMountDeep(true);\r\n  const alt = getAlternate(left, inst, false, $scope);\r\n  const fiber = createFiber(alt, inst, idx);\r\n\r\n  fiber.parent = left.parent;\r\n  left.next = fiber;\r\n  fiber.eidx = left.eidx + (left.element ? 1 : left.cec);\r\n\r\n  share(fiber, left, inst, $scope);\r\n\r\n  return fiber;\r\n}\r\n\r\nfunction share(fiber: Fiber, prev: Fiber, inst: Instance, $scope: Scope) {\r\n  const { alt } = fiber;\r\n  const shouldMount = alt && detectIsMemo(inst) ? shouldUpdate(fiber, inst, $scope) : true;\r\n\r\n  $scope.setCursorFiber(fiber);\r\n  fiber.inst = inst;\r\n\r\n  if (alt && alt.mask & MOVE_MASK) {\r\n    fiber.mask |= MOVE_MASK;\r\n    alt.mask &= ~MOVE_MASK;\r\n  }\r\n\r\n  fiber.hook && (fiber.hook.owner = fiber); // !\r\n\r\n  if (shouldMount) {\r\n    fiber.inst = mount(fiber, prev, $scope);\r\n    alt && reconcile(fiber, alt, $scope);\r\n    setup(fiber, alt);\r\n  } else if (fiber.mask & MOVE_MASK) {\r\n    fiber.tag = UPDATE_EFFECT_TAG;\r\n  }\r\n\r\n  $scope.addCandidate(fiber); // !\r\n}\r\n\r\nfunction createFiber(alt: Fiber, inst: Instance, idx: number) {\r\n  const fiber = new Fiber(getHook(alt, alt ? alt.inst : null, inst), alt ? alt.provider : null, idx);\r\n\r\n  fiber.alt = alt || null;\r\n\r\n  return fiber;\r\n}\r\n\r\nfunction getAlternate(fiber: Fiber, inst: Instance, fromChild: boolean, $scope: Scope) {\r\n  const key = getElementKey(inst);\r\n\r\n  if (key !== null) {\r\n    const parentId = fromChild ? fiber.id : fiber.parent.id;\r\n    const actions = $scope.getActionsById(parentId);\r\n\r\n    if (actions) {\r\n      const isMove = actions.move && Boolean(actions.move[key]);\r\n      const isStable = actions.stable && Boolean(actions.stable[key]);\r\n\r\n      if (isMove || isStable) {\r\n        const alt = actions.map[key];\r\n\r\n        isMove && (alt.mask |= MOVE_MASK);\r\n\r\n        return alt;\r\n      }\r\n\r\n      return null;\r\n    }\r\n  }\r\n\r\n  const alt = fiber.alt ? (fromChild ? fiber.alt.child || null : fiber.alt.next || null) : null;\r\n\r\n  return alt;\r\n}\r\n\r\nfunction reconcile(fiber: Fiber, alt: Fiber, $scope: Scope) {\r\n  const { id, inst } = fiber;\r\n  const areSameTypes = detectAreSameInstanceTypes(alt.inst, inst);\r\n\r\n  if (!areSameTypes) {\r\n    $scope.addDeletion(alt);\r\n  } else if (hasChildrenProp(alt.inst) && hasChildrenProp(inst) && alt.cc !== 0) {\r\n    const hasSameCount = alt.cc === inst.children.length;\r\n    const check = hasElementFlag(inst, Flag.SKIP_SCAN_OPT) ? !hasSameCount : true;\r\n\r\n    if (check) {\r\n      const { prevKeys, nextKeys, prevKeysMap, nextKeysMap, keyedFibersMap } = extractKeys(alt.child, inst.children);\r\n      const flush = nextKeys.length === 0;\r\n      let size = Math.max(prevKeys.length, nextKeys.length);\r\n      let p = 0;\r\n      let n = 0;\r\n\r\n      $scope.addActionMap(id, keyedFibersMap);\r\n\r\n      for (let i = 0; i < size; i++) {\r\n        const nextKey = nextKeys[i - n] ?? null;\r\n        const prevKey = prevKeys[i - p] ?? null;\r\n        const prevKeyFiber = keyedFibersMap[prevKey] || null;\r\n\r\n        if (nextKey !== prevKey) {\r\n          if (nextKey !== null && !prevKeysMap[nextKey]) {\r\n            if (prevKey !== null && !nextKeysMap[prevKey]) {\r\n              $scope.addReplaceAction(id, nextKey);\r\n              $scope.addDeletion(prevKeyFiber);\r\n            } else {\r\n              $scope.addInsertAction(id, nextKey);\r\n              p++;\r\n              size++;\r\n            }\r\n          } else if (!nextKeysMap[prevKey]) {\r\n            $scope.addRemoveAction(id, prevKey);\r\n            $scope.addDeletion(prevKeyFiber);\r\n            flush && (prevKeyFiber.mask |= FLUSH_MASK);\r\n            n++;\r\n            size++;\r\n          } else if (nextKeysMap[prevKey] && nextKeysMap[nextKey]) {\r\n            $scope.addMoveAction(id, nextKey);\r\n          }\r\n        } else if (nextKey !== null) {\r\n          $scope.addStableAction(id, nextKey);\r\n        }\r\n      }\r\n\r\n      hasElementFlag(inst, Flag.STATIC_SLOT_OPT) && tryOptStaticSlot(fiber, alt, $scope);\r\n      hasElementFlag(inst, Flag.MEMO_SLOT_OPT) && tryOptMemoSlot(fiber, alt, $scope);\r\n    }\r\n  }\r\n}\r\n\r\nfunction setup(fiber: Fiber, alt: Fiber) {\r\n  const inst = fiber.inst;\r\n  let isUpdate = false;\r\n\r\n  fiber.parent.tag === CREATE_EFFECT_TAG && (fiber.tag = fiber.parent.tag);\r\n  fiber.parent.mask & SHADOW_MASK && !fiber.parent.element && !detectIsReplacer(inst) && (fiber.mask |= SHADOW_MASK);\r\n  isUpdate =\r\n    alt &&\r\n    fiber.tag !== CREATE_EFFECT_TAG &&\r\n    detectAreSameInstanceTypes(alt.inst, inst) &&\r\n    getElementKey(alt.inst) === getElementKey(inst);\r\n  isUpdate && !fiber.element && alt.element && (fiber.element = alt.element);\r\n  fiber.tag = isUpdate ? UPDATE_EFFECT_TAG : CREATE_EFFECT_TAG;\r\n  hasChildrenProp(fiber.inst) && (fiber.cc = fiber.inst.children.length);\r\n  !fiber.element && detectIsVirtualNode(fiber.inst) && (fiber.element = platform.createElement(fiber.inst));\r\n  fiber.element && fiber.increment();\r\n}\r\n\r\nfunction shouldUpdate(fiber: Fiber, inst: Instance, $scope: Scope) {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    if ($scope.getIsHot()) return true;\r\n  }\r\n\r\n  const alt = fiber.alt;\r\n  const pc = alt.inst as Component;\r\n  const nc = inst as Component;\r\n\r\n  if (nc.type !== pc.type || nc.shouldUpdate(pc.props, nc.props)) return true;\r\n\r\n  $scope.setMountDeep(false);\r\n  fiber.tag = SKIP_EFFECT_TAG;\r\n  fiber.child = alt.child;\r\n  fiber.child.parent = fiber;\r\n  fiber.hook = alt.hook;\r\n  fiber.cc = alt.cc;\r\n  fiber.cec = alt.cec;\r\n  alt.element && (fiber.element = alt.element);\r\n  alt.provider && (fiber.provider = alt.provider);\r\n  alt.catch && (fiber.catch = alt.catch);\r\n  alt.atoms && (fiber.atoms = alt.atoms);\r\n\r\n  const diff = fiber.eidx - alt.eidx;\r\n  const deep = diff !== 0;\r\n\r\n  if (deep) {\r\n    walk(fiber.child, ($fiber, skip) => {\r\n      $fiber.eidx += diff;\r\n      if ($fiber.element) return skip();\r\n    });\r\n  }\r\n\r\n  notifyParents(fiber, alt);\r\n\r\n  return false;\r\n}\r\n\r\nfunction mount(fiber: Fiber, prev: Fiber, $scope: Scope) {\r\n  let inst = fiber.inst;\r\n  const isComponent = detectIsComponent(inst);\r\n  const component = inst as Component;\r\n\r\n  if (isComponent) {\r\n    try {\r\n      const id = $scope.getResourceId();\r\n      let result = component.type(component.props, component.ref);\r\n      const defers = $scope.getDefers();\r\n\r\n      if (defers.length > 0) {\r\n        const promise = Promise.all(defers.map(x => x()));\r\n\r\n        $scope.setResourceId(id);\r\n        $scope.resetDefers();\r\n        $scope.navToPrev();\r\n        $scope.setNextUnitOfWork(prev);\r\n        Fiber.setNextId(prev.id);\r\n\r\n        throw promise;\r\n      }\r\n\r\n      if (detectIsArray(result)) {\r\n        !detectIsFragment(component) && (result = Fragment({ slot: result }));\r\n      } else if (detectIsTextBased(result)) {\r\n        result = Text(result);\r\n      }\r\n\r\n      component.children = result as Array<Instance>;\r\n      platform.detectIsPortal(inst) && fiber.markHost(PORTAL_HOST_MASK);\r\n    } catch (err) {\r\n      if (err instanceof Promise) throw err;\r\n      component.children = [];\r\n      fiber.setError(err);\r\n      error(err);\r\n    }\r\n  } else if (detectIsVirtualNodeFactory(inst)) {\r\n    inst = inst();\r\n  }\r\n\r\n  if (hasChildrenProp(inst)) {\r\n    inst.children = flatten(inst.children, x => (detectIsTextBased(x) ? Text(x) : x || supportConditional(x)));\r\n    isComponent && component.children.length === 0 && component.children.push(createReplacer());\r\n  }\r\n\r\n  return inst;\r\n}\r\n\r\nfunction extractKeys(alt: Fiber, children: Array<Instance>) {\r\n  let nextFiber = alt;\r\n  let idx = 0;\r\n  const prevKeys: Array<ElementKey> = [];\r\n  const nextKeys: Array<ElementKey> = [];\r\n  const prevKeysMap: Record<ElementKey, boolean> = {};\r\n  const nextKeysMap: Record<ElementKey, boolean> = {};\r\n  const keyedFibersMap: Record<ElementKey, Fiber> = {};\r\n  const usedKeysMap: Record<ElementKey, boolean> = {};\r\n\r\n  while (nextFiber || idx < children.length) {\r\n    if (nextFiber) {\r\n      const key = getElementKey(nextFiber.inst);\r\n      const prevKey = detectIsEmpty(key) ? createIndexKey(idx) : key;\r\n\r\n      if (!prevKeysMap[prevKey]) {\r\n        prevKeysMap[prevKey] = true; // !\r\n        prevKeys.push(prevKey);\r\n      }\r\n\r\n      keyedFibersMap[prevKey] = nextFiber;\r\n    }\r\n\r\n    if (children[idx]) {\r\n      const inst = children[idx];\r\n      const key = getElementKey(inst);\r\n      const nextKey = detectIsEmpty(key) ? createIndexKey(idx) : key;\r\n\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        if (usedKeysMap[nextKey]) {\r\n          error(`[Dark]: The key of node [${nextKey}] already has been used!`, [inst]);\r\n        }\r\n      }\r\n\r\n      if (!nextKeysMap[nextKey]) {\r\n        nextKeysMap[nextKey] = true; // !\r\n        nextKeys.push(nextKey);\r\n      }\r\n\r\n      usedKeysMap[nextKey] = true;\r\n    }\r\n\r\n    nextFiber = nextFiber ? nextFiber.next : null;\r\n    idx++;\r\n  }\r\n\r\n  return {\r\n    prevKeys,\r\n    nextKeys,\r\n    prevKeysMap,\r\n    nextKeysMap,\r\n    keyedFibersMap,\r\n  };\r\n}\r\n\r\nfunction supportConditional(inst: Instance) {\r\n  return detectIsFalsy(inst) ? createReplacer() : inst;\r\n}\r\n\r\nfunction commit($scope: Scope) {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    process.env.NODE_ENV === 'development' && $scope.setIsHot(false);\r\n  }\r\n\r\n  const wipFiber = $scope.getWorkInProgress();\r\n  const deletions = $scope.getDeletions();\r\n  const candidates = $scope.getCandidates();\r\n  const isUpdateZone = $scope.getIsUpdateZone();\r\n  const unmounts: Array<Fiber> = [];\r\n  const combinedMask = INSERTION_EFFECT_HOST_MASK | LAYOUT_EFFECT_HOST_MASK | ASYNC_EFFECT_HOST_MASK | PORTAL_HOST_MASK;\r\n\r\n  // !\r\n  for (const fiber of deletions) {\r\n    const withNextTick = fiber.mask & ATOM_HOST_MASK && !(fiber.mask & combinedMask);\r\n\r\n    withNextTick ? unmounts.push(fiber) : unmountFiber(fiber);\r\n    fiber.tag = DELETE_EFFECT_TAG;\r\n    platform.commit(fiber);\r\n  }\r\n\r\n  isUpdateZone && sync(wipFiber);\r\n  $scope.runInsertionEffects();\r\n\r\n  for (const fiber of candidates) {\r\n    fiber.tag !== SKIP_EFFECT_TAG && platform.commit(fiber);\r\n    fiber.alt = null;\r\n    hasChildrenProp(fiber.inst) && (fiber.inst.children = null);\r\n  }\r\n\r\n  wipFiber.alt = null;\r\n  platform.finishCommit(); // !\r\n  $scope.runLayoutEffects();\r\n  $scope.runAsyncEffects();\r\n  unmounts.length > 0 && setTimeout(() => unmounts.forEach(x => unmountFiber(x)));\r\n  flush($scope);\r\n}\r\n\r\nfunction flush($scope: Scope, cancel = false) {\r\n  $scope.flush();\r\n  !cancel && $scope.getEmitter().emit('finish');\r\n  $scope.runAfterCommit(); // !\r\n}\r\n\r\nfunction sync(fiber: Fiber) {\r\n  const diff = fiber.cec - fiber.alt.cec;\r\n  if (diff === 0) return;\r\n  const parentFiber = getFiberWithElement(fiber.parent);\r\n  let isRight = false;\r\n\r\n  fiber.increment(diff, true);\r\n\r\n  walk(parentFiber.child, ($fiber, skip) => {\r\n    if ($fiber === fiber) {\r\n      isRight = true;\r\n      return skip();\r\n    }\r\n\r\n    $fiber.element && skip();\r\n    isRight && ($fiber.eidx += diff);\r\n  });\r\n}\r\n\r\nfunction fork($scope: Scope): false {\r\n  const $$scope$ = $scope.copy();\r\n  const wipFiber = $scope.getWorkInProgress();\r\n  const child = wipFiber.child;\r\n  child && (child.parent = null);\r\n  const restore = (options: RestoreOptions) => {\r\n    const { fiber: wipFiber, setValue, resetValue } = options;\r\n    const $scope = $$scope();\r\n\r\n    detectIsFunction(setValue) && setValue();\r\n    detectIsFunction(resetValue) && $$scope$.addCancel(resetValue);\r\n\r\n    wipFiber.alt = new Fiber().mutate(wipFiber);\r\n    wipFiber.tag = UPDATE_EFFECT_TAG;\r\n    wipFiber.child = child;\r\n    child && (child.parent = wipFiber);\r\n\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      wipFiber.marker = '✌️';\r\n    }\r\n\r\n    $$scope$.setRoot($scope.getRoot());\r\n    $$scope$.setWorkInProgress(wipFiber);\r\n    replaceScope($$scope$);\r\n  };\r\n\r\n  wipFiber.child = wipFiber.alt.child;\r\n  wipFiber.alt = null;\r\n  $scope.applyCancels();\r\n  flush($scope, true);\r\n  scheduler.cancelTask(restore);\r\n\r\n  return false;\r\n}\r\n\r\nexport type CreateCallbackOptions = {\r\n  rootId: number;\r\n  isTransition?: boolean;\r\n  hook: Hook;\r\n  tools?: () => Tools;\r\n};\r\n\r\nfunction createCallback(options: CreateCallbackOptions) {\r\n  const { rootId, hook, isTransition, tools = $tools } = options;\r\n  const callback = (restore?: (options: RestoreOptions) => void) => {\r\n    setRootId(rootId); // !\r\n    const fromRestore = detectIsFunction(restore);\r\n    const { shouldUpdate, setValue, resetValue } = tools();\r\n    const $scope = $$scope();\r\n    const owner = hook.owner;\r\n    const fiber = owner.alt || owner;\r\n\r\n    if (!shouldUpdate() || !detectIsFiberAlive(fiber) || fromRestore) {\r\n      fromRestore && restore({ fiber, setValue, resetValue });\r\n      return;\r\n    }\r\n\r\n    detectIsFunction(setValue) && setValue();\r\n    detectIsFunction(resetValue) && isTransition && $scope.addCancel(resetValue);\r\n\r\n    fiber.alt = new Fiber().mutate(fiber);\r\n    fiber.tag = UPDATE_EFFECT_TAG;\r\n    fiber.cc = 0;\r\n    fiber.cec = 0;\r\n    fiber.child = null;\r\n\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      fiber.marker = '🔥';\r\n    }\r\n\r\n    $scope.setIsUpdateZone(true);\r\n    $scope.resetMount();\r\n    $scope.setWorkInProgress(fiber);\r\n    $scope.setCursorFiber(fiber);\r\n    fiber.inst = mount(fiber, null, $scope);\r\n    $scope.setNextUnitOfWork(fiber);\r\n  };\r\n\r\n  return callback;\r\n}\r\n\r\nexport type Tools = {\r\n  shouldUpdate: () => boolean;\r\n} & Pick<RestoreOptions, 'setValue' | 'resetValue'>;\r\n\r\nconst $tools = (): Tools => ({\r\n  shouldUpdate: trueFn,\r\n  setValue: null,\r\n  resetValue: null,\r\n});\r\n\r\nconst detectIsBusy = () => Boolean($$scope()?.getWorkInProgress());\r\n\r\nexport { Fiber, workLoop, createCallback, detectIsBusy };\r\n","import { type WorkLoop, workLoop, detectIsBusy } from '../workloop';\r\nimport { type SetPendingStatus } from '../start-transition';\r\nimport { type Callback } from '../shared';\r\nimport { type Fiber } from '../fiber';\r\nimport { ROOT, HOOK_DELIMETER, YIELD_INTERVAL, TaskPriority } from '../constants';\r\nimport { getTime, detectIsFunction, nextTick } from '../utils';\r\nimport { EventEmitter } from '../emitter';\r\nimport { platform } from '../platform';\r\n\r\nclass MessageChannel extends EventEmitter<PortEvent> {\r\n  port1: MessagePort = null;\r\n  port2: MessagePort = null;\r\n\r\n  constructor() {\r\n    super();\r\n    this.port1 = new MessagePort(this);\r\n    this.port2 = new MessagePort(this);\r\n  }\r\n}\r\n\r\nclass MessagePort {\r\n  channel: MessageChannel;\r\n  offs: Array<Callback> = [];\r\n\r\n  constructor(channel: MessageChannel) {\r\n    this.channel = channel;\r\n  }\r\n\r\n  on(event: PortEvent, callback: PortListener) {\r\n    const off = this.channel.on(event, callback);\r\n\r\n    this.offs.push(off);\r\n  }\r\n\r\n  postMessage(value: unknown) {\r\n    platform.spawn(() => {\r\n      this.channel.emit('message', value);\r\n    });\r\n  }\r\n\r\n  unref() {\r\n    this.offs.forEach(x => x());\r\n  }\r\n}\r\n\r\nclass Scheduler {\r\n  private queue: Record<TaskPriority, Array<Task>> = {\r\n    [TaskPriority.HIGH]: [],\r\n    [TaskPriority.NORMAL]: [],\r\n    [TaskPriority.LOW]: [],\r\n  };\r\n  private deadline = 0;\r\n  private task: Task = null;\r\n  private scheduledCallback: WorkLoop = null;\r\n  private isMessageLoopRunning = false;\r\n  private channel: MessageChannel = null;\r\n  private port: MessagePort = null;\r\n\r\n  constructor() {\r\n    this.channel = new MessageChannel();\r\n    this.port = this.channel.port2;\r\n    this.channel.port1.on('message', this.performWorkUntilDeadline.bind(this));\r\n  }\r\n\r\n  reset() {\r\n    this.deadline = 0;\r\n    this.task = null;\r\n    this.scheduledCallback = null;\r\n    this.isMessageLoopRunning = false;\r\n  }\r\n\r\n  shouldYield() {\r\n    return getTime() >= this.deadline;\r\n  }\r\n\r\n  schedule(callback: Callback, options?: ScheduleCallbackOptions) {\r\n    const {\r\n      priority = TaskPriority.NORMAL,\r\n      forceAsync = false,\r\n      isTransition = false,\r\n      createLocation,\r\n      setPendingStatus,\r\n    } = options || {};\r\n    const task = new Task(callback, priority, forceAsync);\r\n\r\n    task.setIsTransition(isTransition);\r\n    task.setPendingSetter(setPendingStatus);\r\n    task.setLocationCreator(createLocation || createRootLocation);\r\n    this.put(task);\r\n    this.execute();\r\n  }\r\n\r\n  hasPrimaryTask() {\r\n    if (!this.task.getIsTransition()) return false;\r\n    const { high, normal, low } = this.getQueues();\r\n    const hasPrimary = high.length > 0 || normal.length > 0;\r\n    const hasLow = low.length > 0;\r\n\r\n    if (hasPrimary || hasLow) {\r\n      const loc = this.task.createLocation();\r\n\r\n      if (hasPrimary) {\r\n        const has = Task.detectHasRelatedUpdate(loc, high, true) || Task.detectHasRelatedUpdate(loc, normal, true);\r\n\r\n        if (has) {\r\n          this.task.markAsUnnecessary();\r\n        }\r\n\r\n        return true;\r\n      }\r\n\r\n      if (hasLow) {\r\n        const has = Task.detectHasRelatedUpdate(loc, low);\r\n\r\n        if (has) {\r\n          this.task.markAsUnnecessary();\r\n\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  cancelTask(fn: TaskRestorer) {\r\n    if (this.task.getIsUnnecessary()) return this.complete(this.task);\r\n    this.task.setTaskRestorer(fn);\r\n    this.defer(this.task);\r\n  }\r\n\r\n  private complete(task: Task) {\r\n    task.pending(false);\r\n  }\r\n\r\n  private put(task: Task) {\r\n    const queue = this.queue[task.getPriority()];\r\n\r\n    if (task.getIsTransition()) {\r\n      const loc = task.createLocation();\r\n      const tasks = queue.filter(x => x.createLocation() !== loc);\r\n\r\n      queue.splice(0, queue.length, ...tasks);\r\n    }\r\n\r\n    queue.push(task);\r\n  }\r\n\r\n  private pick(queue: Array<Task>) {\r\n    if (queue.length === 0) return false;\r\n    this.task = queue.shift();\r\n\r\n    if (this.task.getIsTransition() && this.task.canPending()) {\r\n      const task = this.task;\r\n\r\n      task.markAsPending();\r\n      this.defer(this.task);\r\n      this.task = null;\r\n\r\n      nextTick(() => task.pending(true));\r\n\r\n      return true;\r\n    }\r\n\r\n    this.task.run();\r\n    this.task.getForceAsync() ? this.requestCallbackAsync(workLoop) : this.requestCallback(workLoop);\r\n\r\n    return true;\r\n  }\r\n\r\n  private execute() {\r\n    const isBusy = detectIsBusy();\r\n    const { high, normal, low } = this.getQueues();\r\n\r\n    if (!isBusy && !this.isMessageLoopRunning) {\r\n      this.pick(high) || this.pick(normal) || this.pick(low);\r\n    }\r\n  }\r\n\r\n  private requestCallbackAsync(callback: WorkLoop) {\r\n    this.scheduledCallback = callback;\r\n\r\n    if (!this.isMessageLoopRunning) {\r\n      this.isMessageLoopRunning = true;\r\n      this.port.postMessage(null);\r\n    }\r\n  }\r\n\r\n  private requestCallback(callback: WorkLoop) {\r\n    callback(false);\r\n    this.task = null;\r\n    this.execute();\r\n  }\r\n\r\n  private performWorkUntilDeadline() {\r\n    if (this.scheduledCallback) {\r\n      this.deadline = getTime() + YIELD_INTERVAL;\r\n      const hasMoreWork = this.scheduledCallback(true);\r\n\r\n      if (hasMoreWork) {\r\n        this.port.postMessage(null);\r\n      } else {\r\n        if (hasMoreWork === null) {\r\n          setTimeout(() => this.port.postMessage(null)); // has promise\r\n        } else {\r\n          this.complete(this.task);\r\n          this.reset();\r\n          this.execute();\r\n        }\r\n      }\r\n    } else {\r\n      this.isMessageLoopRunning = false;\r\n    }\r\n  }\r\n\r\n  private defer(task: Task) {\r\n    const { low } = this.getQueues();\r\n\r\n    low.unshift(task);\r\n  }\r\n\r\n  private getQueues() {\r\n    const high = this.queue[TaskPriority.HIGH];\r\n    const normal = this.queue[TaskPriority.NORMAL];\r\n    const low = this.queue[TaskPriority.LOW];\r\n\r\n    return {\r\n      high,\r\n      normal,\r\n      low,\r\n    };\r\n  }\r\n}\r\n\r\ntype TaskCallback = (fn: TaskRestorer) => void;\r\ntype TaskRestorer = (options: RestoreOptions) => void;\r\ntype LocationCreator = () => string;\r\n\r\nclass Task {\r\n  private id: number;\r\n  private priority: TaskPriority;\r\n  private forceAsync: boolean;\r\n  private isTransition: boolean;\r\n  private isPending: boolean;\r\n  private isUnnecessary: boolean;\r\n  private callback: TaskCallback;\r\n  private taskRestorer?: TaskRestorer = null;\r\n  private locationCreator?: LocationCreator;\r\n  private pendingSetter?: SetPendingStatus = null;\r\n  private static nextTaskId = 0;\r\n\r\n  constructor(callback: TaskCallback, priority: TaskPriority, forceAsync: boolean) {\r\n    this.id = ++Task.nextTaskId;\r\n    this.callback = callback;\r\n    this.priority = priority;\r\n    this.forceAsync = forceAsync;\r\n  }\r\n\r\n  getPriority() {\r\n    return this.priority;\r\n  }\r\n\r\n  getForceAsync() {\r\n    return this.forceAsync;\r\n  }\r\n\r\n  setIsTransition(value: boolean) {\r\n    this.isTransition = value;\r\n  }\r\n\r\n  getIsTransition() {\r\n    return this.isTransition;\r\n  }\r\n\r\n  run() {\r\n    this.callback(this.taskRestorer);\r\n    this.taskRestorer = null;\r\n  }\r\n\r\n  pending(value: boolean) {\r\n    this.isTransition && this.pendingSetter && this.pendingSetter(value);\r\n  }\r\n\r\n  markAsPending() {\r\n    this.isPending = true;\r\n  }\r\n\r\n  canPending() {\r\n    return !this.isPending && detectIsFunction(this.pendingSetter);\r\n  }\r\n\r\n  markAsUnnecessary() {\r\n    this.isUnnecessary = true;\r\n  }\r\n\r\n  getIsUnnecessary() {\r\n    return this.isUnnecessary;\r\n  }\r\n\r\n  setTaskRestorer(fn: TaskRestorer) {\r\n    this.taskRestorer = fn;\r\n  }\r\n\r\n  setLocationCreator(fn: LocationCreator) {\r\n    this.locationCreator = fn;\r\n  }\r\n\r\n  createLocation() {\r\n    return this.locationCreator();\r\n  }\r\n\r\n  setPendingSetter(fn: SetPendingStatus) {\r\n    this.pendingSetter = fn;\r\n  }\r\n\r\n  static detectHasRelatedUpdate(loc: string, tasks: Array<Task>, deep = false) {\r\n    const [$loc] = loc.split(HOOK_DELIMETER);\r\n\r\n    return tasks.some(x => {\r\n      const $$loc = x.createLocation();\r\n      const has = $$loc === loc || (deep && $$loc.length > loc.length && $$loc.indexOf($loc) !== -1);\r\n\r\n      return has;\r\n    });\r\n  }\r\n}\r\n\r\nconst createRootLocation: LocationCreator = () => ROOT;\r\n\r\ntype PortEvent = 'message';\r\ntype PortListener = (value: unknown) => void;\r\n\r\nexport type RestoreOptions = {\r\n  fiber: Fiber;\r\n  setValue?: () => void;\r\n  resetValue?: () => void;\r\n};\r\n\r\nexport type ScheduleCallbackOptions = {\r\n  priority?: TaskPriority;\r\n  forceAsync?: boolean;\r\n  isTransition?: boolean;\r\n  createLocation?: () => string;\r\n  setPendingStatus?: SetPendingStatus;\r\n  onCompleted?: () => void;\r\n};\r\n\r\nconst scheduler = new Scheduler();\r\n\r\nexport { scheduler };\r\n","import { type ScheduleCallbackOptions, scheduler } from '../scheduler';\r\nimport { type Tools, createCallback } from '../workloop';\r\nimport { getRootId, $$scope } from '../scope';\r\nimport { createHookLocation } from '../walk';\r\nimport { detectIsFunction } from '../utils';\r\nimport { TaskPriority } from '../constants';\r\nimport { addBatch } from '../batch';\r\nimport { type Hook } from '../fiber';\r\n\r\nfunction createUpdate(rootId: number, hook: Hook) {\r\n  const { idx } = hook;\r\n  const update = (tools?: () => Tools) => {\r\n    const $scope = $$scope();\r\n    if ($scope.getIsInsertionEffectsZone()) return;\r\n    const { owner } = hook;\r\n    const hasTools = detectIsFunction(tools);\r\n    const isTransition = $scope.getIsTransitionZone();\r\n    const isBatch = $scope.getIsBatchZone();\r\n    const isEvent = $scope.getIsEventZone();\r\n    const priority = isTransition ? TaskPriority.LOW : isEvent ? TaskPriority.HIGH : TaskPriority.NORMAL; // !\r\n    const forceAsync = isTransition;\r\n    const setPendingStatus = $scope.getPendingStatusSetter();\r\n    const callback = createCallback({\r\n      rootId,\r\n      hook,\r\n      isTransition,\r\n      tools: hasTools ? tools : undefined,\r\n    });\r\n    const createLocation = () => createHookLocation(rootId, idx, owner);\r\n    const callbackOptions: ScheduleCallbackOptions = {\r\n      priority,\r\n      forceAsync,\r\n      isTransition,\r\n      createLocation,\r\n      setPendingStatus,\r\n    };\r\n\r\n    if (isBatch) {\r\n      addBatch(\r\n        owner,\r\n        () => scheduler.schedule(callback, callbackOptions),\r\n        () => hasTools && tools().setValue(),\r\n      );\r\n    } else {\r\n      scheduler.schedule(callback, callbackOptions);\r\n    }\r\n  };\r\n\r\n  return update;\r\n}\r\n\r\nfunction useUpdate() {\r\n  const rootId = getRootId();\r\n  const fiber = $$scope().getCursorFiber();\r\n\r\n  return createUpdate(rootId, fiber.hook);\r\n}\r\n\r\nexport { createUpdate, useUpdate };\r\n","import { $$scope } from '../scope';\r\nimport { type Fiber } from '../fiber';\r\nimport { type Callback } from '../shared';\r\n\r\nfunction batch(callback: () => void) {\r\n  const $scope = $$scope();\r\n\r\n  $scope.setIsBatchZone(true);\r\n  callback();\r\n  $scope.setIsBatchZone(false);\r\n}\r\n\r\nfunction addBatch(fiber: Fiber, callback: Callback, change: Callback) {\r\n  const $scope = $$scope();\r\n\r\n  if ($scope.getIsTransitionZone()) {\r\n    callback();\r\n  } else {\r\n    const batch = fiber.batch || { timer: null, changes: [] };\r\n\r\n    fiber.batch = batch;\r\n    batch.changes.push(change);\r\n    batch.timer && clearTimeout(batch.timer);\r\n    batch.timer = setTimeout(() => {\r\n      batch.changes.splice(-1);\r\n      batch.changes.forEach(x => x());\r\n      fiber.batch = null;\r\n      callback();\r\n    });\r\n  }\r\n}\r\n\r\nexport { batch, addBatch };\r\n","import { useCallback } from '../use-callback';\r\nimport { detectIsFunction } from '../utils';\r\nimport { useUpdate } from '../use-update';\r\nimport { type Tools } from '../workloop';\r\nimport { useMemo } from '../use-memo';\r\nimport { $$scope } from '../scope';\r\nimport { trueFn } from '../utils';\r\n\r\ntype CreateToolsOptions<T> = {\r\n  next: Value<T>;\r\n  get: () => T;\r\n  set: (x: T) => void;\r\n  reset: (x: T) => void;\r\n  shouldUpdate?: (p: T, n: T) => boolean;\r\n};\r\n\r\nfunction createTools<T>(options: CreateToolsOptions<T>) {\r\n  const { get, set, reset, next, shouldUpdate: $shouldUpdate = trueFn } = options;\r\n  const $scope = $$scope();\r\n  const isBatch = $scope.getIsBatchZone();\r\n  const tools = (): Tools => {\r\n    const prevValue = get();\r\n    const newValue = detectIsFunction(next) ? next(prevValue) : next;\r\n    const shouldUpdate = () => isBatch || $shouldUpdate(prevValue, newValue);\r\n    const setValue = () => set(newValue);\r\n    const resetValue = () => reset(prevValue);\r\n\r\n    return { shouldUpdate, setValue, resetValue };\r\n  };\r\n\r\n  return tools;\r\n}\r\n\r\ntype Value<T> = T | ((prevValue: T) => T);\r\n\r\nfunction useState<T = unknown>(initialValue: T | (() => T)): [T, (value: Value<T>) => void] {\r\n  const update = useUpdate();\r\n  const scope = useMemo(\r\n    () => ({\r\n      value: detectIsFunction(initialValue) ? initialValue() : initialValue,\r\n    }),\r\n    [],\r\n  );\r\n  const setState = useCallback((next: Value<T>) => {\r\n    const tools = createTools({\r\n      next,\r\n      get: () => scope.value,\r\n      set: (x: T) => (scope.value = x),\r\n      reset: (x: T) => (scope.value = x),\r\n      shouldUpdate: (p: T, n: T) => !Object.is(p, n),\r\n    });\r\n\r\n    update(tools);\r\n  }, []);\r\n\r\n  return [scope.value, setState];\r\n}\r\n\r\nexport { createTools, useState };\r\n","import { useMemo } from '../use-memo';\r\n\r\nfunction useCallback<T = Function>(callback: T, deps: Array<any>): T {\r\n  const value = useMemo(() => callback, deps);\r\n\r\n  return value;\r\n}\r\n\r\nexport { useCallback };\r\n","import { detectIsObject, detectIsNull, detectIsFunction } from '../utils';\r\nimport type { Component, ComponentFactory } from '../component';\r\nimport type { RefProps, KeyProps, FlagProps } from '../shared';\r\nimport { useMemo } from '../use-memo';\r\n\r\nfunction forwardRef<P extends object, R>(\r\n  component: ComponentFactory<P, R>,\r\n): ComponentFactory<P & RefProps<R> & KeyProps & FlagProps, R> {\r\n  type Props = P & RefProps<R>;\r\n\r\n  return (props: Props) => {\r\n    const { ref, ...rest } = (props || {}) as Props;\r\n\r\n    return component(rest as P, ref) as Component<P, R>;\r\n  };\r\n}\r\n\r\nfunction detectIsMutableRef(ref: unknown): ref is MutableRef {\r\n  if (!detectIsObject(ref) || detectIsNull(ref)) return false;\r\n  const mutableRef = ref as MutableRef;\r\n\r\n  for (const key in mutableRef) {\r\n    if (key === 'current' && mutableRef.hasOwnProperty(key)) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nfunction applyRef<T>(ref: Ref<T>, current: T) {\r\n  if (detectIsFunction(ref)) {\r\n    ref(current);\r\n  } else if (detectIsMutableRef(ref)) {\r\n    ref.current = current;\r\n  }\r\n}\r\n\r\nfunction useRef<T>(initialValue: T = null): MutableRef<T> {\r\n  const ref = useMemo(() => ({ current: initialValue }), []) as MutableRef<T>;\r\n\r\n  return ref;\r\n}\r\n\r\nexport type MutableRef<T = unknown> = {\r\n  current: T;\r\n};\r\n\r\nexport type FunctionRef<T = unknown> = (ref: T) => void;\r\n\r\nexport type Ref<T = unknown> = MutableRef<T> | FunctionRef<T>;\r\n\r\nexport { forwardRef, detectIsMutableRef, applyRef, useRef };\r\n","import { detectIsString, detectIsFunction } from '../utils';\r\nimport { type TagVirtualNodeFactory, type ViewOptions, View } from '../view';\r\nimport { type ComponentFactory } from '../component';\r\n\r\nfunction createElement(\r\n  element: string | Function,\r\n  props: object,\r\n  ...slot: Array<any>\r\n): ComponentFactory | TagVirtualNodeFactory | null {\r\n  if (detectIsString(element)) {\r\n    const options = (props || {}) as ViewOptions;\r\n\r\n    options.as = element;\r\n    options.slot = slot;\r\n\r\n    return View(options);\r\n  }\r\n\r\n  if (detectIsFunction(element)) {\r\n    const options = (props || {}) as { slot: unknown };\r\n\r\n    options.slot = slot.length === 1 ? slot[0] : slot;\r\n\r\n    return element(options);\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nexport { createElement, createElement as h };\r\n","import { type DarkElement, type Fiber, component, useMemo, $$scope, detectIsComponent } from '@dark-engine/core';\r\n\r\nimport type { TagNativeElement } from '../native-element';\r\n\r\nconst $$portal = Symbol('portal');\r\n\r\nfunction createPortal(slot: DarkElement, container: TagNativeElement) {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    if (!(container instanceof Element)) {\r\n      throw new Error(`[Dark]: createPortal receives only Element as container!`);\r\n    }\r\n  }\r\n\r\n  return Portal({ container, slot });\r\n}\r\n\r\ntype PortalProps = {\r\n  container: TagNativeElement;\r\n  slot: DarkElement;\r\n};\r\n\r\nconst Portal = component<PortalProps>(\r\n  props => {\r\n    const element = props.container;\r\n    const fiber = $$scope().getCursorFiber();\r\n\r\n    useMemo(() => (element.innerHTML = ''), []);\r\n\r\n    fiber.element = element;\r\n    props.container = null;\r\n\r\n    return props.slot;\r\n  },\r\n  { token: $$portal },\r\n);\r\n\r\nconst detectIsPortal = (instance: unknown) => detectIsComponent(instance) && instance.token === $$portal;\r\n\r\nconst getPortalContainer = (fiber: Fiber<TagNativeElement>): TagNativeElement | null =>\r\n  detectIsPortal(fiber.inst) ? fiber.element : null;\r\n\r\nfunction unmountPortal(fiber: Fiber<TagNativeElement>) {\r\n  const element = getPortalContainer(fiber);\r\n\r\n  element && (element.innerHTML = '');\r\n}\r\n\r\nexport { createPortal, unmountPortal, detectIsPortal };\r\n","import { detectIsFunction, $$scope, detectIsArray } from '@dark-engine/core';\r\n\r\nimport type { TagNativeElement } from '../native-element';\r\n\r\nexport type EventHandler<E extends Event = Event, T = unknown> =\r\n  | ((e: SyntheticEvent<E, T>) => void)\r\n  | [(...args: Array<any>) => void, ...args: Array<any>];\r\n\r\ntype BrowserEventConstructor = (type: string, event: Event) => void;\r\n\r\nclass SyntheticEvent<E extends Event, T = TagNativeElement> {\r\n  type = '';\r\n  sourceEvent: E = null;\r\n  target: T = null;\r\n  private propagation = true;\r\n\r\n  constructor(options: Pick<SyntheticEvent<E, T>, 'sourceEvent' | 'target'>) {\r\n    this.type = options.sourceEvent.type;\r\n    this.sourceEvent = options.sourceEvent;\r\n    this.target = options.target;\r\n  }\r\n\r\n  stopPropagation() {\r\n    this.propagation = false;\r\n    this.sourceEvent.stopPropagation();\r\n  }\r\n\r\n  preventDefault() {\r\n    this.sourceEvent.preventDefault();\r\n  }\r\n\r\n  getPropagation() {\r\n    return this.propagation;\r\n  }\r\n}\r\n\r\nfunction delegateEvent(target: Element, eventName: string, handler: EventHandler) {\r\n  const $scope = $$scope();\r\n  const eventsMap = $scope.getEvents();\r\n  const handlersMap = eventsMap.get(eventName);\r\n  const $handler = detectIsArray(handler) ? (e: Event) => handler[0](...handler.slice(1), e) : handler;\r\n\r\n  if (!handlersMap) {\r\n    const rootHandler = (event: Event) => {\r\n      const handler = eventsMap.get(eventName).get(event.target);\r\n      const target = event.target as TagNativeElement;\r\n      let $event: SyntheticEvent<Event> = null;\r\n\r\n      if (detectIsFunction(handler)) {\r\n        $event = new SyntheticEvent({ sourceEvent: event, target });\r\n\r\n        $scope.setIsEventZone(true);\r\n        handler($event);\r\n        $scope.setIsEventZone(false);\r\n      }\r\n\r\n      if (target.parentElement) {\r\n        const shouldPropagate = $event ? $event.getPropagation() : true;\r\n\r\n        if (shouldPropagate) {\r\n          const constructor = event.constructor as BrowserEventConstructor;\r\n\r\n          target.parentElement.dispatchEvent(new constructor(event.type, event));\r\n        }\r\n      }\r\n    };\r\n\r\n    eventsMap.set(eventName, new WeakMap([[target, $handler]]));\r\n    document.addEventListener(eventName, rootHandler, true);\r\n    $scope.addEventUnsubscriber(() => document.removeEventListener(eventName, rootHandler, true));\r\n  } else {\r\n    handlersMap.set(target, $handler);\r\n  }\r\n}\r\n\r\nconst detectIsEvent = (attrName: string) => attrName.startsWith('on');\r\n\r\nconst getEventName = (attrName: string) => attrName.slice(2, attrName.length).toLowerCase();\r\n\r\nexport { SyntheticEvent, delegateEvent, detectIsEvent, getEventName };\r\n","export const VERSION = '0.25.1';\r\nexport const STYLE_ATTR = 'style';\r\nexport const CLASS_ATTR = 'class';\r\nexport const CLASS_NAME_ATTR = 'className';\r\nexport const EXCLUDE_ATTR_MARK = '$';\r\n","import {\r\n  type Fiber,\r\n  type VirtualNode,\r\n  type TagVirtualNode,\r\n  type TextVirtualNode,\r\n  type CommentVirtualNode,\r\n  type PlainVirtualNode,\r\n  type Callback,\r\n  REF_ATTR,\r\n  ATTR_BLACK_LIST,\r\n  CREATE_EFFECT_TAG,\r\n  UPDATE_EFFECT_TAG,\r\n  DELETE_EFFECT_TAG,\r\n  SKIP_EFFECT_TAG,\r\n  MOVE_MASK,\r\n  FLUSH_MASK,\r\n  SHADOW_MASK,\r\n  detectIsUndefined,\r\n  detectIsBoolean,\r\n  detectIsObject,\r\n  NodeType,\r\n  detectIsTagVirtualNode,\r\n  detectIsTextVirtualNode,\r\n  detectIsPlainVirtualNode,\r\n  getFiberWithElement,\r\n  collectElements,\r\n  walk,\r\n  dummyFn,\r\n  $$scope,\r\n  applyRef,\r\n} from '@dark-engine/core';\r\n\r\nimport { detectIsPortal } from '../portal';\r\nimport { delegateEvent, detectIsEvent, getEventName } from '../events';\r\nimport { STYLE_ATTR, CLASS_ATTR, CLASS_NAME_ATTR, EXCLUDE_ATTR_MARK } from '../constants';\r\nimport type {\r\n  NativeElement,\r\n  TagNativeElement,\r\n  TextNativeElement,\r\n  CommentNativeElement,\r\n  NativeNode,\r\n  AttributeValue,\r\n} from '../native-element';\r\n\r\nexport type CSSProperties = Record<string, string | number>;\r\n\r\nlet moves: Array<Callback> = [];\r\nlet patches: Array<Callback> = [];\r\nlet trackUpdate: (nativeElement: NativeElement) => void = null;\r\nconst svgTagNames = new Set([\r\n  'svg',\r\n  'animate',\r\n  'animateMotion',\r\n  'animateTransform',\r\n  'circle',\r\n  'clipPath',\r\n  'defs',\r\n  'desc',\r\n  'ellipse',\r\n  'feBlend',\r\n  'feColorMatrix',\r\n  'feComponentTransfer',\r\n  'feComposite',\r\n  'feConvolveMatrix',\r\n  'feDiffuseLighting',\r\n  'feDisplacementMap',\r\n  'feDistantLight',\r\n  'feDropShadow',\r\n  'feFlood',\r\n  'feFuncA',\r\n  'feFuncB',\r\n  'feFuncG',\r\n  'feFuncR',\r\n  'feGaussianBlur',\r\n  'feImage',\r\n  'feMerge',\r\n  'feMergeNode',\r\n  'feMorphology',\r\n  'feOffset',\r\n  'fePointLight',\r\n  'feSpecularLighting',\r\n  'feSpotLight',\r\n  'feTile',\r\n  'feTurbulence',\r\n  'filter',\r\n  'foreignObject',\r\n  'g',\r\n  'image',\r\n  'line',\r\n  'linearGradient',\r\n  'marker',\r\n  'mask',\r\n  'metadata',\r\n  'mpath',\r\n  'path',\r\n  'pattern',\r\n  'polygon',\r\n  'polyline',\r\n  'radialGradient',\r\n  'rect',\r\n  'stop',\r\n  'switch',\r\n  'symbol',\r\n  'text',\r\n  'textPath',\r\n  'tspan',\r\n  'use',\r\n  'view',\r\n]);\r\nconst voidTagNames = new Set([\r\n  'area',\r\n  'base',\r\n  'br',\r\n  'col',\r\n  'embed',\r\n  'hr',\r\n  'img',\r\n  'input',\r\n  'link',\r\n  'meta',\r\n  'param',\r\n  'source',\r\n  'track',\r\n  'wbr',\r\n]);\r\n\r\nconst createNativeElementMap = {\r\n  [NodeType.TAG]: (vNode: VirtualNode): TagNativeElement => {\r\n    const tagNode = vNode as TagVirtualNode;\r\n    const name = tagNode.name;\r\n\r\n    return detectIsSvgElement(name)\r\n      ? document.createElementNS('http://www.w3.org/2000/svg', name)\r\n      : document.createElement(name);\r\n  },\r\n  [NodeType.TEXT]: (vNode: VirtualNode): TextNativeElement => {\r\n    return document.createTextNode((vNode as TextVirtualNode).value);\r\n  },\r\n  [NodeType.COMMENT]: (vNode: VirtualNode): CommentNativeElement => {\r\n    return document.createComment((vNode as CommentVirtualNode).value);\r\n  },\r\n};\r\n\r\nfunction createNativeElement(node: VirtualNode): NativeElement {\r\n  return createNativeElementMap[node.type](node);\r\n}\r\n\r\nfunction detectIsSvgElement(name: string) {\r\n  return svgTagNames.has(name);\r\n}\r\n\r\nfunction detectIsVoidElement(name: string) {\r\n  return voidTagNames.has(name);\r\n}\r\n\r\nfunction setObjectStyle(element: TagNativeElement, style: CSSProperties) {\r\n  const keys = Object.keys(style);\r\n\r\n  for (const key of keys) {\r\n    element.style.setProperty(key, String(style[key]));\r\n  }\r\n}\r\n\r\nfunction addAttributes(element: NativeElement, node: TagVirtualNode, isHydrateZone: boolean) {\r\n  const attrNames = Object.keys(node.attrs);\r\n  const tagElement = element as TagNativeElement;\r\n\r\n  for (const attrName of attrNames) {\r\n    const attrValue = node.attrs[attrName];\r\n\r\n    if (attrName[0] === EXCLUDE_ATTR_MARK) continue;\r\n\r\n    if (attrName === REF_ATTR) {\r\n      applyRef(attrValue, element);\r\n      continue;\r\n    }\r\n\r\n    if (attrName === CLASS_ATTR || attrName === CLASS_NAME_ATTR) {\r\n      toggleAttribute(tagElement, CLASS_ATTR, attrValue);\r\n      continue;\r\n    }\r\n\r\n    if (attrName === STYLE_ATTR && attrValue && detectIsObject(attrValue)) {\r\n      setObjectStyle(tagElement, attrValue as CSSProperties);\r\n      continue;\r\n    }\r\n\r\n    if (detectIsEvent(attrName)) {\r\n      delegateEvent(tagElement, getEventName(attrName), attrValue);\r\n    } else if (!isHydrateZone && !detectIsUndefined(attrValue) && !ATTR_BLACK_LIST[attrName]) {\r\n      const stop = patchProperties({\r\n        tagName: node.name,\r\n        element: tagElement,\r\n        attrValue,\r\n        attrName,\r\n      });\r\n\r\n      !stop && tagElement.setAttribute(attrName, attrValue);\r\n    }\r\n  }\r\n}\r\n\r\nfunction updateAttributes(element: NativeElement, prevNode: TagVirtualNode, nextNode: TagVirtualNode) {\r\n  const attrNames = getAttributeNames(prevNode, nextNode);\r\n  const tagElement = element as TagNativeElement;\r\n\r\n  for (const attrName of attrNames) {\r\n    const prevAttrValue = prevNode.attrs[attrName];\r\n    const nextAttrValue = nextNode.attrs[attrName];\r\n\r\n    if (attrName[0] === EXCLUDE_ATTR_MARK) continue;\r\n\r\n    if (attrName === REF_ATTR) {\r\n      applyRef(prevAttrValue, element);\r\n      continue;\r\n    }\r\n\r\n    if ((attrName === CLASS_ATTR || attrName === CLASS_NAME_ATTR) && prevAttrValue !== nextAttrValue) {\r\n      toggleAttribute(tagElement, CLASS_ATTR, nextAttrValue);\r\n      continue;\r\n    }\r\n\r\n    if (attrName === STYLE_ATTR && nextAttrValue && prevAttrValue !== nextAttrValue && detectIsObject(nextAttrValue)) {\r\n      setObjectStyle(tagElement, nextAttrValue as CSSProperties);\r\n      continue;\r\n    }\r\n\r\n    if (!detectIsUndefined(nextAttrValue)) {\r\n      if (detectIsEvent(attrName)) {\r\n        prevAttrValue !== nextAttrValue && delegateEvent(tagElement, getEventName(attrName), nextAttrValue);\r\n      } else if (!ATTR_BLACK_LIST[attrName] && prevAttrValue !== nextAttrValue) {\r\n        const stop = patchProperties({\r\n          tagName: nextNode.name,\r\n          element: tagElement,\r\n          attrValue: nextAttrValue,\r\n          attrName,\r\n        });\r\n\r\n        !stop && tagElement.setAttribute(attrName, nextAttrValue);\r\n      }\r\n    } else {\r\n      tagElement.removeAttribute(attrName);\r\n    }\r\n  }\r\n}\r\n\r\nfunction toggleAttribute(element: TagNativeElement, name: string, value: string) {\r\n  value ? element.setAttribute(name, value) : element.removeAttribute(name);\r\n}\r\n\r\nfunction getAttributeNames(prevNode: TagVirtualNode, nextNode: TagVirtualNode) {\r\n  const attrNames = new Set<string>();\r\n  const prevAttrs = Object.keys(prevNode.attrs);\r\n  const nextAttrs = Object.keys(nextNode.attrs);\r\n  const size = Math.max(prevAttrs.length, nextAttrs.length);\r\n\r\n  for (let i = 0; i < size; i++) {\r\n    attrNames.add(prevAttrs[i] || nextAttrs[i]);\r\n  }\r\n\r\n  return attrNames;\r\n}\r\n\r\ntype PatchPropertiesOptions = {\r\n  tagName: string;\r\n  element: TagNativeElement;\r\n  attrName: string;\r\n  attrValue: AttributeValue;\r\n};\r\n\r\nfunction patchProperties(options: PatchPropertiesOptions): boolean {\r\n  const { tagName, element, attrName, attrValue } = options;\r\n  const fn = patchPropertiesSpecialCasesMap[tagName];\r\n  let stop = fn ? fn(element, attrName, attrValue) : false;\r\n\r\n  if (canSetProperty(element, attrName)) {\r\n    element[attrName] = attrValue;\r\n  }\r\n\r\n  if (!stop && detectIsBoolean(attrValue)) {\r\n    stop = !attrName.includes('-');\r\n  }\r\n\r\n  return stop;\r\n}\r\n\r\nfunction canSetProperty(element: TagNativeElement, key: string) {\r\n  const prototype = Object.getPrototypeOf(element);\r\n  const descriptor = Object.getOwnPropertyDescriptor(prototype, key);\r\n\r\n  return Boolean(descriptor?.set);\r\n}\r\n\r\nconst patchPropertiesSpecialCasesMap: Record<\r\n  string,\r\n  (element: NativeElement, attrName: string, attrValue: AttributeValue) => boolean\r\n> = {\r\n  input: (element: HTMLInputElement, attrName: string, attrValue: AttributeValue) => {\r\n    if (attrName === 'value') {\r\n      patches.push(() => {\r\n        detectIsBoolean(attrValue) ? (element.checked = attrValue) : (element.value = String(attrValue));\r\n      });\r\n    } else if (attrName === 'autoFocus') {\r\n      patches.push(() => {\r\n        element.autofocus = Boolean(attrValue);\r\n        element.autofocus && element.focus();\r\n      });\r\n    }\r\n\r\n    return false;\r\n  },\r\n  textarea: (element: HTMLTextAreaElement, attrName: string, attrValue: AttributeValue) => {\r\n    if (attrName === 'value') {\r\n      element.innerText = String(attrValue);\r\n\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  },\r\n};\r\n\r\nfunction commitCreation(fiber: Fiber<NativeElement>) {\r\n  const parentFiber = getFiberWithElement<NativeElement, TagNativeElement>(fiber.parent);\r\n  const parentElement = parentFiber.element;\r\n  const childNodes = parentElement.childNodes;\r\n  const isHydrateZone = $$scope().getIsHydrateZone();\r\n\r\n  if (isHydrateZone) {\r\n    const nativeElement = childNodes[fiber.eidx] as NativeElement;\r\n\r\n    if (\r\n      detectIsTextVirtualNode(fiber.inst) &&\r\n      nativeElement instanceof Text &&\r\n      fiber.inst.value.length !== nativeElement.length\r\n    ) {\r\n      nativeElement.splitText(fiber.inst.value.length);\r\n    }\r\n\r\n    fiber.element = nativeElement;\r\n  } else {\r\n    if (!(fiber.mask & SHADOW_MASK)) {\r\n      if (childNodes.length === 0 || fiber.eidx > childNodes.length - 1) {\r\n        !detectIsVoidElement((parentFiber.inst as TagVirtualNode).name) &&\r\n          appendNativeElement(fiber.element, parentElement);\r\n      } else {\r\n        insertNativeElement(fiber.element, parentElement.childNodes[fiber.eidx], parentElement);\r\n      }\r\n    }\r\n  }\r\n\r\n  detectIsTagVirtualNode(fiber.inst) && addAttributes(fiber.element, fiber.inst, isHydrateZone);\r\n}\r\n\r\nfunction commitUpdate(fiber: Fiber<NativeElement>) {\r\n  const element = fiber.element;\r\n  const prevInstance = fiber.alt.inst as VirtualNode;\r\n  const nextInstance = fiber.inst as VirtualNode;\r\n\r\n  detectIsPlainVirtualNode(nextInstance)\r\n    ? (prevInstance as PlainVirtualNode).value !== nextInstance.value && (element.textContent = nextInstance.value)\r\n    : updateAttributes(element, prevInstance as TagVirtualNode, nextInstance as TagVirtualNode);\r\n}\r\n\r\nfunction commitDeletion(fiber: Fiber<NativeElement>) {\r\n  const parentFiber = getFiberWithElement<NativeElement, TagNativeElement>(fiber.parent);\r\n\r\n  if (fiber.mask & FLUSH_MASK) {\r\n    parentFiber.element.innerHTML && (parentFiber.element.innerHTML = '');\r\n    return;\r\n  }\r\n\r\n  walk<NativeElement>(fiber, (fiber, skip) => {\r\n    if (fiber.element) {\r\n      !detectIsPortal(fiber.inst) &&\r\n        canRemoveNativeElement(fiber.element, parentFiber.element) &&\r\n        removeNativeElement(fiber.element, parentFiber.element);\r\n      return skip();\r\n    }\r\n  });\r\n}\r\n\r\nfunction move(fiber: Fiber<NativeElement>) {\r\n  const sourceNodes = collectElements(fiber, x => x.element);\r\n  const sourceNode = sourceNodes[0];\r\n  const parentElement = sourceNode.parentElement;\r\n  const sourceFragment = new DocumentFragment();\r\n  const elementIdx = fiber.eidx;\r\n  let idx = 0;\r\n  const move = () => {\r\n    for (let i = 1; i < sourceNodes.length; i++) {\r\n      removeNativeElement(parentElement.childNodes[elementIdx + 1], parentElement);\r\n    }\r\n\r\n    replaceNativeElement(sourceFragment, parentElement.childNodes[elementIdx], parentElement);\r\n  };\r\n\r\n  for (const node of sourceNodes) {\r\n    insertNativeElement(document.createComment(`${elementIdx}:${idx}`), node, parentElement);\r\n    appendNativeElement(node, sourceFragment);\r\n    idx++;\r\n  }\r\n\r\n  moves.push(move);\r\n}\r\n\r\nconst commitMap: Record<string, (fiber: Fiber<NativeElement>) => void> = {\r\n  [CREATE_EFFECT_TAG]: (fiber: Fiber<NativeElement>) => {\r\n    if (!fiber.element || detectIsPortal(fiber.inst)) return;\r\n    trackUpdate && trackUpdate(fiber.element);\r\n    commitCreation(fiber);\r\n  },\r\n  [UPDATE_EFFECT_TAG]: (fiber: Fiber<NativeElement>) => {\r\n    fiber.mask & MOVE_MASK && (move(fiber), (fiber.mask &= ~MOVE_MASK));\r\n    if (!fiber.element || detectIsPortal(fiber.inst)) return;\r\n    trackUpdate && trackUpdate(fiber.element);\r\n    commitUpdate(fiber);\r\n  },\r\n  [DELETE_EFFECT_TAG]: commitDeletion,\r\n  [SKIP_EFFECT_TAG]: dummyFn,\r\n};\r\n\r\nfunction finishCommit() {\r\n  moves.forEach(x => x());\r\n  patches.forEach(x => x());\r\n  moves = [];\r\n  patches = [];\r\n}\r\n\r\nconst commit = (fiber: Fiber<NativeElement>) => commitMap[fiber.tag](fiber);\r\n\r\nconst setTrackUpdate = (fn: typeof trackUpdate) => (trackUpdate = fn);\r\n\r\nconst appendNativeElement = (element: NativeNode, parent: NativeNode) => parent.appendChild(element);\r\n\r\nconst insertNativeElement = (element: NativeNode, sibling: NativeNode, parent: TagNativeElement) =>\r\n  parent.insertBefore(element, sibling);\r\n\r\nconst insertNativeElementByIndex = (element: NativeNode, idx: number, parent: TagNativeElement) =>\r\n  parent.insertBefore(element, parent.childNodes[idx]);\r\n\r\nconst replaceNativeElement = (element: NativeNode, candidate: NativeNode, parent: TagNativeElement) =>\r\n  parent.replaceChild(element, candidate);\r\n\r\nconst canRemoveNativeElement = (element: NativeNode, parent: NativeNode) => element.parentElement === parent;\r\n\r\nconst removeNativeElement = (element: NativeNode, parent: TagNativeElement) => parent.removeChild(element);\r\n\r\nexport { createNativeElement, commit, finishCommit, setTrackUpdate, insertNativeElementByIndex };\r\n","import {\r\n  type DarkElement,\r\n  type Callback,\r\n  ROOT,\r\n  Fiber,\r\n  CREATE_EFFECT_TAG,\r\n  UPDATE_EFFECT_TAG,\r\n  platform,\r\n  flatten,\r\n  detectIsUndefined,\r\n  detectIsFunction,\r\n  trueFn,\r\n  TagVirtualNode,\r\n  TaskPriority,\r\n  createReplacer,\r\n  setRootId,\r\n  $$scope,\r\n  dummyFn,\r\n  scheduler,\r\n} from '@dark-engine/core';\r\n\r\nimport { createNativeElement, insertNativeElementByIndex, commit, finishCommit } from '../dom';\r\nimport { detectIsPortal, unmountPortal } from '../portal';\r\nimport type { TagNativeElement } from '../native-element';\r\n\r\nconst roots = new Map<Element, number>();\r\nconst raf = requestAnimationFrame.bind(this);\r\nconst caf = cancelAnimationFrame.bind(this);\r\nconst spawn = raf;\r\nlet isInjected = false;\r\n\r\nfunction inject() {\r\n  platform.createElement = createNativeElement as typeof platform.createElement;\r\n  platform.insertElement = insertNativeElementByIndex as typeof platform.insertElement;\r\n  platform.raf = raf;\r\n  platform.caf = caf;\r\n  platform.spawn = spawn;\r\n  platform.commit = commit;\r\n  platform.finishCommit = finishCommit;\r\n  platform.detectIsDynamic = trueFn;\r\n  platform.detectIsPortal = detectIsPortal;\r\n  platform.unmountPortal = unmountPortal;\r\n  platform.chunk = dummyFn;\r\n  isInjected = true;\r\n}\r\n\r\nfunction render(element: DarkElement, container: TagNativeElement, hydrate?: Callback) {\r\n  !isInjected && inject();\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    if (!(container instanceof Element)) {\r\n      throw new Error(`[Dark]: render receives only Element as container!`);\r\n    }\r\n  }\r\n\r\n  const isMounted = !detectIsUndefined(roots.get(container));\r\n  const isHydrate = detectIsFunction(hydrate);\r\n  let rootId: number = null;\r\n\r\n  if (!isMounted) {\r\n    rootId = roots.size;\r\n    roots.set(container, rootId);\r\n    !isHydrate && (container.innerHTML = '');\r\n  } else {\r\n    rootId = roots.get(container);\r\n  }\r\n\r\n  const $scope = $$scope(rootId);\r\n\r\n  // insertion effect can't schedule renders\r\n  if ($scope?.getIsInsertionEffectsZone()) return;\r\n\r\n  const callback = () => {\r\n    setRootId(rootId); // !\r\n    const $scope = $$scope();\r\n    const rootFiber = $scope.getRoot();\r\n    const isUpdate = Boolean(rootFiber);\r\n    const fiber = new Fiber().mutate({\r\n      element: container,\r\n      inst: new TagVirtualNode(ROOT, {}, flatten([element || createReplacer()]) as TagVirtualNode['children']),\r\n      alt: rootFiber,\r\n      tag: isUpdate ? UPDATE_EFFECT_TAG : CREATE_EFFECT_TAG,\r\n    });\r\n\r\n    $scope.resetMount();\r\n    $scope.setWorkInProgress(fiber);\r\n    $scope.setIsHydrateZone(isHydrate);\r\n    $scope.setNextUnitOfWork(fiber);\r\n    isHydrate && hydrate();\r\n  };\r\n\r\n  scheduler.schedule(callback, { priority: TaskPriority.NORMAL });\r\n}\r\n\r\nexport { render, roots, inject };\r\n","import { type ElementKey, type TimerId, detectIsEmpty } from '@dark-engine/core';\r\n\r\nimport { type Controller, type StartFn } from '../controller';\r\nimport { type SpringValue } from '../shared';\r\n\r\nclass SharedState<T extends string = string> {\r\n  private ctrls: Array<Controller<T>> = [];\r\n  private stack = new Set<ElementKey>();\r\n  private flow = Flow.RIGHT;\r\n  private isTrail = false;\r\n  private isPaused = false;\r\n  private isCanceled = false;\r\n  private timeout = 0;\r\n  private timerId: TimerId = null;\r\n  private events = new Map<AnimationEventName, Set<AnimationEventHandler<T>>>();\r\n\r\n  getCtrls() {\r\n    return this.ctrls;\r\n  }\r\n\r\n  setCtrls(ctrls: Array<Controller<T>>) {\r\n    this.ctrls = ctrls;\r\n  }\r\n\r\n  setIsTrail(x: boolean) {\r\n    this.isTrail = x;\r\n  }\r\n\r\n  getIsTrail() {\r\n    return this.isTrail;\r\n  }\r\n\r\n  setFlow(x: Flow) {\r\n    this.flow = x;\r\n  }\r\n\r\n  getIsPaused() {\r\n    return this.isPaused;\r\n  }\r\n\r\n  getIsCanceled() {\r\n    return this.isCanceled;\r\n  }\r\n\r\n  detectIsRightFlow() {\r\n    return this.flow === Flow.RIGHT;\r\n  }\r\n\r\n  setIsPlaying(x: boolean, key: ElementKey) {\r\n    if (x) {\r\n      this.stack.add(key);\r\n    } else {\r\n      this.stack.delete(key);\r\n    }\r\n  }\r\n\r\n  detectIsPlaying(key?: ElementKey) {\r\n    return detectIsEmpty(key) ? this.stack.size > 0 : this.stack.has(key);\r\n  }\r\n\r\n  start(fn?: StartFn<T>) {\r\n    this.defer(() => {\r\n      if (this.ctrls.length === 0) return;\r\n      this.event('series-start');\r\n\r\n      if (this.isTrail) {\r\n        const ctrl = this.flow === Flow.RIGHT ? this.ctrls[0] : this.ctrls[this.ctrls.length - 1];\r\n\r\n        ctrl.start(fn);\r\n      } else {\r\n        this.ctrls.forEach(x => x.start(fn));\r\n      }\r\n    });\r\n  }\r\n\r\n  pause() {\r\n    this.isPaused = true;\r\n  }\r\n\r\n  resume() {\r\n    this.isPaused = false;\r\n  }\r\n\r\n  delay(timeout: number) {\r\n    this.timeout = timeout;\r\n  }\r\n\r\n  reset() {\r\n    this.ctrls.forEach(x => x.reset());\r\n  }\r\n\r\n  cancel() {\r\n    this.ctrls.forEach(x => x.cancel());\r\n    this.resetTimer();\r\n    this.isCanceled = true;\r\n  }\r\n\r\n  on(event: AnimationEventName, handler: AnimationEventHandler<T>) {\r\n    if (!this.events.has(event)) {\r\n      this.events.set(event, new Set());\r\n    }\r\n\r\n    const subs = this.events.get(event);\r\n\r\n    subs.add(handler);\r\n\r\n    return () => subs.delete(handler);\r\n  }\r\n\r\n  event(name: AnimationEventName, value: AnimationEventValue<T> = null) {\r\n    this.events.has(name) && this.events.get(name).forEach(x => x(value));\r\n  }\r\n\r\n  completeSeries() {\r\n    const isCompleted = !this.detectIsPlaying();\r\n\r\n    isCompleted && this.event('series-end');\r\n  }\r\n\r\n  defer(fn: () => void) {\r\n    this.resetTimer();\r\n\r\n    if (this.timeout > 0) {\r\n      this.timerId = setTimeout(() => {\r\n        this.timerId = null;\r\n        fn();\r\n      }, this.timeout);\r\n    } else {\r\n      fn();\r\n    }\r\n  }\r\n\r\n  private resetTimer() {\r\n    this.timerId && clearTimeout(this.timerId);\r\n    this.timerId = null;\r\n  }\r\n}\r\n\r\nexport enum Flow {\r\n  RIGHT = 'RIGHT',\r\n  LEFT = 'LEFT',\r\n}\r\n\r\nlet sharedState: SharedState = null;\r\n\r\nfunction setSharedState(state: SharedState) {\r\n  sharedState = state;\r\n}\r\n\r\nfunction getSharedState() {\r\n  const state = sharedState;\r\n\r\n  sharedState = null;\r\n\r\n  return state;\r\n}\r\n\r\nexport type AnimationEventName = 'series-start' | 'item-start' | 'item-change' | 'item-end' | 'series-end';\r\n\r\nexport type AnimationEventValue<T extends string = string> = {\r\n  value: SpringValue<T>;\r\n  idx: number;\r\n  key: ElementKey;\r\n};\r\n\r\nexport type AnimationEventHandler<T extends string = string> = (value?: AnimationEventValue<T>) => void;\r\n\r\nexport { SharedState, setSharedState, getSharedState };\r\n","import { preset } from '../preset';\r\n\r\nexport type SpringValue<T extends string = string> = Record<T, number>;\r\n\r\nexport type SpringConfig = {\r\n  mass: number;\r\n  tension: number;\r\n  friction: number;\r\n  precision: number;\r\n  fix: number;\r\n};\r\n\r\nconst defaultSpringConfig: SpringConfig = {\r\n  ...preset('no-wobble'),\r\n  mass: 1,\r\n  precision: 3,\r\n  fix: 4,\r\n};\r\n\r\nexport { defaultSpringConfig };\r\n","import { type SpringConfig } from '../shared';\r\n\r\ntype Preset = Pick<SpringConfig, 'tension' | 'friction'>;\r\ntype PresetName = 'no-wobble' | 'gentle' | 'wobbly' | 'stiff';\r\n\r\nconst presets: Record<PresetName, Preset> = {\r\n  'no-wobble': { tension: 170, friction: 26 },\r\n  gentle: { tension: 120, friction: 14 },\r\n  wobbly: { tension: 180, friction: 12 },\r\n  stiff: { tension: 210, friction: 20 },\r\n};\r\n\r\nfunction preset(name: PresetName): Preset {\r\n  return presets[name] || ({} as Preset);\r\n}\r\n\r\nexport { preset };\r\n","import { detectIsFunction, detectIsEmpty, detectAreDepsDifferent, trueFn, error } from '../utils';\r\nimport { useLayoutEffect } from '../use-layout-effect';\r\nimport { type SubscriberWithValue } from '../shared';\r\nimport { ATOM_HOST_MASK } from '../constants';\r\nimport { $$scope, getRootId } from '../scope';\r\nimport { createUpdate, useUpdate } from '../use-update';\r\nimport { createTools } from '../use-state';\r\nimport { EventEmitter } from '../emitter';\r\nimport { useMemo } from '../use-memo';\r\nimport { type Hook } from '../fiber';\r\nimport { batch } from '../batch';\r\n\r\nclass Atom<T = unknown> {\r\n  private value: T;\r\n  private connections1: Map<Hook, Tuple<T>>;\r\n  private connections2: Map<T, Tuple<T>>;\r\n  private subjects: Set<ReadableAtom>;\r\n  private emitter: EventEmitter<'data', EmitterValue<T>>;\r\n\r\n  constructor(value: T) {\r\n    this.value = value;\r\n  }\r\n\r\n  val(fn?: ShouldUpdate<T>, key?: T) {\r\n    try {\r\n      this.__connect(fn, key);\r\n    } catch (err) {\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        error('[Dark]: Illegal invocation atom.val() outside render process!');\r\n      }\r\n    }\r\n\r\n    return this.value;\r\n  }\r\n\r\n  get() {\r\n    return this.value;\r\n  }\r\n\r\n  on(fn: SubscriberWithValue<EmitterValue<T>>) {\r\n    !this.emitter && (this.emitter = new EventEmitter());\r\n\r\n    return this.emitter.on('data', fn);\r\n  }\r\n\r\n  kill() {\r\n    if (this.connections1) {\r\n      for (const [hook, [_, __, ___, key]] of this.connections1) {\r\n        this.off(hook, key);\r\n      }\r\n    }\r\n\r\n    if (this.connections2) {\r\n      for (const [key, [_, hook]] of this.connections2) {\r\n        this.off(hook, key);\r\n      }\r\n    }\r\n\r\n    this.connections1 = null;\r\n    this.connections2 = null;\r\n    this.emitter = null;\r\n    this.subjects = null;\r\n  }\r\n\r\n  toString() {\r\n    return String(this.value);\r\n  }\r\n\r\n  toJSON() {\r\n    return this.value;\r\n  }\r\n\r\n  valueOf() {\r\n    return this.value;\r\n  }\r\n\r\n  __connect(fn: ShouldUpdate<T>, key: T) {\r\n    const rootId = getRootId();\r\n    const fiber = $$scope().getCursorFiber();\r\n    const { hook } = fiber;\r\n    const disconnect = () => this.off(hook, key);\r\n\r\n    !fiber.atoms && (fiber.atoms = new Map());\r\n    fiber.atoms.set(this, disconnect);\r\n    fiber.markHost(ATOM_HOST_MASK);\r\n\r\n    if (detectIsEmpty(key)) {\r\n      !this.connections1 && (this.connections1 = new Map());\r\n      this.connections1.set(hook, [rootId, hook, fn, key]);\r\n    } else {\r\n      !this.connections2 && (this.connections2 = new Map());\r\n      this.connections2.set(key, [rootId, hook, fn, key]);\r\n    }\r\n\r\n    return disconnect;\r\n  }\r\n\r\n  __addSubject(atom$: ReadableAtom) {\r\n    !this.subjects && (this.subjects = new Set());\r\n    this.subjects.add(atom$);\r\n  }\r\n\r\n  __removeSubject(atom$: ReadableAtom) {\r\n    return this.subjects && this.subjects.delete(atom$);\r\n  }\r\n\r\n  __getSize() {\r\n    const size1 = this.connections1 ? this.connections1.size : 0;\r\n    const size2 = this.connections2 ? this.connections2.size : 0;\r\n    const size3 = this.subjects ? this.subjects.size : 0;\r\n    const size4 = this.emitter ? this.emitter.__getSize() : 0;\r\n\r\n    return size1 + size2 + size3 + size4;\r\n  }\r\n\r\n  protected setValue(value: T | ((prevValue: T) => T)) {\r\n    const prev = this.value;\r\n    const next = detectIsFunction(value) ? value(this.value) : value;\r\n    const data: EmitterValue<T> = { prev, next };\r\n    const make = (tuple: Tuple<T>, prev: T, next: T) => {\r\n      const [rootId, hook, shouldUpdate, key] = tuple;\r\n      const fn = shouldUpdate || trueFn;\r\n\r\n      if (fn(prev, next, key)) {\r\n        const update = createUpdate(rootId, hook);\r\n\r\n        if (this.__getSize() === 1) {\r\n          const tools = createTools({\r\n            next,\r\n            get: () => prev,\r\n            set: () => (this.value = next),\r\n            reset: () => (this.value = prev),\r\n          });\r\n\r\n          update(tools);\r\n        } else {\r\n          update();\r\n        }\r\n      }\r\n    };\r\n\r\n    this.value = next;\r\n\r\n    if (this.connections1) {\r\n      for (const [_, tuple] of this.connections1) {\r\n        make(tuple, prev, next);\r\n      }\r\n    }\r\n\r\n    if (this.connections2) {\r\n      if (this.connections2.has(next)) {\r\n        make(this.connections2.get(next), prev, next);\r\n        this.connections2.has(prev) && make(this.connections2.get(prev), prev, next);\r\n      }\r\n    }\r\n\r\n    this.emitter && this.emitter.emit('data', data);\r\n    this.subjects && this.subjects.forEach(x => x.__notify());\r\n  }\r\n\r\n  private off(hook: Hook, key: T) {\r\n    hook.owner.atoms.delete(this);\r\n    this.connections1 && this.connections1.delete(hook);\r\n    this.connections2 && this.connections2.delete(key);\r\n  }\r\n}\r\n\r\nclass WritableAtom<T = unknown> extends Atom<T> {\r\n  set(value: T | ((prevValue: T) => T)) {\r\n    super.setValue(value);\r\n  }\r\n}\r\n\r\nclass ReadableAtom<T = unknown> extends Atom<T> {\r\n  private deps$: Array<Atom> = [];\r\n  private fn: ComputedFn<T> = null;\r\n  private values: Array<unknown> = [];\r\n\r\n  constructor(deps$: Array<Atom>, fn: ComputedFn<T>) {\r\n    const values = ReadableAtom.values(deps$);\r\n\r\n    super(ReadableAtom.compute(fn, values));\r\n    this.deps$ = deps$;\r\n    this.fn = fn;\r\n    this.values = values;\r\n    deps$.forEach(x => x.__addSubject(this));\r\n  }\r\n\r\n  __notify() {\r\n    const values = ReadableAtom.values(this.deps$);\r\n\r\n    if (detectAreDepsDifferent(this.values, values)) {\r\n      super.setValue(ReadableAtom.compute(this.fn, values));\r\n    }\r\n\r\n    this.values = values;\r\n  }\r\n\r\n  override kill() {\r\n    super.kill();\r\n    this.deps$.forEach(x => x.__removeSubject(this));\r\n    this.deps$ = [];\r\n    this.fn = null;\r\n  }\r\n\r\n  private static compute(fn: Function, values: Array<unknown>) {\r\n    return fn(...values);\r\n  }\r\n\r\n  private static values(deps$: Array<Atom>) {\r\n    return deps$.map(x => x.get());\r\n  }\r\n}\r\n\r\nconst detectIsAtom = (x: unknown): x is Atom => x instanceof Atom;\r\n\r\nconst detectIsWritableAtom = (x: unknown): x is WritableAtom => x instanceof WritableAtom;\r\n\r\nconst detectIsReadableAtom = (x: unknown): x is ReadableAtom => x instanceof ReadableAtom;\r\n\r\nconst atom = <T>(value?: T) => new WritableAtom(value);\r\n\r\nconst computed = <T, A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\r\n  deps$: [\r\n    Atom<A>,\r\n    Atom<B>?,\r\n    Atom<C>?,\r\n    Atom<D>?,\r\n    Atom<E>?,\r\n    Atom<F>?,\r\n    Atom<G>?,\r\n    Atom<H>?,\r\n    Atom<I>?,\r\n    Atom<J>?,\r\n    Atom<K>?,\r\n    Atom<L>?,\r\n    Atom<M>?,\r\n    Atom<N>?,\r\n  ],\r\n  fn: ComputedFn<T, A, B, C, D, E, F, G, H, I, J, K, L, M, N>,\r\n) => new ReadableAtom(deps$, fn) as ReadableAtom<ReturnType<typeof fn>>;\r\n\r\nfunction useAtom<T>(value?: T): WritableAtom<T> {\r\n  const atom$ = useMemo(() => atom<T>(value), []);\r\n\r\n  useLayoutEffect(() => () => atom$.kill(), []);\r\n\r\n  return atom$;\r\n}\r\n\r\nfunction useComputed<T, A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\r\n  deps$: [\r\n    Atom<A>,\r\n    Atom<B>?,\r\n    Atom<C>?,\r\n    Atom<D>?,\r\n    Atom<E>?,\r\n    Atom<F>?,\r\n    Atom<G>?,\r\n    Atom<H>?,\r\n    Atom<I>?,\r\n    Atom<J>?,\r\n    Atom<K>?,\r\n    Atom<L>?,\r\n    Atom<M>?,\r\n    Atom<N>?,\r\n  ],\r\n  fn: ComputedFn<T, A, B, C, D, E, F, G, H, I, J, K, L, M, N>,\r\n) {\r\n  const atom$ = useMemo(() => computed(deps$, fn), []);\r\n\r\n  useLayoutEffect(() => () => atom$.kill(), []);\r\n\r\n  return atom$;\r\n}\r\n\r\nfunction useStore<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\r\n  atoms$: [\r\n    Atom<A>,\r\n    Atom<B>?,\r\n    Atom<C>?,\r\n    Atom<D>?,\r\n    Atom<E>?,\r\n    Atom<F>?,\r\n    Atom<G>?,\r\n    Atom<H>?,\r\n    Atom<I>?,\r\n    Atom<J>?,\r\n    Atom<K>?,\r\n    Atom<L>?,\r\n    Atom<M>?,\r\n    Atom<N>?,\r\n  ],\r\n) {\r\n  const forceUpdate = useUpdate();\r\n  const update = () => batch(forceUpdate);\r\n\r\n  useLayoutEffect(() => {\r\n    const offs = atoms$.map(x => x.on(update));\r\n\r\n    return () => offs.forEach(x => x());\r\n  }, [...atoms$]);\r\n\r\n  return atoms$.map(x => x.get()) as [A, B, C, D, E, F, G, H, I, J, K, L, M, N];\r\n}\r\n\r\ntype ShouldUpdate<T> = (p: T, n: T, key?: T) => boolean;\r\ntype EmitterValue<T> = { prev: T; next: T };\r\ntype Tuple<T> = [number, Hook, ShouldUpdate<T>, T];\r\ntype ComputedFn<\r\n  T,\r\n  A = unknown,\r\n  B = unknown,\r\n  C = unknown,\r\n  D = unknown,\r\n  E = unknown,\r\n  F = unknown,\r\n  G = unknown,\r\n  H = unknown,\r\n  I = unknown,\r\n  J = unknown,\r\n  K = unknown,\r\n  L = unknown,\r\n  M = unknown,\r\n  N = unknown,\r\n> = (a: A, b?: B, c?: C, d?: D, e?: E, f?: F, g?: G, h?: H, i?: I, j?: J, k?: K, l?: L, m?: M, n?: N) => T;\r\n\r\nexport {\r\n  type Atom,\r\n  WritableAtom,\r\n  ReadableAtom,\r\n  detectIsAtom,\r\n  detectIsWritableAtom,\r\n  detectIsReadableAtom,\r\n  atom,\r\n  computed,\r\n  useAtom,\r\n  useComputed,\r\n  useStore,\r\n};\r\n","import { type WritableAtom, type SubscriberWithValue, atom } from '@dark-engine/core';\r\n\r\nimport { type SpringValue } from '../shared';\r\n\r\nclass Spring<T extends string = string> {\r\n  private props: Record<T, WritableAtom<number>> = {} as Record<T, WritableAtom<number>>;\r\n  private subscribers = new Set<SubscriberWithValue<SpringValue<T>>>();\r\n\r\n  prop(key: T) {\r\n    return this.props[key] ? this.props[key].get() : null;\r\n  }\r\n\r\n  prop$(key: T) {\r\n    return this.props[key] || null;\r\n  }\r\n\r\n  setProp(key: T, value: number) {\r\n    !this.props[key] && (this.props[key] = atom(value));\r\n    this.props[key].set(value);\r\n  }\r\n\r\n  value(): SpringValue<T> {\r\n    const value = Object.keys(this.props).reduce((acc, x) => ((acc[x] = this.props[x].get()), acc), {});\r\n\r\n    return value as SpringValue<T>;\r\n  }\r\n\r\n  on(fn: SubscriberWithValue<SpringValue<T>>) {\r\n    this.subscribers.add(fn);\r\n\r\n    return () => this.subscribers.delete(fn);\r\n  }\r\n\r\n  notify() {\r\n    this.subscribers.forEach(x => x(this.value()));\r\n  }\r\n}\r\n\r\nexport { Spring };\r\n","const fix = (x: number, precision = 4) => Number(x.toFixed(precision));\r\n\r\nconst illegal = (value: string) => {\r\n  throw new Error(value);\r\n};\r\n\r\nconst range = (x: number) =>\r\n  Array(x)\r\n    .fill(null)\r\n    .map((_, idx) => idx);\r\n\r\nconst uniq = <T>(items: Array<T>, selector: (x: T) => unknown) => {\r\n  const arr: Array<T> = [];\r\n  const set = new Set();\r\n\r\n  for (const item of items) {\r\n    const key = selector(item);\r\n\r\n    !set.has(key) && arr.push(item);\r\n    set.add(key);\r\n  }\r\n\r\n  return arr;\r\n};\r\n\r\nexport { fix, illegal, range, uniq };\r\n","import { type SpringConfig } from '../shared';\r\n\r\nfunction stepper(pos: number, vel: number, dest: number, step: number, config: Omit<SpringConfig, 'fix'>) {\r\n  const { tension, friction, mass, precision } = config;\r\n  const [nPos, nVel] = spring(pos, vel, dest, step, tension, friction, mass);\r\n\r\n  if (Math.abs(nPos - dest) < 10 ** (-1 * precision)) return [dest, 0];\r\n\r\n  return [nPos, nVel];\r\n}\r\n\r\nfunction spring(pos: number, vel: number, dest: number, step: number, tension: number, friction: number, mass: number) {\r\n  const disp = pos - dest;\r\n  const sf = -1 * tension * disp;\r\n  const df = -1 * friction * vel;\r\n  const a = (sf + df) / mass;\r\n  const nVel = vel + a * step;\r\n  const nPos = pos + nVel * step;\r\n\r\n  return [nPos, nVel];\r\n}\r\n\r\nexport { stepper };\r\n","import { type ElementKey, platform, falseFn, detectIsUndefined, getTime } from '@dark-engine/core';\r\n\r\nimport { type SpringValue, type SpringConfig, defaultSpringConfig } from '../shared';\r\nimport { type AnimationEventName, SharedState } from '../state';\r\nimport { Spring } from '../spring';\r\nimport { fix } from '../utils';\r\nimport { stepper } from '../stepper';\r\n\r\nconst BASE_FRAME_TIME_IN_MS = 1000 / 60;\r\nconst MAX_SKIPPED_FRAMES = 10;\r\nconst MAX_DELTA_TIME_IN_SEC = MAX_SKIPPED_FRAMES * (BASE_FRAME_TIME_IN_MS / 1000);\r\nconst MIN_STEP = 0.01;\r\n\r\nclass Controller<T extends string, I = unknown> {\r\n  private key: ElementKey;\r\n  private idx: number;\r\n  private from: SpringValue<T>;\r\n  private to: SpringValue<T>;\r\n  private value: SpringValue<T>;\r\n  private dest: SpringValue<T>;\r\n  private state: SharedState = null;\r\n  private frameTime: number;\r\n  private frameId: number;\r\n  private results: Record<string, [number, number]> = {};\r\n  private completed: Record<string, boolean> = {};\r\n  private queue: Array<SpringValue<T>> = [];\r\n  private left: Controller<T> = null;\r\n  private right: Controller<T> = null;\r\n  private springConfigFn: SpringConfigFn<T>;\r\n  private configurator: ConfiguratorFn<T>;\r\n  private immediate: ImmediateFn<T> = falseFn;\r\n  private immediates: Array<() => void> = [];\r\n  private primaryKey: ElementKey;\r\n  private isReplaced = false;\r\n  private item: I = null;\r\n  private spring = new Spring<T>();\r\n\r\n  constructor(state: SharedState) {\r\n    this.state = state;\r\n    this.key = String(++Controller.key);\r\n  }\r\n\r\n  getKey() {\r\n    return this.key;\r\n  }\r\n\r\n  setKey(x: ElementKey) {\r\n    this.key = x;\r\n  }\r\n\r\n  getIdx() {\r\n    return this.idx;\r\n  }\r\n\r\n  setIdx(x: number) {\r\n    this.idx = x;\r\n  }\r\n\r\n  setFrom(x: SpringValue<T>) {\r\n    this.from = x;\r\n    this.value = this.value || { ...x };\r\n  }\r\n\r\n  setTo(x: SpringValue<T>) {\r\n    this.to = x || { ...this.from };\r\n    this.dest = this.dest || { ...(x || this.from) };\r\n  }\r\n\r\n  setSpringConfigFn(fn?: PatialConfigFn<T>) {\r\n    this.springConfigFn = fn ? (key: T) => ({ ...defaultSpringConfig, ...fn(key) }) : () => defaultSpringConfig;\r\n  }\r\n\r\n  setLeft(x: Controller<T>) {\r\n    this.left = x;\r\n  }\r\n\r\n  setRight(x: Controller<T>) {\r\n    this.right = x;\r\n  }\r\n\r\n  notify() {\r\n    this.sync();\r\n    this.event('item-change');\r\n  }\r\n\r\n  setConfigurator(fn: ConfiguratorFn<T>) {\r\n    this.configurator = fn;\r\n  }\r\n\r\n  setImmediate(fn: ImmediateFn<T>) {\r\n    this.immediate = fn || this.immediate;\r\n  }\r\n\r\n  replaceValue(x: SpringValue<T>) {\r\n    this.value = x;\r\n    this.sync();\r\n  }\r\n\r\n  markAsFake(x: ElementKey) {\r\n    this.primaryKey = x;\r\n\r\n    return Controller.generateFakeKey(x);\r\n  }\r\n\r\n  detectIsFake() {\r\n    return !detectIsUndefined(this.primaryKey);\r\n  }\r\n\r\n  getIsReplaced() {\r\n    return this.isReplaced;\r\n  }\r\n\r\n  setIsReplaced(x: boolean) {\r\n    this.isReplaced = x;\r\n  }\r\n\r\n  getItem() {\r\n    return this.item;\r\n  }\r\n\r\n  setItem(x: I) {\r\n    this.item = x;\r\n  }\r\n\r\n  getState() {\r\n    return this.state;\r\n  }\r\n\r\n  getSpring() {\r\n    this.sync();\r\n\r\n    return this.spring;\r\n  }\r\n\r\n  start(fn?: StartFn<T>) {\r\n    if (this.state.getIsCanceled()) return; // !\r\n    const config1 = this.configurator(this.idx);\r\n    const config2 = fn ? fn(this.idx) : this.configurator(this.idx);\r\n    const from = { ...config1.from, ...config2.from };\r\n    const to = { ...config1.to, ...config2.to };\r\n    const config = config2.config || config1.config;\r\n    const immediate = config2.immediate || config1.immediate;\r\n\r\n    this.setFrom(config1.from || from);\r\n    this.setTo(config1.to || to);\r\n    this.setSpringConfigFn(config);\r\n    this.setImmediate(immediate);\r\n    Object.assign(this.dest, to);\r\n\r\n    this.play(this.dest);\r\n  }\r\n\r\n  reset() {\r\n    this.value = { ...this.from };\r\n    this.dest = { ...(this.to || this.from) };\r\n    this.sync();\r\n  }\r\n\r\n  cancel() {\r\n    this.frameId && platform.caf(this.frameId);\r\n    this.frameId = null;\r\n  }\r\n\r\n  setIsPlaying(x: boolean) {\r\n    this.state.setIsPlaying(x, this.key);\r\n  }\r\n\r\n  private play(to: SpringValue<T>) {\r\n    this.queue.push(to);\r\n    if (this.frameId) return false;\r\n    this.setIsPlaying(true);\r\n    this.event('item-start');\r\n    this.motion(to);\r\n  }\r\n\r\n  private motion(to: SpringValue<T>) {\r\n    const { value, results, completed, springConfigFn } = this;\r\n    const keys = Object.keys(value) as Array<T>;\r\n    const make = () => this.motion(to);\r\n\r\n    this.frameTime = getTime();\r\n    this.frameId = platform.raf(() => {\r\n      if (this.state.getIsPaused()) return make();\r\n      let step = (getTime() - this.frameTime) / 1000;\r\n\r\n      if (step > MAX_DELTA_TIME_IN_SEC) {\r\n        step = MIN_STEP;\r\n      }\r\n\r\n      if (this.queue.length === 0) {\r\n        this.queue.push(this.dest);\r\n      }\r\n\r\n      for (const key of keys) {\r\n        if (this.immediate(key)) {\r\n          completed[key] = true;\r\n\r\n          const complete = () => {\r\n            value[key] = to[key];\r\n            results[key] = [to[key], 0];\r\n          };\r\n\r\n          if (to[key] === this.from[key]) {\r\n            this.immediates.push(complete);\r\n          } else {\r\n            complete();\r\n          }\r\n        } else {\r\n          if (!results[key]) {\r\n            results[key] = [value[key], 0];\r\n          }\r\n\r\n          const config = springConfigFn(key);\r\n          let pos = results[key][0];\r\n          let vel = results[key][1];\r\n\r\n          for (const update of this.queue) {\r\n            const dest = update[key] as number;\r\n\r\n            [pos, vel] = stepper(pos, vel, dest, step, config);\r\n            results[key] = [pos, vel];\r\n            completed[key] = pos === dest;\r\n          }\r\n\r\n          value[key] = pos;\r\n        }\r\n      }\r\n\r\n      this.queue = [];\r\n      this.change();\r\n\r\n      if (this.checkCompleted(keys)) {\r\n        this.complete();\r\n      } else {\r\n        make();\r\n      }\r\n    });\r\n  }\r\n\r\n  private event(name: AnimationEventName) {\r\n    this.state.event(name, { value: this.value, idx: this.idx, key: this.key });\r\n  }\r\n\r\n  private change() {\r\n    this.notify();\r\n\r\n    if (this.state.getIsTrail()) {\r\n      if (this.state.detectIsRightFlow()) {\r\n        this.right && this.right.start(() => ({ to: this.value }));\r\n      } else {\r\n        this.left && this.left.start(() => ({ to: this.value }));\r\n      }\r\n    }\r\n  }\r\n\r\n  private complete() {\r\n    this.setIsPlaying(false);\r\n    this.frameTime = null;\r\n    this.frameId = null;\r\n    this.results = {};\r\n    this.completed = {};\r\n    this.immediates.forEach(x => x());\r\n    this.immediates.length > 0 && this.notify();\r\n    this.immediates = [];\r\n    this.event('item-end');\r\n    this.state.completeSeries();\r\n  }\r\n\r\n  private checkCompleted(keys: Array<string>) {\r\n    for (const key of keys) {\r\n      if (!this.completed[key]) return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  private sync() {\r\n    const keys = Object.keys(this.value) as Array<T>;\r\n\r\n    for (const key of keys) {\r\n      const config = this.springConfigFn(key);\r\n      const value = fix(this.value[key], config.fix);\r\n\r\n      this.spring.setProp(key, value);\r\n    }\r\n\r\n    this.spring.notify();\r\n  }\r\n\r\n  private static generateFakeKey(x: ElementKey) {\r\n    return `__${x}:${++Controller.fakeKey}__`;\r\n  }\r\n\r\n  private static key = -1;\r\n  private static fakeKey = -1;\r\n}\r\n\r\nexport type BaseItemConfig<T extends string> = {\r\n  from: SpringValue<T>;\r\n  to?: SpringValue<T>;\r\n  config?: PatialConfigFn<T>;\r\n  immediate?: ImmediateFn<T>;\r\n};\r\n\r\nexport type StartFnConfig<T extends string> = {\r\n  from?: SpringValue<T>;\r\n  to: Partial<SpringValue<T>>;\r\n} & Omit<BaseItemConfig<T>, 'from' | 'to'>;\r\n\r\nexport type ConfiguratorFn<T extends string> = (idx: number) => BaseItemConfig<T>;\r\n\r\nexport type StartFn<T extends string> = (idx: number) => StartFnConfig<T>;\r\n\r\nexport type SpringConfigFn<T extends string> = (key: T) => SpringConfig;\r\n\r\nexport type PatialConfigFn<T extends string> = (key: T) => Partial<SpringConfig>;\r\n\r\nexport type ImmediateFn<T extends string> = (key: T) => boolean;\r\n\r\nexport type NotifierFn<T extends string> = (x: SpringValue<T>) => void;\r\n\r\nexport { Controller };\r\n","import {\r\n  type Component,\r\n  type TagVirtualNodeFactory,\r\n  type Callback,\r\n  type ElementKey,\r\n  Fragment,\r\n  batch,\r\n  useMemo,\r\n  useUpdate,\r\n  useEffect,\r\n  useLayoutEffect,\r\n  detectIsArray,\r\n  detectIsNumber,\r\n} from '@dark-engine/core';\r\n\r\nimport { type SpringValue } from '../shared';\r\nimport { type AnimationEventValue, SharedState } from '../state';\r\nimport { type BaseItemConfig, type ConfiguratorFn, Controller } from '../controller';\r\nimport { type SpringApi } from '../use-springs';\r\nimport { type Spring } from '../spring';\r\nimport { uniq } from '../utils';\r\n\r\nexport type TransitionItemConfig<T extends string> = {\r\n  from: SpringValue<T>;\r\n  enter: SpringValue<T>;\r\n  leave?: SpringValue<T>;\r\n  update?: SpringValue<T>;\r\n  trail?: number;\r\n} & Pick<BaseItemConfig<T>, 'config' | 'immediate'>;\r\n\r\nfunction useTransition<T extends string, I = unknown>(\r\n  items: Array<I>,\r\n  getKey: KeyExtractor<I>,\r\n  configurator: TransitionConfiguratorFn<T, I>,\r\n): [TransitionFn<T, I>, TransitionApi<T>] {\r\n  const forceUpdate = useUpdate();\r\n  const update = () => batch(forceUpdate);\r\n  const state = useMemo(() => new SharedState<T>(), []);\r\n  const scope = useMemo<Scope<T, I>>(\r\n    () => ({\r\n      ctrlsMap: new Map(),\r\n      itemsMap: new Map(),\r\n      fakesMap: new Map(),\r\n      items: [],\r\n      queue: [],\r\n      hasReplaces: false,\r\n      fromApi: false,\r\n      inChain: false,\r\n      pending: null,\r\n      configurator,\r\n    }),\r\n    [],\r\n  );\r\n\r\n  scope.configurator = configurator;\r\n\r\n  useMemo(() => setup({ items, getKey, configurator, state, ctrlsMap: scope.ctrlsMap }), []);\r\n\r\n  const transition = useMemo<TransitionFn<T, I>>(\r\n    () => (render: TransitionRenderFn<T, I>) => {\r\n      const { ctrlsMap } = scope;\r\n      const elements: Array<TransitionElement> = [];\r\n\r\n      for (const [key, ctrl] of ctrlsMap) {\r\n        const idx = ctrl.getIdx();\r\n        const item = ctrl.getItem();\r\n        const spring = ctrl.getSpring();\r\n        const element = Fragment({ key, slot: render({ spring, item, idx }) });\r\n\r\n        if (elements[idx]) {\r\n          const sibling = elements[idx];\r\n\r\n          if (detectIsArray(sibling)) {\r\n            sibling.push(element);\r\n          } else {\r\n            elements[idx] = [sibling, element] as unknown as TransitionElement;\r\n          }\r\n        } else {\r\n          elements[idx] = element;\r\n        }\r\n      }\r\n\r\n      return Fragment({ slot: elements });\r\n    },\r\n    [],\r\n  );\r\n\r\n  const api = useMemo<TransitionApi<T>>(() => {\r\n    return {\r\n      start: fn => {\r\n        scope.fromApi = true;\r\n\r\n        if (scope.inChain) {\r\n          scope.pending && scope.pending();\r\n          scope.pending = null;\r\n        } else {\r\n          state.start(fn);\r\n        }\r\n      },\r\n      chain: (value: boolean) => (scope.inChain = value),\r\n      delay: state.delay.bind(state),\r\n      cancel: state.cancel.bind(state),\r\n      pause: state.pause.bind(state),\r\n      resume: state.resume.bind(state),\r\n      on: state.on.bind(state),\r\n      isCanceled: state.getIsCanceled.bind(state),\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const { inChain } = scope;\r\n    const nextItems = uniq(items, getKey);\r\n    const start = (items: Array<I>) => {\r\n      const { ctrlsMap, fakesMap, items: $items } = scope;\r\n      const configurator: TransitionConfiguratorFn<T, I> = (idx, item) => scope.configurator(idx, item);\r\n      const { ctrls, itemsMap } = setup({ items, getKey, configurator, state, ctrlsMap });\r\n      const { hasChanges, insMap, remMap, movMap, stabMap, replaced } = diff($items, items, getKey);\r\n\r\n      scope.hasReplaces = replaced.size > 0;\r\n      state.setCtrls(ctrls);\r\n      replaced.forEach(key => ctrlsMap.get(key).setIsReplaced(true));\r\n\r\n      state.event('series-start');\r\n      animate({ action: Action.LEAVE, space: fakesMap, state, scope }); // !\r\n      animate({ action: Action.ENTER, space: insMap, state, scope });\r\n      animate({ action: Action.LEAVE, space: remMap, state, scope });\r\n      animate({ action: Action.UPDATE, space: movMap, state, scope });\r\n      animate({ action: Action.UPDATE, space: stabMap, state, scope });\r\n\r\n      scope.items = items; // !\r\n      scope.itemsMap = itemsMap;\r\n      scope.fromApi = false;\r\n      hasChanges && forceUpdate(); // !\r\n    };\r\n\r\n    if (inChain) {\r\n      scope.pending = () => state.defer(() => start(nextItems));\r\n    } else {\r\n      start(nextItems);\r\n    }\r\n  }, [items]);\r\n\r\n  useLayoutEffect(() => {\r\n    const offs: Array<Callback> = [];\r\n\r\n    offs.push(\r\n      api.on('item-end', e => handleItemEnd(e, scope)),\r\n      api.on('series-end', () => handleSeriesEnd(update, state, scope)),\r\n    );\r\n\r\n    return () => offs.forEach(x => x());\r\n  }, []);\r\n\r\n  useLayoutEffect(() => () => api.cancel(), []);\r\n\r\n  return [transition, api];\r\n}\r\n\r\ntype SetupOptions<T extends string, I = unknown> = {\r\n  items: Array<I>;\r\n  getKey: KeyExtractor<I>;\r\n  state: SharedState<T>;\r\n} & Pick<Scope<T, I>, 'configurator' | 'ctrlsMap'>;\r\n\r\nfunction setup<T extends string, I = unknown>(options: SetupOptions<T, I>) {\r\n  const { items, getKey, configurator, state, ctrlsMap } = options;\r\n  const itemsMap = new Map<ElementKey, I>();\r\n  const ctrls = items.map((item, idx) => {\r\n    const key = getKey(item);\r\n\r\n    itemsMap.set(key, item);\r\n\r\n    return getController<T, I>({ idx, item, getKey, configurator, state, ctrlsMap });\r\n  });\r\n\r\n  return { ctrls, itemsMap };\r\n}\r\n\r\ntype GetControllerOptions<T extends string, I = unknown> = {\r\n  idx: number;\r\n  item: I;\r\n} & Pick<SetupOptions<T, I>, 'getKey' | 'configurator' | 'state' | 'ctrlsMap'>;\r\n\r\nfunction getController<T extends string, I = unknown>(options: GetControllerOptions<T, I>) {\r\n  const { idx, item, getKey, configurator, state, ctrlsMap } = options;\r\n  const key = getKey(item);\r\n  const ctrl = ctrlsMap.get(key) || new Controller<T, I>(state);\r\n\r\n  prepare({ ctrl, key, idx, item, configurator });\r\n  ctrlsMap.set(key, ctrl);\r\n\r\n  return ctrl;\r\n}\r\n\r\nfunction extractKeys<I = unknown>(prevItems: Array<I>, nextItems: Array<I>, getKey: KeyExtractor<I>) {\r\n  const prevKeys: Array<ElementKey> = [];\r\n  const nextKeys: Array<ElementKey> = [];\r\n  const prevKeysMap: Record<ElementKey, boolean> = {};\r\n  const nextKeysMap: Record<ElementKey, boolean> = {};\r\n  const max = Math.max(prevItems.length, nextItems.length);\r\n\r\n  for (let i = 0; i < max; i++) {\r\n    const prevItem = prevItems[i];\r\n    const nextItem = nextItems[i];\r\n\r\n    if (prevItem) {\r\n      const prevKey = getKey(prevItem);\r\n\r\n      if (!prevKeysMap[prevKey]) {\r\n        prevKeysMap[prevKey] = true;\r\n        prevKeys.push(prevKey);\r\n      }\r\n    }\r\n\r\n    if (nextItem) {\r\n      const nextKey = getKey(nextItem);\r\n\r\n      if (!nextKeysMap[nextKey]) {\r\n        nextKeysMap[nextKey] = true;\r\n        nextKeys.push(nextKey);\r\n      }\r\n    }\r\n  }\r\n\r\n  return {\r\n    prevKeys,\r\n    nextKeys,\r\n    prevKeysMap,\r\n    nextKeysMap,\r\n  };\r\n}\r\n\r\nfunction diff<I = unknown>(prevItems: Array<I>, nextItems: Array<I>, getKey: KeyExtractor<I>) {\r\n  const { prevKeys, nextKeys, prevKeysMap, nextKeysMap } = extractKeys(prevItems, nextItems, getKey);\r\n  let size = Math.max(prevKeys.length, nextKeys.length);\r\n  let p = 0;\r\n  let n = 0;\r\n  let hasChanges = false;\r\n  const insMap = new Map<ElementKey, number>();\r\n  const remMap = new Map<ElementKey, number>();\r\n  const movMap = new Map<ElementKey, number>();\r\n  const stabMap = new Map<ElementKey, number>();\r\n  const replaced = new Set<ElementKey>();\r\n\r\n  for (let i = 0; i < size; i++) {\r\n    const nextKey = nextKeys[i - n] ?? null;\r\n    const prevKey = prevKeys[i - p] ?? null;\r\n\r\n    if (nextKey !== prevKey) {\r\n      if (nextKey !== null && !prevKeysMap[nextKey]) {\r\n        if (prevKey !== null && !nextKeysMap[prevKey]) {\r\n          insMap.set(nextKey, i);\r\n          remMap.set(prevKey, i);\r\n          replaced.add(prevKey);\r\n          hasChanges = true;\r\n        } else {\r\n          insMap.set(nextKey, i);\r\n          hasChanges = true;\r\n          p++;\r\n          size++;\r\n        }\r\n      } else if (!nextKeysMap[prevKey]) {\r\n        remMap.set(prevKey, i);\r\n        hasChanges = true;\r\n        n++;\r\n        size++;\r\n      } else if (nextKeysMap[prevKey] && nextKeysMap[nextKey]) {\r\n        movMap.set(nextKey, i);\r\n        hasChanges = true;\r\n      }\r\n    } else if (nextKey !== null) {\r\n      stabMap.set(nextKey, i);\r\n    }\r\n  }\r\n\r\n  return {\r\n    hasChanges,\r\n    insMap,\r\n    remMap,\r\n    movMap,\r\n    stabMap,\r\n    replaced,\r\n  };\r\n}\r\n\r\ntype AnimateOptions<T extends string, I = unknown> = {\r\n  action: Action;\r\n  space: Map<ElementKey, number>;\r\n  state: SharedState<T>;\r\n  scope: Scope<T, I>;\r\n};\r\n\r\nfunction animate<T extends string, I = unknown>(options: AnimateOptions<T, I>) {\r\n  const { space, action, state, scope } = options;\r\n  const { configurator, ctrlsMap, fakesMap } = scope;\r\n  const ctrls = state.getCtrls();\r\n  const isEnter = action === Action.ENTER;\r\n  const isLeave = action === Action.LEAVE;\r\n  let $idx = 0;\r\n\r\n  for (const [key, idx] of space) {\r\n    const ctrl = ctrlsMap.get(key);\r\n    const item = ctrl.getItem();\r\n    const config = configurator(idx, item);\r\n    const { trail } = config;\r\n    const to = isLeave && !config[action] ? config.from : config[action];\r\n    let $ctrl = ctrl;\r\n\r\n    if (isEnter) {\r\n      const isReplaced = ctrl.getIsReplaced();\r\n      const isPlaying = state.detectIsPlaying(key);\r\n\r\n      if (isReplaced) {\r\n        if (isPlaying) {\r\n          const fake = new Controller<T, I>(state);\r\n          const fakeKey = fake.markAsFake(key);\r\n\r\n          $ctrl = fake;\r\n          prepare({ ctrl: fake, key: fakeKey, idx, item, configurator });\r\n          ctrlsMap.set(fakeKey, fake);\r\n          fakesMap.set(fakeKey, idx);\r\n          ctrls.push(fake);\r\n        } else {\r\n          ctrl.setIsReplaced(false);\r\n        }\r\n      }\r\n    }\r\n\r\n    to && withTrail(() => $ctrl.start(() => ({ to })), $idx, trail);\r\n    $idx++;\r\n  }\r\n}\r\n\r\nfunction withTrail(fn: () => void, idx: number, trail?: number) {\r\n  if (detectIsNumber(trail)) {\r\n    setTimeout(fn, idx * trail);\r\n  } else {\r\n    fn();\r\n  }\r\n}\r\n\r\ntype PrepareOptions<T extends string, I = unknown> = {\r\n  ctrl: Controller<T, I>;\r\n  idx: number;\r\n  key: ElementKey;\r\n  item: I;\r\n  configurator: TransitionConfiguratorFn<T, I>;\r\n};\r\n\r\nfunction prepare<T extends string, I = unknown>(options: PrepareOptions<T, I>) {\r\n  const { ctrl, key, idx, item, configurator } = options;\r\n  const { from, enter, config } = configurator(idx, item);\r\n  const $configurator: ConfiguratorFn<T> = (idx: number) => {\r\n    const { enter, leave, update, trail, ...rest } = configurator(idx, item);\r\n\r\n    return { ...rest };\r\n  };\r\n\r\n  ctrl.setKey(key);\r\n  ctrl.setIdx(idx);\r\n  ctrl.setItem(item);\r\n  ctrl.setFrom(from);\r\n  ctrl.setTo(enter);\r\n  ctrl.setSpringConfigFn(config);\r\n  ctrl.setConfigurator($configurator);\r\n}\r\n\r\nfunction handleItemEnd<T extends string, I = unknown>({ key }: AnimationEventValue<T>, scope: Scope<T, I>) {\r\n  const { ctrlsMap, fakesMap, itemsMap, hasReplaces, queue, fromApi } = scope;\r\n\r\n  if (ctrlsMap.has(key) && ctrlsMap.get(key).detectIsFake()) {\r\n    ctrlsMap.delete(key);\r\n    fakesMap.delete(key);\r\n  }\r\n\r\n  if (fromApi || hasReplaces) {\r\n    !itemsMap.has(key) && ctrlsMap.delete(key);\r\n  } else {\r\n    queue.push(() => !scope.itemsMap.has(key) && ctrlsMap.delete(key));\r\n  }\r\n}\r\n\r\nfunction handleSeriesEnd<T extends string, I = unknown>(update: () => void, state: SharedState<T>, scope: Scope<T, I>) {\r\n  const { ctrlsMap, configurator, fromApi } = scope;\r\n  const ctrls: Array<Controller<T, I>> = [];\r\n\r\n  if (fromApi) return;\r\n  scope.queue.forEach(x => x());\r\n  scope.queue = [];\r\n\r\n  for (const [_, ctrl] of ctrlsMap) {\r\n    const { enter } = configurator(ctrl.getIdx(), ctrl.getItem());\r\n\r\n    ctrl.replaceValue({ ...enter });\r\n    ctrl.notify();\r\n    ctrls.push(ctrl);\r\n  }\r\n\r\n  state.setCtrls(ctrls);\r\n  update();\r\n}\r\n\r\ntype Scope<T extends string, I = unknown> = {\r\n  items: Array<I>;\r\n  configurator: TransitionConfiguratorFn<T, I>;\r\n  ctrlsMap: Map<ElementKey, Controller<T, I>>;\r\n  itemsMap: Map<ElementKey, I>;\r\n  fakesMap: Map<ElementKey, number>;\r\n  queue: Array<Callback>;\r\n  hasReplaces: boolean;\r\n  fromApi: boolean;\r\n  inChain: boolean;\r\n  pending: Callback;\r\n};\r\n\r\nenum Action {\r\n  ENTER = 'enter',\r\n  LEAVE = 'leave',\r\n  UPDATE = 'update',\r\n}\r\n\r\ntype KeyExtractor<I> = (x: I) => ElementKey;\r\n\r\ntype TransitionElement = Component | TagVirtualNodeFactory;\r\n\r\ntype TransitionConfiguratorFn<T extends string = string, I = unknown> = (\r\n  idx: number,\r\n  item: I,\r\n) => TransitionItemConfig<T>;\r\n\r\nexport type TransitionApi<T extends string = string> = Omit<SpringApi<T>, 'reset'>;\r\n\r\nexport type TransitionRenderFn<T extends string = string, I = unknown> = (options: {\r\n  spring: Spring<T>;\r\n  item: I;\r\n  idx: number;\r\n}) => TransitionElement;\r\n\r\nexport type TransitionFn<T extends string = string, I = unknown> = (render: TransitionRenderFn<T, I>) => Component;\r\n\r\nexport { useTransition };\r\n","import {\r\n  type Component,\r\n  type TagVirtualNodeFactory,\r\n  type Callback,\r\n  component,\r\n  useMemo,\r\n  useInsertionEffect,\r\n  $$scope,\r\n  walk,\r\n  nextTick,\r\n} from '@dark-engine/core';\r\n\r\nimport { type SpringValue } from '../shared';\r\nimport { type Spring } from '../spring';\r\n\r\ntype AnimatedProps<E = unknown, T extends string = string> = {\r\n  spring: Spring<T>;\r\n  fn: StyleFn<E, T>;\r\n  slot: Component | TagVirtualNodeFactory;\r\n};\r\n\r\nconst Animated = component<AnimatedProps>(({ spring, fn, slot }) => {\r\n  const cursor = $$scope().getCursorFiber();\r\n  const scope = useMemo<Scope>(() => ({ element: null, notify: null }), []);\r\n  const notify = () => scope.element && fn(scope.element, spring.value());\r\n\r\n  scope.notify = notify;\r\n\r\n  useInsertionEffect(() => {\r\n    const make = () => {\r\n      const fiber = cursor.hook.owner;\r\n\r\n      walk(fiber.child, (fiber, _, stop) => {\r\n        if (fiber.element) {\r\n          scope.element = fiber.element;\r\n          return stop();\r\n        }\r\n      });\r\n\r\n      notify();\r\n    };\r\n\r\n    if ($$scope().getIsHydrateZone()) {\r\n      nextTick(make);\r\n    } else {\r\n      make();\r\n    }\r\n\r\n    return spring.on(() => scope.notify());\r\n  }, [spring]);\r\n\r\n  notify();\r\n\r\n  return slot;\r\n});\r\n\r\ntype Scope = { element: unknown; notify: Callback };\r\ntype StyleFn<E = unknown, T extends string = string> = (element: E, value: SpringValue<T>) => void;\r\n\r\nexport { Animated };\r\n","import { h, Fragment, component, useEffect, useLayoutEffect, useState, useMemo, useRef } from '@dark-engine/core';\r\nimport { createRoot } from '@dark-engine/platform-browser';\r\nimport { SpringValue, Animated, useTransition } from '@dark-engine/animations';\r\n\r\nfunction shuffle<T = unknown>(list: Array<T>) {\r\n  let currentIndex = list.length;\r\n  let randomIndex: number;\r\n\r\n  while (currentIndex != 0) {\r\n    randomIndex = Math.floor(Math.random() * currentIndex);\r\n    currentIndex--;\r\n\r\n    [list[currentIndex], list[randomIndex]] = [list[randomIndex], list[currentIndex]];\r\n  }\r\n\r\n  return [...list];\r\n}\r\n\r\nfunction useMedia(queries: string[], values: number[], defaultValue: number) {\r\n  const match = () => values[queries.findIndex(q => matchMedia(q).matches)] || defaultValue;\r\n  const [value, set] = useState(match);\r\n\r\n  useEffect(() => {\r\n    const handler = () => set(match);\r\n\r\n    window.addEventListener('resize', handler);\r\n\r\n    return () => window.removeEventListener('resize', handler);\r\n  }, []);\r\n\r\n  return value;\r\n}\r\n\r\ntype GridItem = {\r\n  width?: number;\r\n  height: number;\r\n  x?: number;\r\n  y?: number;\r\n  src: string;\r\n};\r\n\r\ntype DataItem = Pick<GridItem, 'src' | 'height'>;\r\n\r\nconst data: Array<DataItem> = [\r\n  { src: './images/1.jpeg', height: 150 },\r\n  { src: './images/2.jpeg', height: 300 },\r\n  { src: './images/3.jpeg', height: 300 },\r\n  { src: './images/4.jpeg', height: 300 },\r\n  { src: './images/5.jpeg', height: 300 },\r\n  { src: './images/6.jpeg', height: 300 },\r\n  { src: './images/7.jpeg', height: 200 },\r\n  { src: './images/8.jpeg', height: 300 },\r\n  { src: './images/9.jpeg', height: 200 },\r\n  { src: './images/10.jpeg', height: 400 },\r\n  { src: './images/11.jpeg', height: 200 },\r\n  { src: './images/12.jpeg', height: 150 },\r\n  { src: './images/13.jpeg', height: 400 },\r\n  { src: './images/14.jpeg', height: 200 },\r\n];\r\n\r\ntype SpringProps = 'x' | 'y' | 'width' | 'height' | 'opacity';\r\n\r\nconst App = component(() => {\r\n  const ref = useRef<HTMLDivElement>(null);\r\n  const columns = useMedia(['(min-width: 1500px)', '(min-width: 1000px)', '(min-width: 600px)'], [5, 4, 3], 2);\r\n  const [items, setItems] = useState(data);\r\n  const [width, setWidth] = useState(0);\r\n  const [heights, gridItems] = useMemo(() => {\r\n    const heights = new Array(columns).fill(0); // Each column gets a height starting with zero\r\n    const gridItems: Array<GridItem> = items.map(child => {\r\n      const column = heights.indexOf(Math.min(...heights)); // Basic masonry-grid placing, puts tile into the smallest column using Math.min\r\n      const x = Number(((width / columns) * column).toFixed(0)); // x = container width / number of columns * column index,\r\n      const y = (heights[column] += child.height / 2) - child.height / 2; // y = it's just the height of the current column\r\n\r\n      return {\r\n        ...child,\r\n        x,\r\n        y,\r\n        width: Number((width / columns).toFixed(0)),\r\n        height: child.height / 2,\r\n      };\r\n    });\r\n\r\n    return [heights, gridItems];\r\n  }, [columns, items, width]);\r\n\r\n  const [transition] = useTransition<SpringProps, GridItem>(\r\n    gridItems,\r\n    x => x.src,\r\n    (_, { x, y, width, height }) => ({\r\n      from: { x, y, width, height, opacity: 0 },\r\n      enter: { x, y, width, height, opacity: 1 },\r\n      update: { x, y, width, height, opacity: 1 },\r\n      leave: { x, y, width, height: 0, opacity: 0 },\r\n      config: () => ({ mass: 5, tension: 500, friction: 100 }),\r\n      trail: 25,\r\n    }),\r\n  );\r\n\r\n  useEffect(() => {\r\n    const t = setInterval(() => setItems(shuffle), 2000);\r\n\r\n    return () => clearInterval(t);\r\n  }, []);\r\n\r\n  useLayoutEffect(() => {\r\n    const setSize = () => {\r\n      const { width } = ref.current.getBoundingClientRect();\r\n\r\n      setWidth(width);\r\n    };\r\n\r\n    setSize();\r\n\r\n    window.addEventListener('resize', setSize);\r\n\r\n    return () => window.removeEventListener('resize', setSize);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div ref={ref} class='list' style={{ height: Math.max(...heights) + 'px' }}>\r\n        {transition(({ spring, item }) => {\r\n          return (\r\n            <Animated spring={spring} fn={styleFn}>\r\n              <div>\r\n                <div style={{ 'background-image': `url(${item.src})` }} />\r\n              </div>\r\n            </Animated>\r\n          );\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n});\r\n\r\nconst styleFn = (element: HTMLDivElement, value: SpringValue<SpringProps>) => {\r\n  const { x, y, width, height, opacity } = value;\r\n  const setProp = setPropOf(element);\r\n\r\n  setProp('width', `${width}px`);\r\n  setProp('height', `${height}px`);\r\n  setProp('opacity', `${opacity}`);\r\n  setProp('transform', `translate3d(${x}px, ${y}px, 0)`);\r\n};\r\n\r\nconst setPropOf = (element: HTMLElement) => (k: string, v: string) => element.style.setProperty(k, v);\r\n\r\ncreateRoot(document.getElementById('root')).render(<App />);\r\n","import { type DarkElement, unmountRoot } from '@dark-engine/core';\r\n\r\nimport { render, roots } from '../render';\r\nimport type { TagNativeElement } from '../native-element';\r\n\r\nfunction createRoot(container: TagNativeElement) {\r\n  return {\r\n    render: (element: DarkElement) => render(element, container),\r\n    unmount: () => unmount(container),\r\n  };\r\n}\r\n\r\nfunction unmount(container: TagNativeElement) {\r\n  const rootId = roots.get(container);\r\n\r\n  unmountRoot(rootId, () => {\r\n    roots.delete(container);\r\n    container.innerHTML = '';\r\n  });\r\n}\r\n\r\nexport { createRoot, unmount };\r\n"],"names":["ROOT","REPLACER","KEY_ATTR","REF_ATTR","CREATE_EFFECT_TAG","UPDATE_EFFECT_TAG","SKIP_EFFECT_TAG","MOVE_MASK","TaskPriority","Flag","ATTR_BLACK_LIST","SKIP_SCAN_OPT","MEMO_SLOT_OPT","STATIC_SLOT_OPT","$$inject","Symbol","Component","constructor","type","token","props","ref","shouldUpdate","displayName","children","this","component","options","$token","factory","defaultInject","detectIsComponent","x","detectIsFunction","o","detectIsUndefined","detectIsTextBased","detectIsObject","detectIsBoolean","detectIsArray","Array","isArray","detectIsNull","detectIsEmpty","getTime","Date","now","dummyFn","trueFn","falseFn","sameFn","flatten","source","transform","length","list","stack","idx","pop","i","push","prevDeps","nextDeps","max","Math","Object","is","nextTick","callback","Promise","resolve","then","createIndexKey","$$vNode","ATTR_TYPE","VirtualNode","TagVirtualNode","name","attrs","super","NodeType","TAG","TextVirtualNode","TEXT","value","String","CommentVirtualNode","text","COMMENT","from","detectIsTextVirtualNode","detectIsVirtualNode","vNode","detectIsTagVirtualNode","detectIsCommentVirtualNode","detectIsVirtualNodeFactory","detectIsPlainVirtualNode","createReplacer","getElementKey","inst","hasElementFlag","flag","Boolean","hasComponentFlag","hasVirtualNodeFactoryFlag","hasTagVirtualNodeFlag","getElementType","hasChildrenProp","detectAreSameInstanceTypes","prevInst","nextInst","isComponentFactories","nc","defaultRealisation","Error","platform","createElement","insertElement","raf","caf","spawn","commit","finishCommit","detectIsDynamic","detectIsPortal","unmountPortal","chunk","EventEmitter","subscribers","Map","on","e","fn","has","set","Set","get","add","delete","emit","data","forEach","kill","__getSize","size","Scope","root","wip","cursor","unit","mountDeep","mountLevel","mountNav","events","unsubs","actions","candidates","deletions","cancels","asyncEffects","layoutEffects","insertionEffects","resourceId","resources","defers","setPendingStatus","isLayoutEffectsZone","isInsertionEffectsZone","isUpdateZone","isBatchZone","isHydrateZone","isStreamZone","isTransitionZone","isEventZone","isHot","isDynamic","isServer","emitter","resetActions","getActionsById","id","addActionMap","map","replace","insert","remove","move","stable","addReplaceAction","nextKey","addInsertAction","addRemoveAction","prevKey","addMoveAction","addStableAction","copy","scope","getRoot","setRoot","fiber","getWorkInProgress","setWorkInProgress","getNextUnitOfWork","setNextUnitOfWork","getCursorFiber","setCursorFiber","navToChild","navToSibling","navToParent","navToPrev","getMountIndex","setMountDeep","getMountDeep","resetMount","getEvents","addEventUnsubscriber","unsubscribeEvents","getCandidates","addCandidate","resetCandidates","getDeletions","hasDeletion","nextFiber","parent","addDeletion","resetDeletions","addAsyncEffect","resetAsyncEffects","runAsyncEffects","effects","setTimeout","addLayoutEffect","resetLayoutEffects","runLayoutEffects","setIsLayoutEffectsZone","addInsertionEffect","resetInsertionEffects","runInsertionEffects","setIsInsertionEffectsZone","addCancel","applyCancels","resetCancels","getIsLayoutEffectsZone","getIsInsertionEffectsZone","getIsUpdateZone","setIsUpdateZone","getIsBatchZone","setIsBatchZone","getIsHydrateZone","setIsHydrateZone","getIsStreamZone","setIsStreamZone","getIsTransitionZone","setIsTransitionZone","getIsEventZone","setIsEventZone","getIsHot","setIsHot","getPendingStatusSetter","setPendingStatusSetter","flush","getEmitter","defer","getDefers","resetDefers","getResource","setResource","res","getResources","getResourceId","setResourceId","getNextResourceId","runAfterCommit","rootId","scopes","getRootId","setRootId","$$scope","$$memo","defaultShouldUpdate","nextProps","keys","key","detectIsMemo","instance","Memo","memo","getValue","p","n","deps","hook","values","state","$value","detectIsElement","Fiber","provider","cc","cec","eidx","mask","element","tag","child","next","alt","atoms","nextId","mutate","markHost","increment","count","force","$scope","wipFiber","stop","setError","error","catch","static","Hook","owner","walk","onWalk","shouldDeep","shouldStop","skip","getFiberWithElement","$fiber","buildChildNodes","onNode","getKey","buildChildNode","altMap","startEidx","prevIdx","nextIdx","left","right","isFirst","isLast","notifyParents","$$fragment","Fragment","slot","$$useEffect","createEffect","useEffect","effect","cleanup","undefined","isInsertionEffect","EffectType","INSERTION","isLayoutEffect","LAYOUT","isAsyncEffect","ASYNC","runEffect","dropEffects","$$useLayoutEffect","dropLayoutEffects","$$useInsertionEffect","useInsertionEffect","dropInsertionEffects","shouldUnmountFiber","INSERTION_EFFECT_HOST_MASK","unmountFiber","_","hasPendingPromise","hasRenderError","workLoop","isAsync","shouldYield","hasMoreWork","performUnitOfWork","scheduler","hasPrimaryTask","fork","unmounts","diff","parentFiber","isRight","sync","err","finally","isDeepWalking","isStream","hasChildren","$inst","createFiber","getAlternate","share","mountChild","mountSibling","prev","shouldMount","pc","mount","hasSameCount","prevKeys","nextKeys","prevKeysMap","nextKeysMap","keyedFibersMap","usedKeysMap","extractKeys","prevKeyFiber","tryOptStaticSlot","hasMove","hasRemove","hasInsert","hasReplace","detectIsStableMemoTree","tryOptMov","tryOptRem","tryOptMemoSlot","reconcile","isUpdate","setup","detectAreSameComponentTypesWithSameKeys","getHook","fromChild","parentId","isMove","isStable","isComponent","result","promise","all","setNextId","args","console","supportConditional","cancel","$$scope$","cancelTask","setValue","resetValue","assign","replaceScope","$tools","MessageChannel","port1","port2","MessagePort","channel","offs","event","off","postMessage","unref","Task","priority","forceAsync","taskRestorer","pendingSetter","nextTaskId","getPriority","getForceAsync","setIsTransition","isTransition","getIsTransition","run","pending","markAsPending","isPending","canPending","markAsUnnecessary","isUnnecessary","getIsUnnecessary","setTaskRestorer","setLocationCreator","locationCreator","createLocation","setPendingSetter","loc","tasks","deep","$loc","split","some","$$loc","indexOf","createRootLocation","queue","HIGH","NORMAL","LOW","deadline","task","scheduledCallback","isMessageLoopRunning","port","performWorkUntilDeadline","bind","reset","schedule","put","execute","high","normal","low","getQueues","hasPrimary","hasLow","detectHasRelatedUpdate","complete","filter","splice","pick","shift","requestCallbackAsync","requestCallback","isBusy","unshift","createUpdate","tools","hasTools","isBatch","isEvent","restore","fromRestore","detectIsFiberAlive","createCallback","callbackOptions","createHookLocation","change","batch","timer","changes","clearTimeout","addBatch","createTools","$shouldUpdate","prevValue","newValue","useState","initialValue","update","setState","applyRef","current","mutableRef","hasOwnProperty","detectIsMutableRef","as","_void","View","$$portal","container","innerHTML","getPortalContainer","SyntheticEvent","sourceEvent","target","propagation","stopPropagation","preventDefault","getPropagation","delegateEvent","eventName","handler","eventsMap","handlersMap","$handler","slice","rootHandler","$event","parentElement","dispatchEvent","WeakMap","document","addEventListener","removeEventListener","detectIsEvent","attrName","startsWith","getEventName","toLowerCase","STYLE_ATTR","CLASS_ATTR","CLASS_NAME_ATTR","moves","patches","svgTagNames","voidTagNames","createNativeElementMap","detectIsSvgElement","createElementNS","createTextNode","createComment","createNativeElement","node","setObjectStyle","style","setProperty","toggleAttribute","setAttribute","removeAttribute","patchProperties","tagName","attrValue","patchPropertiesSpecialCasesMap","prototype","getPrototypeOf","descriptor","getOwnPropertyDescriptor","canSetProperty","includes","input","checked","autofocus","focus","textarea","innerText","commitMap","childNodes","nativeElement","Text","splitText","appendNativeElement","insertNativeElement","attrNames","tagElement","addAttributes","commitCreation","sourceNodes","elements","collectElements","sourceFragment","DocumentFragment","elementIdx","removeNativeElement","replaceNativeElement","prevInstance","nextInstance","textContent","prevNode","nextNode","prevAttrs","nextAttrs","getAttributeNames","prevAttrValue","nextAttrValue","updateAttributes","commitUpdate","canRemoveNativeElement","appendChild","sibling","insertBefore","insertNativeElementByIndex","candidate","replaceChild","removeChild","roots","requestAnimationFrame","cancelAnimationFrame","isInjected","SharedState","ctrls","flow","Flow","RIGHT","isTrail","isPaused","isCanceled","timeout","timerId","getCtrls","setCtrls","setIsTrail","getIsTrail","setFlow","getIsPaused","getIsCanceled","detectIsRightFlow","setIsPlaying","detectIsPlaying","start","pause","resume","delay","resetTimer","subs","completeSeries","defaultSpringConfig","tension","friction","mass","precision","fix","Atom","val","__connect","connections1","__","___","connections2","subjects","toString","toJSON","valueOf","disconnect","__addSubject","atom$","__removeSubject","make","tuple","__notify","WritableAtom","Spring","prop","prop$","setProp","atom","reduce","acc","notify","Number","toFixed","stepper","pos","vel","dest","step","config","nPos","nVel","spring","abs","Controller","results","completed","immediate","immediates","isReplaced","item","setKey","getIdx","setIdx","setFrom","setTo","to","setSpringConfigFn","springConfigFn","setLeft","setRight","setConfigurator","configurator","setImmediate","replaceValue","markAsFake","primaryKey","generateFakeKey","detectIsFake","getIsReplaced","setIsReplaced","getItem","setItem","getState","getSpring","config1","config2","play","frameId","motion","frameTime","MAX_SKIPPED_FRAMES","checkCompleted","fakeKey","items","ctrlsMap","itemsMap","ctrl","prepare","getController","animate","space","action","fakesMap","isEnter","Action","ENTER","isLeave","LEAVE","$idx","trail","$ctrl","isPlaying","fake","withTrail","enter","leave","rest","Animated","shuffle","randomIndex","currentIndex","floor","random","src","height","App","useRef","columns","queries","defaultValue","match","findIndex","q","matchMedia","matches","window","useMedia","setItems","width","setWidth","heights","gridItems","fill","column","min","y","transition","forceUpdate","hasReplaces","fromApi","inChain","render","api","chain","nextItems","selector","arr","uniq","$items","hasChanges","insMap","remMap","movMap","stabMap","replaced","prevItems","prevItem","nextItem","UPDATE","handleItemEnd","handleSeriesEnd","useTransition","opacity","t","setInterval","clearInterval","setSize","getBoundingClientRect","class","styleFn","setPropOf","k","v","getElementById","hydrate","isMounted","isHydrate","rootFiber","unmount","onCompleted","unmountRoot"],"sourceRoot":""}