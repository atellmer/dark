{"version":3,"file":"build.js","mappings":"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","sources":["webpack://dark-spring-masonry-grid/../../packages/core/src/constants.ts","webpack://dark-spring-masonry-grid/../../packages/core/src/utils/utils.ts","webpack://dark-spring-masonry-grid/../../packages/core/src/platform/platform.ts","webpack://dark-spring-masonry-grid/../../packages/core/src/emitter/emitter.ts","webpack://dark-spring-masonry-grid/../../packages/core/src/scope/scope.ts","webpack://dark-spring-masonry-grid/../../packages/core/src/component/component.ts","webpack://dark-spring-masonry-grid/../../packages/core/src/view/view.ts","webpack://dark-spring-masonry-grid/../../packages/core/src/fiber/fiber.ts","webpack://dark-spring-masonry-grid/../../packages/core/src/memo/memo.ts","webpack://dark-spring-masonry-grid/../../packages/core/src/walk/walk.ts","webpack://dark-spring-masonry-grid/../../packages/core/src/fragment/fragment.ts","webpack://dark-spring-masonry-grid/../../packages/core/src/use-memo/use-memo.ts","webpack://dark-spring-masonry-grid/../../packages/core/src/use-effect/use-effect.ts","webpack://dark-spring-masonry-grid/../../packages/core/src/use-layout-effect/use-layout-effect.ts","webpack://dark-spring-masonry-grid/../../packages/core/src/use-insertion-effect/use-insertion-effect.ts","webpack://dark-spring-masonry-grid/../../packages/core/src/unmount/unmount.ts","webpack://dark-spring-masonry-grid/../../packages/core/src/workloop/workloop.ts","webpack://dark-spring-masonry-grid/../../packages/core/src/scheduler/scheduler.ts","webpack://dark-spring-masonry-grid/../../packages/core/src/use-update/use-update.ts","webpack://dark-spring-masonry-grid/../../packages/core/src/batch/batch.ts","webpack://dark-spring-masonry-grid/../../packages/core/src/use-state/use-state.ts","webpack://dark-spring-masonry-grid/../../packages/core/src/use-callback/use-callback.ts","webpack://dark-spring-masonry-grid/../../packages/core/src/ref/ref.ts","webpack://dark-spring-masonry-grid/../../packages/core/src/element/element.ts","webpack://dark-spring-masonry-grid/../../packages/platform-browser/src/portal/portal.ts","webpack://dark-spring-masonry-grid/../../packages/platform-browser/src/events/events.ts","webpack://dark-spring-masonry-grid/../../packages/platform-browser/src/constants.ts","webpack://dark-spring-masonry-grid/../../packages/platform-browser/src/dom/dom.ts","webpack://dark-spring-masonry-grid/../../packages/platform-browser/src/render/render.ts","webpack://dark-spring-masonry-grid/../../packages/animations/src/state/state.ts","webpack://dark-spring-masonry-grid/../../packages/animations/src/shared/shared.ts","webpack://dark-spring-masonry-grid/../../packages/animations/src/preset/preset.ts","webpack://dark-spring-masonry-grid/../../packages/core/src/atom/atom.ts","webpack://dark-spring-masonry-grid/../../packages/animations/src/spring/spring.ts","webpack://dark-spring-masonry-grid/../../packages/animations/src/utils/utils.ts","webpack://dark-spring-masonry-grid/../../packages/animations/src/stepper/stepper.ts","webpack://dark-spring-masonry-grid/../../packages/animations/src/controller/controller.ts","webpack://dark-spring-masonry-grid/../../packages/animations/src/use-transition/use-transition.ts","webpack://dark-spring-masonry-grid/../../packages/animations/src/animated/animated.ts","webpack://dark-spring-masonry-grid/./index.tsx","webpack://dark-spring-masonry-grid/../../packages/platform-browser/src/create-root/create-root.tsx"],"sourcesContent":["export const VERSION = '0.25.1';\r\nexport const ROOT = 'dark:root';\r\nexport const REPLACER = 'dark:matter';\r\nexport const INDEX_KEY = 'dark:idx';\r\nexport const KEY_ATTR = 'key';\r\nexport const REF_ATTR = 'ref';\r\nexport const CREATE_EFFECT_TAG = 'C';\r\nexport const UPDATE_EFFECT_TAG = 'U';\r\nexport const DELETE_EFFECT_TAG = 'D';\r\nexport const SKIP_EFFECT_TAG = 'S';\r\nexport const INSERTION_EFFECT_HOST_MASK = 1;\r\nexport const LAYOUT_EFFECT_HOST_MASK = 2;\r\nexport const ASYNC_EFFECT_HOST_MASK = 4;\r\nexport const ATOM_HOST_MASK = 8;\r\nexport const PORTAL_HOST_MASK = 16;\r\nexport const SHADOW_MASK = 32;\r\nexport const FLUSH_MASK = 64;\r\nexport const MOVE_MASK = 128;\r\nexport const HOOK_DELIMETER = ':';\r\nexport const YIELD_INTERVAL = 6;\r\nexport const APP_STATE_ATTR = 'dark-app-state';\r\n\r\nexport enum TaskPriority {\r\n  LOW = 0,\r\n  NORMAL = 1,\r\n  HIGH = 2,\r\n}\r\n\r\nexport enum Flag {\r\n  SKIP_SCAN_OPT = '__skipScanOpt',\r\n  MEMO_SLOT_OPT = '__memoSlotOpt',\r\n  STATIC_SLOT_OPT = '__staticSlotOpt',\r\n}\r\n\r\nexport const FLAGS = {\r\n  __skipScanOpt: true,\r\n  __memoSlotOpt: true,\r\n  __staticSlotOpt: true,\r\n};\r\n\r\nexport const ATTR_BLACK_LIST = {\r\n  [KEY_ATTR]: true,\r\n  [REF_ATTR]: true,\r\n  [Flag.SKIP_SCAN_OPT]: true,\r\n  [Flag.MEMO_SLOT_OPT]: true,\r\n  [Flag.STATIC_SLOT_OPT]: true,\r\n};\r\n","import type { NestedArray } from '../shared';\r\nimport { INDEX_KEY } from '../constants';\r\n\r\nconst detectIsFunction = (o: any): o is Function => typeof o === 'function';\r\n\r\nconst detectIsUndefined = (o: any): o is undefined => typeof o === 'undefined';\r\n\r\nconst detectIsNumber = (o: any): o is number => typeof o === 'number';\r\n\r\nconst detectIsString = (o: any): o is string => typeof o === 'string';\r\n\r\nconst detectIsTextBased = (o: any): o is string | number => typeof o === 'string' || typeof o === 'number';\r\n\r\nconst detectIsObject = (o: any): o is object => typeof o === 'object';\r\n\r\nconst detectIsBoolean = (o: any): o is boolean => typeof o === 'boolean';\r\n\r\nconst detectIsArray = (o: any): o is Array<any> => Array.isArray(o);\r\n\r\nconst detectIsNull = (o: any): o is null => o === null;\r\n\r\nconst detectIsEmpty = (o: any) => detectIsNull(o) || detectIsUndefined(o);\r\n\r\nconst detectIsFalsy = (o: any) => detectIsEmpty(o) || o === false;\r\n\r\nconst getTime = () => Date.now();\r\n\r\nconst dummyFn = () => {};\r\n\r\nconst trueFn = () => true;\r\n\r\nconst falseFn = () => false;\r\n\r\nconst sameFn = <T = any>(x: T) => x;\r\n\r\nconst error = (...args: Array<any>) => !detectIsUndefined(console) && console.error(...args);\r\n\r\nfunction flatten<T = any>(source: Array<NestedArray<T>>, transform: (x: T) => any = sameFn): Array<T> {\r\n  if (detectIsArray(source)) {\r\n    if (source.length === 0) return [];\r\n  } else {\r\n    return [transform(source)];\r\n  }\r\n  const list: Array<T> = [];\r\n  const stack = [source[0]];\r\n  let idx = 0;\r\n\r\n  while (stack.length > 0) {\r\n    const x = stack.pop();\r\n\r\n    if (detectIsArray(x)) {\r\n      for (let i = x.length - 1; i >= 0; i--) {\r\n        stack.push(x[i]);\r\n      }\r\n    } else {\r\n      list.push(transform(x));\r\n\r\n      if (stack.length === 0 && idx < source.length - 1) {\r\n        idx++;\r\n        stack.push(source[idx]);\r\n      }\r\n    }\r\n  }\r\n\r\n  return list;\r\n}\r\n\r\nfunction keyBy<T = any>(\r\n  list: Array<T>,\r\n  fn: (o: T) => string | number,\r\n  value = false,\r\n): Record<string | number, T | boolean> {\r\n  return list.reduce((acc, x) => ((acc[fn(x)] = value ? x : true), acc), {});\r\n}\r\n\r\nfunction detectAreDepsDifferent(prevDeps: Array<unknown>, nextDeps: Array<unknown>): boolean {\r\n  if (prevDeps === nextDeps) return false;\r\n  const max = Math.max(prevDeps.length, nextDeps.length);\r\n\r\n  for (let i = 0; i < max; i++) {\r\n    if (!Object.is(prevDeps[i], nextDeps[i])) return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nfunction nextTick(callback: () => void) {\r\n  Promise.resolve().then(callback);\r\n}\r\n\r\nconst createIndexKey = (idx: number) => `${INDEX_KEY}:${idx}`;\r\n\r\nexport {\r\n  detectIsFunction,\r\n  detectIsUndefined,\r\n  detectIsNumber,\r\n  detectIsString,\r\n  detectIsTextBased,\r\n  detectIsObject,\r\n  detectIsBoolean,\r\n  detectIsArray,\r\n  detectIsNull,\r\n  detectIsEmpty,\r\n  detectIsFalsy,\r\n  getTime,\r\n  dummyFn,\r\n  trueFn,\r\n  falseFn,\r\n  error,\r\n  flatten,\r\n  keyBy,\r\n  detectAreDepsDifferent,\r\n  nextTick,\r\n  createIndexKey,\r\n};\r\n","import { type Fiber } from '../fiber';\r\nimport { type VirtualNode } from '../view';\r\nimport { type Callback } from '../shared';\r\n\r\nexport type Platform = {\r\n  createElement: <N>(vNode: VirtualNode) => N;\r\n  insertElement: <N>(node: N, idx: number, parent: N) => void;\r\n  raf: typeof requestAnimationFrame;\r\n  caf: typeof cancelAnimationFrame;\r\n  spawn: (callback: Callback) => void;\r\n  commit: (fiber: Fiber) => void;\r\n  finishCommit: () => void;\r\n  detectIsDynamic: () => boolean;\r\n  detectIsPortal: (instance: unknown) => boolean;\r\n  unmountPortal: (fiber: Fiber) => void;\r\n  chunk: (fiber: Fiber) => void;\r\n};\r\n\r\nconst defaultRealisation = () => {\r\n  throw new Error('Function not installed by renderer!');\r\n};\r\n\r\nconst platform: Platform = {\r\n  createElement: defaultRealisation,\r\n  insertElement: defaultRealisation,\r\n  raf: defaultRealisation,\r\n  caf: defaultRealisation,\r\n  spawn: defaultRealisation,\r\n  commit: defaultRealisation,\r\n  finishCommit: defaultRealisation,\r\n  detectIsDynamic: defaultRealisation,\r\n  detectIsPortal: defaultRealisation,\r\n  unmountPortal: defaultRealisation,\r\n  chunk: defaultRealisation,\r\n};\r\n\r\nconst detectIsServer = () => !platform.detectIsDynamic();\r\n\r\nexport { platform, detectIsServer };\r\n","import { type SubscriberWithValue } from '../shared';\r\n\r\ntype EventName = 'finish' | 'chunk';\r\n\r\nclass EventEmitter<E extends string = EventName, T = unknown> {\r\n  private subscribers: Map<Partial<E>, Set<SubscriberWithValue<unknown>>> = new Map();\r\n\r\n  on<T>(e: E, fn: SubscriberWithValue<T>) {\r\n    !this.subscribers.has(e) && this.subscribers.set(e, new Set());\r\n    this.subscribers.get(e).add(fn);\r\n\r\n    return () => this.subscribers.has(e) && this.subscribers.get(e).delete(fn);\r\n  }\r\n\r\n  emit(e: E, data?: T) {\r\n    this.subscribers.has(e) && this.subscribers.get(e).forEach(x => x(data));\r\n  }\r\n\r\n  kill() {\r\n    this.subscribers = new Map();\r\n  }\r\n\r\n  __getSize() {\r\n    return this.subscribers.size;\r\n  }\r\n}\r\n\r\nexport { EventEmitter };\r\n","import type { Callback, ElementKey, AppResources, AppResource } from '../shared';\r\nimport { type SetPendingStatus } from '../start-transition';\r\nimport { platform, detectIsServer } from '../platform';\r\nimport { EventEmitter } from '../emitter';\r\nimport { type Fiber } from '../fiber';\r\n\r\nclass Scope {\r\n  private root: Fiber = null;\r\n  private wip: Fiber = null;\r\n  private cursor: Fiber = null;\r\n  private unit: Fiber = null;\r\n  private mountDeep = true;\r\n  private mountLevel = 0;\r\n  private mountNav: Record<number, number> = {};\r\n  private events: Map<string, WeakMap<object, Function>> = new Map();\r\n  private unsubs: Set<Callback> = new Set();\r\n  private actions: Actions = {};\r\n  private candidates: Set<Fiber> = new Set();\r\n  private deletions: Set<Fiber> = new Set();\r\n  private cancels: Array<Callback> = [];\r\n  private asyncEffects: Set<Callback> = new Set();\r\n  private layoutEffects: Set<Callback> = new Set();\r\n  private insertionEffects: Set<Callback> = new Set();\r\n  private resourceId = 0;\r\n  private resources: AppResources = new Map();\r\n  private defers: Array<() => Promise<unknown>> = [];\r\n  private setPendingStatus: SetPendingStatus = null;\r\n  private isLayoutEffectsZone = false;\r\n  private isInsertionEffectsZone = false;\r\n  private isUpdateZone = false;\r\n  private isBatchZone = false;\r\n  private isHydrateZone = false;\r\n  private isStreamZone = false;\r\n  private isTransitionZone = false;\r\n  private isEventZone = false;\r\n  private isHot = false;\r\n  private isDynamic = platform.detectIsDynamic();\r\n  private isServer = detectIsServer();\r\n  private emitter = new EventEmitter();\r\n\r\n  private resetActions() {\r\n    this.actions = {};\r\n  }\r\n\r\n  getActionsById(id: number) {\r\n    return this.actions[id];\r\n  }\r\n\r\n  addActionMap(id: number, map: Record<ElementKey, Fiber>) {\r\n    this.actions[id] = {\r\n      map,\r\n      replace: null,\r\n      insert: null,\r\n      remove: null,\r\n      move: null,\r\n      stable: null,\r\n    };\r\n  }\r\n\r\n  addReplaceAction(id: number, nextKey: ElementKey) {\r\n    !this.actions[id].replace && (this.actions[id].replace = {});\r\n    this.actions[id].replace[nextKey] = true;\r\n  }\r\n\r\n  addInsertAction(id: number, nextKey: ElementKey) {\r\n    !this.actions[id].insert && (this.actions[id].insert = {});\r\n    this.actions[id].insert[nextKey] = true;\r\n  }\r\n\r\n  addRemoveAction(id: number, prevKey: ElementKey) {\r\n    !this.actions[id].remove && (this.actions[id].remove = {});\r\n    this.actions[id].remove[prevKey] = true;\r\n  }\r\n\r\n  addMoveAction(id: number, nextKey: ElementKey) {\r\n    !this.actions[id].move && (this.actions[id].move = {});\r\n    this.actions[id].move[nextKey] = true;\r\n  }\r\n\r\n  addStableAction(id: number, nextKey: ElementKey) {\r\n    !this.actions[id].stable && (this.actions[id].stable = {});\r\n    this.actions[id].stable[nextKey] = true;\r\n  }\r\n\r\n  copy() {\r\n    const scope = new Scope();\r\n\r\n    scope.root = null;\r\n    scope.wip = null;\r\n    scope.cursor = null;\r\n    scope.unit = this.unit;\r\n    scope.mountDeep = this.mountDeep;\r\n    scope.mountLevel = this.mountLevel;\r\n    scope.mountNav = { ...this.mountNav };\r\n    scope.events = this.events;\r\n    scope.unsubs = this.unsubs;\r\n    scope.actions = { ...this.actions };\r\n    scope.candidates = new Set([...this.candidates]);\r\n    scope.deletions = new Set([...this.deletions]);\r\n    scope.asyncEffects = new Set([...this.asyncEffects]);\r\n    scope.layoutEffects = new Set([...this.layoutEffects]);\r\n    scope.insertionEffects = new Set([...this.insertionEffects]);\r\n    scope.isUpdateZone = this.isUpdateZone;\r\n    scope.emitter = this.emitter;\r\n\r\n    return scope;\r\n  }\r\n\r\n  getRoot() {\r\n    return this.root;\r\n  }\r\n\r\n  setRoot(fiber: Fiber) {\r\n    this.root = fiber;\r\n  }\r\n\r\n  getWorkInProgress() {\r\n    return this.wip;\r\n  }\r\n\r\n  setWorkInProgress(fiber: Fiber) {\r\n    this.wip = fiber;\r\n  }\r\n\r\n  getNextUnitOfWork() {\r\n    return this.unit;\r\n  }\r\n\r\n  setNextUnitOfWork(fiber: Fiber) {\r\n    this.unit = fiber;\r\n  }\r\n\r\n  getCursorFiber() {\r\n    return this.cursor;\r\n  }\r\n\r\n  setCursorFiber(fiber: Fiber) {\r\n    this.cursor = fiber;\r\n  }\r\n\r\n  navToChild() {\r\n    this.mountLevel = this.mountLevel + 1;\r\n    this.mountNav[this.mountLevel] = 0;\r\n  }\r\n\r\n  navToSibling() {\r\n    this.mountNav[this.mountLevel] = this.mountNav[this.mountLevel] + 1;\r\n  }\r\n\r\n  navToParent() {\r\n    this.mountLevel = this.mountLevel - 1;\r\n  }\r\n\r\n  navToPrev() {\r\n    const idx = this.getMountIndex();\r\n\r\n    if (idx === 0) {\r\n      this.navToParent();\r\n      this.setMountDeep(true);\r\n    } else {\r\n      this.mountNav[this.mountLevel] = this.mountNav[this.mountLevel] - 1;\r\n      this.setMountDeep(false);\r\n    }\r\n  }\r\n\r\n  getMountIndex() {\r\n    return this.mountNav[this.mountLevel];\r\n  }\r\n\r\n  getMountDeep() {\r\n    return this.mountDeep;\r\n  }\r\n\r\n  setMountDeep(value: boolean) {\r\n    this.mountDeep = value;\r\n  }\r\n\r\n  resetMount() {\r\n    this.mountLevel = 0;\r\n    this.mountNav = {};\r\n    this.mountDeep = true;\r\n  }\r\n\r\n  getEvents() {\r\n    return this.events;\r\n  }\r\n\r\n  addEventUnsubscriber(fn: Callback) {\r\n    this.unsubs.add(fn);\r\n  }\r\n\r\n  unsubscribeEvents() {\r\n    this.unsubs.forEach(x => x());\r\n    this.unsubs = new Set();\r\n  }\r\n\r\n  getCandidates() {\r\n    return this.candidates;\r\n  }\r\n\r\n  addCandidate(fiber: Fiber) {\r\n    this.candidates.add(fiber);\r\n  }\r\n\r\n  resetCandidates() {\r\n    this.candidates = new Set();\r\n  }\r\n\r\n  getDeletions() {\r\n    return this.deletions;\r\n  }\r\n\r\n  hasDeletion(fiber: Fiber) {\r\n    let nextFiber = fiber;\r\n\r\n    while (nextFiber) {\r\n      if (this.deletions.has(nextFiber)) return true;\r\n      nextFiber = nextFiber.parent;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  addDeletion(fiber: Fiber) {\r\n    !this.hasDeletion(fiber) && this.deletions.add(fiber);\r\n  }\r\n\r\n  resetDeletions() {\r\n    this.deletions = new Set();\r\n  }\r\n\r\n  addAsyncEffect(fn: Callback) {\r\n    this.asyncEffects.add(fn);\r\n  }\r\n\r\n  resetAsyncEffects() {\r\n    this.asyncEffects = new Set();\r\n  }\r\n\r\n  runAsyncEffects() {\r\n    if (!this.isDynamic) return;\r\n    const effects = this.asyncEffects;\r\n    effects.size > 0 && setTimeout(() => effects.forEach(fn => fn()));\r\n  }\r\n\r\n  addLayoutEffect(fn: Callback) {\r\n    this.layoutEffects.add(fn);\r\n  }\r\n\r\n  resetLayoutEffects() {\r\n    this.layoutEffects = new Set();\r\n  }\r\n\r\n  runLayoutEffects() {\r\n    if (!this.isDynamic) return;\r\n    this.setIsLayoutEffectsZone(true);\r\n    this.layoutEffects.forEach(fn => fn());\r\n    this.setIsLayoutEffectsZone(false);\r\n  }\r\n\r\n  addInsertionEffect(fn: Callback) {\r\n    this.insertionEffects.add(fn);\r\n  }\r\n\r\n  resetInsertionEffects() {\r\n    this.insertionEffects = new Set();\r\n  }\r\n\r\n  runInsertionEffects() {\r\n    if (!this.isDynamic) return;\r\n    this.setIsInsertionEffectsZone(true);\r\n    this.insertionEffects.forEach(fn => fn());\r\n    this.setIsInsertionEffectsZone(false);\r\n  }\r\n\r\n  addCancel(fn: Callback) {\r\n    this.cancels.push(fn);\r\n  }\r\n\r\n  applyCancels() {\r\n    for (let i = this.cancels.length - 1; i >= 0; i--) {\r\n      this.cancels[i]();\r\n    }\r\n  }\r\n\r\n  resetCancels() {\r\n    this.cancels = [];\r\n  }\r\n\r\n  getIsLayoutEffectsZone() {\r\n    return this.isLayoutEffectsZone;\r\n  }\r\n\r\n  setIsLayoutEffectsZone(value: boolean) {\r\n    this.isLayoutEffectsZone = value;\r\n  }\r\n\r\n  getIsInsertionEffectsZone() {\r\n    return this.isInsertionEffectsZone;\r\n  }\r\n\r\n  setIsInsertionEffectsZone(value: boolean) {\r\n    this.isInsertionEffectsZone = value;\r\n  }\r\n\r\n  getIsUpdateZone() {\r\n    return this.isUpdateZone;\r\n  }\r\n\r\n  setIsUpdateZone(value: boolean) {\r\n    this.isUpdateZone = value;\r\n  }\r\n\r\n  getIsBatchZone() {\r\n    return this.isBatchZone;\r\n  }\r\n\r\n  setIsBatchZone(value: boolean) {\r\n    this.isBatchZone = value;\r\n  }\r\n\r\n  getIsHydrateZone() {\r\n    return this.isHydrateZone;\r\n  }\r\n\r\n  setIsHydrateZone(value: boolean) {\r\n    this.isHydrateZone = value;\r\n  }\r\n\r\n  getIsStreamZone() {\r\n    return this.isStreamZone;\r\n  }\r\n\r\n  setIsStreamZone(value: boolean) {\r\n    this.isStreamZone = value;\r\n  }\r\n\r\n  getIsTransitionZone() {\r\n    return this.isTransitionZone;\r\n  }\r\n\r\n  setIsTransitionZone(value: boolean) {\r\n    this.isTransitionZone = value;\r\n  }\r\n\r\n  getIsEventZone() {\r\n    return this.isEventZone;\r\n  }\r\n\r\n  setIsEventZone(value: boolean) {\r\n    this.isEventZone = value;\r\n  }\r\n\r\n  getIsHot() {\r\n    return this.isHot;\r\n  }\r\n\r\n  setIsHot(value: boolean) {\r\n    this.isHot = value;\r\n  }\r\n\r\n  getPendingStatusSetter() {\r\n    return this.setPendingStatus;\r\n  }\r\n\r\n  setPendingStatusSetter(fn: SetPendingStatus) {\r\n    this.setPendingStatus = fn;\r\n  }\r\n\r\n  flush() {\r\n    !this.isUpdateZone && this.setRoot(this.wip); // !\r\n    this.setWorkInProgress(null);\r\n    this.setNextUnitOfWork(null);\r\n    this.setCursorFiber(null);\r\n    this.resetMount();\r\n    this.resetCandidates();\r\n    this.resetDeletions();\r\n    this.resetCancels();\r\n    this.resetInsertionEffects();\r\n    this.resetLayoutEffects();\r\n    this.resetAsyncEffects();\r\n    this.setIsHydrateZone(false);\r\n    this.setIsUpdateZone(false);\r\n    this.resetActions();\r\n  }\r\n\r\n  getEmitter() {\r\n    return this.emitter;\r\n  }\r\n\r\n  defer(fn: () => Promise<unknown>) {\r\n    this.defers.push(fn);\r\n  }\r\n\r\n  getDefers() {\r\n    return this.defers;\r\n  }\r\n\r\n  resetDefers() {\r\n    this.defers = [];\r\n  }\r\n\r\n  getResource(id: number) {\r\n    return this.resources.get(id);\r\n  }\r\n\r\n  setResource(id: number, res: AppResource) {\r\n    this.resources.set(id, res);\r\n  }\r\n\r\n  getResources() {\r\n    return this.resources;\r\n  }\r\n\r\n  getResourceId() {\r\n    return this.resourceId;\r\n  }\r\n\r\n  setResourceId(id: number) {\r\n    this.resourceId = id;\r\n  }\r\n\r\n  getNextResourceId() {\r\n    return ++this.resourceId;\r\n  }\r\n\r\n  runAfterCommit() {\r\n    this.resources = new Map();\r\n    this.isServer && (this.resourceId = 0);\r\n  }\r\n}\r\n\r\ntype Actions = Record<\r\n  number,\r\n  {\r\n    map: Record<ElementKey, Fiber>;\r\n    replace: Record<ElementKey, true>;\r\n    insert: Record<ElementKey, true>;\r\n    remove: Record<ElementKey, true>;\r\n    move: Record<ElementKey, true>;\r\n    stable: Record<ElementKey, true>;\r\n  }\r\n>;\r\n\r\nlet rootId: number = null;\r\nconst scopes = new Map<number, Scope>();\r\n\r\nconst getRootId = () => rootId;\r\n\r\nconst setRootId = (id: number) => {\r\n  rootId = id;\r\n  !scopes.has(rootId) && scopes.set(rootId, new Scope());\r\n};\r\n\r\nconst removeScope = (id: number) => scopes.delete(id);\r\n\r\nconst replaceScope = (scope: Scope, id: number = rootId) => {\r\n  Object.assign(scopes.get(id), scope);\r\n};\r\n\r\nconst $$scope = (id: number = rootId) => scopes.get(id);\r\n\r\nexport { type Scope, getRootId, setRootId, removeScope, replaceScope, $$scope };\r\n","import type { ElementKey, Instance, DarkElement, RefProps, KeyProps, FlagProps } from '../shared';\r\nimport { KEY_ATTR } from '../constants';\r\nimport { error } from '../utils';\r\nimport { type Ref } from '../ref';\r\n\r\nconst $$inject = Symbol('inject');\r\nclass Component<P extends StandardComponentProps = any, R = any> {\r\n  public type: CreateElement<P>;\r\n  public props: P;\r\n  public ref?: Ref<R>;\r\n  public token?: Symbol;\r\n  public displayName?: string;\r\n  public shouldUpdate?: ShouldUpdate<P>;\r\n  public children: Array<Instance> = [];\r\n\r\n  constructor(\r\n    type: CreateElement<P>,\r\n    token: Symbol,\r\n    props: P,\r\n    ref: Ref<R>,\r\n    shouldUpdate: ShouldUpdate<P>,\r\n    displayName: string,\r\n  ) {\r\n    this.type = type;\r\n    this.props = props;\r\n    ref && (this.ref = ref);\r\n    token && (this.token = token);\r\n    shouldUpdate && (this.shouldUpdate = shouldUpdate);\r\n    displayName && (this.displayName = displayName);\r\n  }\r\n}\r\n\r\nfunction component<P extends object, R = unknown>(type: CreateElement<P, R>, options: ComponentOptions = {}) {\r\n  const { token: $token, displayName } = options;\r\n  type Props = P & StandardComponentProps;\r\n  const factory: ComponentFactoryWithPossiblyInject<Props, R> = (props = {} as Props, ref?: Ref<R>) => {\r\n    const { token = $token, shouldUpdate } = factory[$$inject] || defaultInject;\r\n\r\n    if (props.ref) {\r\n      delete props.ref;\r\n\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        process.env.NODE_ENV === 'development' &&\r\n          error(`[Dark]: To use ref you need to wrap the component with forwardRef!`);\r\n      }\r\n    }\r\n\r\n    return new Component(type, token, props, ref, shouldUpdate, displayName);\r\n  };\r\n\r\n  return factory as ComponentFactory<Props, R>;\r\n}\r\n\r\nconst defaultInject: ComponentInject = {};\r\n\r\nconst detectIsComponent = (x: unknown): x is Component => x instanceof Component;\r\n\r\nconst getComponentKey = (x: Component): ElementKey => x.props[KEY_ATTR] ?? null;\r\n\r\nconst hasComponentFlag = (inst: Component, flag: string) => Boolean(inst.props[flag]);\r\n\r\ntype ComponentOptions = Readonly<{\r\n  displayName?: string;\r\n  token?: Symbol;\r\n}>;\r\n\r\ntype ComponentFactoryWithPossiblyInject<P extends object = {}, R = unknown> = {\r\n  (props?: P, ref?: Ref<R>): Component<P, R>;\r\n  [$$inject]?: ComponentInject<P>;\r\n};\r\n\r\ntype CreateElement<P extends StandardComponentProps, R = unknown> = (props: P, ref?: Ref<R>) => DarkElement;\r\n\r\nexport type ComponentInject<P extends object = {}> = Readonly<{\r\n  token?: Symbol;\r\n  shouldUpdate?: ShouldUpdate<P>;\r\n}>;\r\n\r\nexport type ShouldUpdate<P> = (prevProps: P, nextProps: P) => boolean;\r\n\r\nexport type StandardComponentProps = KeyProps & RefProps & FlagProps;\r\n\r\nexport type ComponentFactory<P extends object = {}, R = unknown> = (props?: P, ref?: Ref<R>) => Component<P, R>;\r\n\r\nexport { Component, component, $$inject, detectIsComponent, getComponentKey, hasComponentFlag };\r\n","import type { ElementKey, DarkElement, Instance, SlotProps, RefProps, KeyProps, FlagProps } from '../shared';\r\nimport { type Component, detectIsComponent, getComponentKey, hasComponentFlag } from '../component';\r\nimport { detectIsArray, detectIsFunction } from '../utils';\r\nimport { REPLACER, KEY_ATTR } from '../constants';\r\nimport { $$scope } from '../scope';\r\n\r\nconst $$vNode = Symbol('vNode');\r\nconst ATTR_TYPE = 'type';\r\n\r\nclass VirtualNode {\r\n  public type: NodeType = null;\r\n\r\n  constructor(type: NodeType) {\r\n    this.type = type;\r\n  }\r\n}\r\n\r\nclass TagVirtualNode extends VirtualNode {\r\n  public name: string;\r\n  public attrs: Record<string, any>;\r\n  public children: Array<TextVirtualNode | CommentVirtualNode | TagVirtualNode | VirtualNodeFactory | Component>;\r\n\r\n  constructor(name: string, attrs: TagVirtualNode['attrs'], children: TagVirtualNode['children']) {\r\n    super(NodeType.TAG);\r\n    this.name = name;\r\n    this.attrs = attrs;\r\n    this.children = children;\r\n  }\r\n}\r\n\r\nclass TextVirtualNode extends VirtualNode {\r\n  public value: string;\r\n\r\n  constructor(source: TextSource) {\r\n    super(NodeType.TEXT);\r\n    this.value = String(source);\r\n  }\r\n}\r\n\r\nclass CommentVirtualNode extends VirtualNode {\r\n  public value = '';\r\n\r\n  constructor(text: string) {\r\n    super(NodeType.COMMENT);\r\n    this.value = text;\r\n  }\r\n}\r\n\r\nfunction View(options: ViewOptions) {\r\n  const factory: TagVirtualNodeFactory = () => {\r\n    const { as: name, slot, _void = false, ...attrs } = options;\r\n    const children = (_void ? [] : detectIsArray(slot) ? slot : slot ? [slot] : []) as TagVirtualNode['children'];\r\n\r\n    return new TagVirtualNode(name, attrs, children);\r\n  };\r\n\r\n  factory[$$vNode] = true;\r\n  factory[ATTR_TYPE] = options.as;\r\n  factory[KEY_ATTR] = options.key;\r\n\r\n  return factory;\r\n}\r\n\r\nconst Text = (source: TextSource) => new TextVirtualNode(source);\r\n\r\nText.from = (source: DarkElement) => (detectIsTextVirtualNode(source) ? source.value : source + '');\r\n\r\nconst Comment = (text: string) => new CommentVirtualNode(text);\r\n\r\nconst detectIsVirtualNode = (vNode: unknown): vNode is VirtualNode => vNode instanceof VirtualNode;\r\n\r\nconst detectIsTagVirtualNode = (vNode: unknown): vNode is TagVirtualNode => vNode instanceof TagVirtualNode;\r\n\r\nconst detectIsCommentVirtualNode = (vNode: unknown): vNode is CommentVirtualNode => vNode instanceof CommentVirtualNode;\r\n\r\nconst detectIsTextVirtualNode = (vNode: unknown): vNode is TextVirtualNode => vNode instanceof TextVirtualNode;\r\n\r\nconst detectIsVirtualNodeFactory = (factory: unknown): factory is VirtualNodeFactory =>\r\n  detectIsFunction(factory) && factory[$$vNode] === true;\r\n\r\nconst getTagVirtualNodeKey = (vNode: TagVirtualNode): ElementKey | null =>\r\n  vNode.attrs ? vNode.attrs[KEY_ATTR] ?? null : null;\r\n\r\nconst hasTagVirtualNodeFlag = (vNode: TagVirtualNode, flag: string) => Boolean(vNode.attrs && vNode.attrs[flag]);\r\n\r\nconst getVirtualNodeFactoryKey = (factory: VirtualNodeFactory): ElementKey | null => factory[KEY_ATTR] ?? null;\r\n\r\nconst hasVirtualNodeFactoryFlag = (factory: VirtualNodeFactory, flag: string) => Boolean(factory[flag]);\r\n\r\nconst detectIsPlainVirtualNode = (vNode: unknown): vNode is PlainVirtualNode =>\r\n  detectIsTextVirtualNode(vNode) || detectIsCommentVirtualNode(vNode);\r\n\r\nconst createReplacer = () => new CommentVirtualNode(REPLACER);\r\n\r\nconst detectIsReplacer = (vNode: unknown) => detectIsCommentVirtualNode(vNode) && vNode.value === REPLACER;\r\n\r\nfunction getElementKey(inst: Instance): ElementKey | null {\r\n  return detectIsComponent(inst)\r\n    ? getComponentKey(inst)\r\n    : detectIsVirtualNodeFactory(inst)\r\n    ? getVirtualNodeFactoryKey(inst)\r\n    : detectIsTagVirtualNode(inst)\r\n    ? getTagVirtualNodeKey(inst)\r\n    : null;\r\n}\r\n\r\nfunction hasElementFlag(inst: Instance, flag: string) {\r\n  return detectIsComponent(inst)\r\n    ? hasComponentFlag(inst, flag)\r\n    : detectIsVirtualNodeFactory(inst)\r\n    ? hasVirtualNodeFactoryFlag(inst, flag)\r\n    : detectIsTagVirtualNode(inst)\r\n    ? hasTagVirtualNodeFlag(inst, flag)\r\n    : false;\r\n}\r\n\r\nfunction getElementType(inst: Instance): string | Function {\r\n  return detectIsComponent(inst)\r\n    ? inst.type\r\n    : detectIsVirtualNodeFactory(inst)\r\n    ? inst[ATTR_TYPE]\r\n    : detectIsTagVirtualNode(inst)\r\n    ? inst.name\r\n    : detectIsVirtualNode(inst)\r\n    ? inst.type\r\n    : null;\r\n}\r\n\r\nfunction hasChildrenProp(inst: Instance): inst is TagVirtualNode | Component {\r\n  return detectIsTagVirtualNode(inst) || detectIsComponent(inst);\r\n}\r\n\r\nfunction detectAreSameInstanceTypes(prevInst: Instance, nextInst: Instance, isComponentFactories = false) {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    if (process.env.NODE_ENV === 'development' && $$scope().getIsHot()) {\r\n      if (detectIsComponent(prevInst) && detectIsComponent(nextInst)) {\r\n        return prevInst.displayName === nextInst.displayName;\r\n      }\r\n    }\r\n  }\r\n\r\n  if (isComponentFactories) {\r\n    const pc = prevInst as Component;\r\n    const nc = nextInst as Component;\r\n\r\n    return pc.type === nc.type;\r\n  }\r\n\r\n  return getElementType(prevInst) === getElementType(nextInst);\r\n}\r\n\r\nfunction detectAreSameComponentTypesWithSameKeys(prevInst: Instance | null, nextInst: Instance | null) {\r\n  if (\r\n    prevInst &&\r\n    nextInst &&\r\n    detectIsComponent(prevInst) &&\r\n    detectIsComponent(nextInst) &&\r\n    detectAreSameInstanceTypes(prevInst, nextInst, true)\r\n  ) {\r\n    return getElementKey(prevInst) === getElementKey(nextInst);\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\ntype TextSource = string | number;\r\n\r\nexport type VirtualNodeFactory = () => VirtualNode;\r\n\r\nexport type TagVirtualNodeFactory = () => TagVirtualNode;\r\n\r\nexport type PlainVirtualNode = TextVirtualNode | CommentVirtualNode;\r\n\r\nexport type ViewOptions = {\r\n  as: string;\r\n  _void?: boolean;\r\n  [prop: string]: any;\r\n} & Partial<SlotProps> &\r\n  RefProps &\r\n  KeyProps &\r\n  FlagProps;\r\n\r\nexport enum NodeType {\r\n  TAG = 'TAG',\r\n  TEXT = 'TEXT',\r\n  COMMENT = 'COMMENT',\r\n}\r\n\r\nexport {\r\n  View,\r\n  Text,\r\n  Comment,\r\n  VirtualNode,\r\n  TagVirtualNode,\r\n  TextVirtualNode,\r\n  CommentVirtualNode,\r\n  createReplacer,\r\n  detectIsReplacer,\r\n  getElementKey,\r\n  hasElementFlag,\r\n  getElementType,\r\n  hasChildrenProp,\r\n  detectIsVirtualNode,\r\n  detectIsTagVirtualNode,\r\n  detectIsCommentVirtualNode,\r\n  detectIsTextVirtualNode,\r\n  detectIsPlainVirtualNode,\r\n  detectIsVirtualNodeFactory,\r\n  detectAreSameInstanceTypes,\r\n  detectAreSameComponentTypesWithSameKeys,\r\n};\r\n","import { detectIsTagVirtualNode, detectIsPlainVirtualNode, detectAreSameComponentTypesWithSameKeys } from '../view';\r\nimport { type Instance, type Callback, type TimerId } from '../shared';\r\nimport { type Context, type ContextProviderValue } from '../context';\r\nimport { detectIsComponent } from '../component';\r\nimport { detectIsFunction } from '../utils';\r\nimport { type Atom } from '../atom';\r\nimport { $$scope } from '../scope';\r\n\r\nclass Fiber<N = NativeElement> {\r\n  id = 0;\r\n  cc = 0; // child fibers count\r\n  cec = 0; // child native elements count\r\n  idx = 0; // idx of fiber in the parent fiber\r\n  eidx = 0; // native element idx\r\n  mask = 0; // bit mask\r\n  element: N = null; // native element\r\n  tag: string = null; // effect tag (CREATE, UPDATE, DELETE, SKIP)\r\n  parent: Fiber<N> = null; // parent fiber\r\n  child: Fiber<N> = null; // child fiber\r\n  next: Fiber<N> = null; // next sibling fiber\r\n  alt: Fiber<N> = null; // alternate fiber (previous)\r\n  inst: Instance = null; // instance of component or virtual node\r\n  hook: Hook | null = null; // hook\r\n  provider: Map<Context, ContextProviderValue> = null; // provider of context\r\n  atoms: Map<Atom, Callback> = null;\r\n  marker: string; // for dev\r\n  batch: Batch;\r\n  catch: (error: Error) => void;\r\n\r\n  constructor(hook: Hook = null, provider: Fiber['provider'] = null, idx = 0) {\r\n    this.id = ++Fiber.nextId;\r\n    this.idx = idx;\r\n    hook && (this.hook = hook);\r\n    provider && (this.provider = provider);\r\n  }\r\n\r\n  mutate(fiber: Partial<Fiber<N>>) {\r\n    const keys = Object.keys(fiber);\r\n\r\n    for (const key of keys) {\r\n      this[key] = fiber[key];\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  markHost(mask: number) {\r\n    this.mask |= mask;\r\n    this.parent && !(this.parent.mask & mask) && this.parent.markHost(mask);\r\n  }\r\n\r\n  increment(count = 1, force = false) {\r\n    if (!this.parent) return;\r\n    const $scope = $$scope();\r\n    const isUpdateZone = $scope.getIsUpdateZone();\r\n    const wipFiber = $scope.getWorkInProgress();\r\n    const stop = isUpdateZone && wipFiber.parent === this.parent;\r\n\r\n    if (\r\n      detectIsPlainVirtualNode(this.inst) ||\r\n      (detectIsTagVirtualNode(this.inst) && this.inst.children?.length === 0)\r\n    ) {\r\n      this.cec = 1;\r\n    }\r\n\r\n    if (isUpdateZone && stop && !force) return;\r\n\r\n    this.parent.cec += count;\r\n\r\n    if (!this.parent.element) {\r\n      this.parent.increment(count);\r\n    }\r\n  }\r\n\r\n  setError(error: Error) {\r\n    if (detectIsFunction(this.catch)) {\r\n      this.catch(error);\r\n    } else if (this.parent) {\r\n      this.parent.setError(error);\r\n    }\r\n  }\r\n\r\n  static setNextId(id: number) {\r\n    Fiber.nextId = id;\r\n  }\r\n\r\n  private static nextId = 0;\r\n}\r\n\r\nclass Hook<T = any> {\r\n  id = 0;\r\n  idx = 0;\r\n  values: Array<T> = [];\r\n  owner: Fiber = null;\r\n  private static nextId = 0;\r\n\r\n  constructor() {\r\n    this.id = ++Hook.nextId;\r\n  }\r\n}\r\n\r\nfunction getHook(alt: Fiber, prevInst: Instance, nextInst: Instance): Hook | null {\r\n  if (alt && detectAreSameComponentTypesWithSameKeys(prevInst, nextInst)) return alt.hook;\r\n  if (detectIsComponent(nextInst)) return new Hook();\r\n\r\n  return null;\r\n}\r\n\r\ntype Batch = {\r\n  timer: TimerId;\r\n  changes: Array<Callback>;\r\n};\r\n\r\nexport type NativeElement = unknown;\r\nexport type HookValue<T = any> = { deps: Array<any>; value: T };\r\n\r\nexport { Fiber, Hook, getHook };\r\n","import {\r\n  type ComponentFactory,\r\n  type StandardComponentProps,\r\n  type ShouldUpdate,\r\n  type ComponentInject,\r\n  $$inject,\r\n  detectIsComponent,\r\n} from '../component';\r\nimport type { SlotProps, RefProps } from '../shared';\r\n\r\nconst $$memo = Symbol('memo');\r\n\r\nconst defaultShouldUpdate = (props: {}, nextProps: {}): boolean => {\r\n  const keys = Object.keys(nextProps);\r\n\r\n  for (const key of keys) {\r\n    if (key !== 'slot' && nextProps[key] !== props[key]) return true;\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\nfunction memo<P extends object, R = unknown>(\r\n  factory: ComponentFactory<P, R>,\r\n  shouldUpdate: ShouldUpdate<P & SlotProps> = defaultShouldUpdate,\r\n) {\r\n  type P1 = P & Omit<StandardComponentProps, 'ref'> & RefProps<R>;\r\n\r\n  factory[$$inject] = {\r\n    token: $$memo,\r\n    shouldUpdate,\r\n  } as ComponentInject<P1>;\r\n\r\n  return factory as ComponentFactory<P1, R>;\r\n}\r\n\r\nconst detectIsMemo = (instance: unknown) => detectIsComponent(instance) && instance.token === $$memo;\r\n\r\nexport { memo, detectIsMemo };\r\n","import {\r\n  DELETE_EFFECT_TAG,\r\n  UPDATE_EFFECT_TAG,\r\n  SKIP_EFFECT_TAG,\r\n  INSERTION_EFFECT_HOST_MASK,\r\n  LAYOUT_EFFECT_HOST_MASK,\r\n  ASYNC_EFFECT_HOST_MASK,\r\n  ATOM_HOST_MASK,\r\n  PORTAL_HOST_MASK,\r\n  MOVE_MASK,\r\n  HOOK_DELIMETER,\r\n} from '../constants';\r\nimport { Fiber } from '../fiber';\r\nimport { platform } from '../platform';\r\nimport { type TagVirtualNode, getElementKey, hasChildrenProp } from '../view';\r\nimport { type Scope } from '../scope';\r\nimport { type Component } from '../component';\r\nimport { detectIsMemo } from '../memo';\r\nimport { type Instance, type ElementKey } from '../shared';\r\nimport { createIndexKey } from '../utils';\r\n\r\nfunction walk<T = unknown>(fiber: Fiber<T>, onWalk: (fiber: Fiber<T>, skip: () => void, stop: () => void) => void) {\r\n  let shouldDeep = true;\r\n  let shouldStop = false;\r\n  const skip = () => (shouldDeep = false);\r\n  const stop = () => (shouldStop = true);\r\n  const stack: Array<Fiber<T>> = [fiber];\r\n\r\n  while (stack.length !== 0) {\r\n    const unit = stack.pop();\r\n\r\n    onWalk(unit, skip, stop);\r\n    if (shouldStop) break;\r\n    unit !== fiber && unit.next && stack.push(unit.next);\r\n    shouldDeep && unit.child && stack.push(unit.child);\r\n    shouldDeep = true;\r\n  }\r\n}\r\n\r\nfunction collectElements<T, P = T>(fiber: Fiber<T>, transform: (fiber: Fiber<T>) => P): Array<P> {\r\n  const elements: Array<P> = [];\r\n\r\n  walk<T>(fiber, (fiber, skip) => {\r\n    if (fiber.element) {\r\n      !platform.detectIsPortal(fiber.inst) && elements.push(transform(fiber));\r\n      return skip();\r\n    }\r\n  });\r\n\r\n  return elements;\r\n}\r\n\r\nfunction getFiberWithElement<T1, T2 = T1>(fiber: Fiber<T1>): Fiber<T2> {\r\n  let $fiber = fiber as unknown as Fiber<T2>;\r\n\r\n  while ($fiber) {\r\n    if ($fiber.element) return $fiber;\r\n    $fiber = $fiber.parent;\r\n  }\r\n\r\n  return $fiber;\r\n}\r\n\r\nfunction detectIsFiberAlive(fiber: Fiber) {\r\n  let $fiber = fiber;\r\n\r\n  while ($fiber) {\r\n    if ($fiber.tag === DELETE_EFFECT_TAG) return false;\r\n    $fiber = $fiber.parent;\r\n  }\r\n\r\n  return Boolean(fiber);\r\n}\r\n\r\nfunction createHookLocation(rootId: number, idx: number, fiber: Fiber) {\r\n  let $fiber = fiber;\r\n  let loc = `${fiber.idx}${HOOK_DELIMETER}${idx}`;\r\n\r\n  while ($fiber) {\r\n    $fiber = $fiber.parent;\r\n    $fiber && (loc = `${$fiber.idx}.${loc}`);\r\n  }\r\n\r\n  loc = `[${rootId}]${loc}`;\r\n\r\n  return loc;\r\n}\r\n\r\nfunction detectIsStableMemoTree(fiber: Fiber, $scope: Scope) {\r\n  if (!hasChildrenProp(fiber.inst)) return;\r\n  const actions = $scope.getActionsById(fiber.id);\r\n  const children = fiber.inst.children;\r\n\r\n  for (let i = 0; i < children.length; i++) {\r\n    const inst = children[i];\r\n    const key = getElementKey(inst);\r\n    if (key === null) return false;\r\n    const alt = actions.map[key];\r\n    if (!alt) return false;\r\n    const pc = alt.inst as Component;\r\n    const nc = inst as Component;\r\n    const isStable =\r\n      detectIsMemo(nc) && detectIsMemo(pc) && nc.type === pc.type && !nc.shouldUpdate(pc.props, nc.props);\r\n\r\n    if (!isStable) return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction tryOptStaticSlot(fiber: Fiber, alt: Fiber, $scope: Scope) {\r\n  const actions = $scope.getActionsById(fiber.id);\r\n  const inst = fiber.inst as Component | TagVirtualNode;\r\n\r\n  alt.element && (fiber.element = alt.element); //!\r\n\r\n  for (let i = 0; i < inst.children.length; i++) {\r\n    buildChildNode(inst.children, fiber, actions.map, i, fiber.eidx);\r\n  }\r\n\r\n  fiber.cc = inst.children.length;\r\n  $scope.setMountDeep(false);\r\n}\r\n\r\nfunction tryOptMemoSlot(fiber: Fiber, alt: Fiber, $scope: Scope) {\r\n  const actions = $scope.getActionsById(fiber.id);\r\n  const hasMove = Boolean(actions.move);\r\n  const hasRemove = Boolean(actions.remove);\r\n  const hasInsert = Boolean(actions.insert);\r\n  const hasReplace = Boolean(actions.insert);\r\n  const canOptimize = ((hasMove && !hasRemove) || (hasRemove && !hasMove)) && !hasInsert && !hasReplace;\r\n\r\n  if (!canOptimize || !detectIsStableMemoTree(fiber, $scope)) return;\r\n\r\n  hasMove && tryOptMov(fiber, alt, $scope);\r\n  hasRemove && tryOptRem(fiber, alt, $scope);\r\n}\r\n\r\nfunction tryOptMov(fiber: Fiber, alt: Fiber, $scope: Scope) {\r\n  const actions = $scope.getActionsById(fiber.id);\r\n\r\n  buildChildNodes(fiber, alt, $scope, (fiber, key) => {\r\n    if (!actions.move[key]) return;\r\n    fiber.alt = new Fiber().mutate(fiber);\r\n    fiber.tag = UPDATE_EFFECT_TAG;\r\n    fiber.mask |= MOVE_MASK;\r\n    $scope.addCandidate(fiber);\r\n  });\r\n}\r\n\r\nfunction tryOptRem(fiber: Fiber, alt: Fiber, $scope: Scope) {\r\n  buildChildNodes(fiber, alt, $scope);\r\n}\r\n\r\nfunction buildChildNodes(fiber: Fiber, alt: Fiber, $scope: Scope, onNode?: (fiber: Fiber, key: ElementKey) => void) {\r\n  const actions = $scope.getActionsById(fiber.id);\r\n  const inst = fiber.inst as Component | TagVirtualNode;\r\n  const children = inst.children;\r\n\r\n  alt.element && (fiber.element = alt.element); //!\r\n\r\n  for (let i = 0; i < children.length; i++) {\r\n    const key = getKey(children[i], i);\r\n    const $fiber = actions.map[key];\r\n\r\n    buildChildNode(children, fiber, actions.map, i, fiber.eidx);\r\n    onNode && onNode($fiber, key);\r\n  }\r\n\r\n  fiber.cc = children.length;\r\n  $scope.setMountDeep(false);\r\n}\r\n\r\nfunction buildChildNode(\r\n  children: Array<Instance>,\r\n  parent: Fiber,\r\n  altMap: Record<string, Fiber>,\r\n  idx: number,\r\n  startEidx: number,\r\n) {\r\n  const prevIdx = idx - 1;\r\n  const nextIdx = idx + 1;\r\n  const key = getKey(children[idx], idx);\r\n  const prevKey = getKey(children[prevIdx], prevIdx);\r\n  const nextKey = getKey(children[nextIdx], nextIdx);\r\n  const fiber = altMap[key];\r\n  const left = altMap[prevKey];\r\n  const right = altMap[nextKey];\r\n  const isFirst = idx === 0;\r\n  const isLast = idx === children.length - 1;\r\n\r\n  isFirst && (parent.child = fiber);\r\n  fiber.alt = null;\r\n  fiber.parent = parent;\r\n  fiber.tag = SKIP_EFFECT_TAG;\r\n  fiber.idx = idx;\r\n  left ? (fiber.eidx = left.eidx + (left.element ? 1 : left.cec)) : (fiber.eidx = startEidx);\r\n  right && (fiber.next = right);\r\n  isLast && (fiber.next = null);\r\n  notifyParents(fiber);\r\n}\r\n\r\nfunction getKey(inst: Instance, idx: number) {\r\n  const key = getElementKey(inst);\r\n  return key !== null ? key : createIndexKey(idx);\r\n}\r\n\r\nfunction notifyParents(fiber: Fiber, alt: Fiber = fiber) {\r\n  fiber.increment(alt.element ? 1 : alt.cec);\r\n  alt.mask & INSERTION_EFFECT_HOST_MASK && fiber.markHost(INSERTION_EFFECT_HOST_MASK);\r\n  alt.mask & LAYOUT_EFFECT_HOST_MASK && fiber.markHost(LAYOUT_EFFECT_HOST_MASK);\r\n  alt.mask & ASYNC_EFFECT_HOST_MASK && fiber.markHost(ASYNC_EFFECT_HOST_MASK);\r\n  alt.mask & ATOM_HOST_MASK && fiber.markHost(ATOM_HOST_MASK);\r\n  alt.mask & PORTAL_HOST_MASK && fiber.markHost(PORTAL_HOST_MASK);\r\n}\r\n\r\nexport {\r\n  walk,\r\n  collectElements,\r\n  getFiberWithElement,\r\n  detectIsFiberAlive,\r\n  createHookLocation,\r\n  tryOptStaticSlot,\r\n  tryOptMemoSlot,\r\n  notifyParents,\r\n};\r\n","import { component, detectIsComponent } from '../component';\r\nimport type { KeyProps, SlotProps } from '../shared';\r\n\r\ntype FragmentProps = Required<SlotProps> & KeyProps;\r\n\r\nconst $$fragment = Symbol('fragment');\r\n\r\nconst Fragment = component<FragmentProps>(({ slot }) => slot || null, { token: $$fragment });\r\n\r\nconst detectIsFragment = (instance: unknown) => detectIsComponent(instance) && instance.token === $$fragment;\r\n\r\nexport { Fragment, detectIsFragment };\r\n","import { type VirtualNodeFactory, detectIsVirtualNodeFactory } from '../view';\r\nimport { type Component, detectIsComponent, component } from '../component';\r\nimport { type Hook, type HookValue } from '../fiber';\r\nimport { detectAreDepsDifferent } from '../utils';\r\nimport { $$scope } from '../scope';\r\nimport { memo } from '../memo';\r\n\r\ntype GetMemoValue = () => Component | VirtualNodeFactory;\r\n\r\ntype MemoProps = {\r\n  deps: Array<any>;\r\n  getValue: GetMemoValue;\r\n};\r\n\r\nconst Memo = memo(\r\n  component<MemoProps>(({ getValue }) => getValue()),\r\n  (p, n) => detectAreDepsDifferent(p.deps, n.deps),\r\n);\r\n\r\nfunction detectIsElement<T>(value: T) {\r\n  return detectIsComponent(value) || detectIsVirtualNodeFactory(value);\r\n}\r\n\r\nfunction useMemo<T>(getValue: () => T, deps: Array<any>): T {\r\n  const fiber = $$scope().getCursorFiber();\r\n  const { hook } = fiber;\r\n  const { idx, values } = hook as Hook<HookValue<T>>;\r\n  const state =\r\n    values[idx] ||\r\n    (values[idx] = {\r\n      deps,\r\n      value: getValue(),\r\n    });\r\n  let value: T = null;\r\n  let $value: T = null;\r\n\r\n  if (detectIsElement(state.value)) {\r\n    value = state.value;\r\n    $value = Memo({ getValue: getValue as GetMemoValue, deps }) as unknown as T;\r\n  } else {\r\n    value = detectAreDepsDifferent(state.deps, deps) ? getValue() : state.value;\r\n    $value = value;\r\n  }\r\n\r\n  state.deps = deps;\r\n  state.value = value;\r\n  hook.idx++;\r\n\r\n  return $value;\r\n}\r\n\r\nexport { useMemo };\r\n","import { detectIsFunction } from '../utils';\r\nimport { INSERTION_EFFECT_HOST_MASK, LAYOUT_EFFECT_HOST_MASK, ASYNC_EFFECT_HOST_MASK } from '../constants';\r\nimport { $$scope } from '../scope';\r\nimport { useMemo } from '../use-memo';\r\nimport { type Hook, type HookValue } from '../fiber';\r\n\r\nconst $$useEffect = Symbol('use-effect');\r\n\r\ntype UseEffectValue = {\r\n  token: Symbol;\r\n  cleanup: DropEffect;\r\n};\r\n\r\nfunction createEffect(token: Symbol, type: EffectType) {\r\n  function useEffect(effect: Effect, deps: Array<any> = [{}]) {\r\n    const $scope = $$scope();\r\n    const fiber = $scope.getCursorFiber();\r\n    const scope = useMemo<UseEffectValue>(() => ({ token, cleanup: undefined }), []);\r\n    const isInsertionEffect = type === EffectType.INSERTION;\r\n    const isLayoutEffect = type === EffectType.LAYOUT;\r\n    const isAsyncEffect = type === EffectType.ASYNC;\r\n\r\n    isInsertionEffect && fiber.markHost(INSERTION_EFFECT_HOST_MASK);\r\n    isLayoutEffect && fiber.markHost(LAYOUT_EFFECT_HOST_MASK);\r\n    isAsyncEffect && fiber.markHost(ASYNC_EFFECT_HOST_MASK);\r\n\r\n    useMemo(() => {\r\n      const runEffect = () => (scope.cleanup = effect());\r\n\r\n      isInsertionEffect && $scope.addInsertionEffect(runEffect);\r\n      isLayoutEffect && $scope.addLayoutEffect(runEffect);\r\n      isAsyncEffect && $scope.addAsyncEffect(runEffect);\r\n\r\n      detectIsFunction(scope.cleanup) && scope.cleanup();\r\n\r\n      return null;\r\n    }, deps);\r\n  }\r\n\r\n  function dropEffects(hook: Hook<HookValue<UseEffectValue>>) {\r\n    for (const { value: effect } of hook.values) {\r\n      effect && effect.token === token && detectIsFunction(effect.cleanup) && effect.cleanup();\r\n    }\r\n  }\r\n\r\n  return {\r\n    useEffect,\r\n    dropEffects,\r\n  };\r\n}\r\n\r\nexport type DropEffect = void | (() => void);\r\n\r\nexport type Effect = () => DropEffect;\r\n\r\nexport enum EffectType {\r\n  ASYNC = 'ASYNC',\r\n  LAYOUT = 'LAYOUT',\r\n  INSERTION = 'INSERTION',\r\n}\r\n\r\nconst { useEffect, dropEffects } = createEffect($$useEffect, EffectType.ASYNC);\r\n\r\nexport { useEffect, dropEffects, createEffect };\r\n","import { createEffect, EffectType } from '../use-effect';\r\n\r\nconst $$useLayoutEffect = Symbol('use-layout-effect');\r\nconst { useEffect: useLayoutEffect, dropEffects: dropLayoutEffects } = createEffect(\r\n  $$useLayoutEffect,\r\n  EffectType.LAYOUT,\r\n);\r\n\r\nexport { useLayoutEffect, dropLayoutEffects };\r\n","import { createEffect, EffectType } from '../use-effect';\r\n\r\nconst $$useInsertionEffect = Symbol('use-insertion-effect');\r\nconst { useEffect: useInsertionEffect, dropEffects: dropInsertionEffects } = createEffect(\r\n  $$useInsertionEffect,\r\n  EffectType.INSERTION,\r\n);\r\n\r\nexport { useInsertionEffect, dropInsertionEffects };\r\n","import { type Fiber } from '../fiber';\r\nimport { platform } from '../platform';\r\nimport { dropEffects } from '../use-effect';\r\nimport { dropLayoutEffects } from '../use-layout-effect';\r\nimport { dropInsertionEffects } from '../use-insertion-effect';\r\nimport { walk } from '../walk';\r\nimport { detectIsUndefined } from '../utils';\r\nimport { removeScope, $$scope } from '../scope';\r\nimport {\r\n  INSERTION_EFFECT_HOST_MASK,\r\n  LAYOUT_EFFECT_HOST_MASK,\r\n  ASYNC_EFFECT_HOST_MASK,\r\n  ATOM_HOST_MASK,\r\n  PORTAL_HOST_MASK,\r\n} from '../constants';\r\n\r\nconst combinedMask =\r\n  INSERTION_EFFECT_HOST_MASK | LAYOUT_EFFECT_HOST_MASK | ASYNC_EFFECT_HOST_MASK | ATOM_HOST_MASK | PORTAL_HOST_MASK;\r\n\r\nconst shouldUnmountFiber = (fiber: Fiber) => fiber.mask & combinedMask;\r\n\r\nfunction unmountFiber(fiber: Fiber) {\r\n  if (!shouldUnmountFiber(fiber)) return;\r\n  walk(fiber, (fiber, skip) => {\r\n    if (!shouldUnmountFiber(fiber)) return skip();\r\n\r\n    if (fiber.hook && fiber.hook.values.length > 0) {\r\n      fiber.mask & INSERTION_EFFECT_HOST_MASK && dropInsertionEffects(fiber.hook);\r\n      fiber.mask & LAYOUT_EFFECT_HOST_MASK && dropLayoutEffects(fiber.hook);\r\n      fiber.mask & ASYNC_EFFECT_HOST_MASK && dropEffects(fiber.hook);\r\n    }\r\n\r\n    if (fiber.atoms) {\r\n      for (const [_, cleanup] of fiber.atoms) {\r\n        cleanup();\r\n      }\r\n      fiber.atoms = null;\r\n    }\r\n\r\n    fiber.mask & PORTAL_HOST_MASK && platform.unmountPortal(fiber);\r\n  });\r\n}\r\n\r\nfunction unmountRoot(rootId: number, onCompleted: () => void) {\r\n  if (detectIsUndefined(rootId)) return;\r\n  const $scope = $$scope(rootId);\r\n\r\n  unmountFiber($scope.getRoot());\r\n  $scope.unsubscribeEvents();\r\n  removeScope(rootId);\r\n  onCompleted();\r\n}\r\n\r\nexport { unmountFiber, unmountRoot };\r\n","import { platform } from '../platform';\r\nimport {\r\n  CREATE_EFFECT_TAG,\r\n  UPDATE_EFFECT_TAG,\r\n  DELETE_EFFECT_TAG,\r\n  SKIP_EFFECT_TAG,\r\n  INSERTION_EFFECT_HOST_MASK,\r\n  LAYOUT_EFFECT_HOST_MASK,\r\n  ASYNC_EFFECT_HOST_MASK,\r\n  ATOM_HOST_MASK,\r\n  PORTAL_HOST_MASK,\r\n  MOVE_MASK,\r\n  FLUSH_MASK,\r\n  SHADOW_MASK,\r\n  Flag,\r\n} from '../constants';\r\nimport {\r\n  flatten,\r\n  error,\r\n  detectIsEmpty,\r\n  detectIsFalsy,\r\n  detectIsArray,\r\n  detectIsFunction,\r\n  detectIsTextBased,\r\n  createIndexKey,\r\n  trueFn,\r\n} from '../utils';\r\nimport { type Scope, setRootId, $$scope, replaceScope } from '../scope';\r\nimport { type Component, detectIsComponent } from '../component';\r\nimport { type ElementKey, type Instance } from '../shared';\r\nimport { Fiber, getHook, Hook } from '../fiber';\r\nimport {\r\n  Text,\r\n  detectIsVirtualNode,\r\n  detectIsVirtualNodeFactory,\r\n  getElementKey,\r\n  hasElementFlag,\r\n  hasChildrenProp,\r\n  detectIsReplacer,\r\n  createReplacer,\r\n  detectAreSameInstanceTypes,\r\n} from '../view';\r\nimport { detectIsMemo } from '../memo';\r\nimport {\r\n  walk,\r\n  getFiberWithElement,\r\n  detectIsFiberAlive,\r\n  notifyParents,\r\n  tryOptStaticSlot,\r\n  tryOptMemoSlot,\r\n} from '../walk';\r\nimport { type RestoreOptions, scheduler } from '../scheduler';\r\nimport { Fragment, detectIsFragment } from '../fragment';\r\nimport { unmountFiber } from '../unmount';\r\n\r\nlet hasPendingPromise = false;\r\nlet hasRenderError = false;\r\n\r\nexport type WorkLoop = (isAsync: boolean) => boolean;\r\n\r\nfunction workLoop(isAsync: boolean): boolean | null {\r\n  if (hasPendingPromise) return null;\r\n  if (hasRenderError) return false;\r\n  const $scope = $$scope();\r\n  const wipFiber = $scope.getWorkInProgress();\r\n  let unit = $scope.getNextUnitOfWork();\r\n  let shouldYield = false;\r\n  let hasMoreWork = Boolean(unit);\r\n\r\n  try {\r\n    while (unit && !shouldYield) {\r\n      unit = performUnitOfWork(unit, $scope);\r\n      $scope.setNextUnitOfWork(unit);\r\n      hasMoreWork = Boolean(unit);\r\n      shouldYield = isAsync && scheduler.shouldYield();\r\n      if (shouldYield && scheduler.hasPrimaryTask()) return fork($scope);\r\n    }\r\n\r\n    if (!unit && wipFiber) {\r\n      commit($scope);\r\n    }\r\n  } catch (err) {\r\n    if (err instanceof Promise) {\r\n      hasPendingPromise = true;\r\n      err.finally(() => {\r\n        hasPendingPromise = false;\r\n        !isAsync && workLoop(false);\r\n      });\r\n    } else {\r\n      hasRenderError = true;\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  return hasMoreWork;\r\n}\r\n\r\nfunction performUnitOfWork(fiber: Fiber, $scope: Scope): Fiber | null {\r\n  const wipFiber = $scope.getWorkInProgress();\r\n  const isDeepWalking = $scope.getMountDeep();\r\n  const isStream = $scope.getIsStreamZone();\r\n  const hasChildren = isDeepWalking && hasChildrenProp(fiber.inst) && fiber.inst.children.length > 0;\r\n\r\n  fiber.hook && (fiber.hook.idx = 0);\r\n\r\n  if (hasChildren) {\r\n    const child = mountChild(fiber, $scope);\r\n\r\n    isStream && platform.chunk(child);\r\n\r\n    return child;\r\n  } else {\r\n    while (fiber.parent && fiber !== wipFiber) {\r\n      const next = mountSibling(fiber, $scope);\r\n\r\n      isStream && platform.chunk(fiber);\r\n\r\n      if (next) {\r\n        isStream && platform.chunk(next);\r\n        return next;\r\n      }\r\n\r\n      fiber = fiber.parent;\r\n    }\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nfunction mountChild(parent: Fiber, $scope: Scope) {\r\n  $scope.navToChild();\r\n  const $inst = parent.inst;\r\n  const idx = 0;\r\n  const inst = hasChildrenProp($inst) ? $inst.children[idx] : null;\r\n  const alt = getAlternate(parent, inst, true, $scope);\r\n  const fiber = createFiber(alt, inst, idx);\r\n\r\n  fiber.parent = parent;\r\n  parent.child = fiber;\r\n  fiber.eidx = parent.element ? 0 : parent.eidx;\r\n\r\n  share(fiber, parent, inst, $scope);\r\n\r\n  return fiber;\r\n}\r\n\r\nfunction mountSibling(left: Fiber, $scope: Scope) {\r\n  $scope.navToSibling();\r\n  const $inst = left.parent.inst;\r\n  const idx = $scope.getMountIndex();\r\n  const inst = hasChildrenProp($inst) && $inst.children ? $inst.children[idx] : null;\r\n  const hasSibling = Boolean(inst);\r\n\r\n  if (!hasSibling) {\r\n    $scope.navToParent();\r\n    $scope.setMountDeep(false);\r\n\r\n    return null;\r\n  }\r\n\r\n  $scope.setMountDeep(true);\r\n  const alt = getAlternate(left, inst, false, $scope);\r\n  const fiber = createFiber(alt, inst, idx);\r\n\r\n  fiber.parent = left.parent;\r\n  left.next = fiber;\r\n  fiber.eidx = left.eidx + (left.element ? 1 : left.cec);\r\n\r\n  share(fiber, left, inst, $scope);\r\n\r\n  return fiber;\r\n}\r\n\r\nfunction share(fiber: Fiber, prev: Fiber, inst: Instance, $scope: Scope) {\r\n  const { alt } = fiber;\r\n  const shouldMount = alt && detectIsMemo(inst) ? shouldUpdate(fiber, inst, $scope) : true;\r\n\r\n  $scope.setCursorFiber(fiber);\r\n  fiber.inst = inst;\r\n\r\n  if (alt && alt.mask & MOVE_MASK) {\r\n    fiber.mask |= MOVE_MASK;\r\n    alt.mask &= ~MOVE_MASK;\r\n  }\r\n\r\n  fiber.hook && (fiber.hook.owner = fiber); // !\r\n\r\n  if (shouldMount) {\r\n    fiber.inst = mount(fiber, prev, $scope);\r\n    alt && reconcile(fiber, alt, $scope);\r\n    setup(fiber, alt);\r\n  } else if (fiber.mask & MOVE_MASK) {\r\n    fiber.tag = UPDATE_EFFECT_TAG;\r\n  }\r\n\r\n  $scope.addCandidate(fiber); // !\r\n}\r\n\r\nfunction createFiber(alt: Fiber, inst: Instance, idx: number) {\r\n  const fiber = new Fiber(getHook(alt, alt ? alt.inst : null, inst), alt ? alt.provider : null, idx);\r\n\r\n  fiber.alt = alt || null;\r\n\r\n  return fiber;\r\n}\r\n\r\nfunction getAlternate(fiber: Fiber, inst: Instance, fromChild: boolean, $scope: Scope) {\r\n  const key = getElementKey(inst);\r\n\r\n  if (key !== null) {\r\n    const parentId = fromChild ? fiber.id : fiber.parent.id;\r\n    const actions = $scope.getActionsById(parentId);\r\n\r\n    if (actions) {\r\n      const isMove = actions.move && Boolean(actions.move[key]);\r\n      const isStable = actions.stable && Boolean(actions.stable[key]);\r\n\r\n      if (isMove || isStable) {\r\n        const alt = actions.map[key];\r\n\r\n        isMove && (alt.mask |= MOVE_MASK);\r\n\r\n        return alt;\r\n      }\r\n\r\n      return null;\r\n    }\r\n  }\r\n\r\n  const alt = fiber.alt ? (fromChild ? fiber.alt.child || null : fiber.alt.next || null) : null;\r\n\r\n  return alt;\r\n}\r\n\r\nfunction reconcile(fiber: Fiber, alt: Fiber, $scope: Scope) {\r\n  const { id, inst } = fiber;\r\n  const areSameTypes = detectAreSameInstanceTypes(alt.inst, inst);\r\n\r\n  if (!areSameTypes) {\r\n    $scope.addDeletion(alt);\r\n  } else if (hasChildrenProp(alt.inst) && hasChildrenProp(inst) && alt.cc !== 0) {\r\n    const hasSameCount = alt.cc === inst.children.length;\r\n    const check = hasElementFlag(inst, Flag.SKIP_SCAN_OPT) ? !hasSameCount : true;\r\n\r\n    if (check) {\r\n      const { prevKeys, nextKeys, prevKeysMap, nextKeysMap, keyedFibersMap } = extractKeys(alt.child, inst.children);\r\n      const flush = nextKeys.length === 0;\r\n      let size = Math.max(prevKeys.length, nextKeys.length);\r\n      let p = 0;\r\n      let n = 0;\r\n\r\n      $scope.addActionMap(id, keyedFibersMap);\r\n\r\n      for (let i = 0; i < size; i++) {\r\n        const nextKey = nextKeys[i - n] ?? null;\r\n        const prevKey = prevKeys[i - p] ?? null;\r\n        const prevKeyFiber = keyedFibersMap[prevKey] || null;\r\n\r\n        if (nextKey !== prevKey) {\r\n          if (nextKey !== null && !prevKeysMap[nextKey]) {\r\n            if (prevKey !== null && !nextKeysMap[prevKey]) {\r\n              $scope.addReplaceAction(id, nextKey);\r\n              $scope.addDeletion(prevKeyFiber);\r\n            } else {\r\n              $scope.addInsertAction(id, nextKey);\r\n              p++;\r\n              size++;\r\n            }\r\n          } else if (!nextKeysMap[prevKey]) {\r\n            $scope.addRemoveAction(id, prevKey);\r\n            $scope.addDeletion(prevKeyFiber);\r\n            flush && (prevKeyFiber.mask |= FLUSH_MASK);\r\n            n++;\r\n            size++;\r\n          } else if (nextKeysMap[prevKey] && nextKeysMap[nextKey]) {\r\n            $scope.addMoveAction(id, nextKey);\r\n          }\r\n        } else if (nextKey !== null) {\r\n          $scope.addStableAction(id, nextKey);\r\n        }\r\n      }\r\n\r\n      hasElementFlag(inst, Flag.STATIC_SLOT_OPT) && tryOptStaticSlot(fiber, alt, $scope);\r\n      hasElementFlag(inst, Flag.MEMO_SLOT_OPT) && tryOptMemoSlot(fiber, alt, $scope);\r\n    }\r\n  }\r\n}\r\n\r\nfunction setup(fiber: Fiber, alt: Fiber) {\r\n  const inst = fiber.inst;\r\n  let isUpdate = false;\r\n\r\n  fiber.parent.tag === CREATE_EFFECT_TAG && (fiber.tag = fiber.parent.tag);\r\n  fiber.parent.mask & SHADOW_MASK && !fiber.parent.element && !detectIsReplacer(inst) && (fiber.mask |= SHADOW_MASK);\r\n  isUpdate =\r\n    alt &&\r\n    fiber.tag !== CREATE_EFFECT_TAG &&\r\n    detectAreSameInstanceTypes(alt.inst, inst) &&\r\n    getElementKey(alt.inst) === getElementKey(inst);\r\n  isUpdate && !fiber.element && alt.element && (fiber.element = alt.element);\r\n  fiber.tag = isUpdate ? UPDATE_EFFECT_TAG : CREATE_EFFECT_TAG;\r\n  hasChildrenProp(fiber.inst) && (fiber.cc = fiber.inst.children.length);\r\n  !fiber.element && detectIsVirtualNode(fiber.inst) && (fiber.element = platform.createElement(fiber.inst));\r\n  fiber.element && fiber.increment();\r\n}\r\n\r\nfunction shouldUpdate(fiber: Fiber, inst: Instance, $scope: Scope) {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    if ($scope.getIsHot()) return true;\r\n  }\r\n\r\n  const alt = fiber.alt;\r\n  const pc = alt.inst as Component;\r\n  const nc = inst as Component;\r\n\r\n  if (nc.type !== pc.type || nc.shouldUpdate(pc.props, nc.props)) return true;\r\n\r\n  $scope.setMountDeep(false);\r\n  fiber.tag = SKIP_EFFECT_TAG;\r\n  fiber.child = alt.child;\r\n  fiber.child.parent = fiber;\r\n  fiber.hook = alt.hook;\r\n  fiber.cc = alt.cc;\r\n  fiber.cec = alt.cec;\r\n  alt.element && (fiber.element = alt.element);\r\n  alt.provider && (fiber.provider = alt.provider);\r\n  alt.catch && (fiber.catch = alt.catch);\r\n  alt.atoms && (fiber.atoms = alt.atoms);\r\n\r\n  const diff = fiber.eidx - alt.eidx;\r\n  const deep = diff !== 0;\r\n\r\n  if (deep) {\r\n    walk(fiber.child, ($fiber, skip) => {\r\n      $fiber.eidx += diff;\r\n      if ($fiber.element) return skip();\r\n    });\r\n  }\r\n\r\n  notifyParents(fiber, alt);\r\n\r\n  return false;\r\n}\r\n\r\nfunction mount(fiber: Fiber, prev: Fiber, $scope: Scope) {\r\n  let inst = fiber.inst;\r\n  const isComponent = detectIsComponent(inst);\r\n  const component = inst as Component;\r\n\r\n  if (isComponent) {\r\n    try {\r\n      const id = $scope.getResourceId();\r\n      let result = component.type(component.props, component.ref);\r\n      const defers = $scope.getDefers();\r\n\r\n      if (defers.length > 0) {\r\n        const promise = Promise.all(defers.map(x => x()));\r\n\r\n        $scope.setResourceId(id);\r\n        $scope.resetDefers();\r\n        $scope.navToPrev();\r\n        $scope.setNextUnitOfWork(prev);\r\n        Fiber.setNextId(prev.id);\r\n\r\n        throw promise;\r\n      }\r\n\r\n      if (detectIsArray(result)) {\r\n        !detectIsFragment(component) && (result = Fragment({ slot: result }));\r\n      } else if (detectIsTextBased(result)) {\r\n        result = Text(result);\r\n      }\r\n\r\n      component.children = result as Array<Instance>;\r\n      platform.detectIsPortal(inst) && fiber.markHost(PORTAL_HOST_MASK);\r\n    } catch (err) {\r\n      if (err instanceof Promise) throw err;\r\n      component.children = [];\r\n      fiber.setError(err);\r\n      error(err);\r\n    }\r\n  } else if (detectIsVirtualNodeFactory(inst)) {\r\n    inst = inst();\r\n  }\r\n\r\n  if (hasChildrenProp(inst)) {\r\n    inst.children = flatten(inst.children, x => (detectIsTextBased(x) ? Text(x) : x || supportConditional(x)));\r\n    isComponent && component.children.length === 0 && component.children.push(createReplacer());\r\n  }\r\n\r\n  return inst;\r\n}\r\n\r\nfunction extractKeys(alt: Fiber, children: Array<Instance>) {\r\n  let nextFiber = alt;\r\n  let idx = 0;\r\n  const prevKeys: Array<ElementKey> = [];\r\n  const nextKeys: Array<ElementKey> = [];\r\n  const prevKeysMap: Record<ElementKey, boolean> = {};\r\n  const nextKeysMap: Record<ElementKey, boolean> = {};\r\n  const keyedFibersMap: Record<ElementKey, Fiber> = {};\r\n  const usedKeysMap: Record<ElementKey, boolean> = {};\r\n\r\n  while (nextFiber || idx < children.length) {\r\n    if (nextFiber) {\r\n      const key = getElementKey(nextFiber.inst);\r\n      const prevKey = detectIsEmpty(key) ? createIndexKey(idx) : key;\r\n\r\n      if (!prevKeysMap[prevKey]) {\r\n        prevKeysMap[prevKey] = true; // !\r\n        prevKeys.push(prevKey);\r\n      }\r\n\r\n      keyedFibersMap[prevKey] = nextFiber;\r\n    }\r\n\r\n    if (children[idx]) {\r\n      const inst = children[idx];\r\n      const key = getElementKey(inst);\r\n      const nextKey = detectIsEmpty(key) ? createIndexKey(idx) : key;\r\n\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        if (usedKeysMap[nextKey]) {\r\n          error(`[Dark]: The key of node [${nextKey}] already has been used!`, [inst]);\r\n        }\r\n      }\r\n\r\n      if (!nextKeysMap[nextKey]) {\r\n        nextKeysMap[nextKey] = true; // !\r\n        nextKeys.push(nextKey);\r\n      }\r\n\r\n      usedKeysMap[nextKey] = true;\r\n    }\r\n\r\n    nextFiber = nextFiber ? nextFiber.next : null;\r\n    idx++;\r\n  }\r\n\r\n  return {\r\n    prevKeys,\r\n    nextKeys,\r\n    prevKeysMap,\r\n    nextKeysMap,\r\n    keyedFibersMap,\r\n  };\r\n}\r\n\r\nfunction supportConditional(inst: Instance) {\r\n  return detectIsFalsy(inst) ? createReplacer() : inst;\r\n}\r\n\r\nfunction commit($scope: Scope) {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    process.env.NODE_ENV === 'development' && $scope.setIsHot(false);\r\n  }\r\n\r\n  const wipFiber = $scope.getWorkInProgress();\r\n  const deletions = $scope.getDeletions();\r\n  const candidates = $scope.getCandidates();\r\n  const isUpdateZone = $scope.getIsUpdateZone();\r\n  const unmounts: Array<Fiber> = [];\r\n  const combinedMask = INSERTION_EFFECT_HOST_MASK | LAYOUT_EFFECT_HOST_MASK | ASYNC_EFFECT_HOST_MASK | PORTAL_HOST_MASK;\r\n\r\n  // !\r\n  for (const fiber of deletions) {\r\n    const withNextTick = fiber.mask & ATOM_HOST_MASK && !(fiber.mask & combinedMask);\r\n\r\n    withNextTick ? unmounts.push(fiber) : unmountFiber(fiber);\r\n    fiber.tag = DELETE_EFFECT_TAG;\r\n    platform.commit(fiber);\r\n  }\r\n\r\n  isUpdateZone && sync(wipFiber);\r\n  $scope.runInsertionEffects();\r\n\r\n  for (const fiber of candidates) {\r\n    fiber.tag !== SKIP_EFFECT_TAG && platform.commit(fiber);\r\n    fiber.alt = null;\r\n    hasChildrenProp(fiber.inst) && (fiber.inst.children = null);\r\n  }\r\n\r\n  wipFiber.alt = null;\r\n  platform.finishCommit(); // !\r\n  $scope.runLayoutEffects();\r\n  $scope.runAsyncEffects();\r\n  unmounts.length > 0 && setTimeout(() => unmounts.forEach(x => unmountFiber(x)));\r\n  flush($scope);\r\n}\r\n\r\nfunction flush($scope: Scope, cancel = false) {\r\n  $scope.flush();\r\n  !cancel && $scope.getEmitter().emit('finish');\r\n  $scope.runAfterCommit(); // !\r\n}\r\n\r\nfunction sync(fiber: Fiber) {\r\n  const diff = fiber.cec - fiber.alt.cec;\r\n  if (diff === 0) return;\r\n  const parentFiber = getFiberWithElement(fiber.parent);\r\n  let isRight = false;\r\n\r\n  fiber.increment(diff, true);\r\n\r\n  walk(parentFiber.child, ($fiber, skip) => {\r\n    if ($fiber === fiber) {\r\n      isRight = true;\r\n      return skip();\r\n    }\r\n\r\n    $fiber.element && skip();\r\n    isRight && ($fiber.eidx += diff);\r\n  });\r\n}\r\n\r\nfunction fork($scope: Scope): false {\r\n  const $$scope$ = $scope.copy();\r\n  const wipFiber = $scope.getWorkInProgress();\r\n  const child = wipFiber.child;\r\n  child && (child.parent = null);\r\n  const restore = (options: RestoreOptions) => {\r\n    const { fiber: wipFiber, setValue, resetValue } = options;\r\n    const $scope = $$scope();\r\n\r\n    detectIsFunction(setValue) && setValue();\r\n    detectIsFunction(resetValue) && $$scope$.addCancel(resetValue);\r\n\r\n    wipFiber.alt = new Fiber().mutate(wipFiber);\r\n    wipFiber.tag = UPDATE_EFFECT_TAG;\r\n    wipFiber.child = child;\r\n    child && (child.parent = wipFiber);\r\n\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      wipFiber.marker = '✌️';\r\n    }\r\n\r\n    $$scope$.setRoot($scope.getRoot());\r\n    $$scope$.setWorkInProgress(wipFiber);\r\n    replaceScope($$scope$);\r\n  };\r\n\r\n  wipFiber.child = wipFiber.alt.child;\r\n  wipFiber.alt = null;\r\n  $scope.applyCancels();\r\n  flush($scope, true);\r\n  scheduler.cancelTask(restore);\r\n\r\n  return false;\r\n}\r\n\r\nexport type CreateUpdateOptions = {\r\n  rootId: number;\r\n  isTransition?: boolean;\r\n  hook: Hook;\r\n  createChanger?: () => UpdateChanger;\r\n};\r\n\r\nexport type UpdateChanger = {\r\n  shouldUpdate: () => boolean;\r\n} & Pick<RestoreOptions, 'setValue' | 'resetValue'>;\r\n\r\nfunction createUpdate(options: CreateUpdateOptions) {\r\n  const { rootId, hook, isTransition, createChanger = $createChanger } = options;\r\n  const callback = (restore?: (options: RestoreOptions) => void) => {\r\n    setRootId(rootId); // !\r\n    const fromRestore = detectIsFunction(restore);\r\n    const { shouldUpdate, setValue, resetValue } = createChanger();\r\n    const $scope = $$scope();\r\n    const owner = hook.owner;\r\n    const fiber = owner.alt || owner;\r\n\r\n    if (!shouldUpdate() || !detectIsFiberAlive(fiber) || fromRestore) {\r\n      fromRestore && restore({ fiber, setValue, resetValue });\r\n      return;\r\n    }\r\n\r\n    detectIsFunction(setValue) && setValue();\r\n    detectIsFunction(resetValue) && isTransition && $scope.addCancel(resetValue);\r\n\r\n    fiber.alt = new Fiber().mutate(fiber);\r\n    fiber.tag = UPDATE_EFFECT_TAG;\r\n    fiber.cc = 0;\r\n    fiber.cec = 0;\r\n    fiber.child = null;\r\n\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      fiber.marker = '🔥';\r\n    }\r\n\r\n    $scope.setIsUpdateZone(true);\r\n    $scope.resetMount();\r\n    $scope.setWorkInProgress(fiber);\r\n    $scope.setCursorFiber(fiber);\r\n    fiber.inst = mount(fiber, null, $scope);\r\n    $scope.setNextUnitOfWork(fiber);\r\n  };\r\n\r\n  return callback;\r\n}\r\n\r\nconst $createChanger = (): UpdateChanger => ({\r\n  shouldUpdate: trueFn,\r\n  setValue: null,\r\n  resetValue: null,\r\n});\r\n\r\nconst detectIsBusy = () => Boolean($$scope()?.getWorkInProgress());\r\n\r\nexport { Fiber, workLoop, createUpdate, detectIsBusy };\r\n","import { type WorkLoop, workLoop, detectIsBusy } from '../workloop';\r\nimport { type SetPendingStatus } from '../start-transition';\r\nimport { type Callback } from '../shared';\r\nimport { type Fiber } from '../fiber';\r\nimport { ROOT, HOOK_DELIMETER, YIELD_INTERVAL, TaskPriority } from '../constants';\r\nimport { getTime, detectIsFunction, nextTick } from '../utils';\r\nimport { EventEmitter } from '../emitter';\r\nimport { platform } from '../platform';\r\n\r\nclass MessageChannel extends EventEmitter<PortEvent> {\r\n  port1: MessagePort = null;\r\n  port2: MessagePort = null;\r\n\r\n  constructor() {\r\n    super();\r\n    this.port1 = new MessagePort(this);\r\n    this.port2 = new MessagePort(this);\r\n  }\r\n}\r\n\r\nclass MessagePort {\r\n  channel: MessageChannel;\r\n  offs: Array<Callback> = [];\r\n\r\n  constructor(channel: MessageChannel) {\r\n    this.channel = channel;\r\n  }\r\n\r\n  on(event: PortEvent, callback: PortListener) {\r\n    const off = this.channel.on(event, callback);\r\n\r\n    this.offs.push(off);\r\n  }\r\n\r\n  postMessage(value: unknown) {\r\n    platform.spawn(() => {\r\n      this.channel.emit('message', value);\r\n    });\r\n  }\r\n\r\n  unref() {\r\n    this.offs.forEach(x => x());\r\n  }\r\n}\r\n\r\nclass Scheduler {\r\n  private queue: Record<TaskPriority, Array<Task>> = {\r\n    [TaskPriority.HIGH]: [],\r\n    [TaskPriority.NORMAL]: [],\r\n    [TaskPriority.LOW]: [],\r\n  };\r\n  private deadline = 0;\r\n  private task: Task = null;\r\n  private scheduledCallback: WorkLoop = null;\r\n  private isMessageLoopRunning = false;\r\n  private channel: MessageChannel = null;\r\n  private port: MessagePort = null;\r\n\r\n  constructor() {\r\n    this.channel = new MessageChannel();\r\n    this.port = this.channel.port2;\r\n    this.channel.port1.on('message', this.performWorkUntilDeadline.bind(this));\r\n  }\r\n\r\n  reset() {\r\n    this.deadline = 0;\r\n    this.task = null;\r\n    this.scheduledCallback = null;\r\n    this.isMessageLoopRunning = false;\r\n  }\r\n\r\n  shouldYield() {\r\n    return getTime() >= this.deadline;\r\n  }\r\n\r\n  schedule(callback: Callback, options?: ScheduleCallbackOptions) {\r\n    const {\r\n      priority = TaskPriority.NORMAL,\r\n      forceAsync = false,\r\n      isTransition = false,\r\n      createLocation,\r\n      setPendingStatus,\r\n    } = options || {};\r\n    const task = new Task(callback, priority, forceAsync);\r\n\r\n    task.setIsTransition(isTransition);\r\n    task.setPendingSetter(setPendingStatus);\r\n    task.setLocationCreator(createLocation || createRootLocation);\r\n    this.put(task);\r\n    this.execute();\r\n  }\r\n\r\n  hasPrimaryTask() {\r\n    if (!this.task.getIsTransition()) return false;\r\n    const { high, normal, low } = this.getQueues();\r\n    const hasPrimary = high.length > 0 || normal.length > 0;\r\n    const hasLow = low.length > 0;\r\n\r\n    if (hasPrimary || hasLow) {\r\n      const loc = this.task.createLocation();\r\n\r\n      if (hasPrimary) {\r\n        const has = Task.detectHasRelatedUpdate(loc, high, true) || Task.detectHasRelatedUpdate(loc, normal, true);\r\n\r\n        if (has) {\r\n          this.task.markAsUnnecessary();\r\n        }\r\n\r\n        return true;\r\n      }\r\n\r\n      if (hasLow) {\r\n        const has = Task.detectHasRelatedUpdate(loc, low);\r\n\r\n        if (has) {\r\n          this.task.markAsUnnecessary();\r\n\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  cancelTask(fn: TaskRestorer) {\r\n    if (this.task.getIsUnnecessary()) return this.complete(this.task);\r\n    this.task.setTaskRestorer(fn);\r\n    this.defer(this.task);\r\n  }\r\n\r\n  private complete(task: Task) {\r\n    task.pending(false);\r\n  }\r\n\r\n  private put(task: Task) {\r\n    const queue = this.queue[task.getPriority()];\r\n\r\n    if (task.getIsTransition()) {\r\n      const loc = task.createLocation();\r\n      const tasks = queue.filter(x => x.createLocation() !== loc);\r\n\r\n      queue.splice(0, queue.length, ...tasks);\r\n    }\r\n\r\n    queue.push(task);\r\n  }\r\n\r\n  private pick(queue: Array<Task>) {\r\n    if (queue.length === 0) return false;\r\n    this.task = queue.shift();\r\n\r\n    if (this.task.getIsTransition() && this.task.canPending()) {\r\n      const task = this.task;\r\n\r\n      task.markAsPending();\r\n      this.defer(this.task);\r\n      this.task = null;\r\n\r\n      nextTick(() => task.pending(true));\r\n\r\n      return true;\r\n    }\r\n\r\n    this.task.run();\r\n    this.task.getForceAsync() ? this.requestCallbackAsync(workLoop) : this.requestCallback(workLoop);\r\n\r\n    return true;\r\n  }\r\n\r\n  private execute() {\r\n    const isBusy = detectIsBusy();\r\n    const { high, normal, low } = this.getQueues();\r\n\r\n    if (!isBusy && !this.isMessageLoopRunning) {\r\n      this.pick(high) || this.pick(normal) || this.pick(low);\r\n    }\r\n  }\r\n\r\n  private requestCallbackAsync(callback: WorkLoop) {\r\n    this.scheduledCallback = callback;\r\n\r\n    if (!this.isMessageLoopRunning) {\r\n      this.isMessageLoopRunning = true;\r\n      this.port.postMessage(null);\r\n    }\r\n  }\r\n\r\n  private requestCallback(callback: WorkLoop) {\r\n    callback(false);\r\n    this.task = null;\r\n    this.execute();\r\n  }\r\n\r\n  private performWorkUntilDeadline() {\r\n    if (this.scheduledCallback) {\r\n      this.deadline = getTime() + YIELD_INTERVAL;\r\n      const hasMoreWork = this.scheduledCallback(true);\r\n\r\n      if (hasMoreWork) {\r\n        this.port.postMessage(null);\r\n      } else {\r\n        if (hasMoreWork === null) {\r\n          setTimeout(() => this.port.postMessage(null)); // has promise\r\n        } else {\r\n          this.complete(this.task);\r\n          this.reset();\r\n          this.execute();\r\n        }\r\n      }\r\n    } else {\r\n      this.isMessageLoopRunning = false;\r\n    }\r\n  }\r\n\r\n  private defer(task: Task) {\r\n    const { low } = this.getQueues();\r\n\r\n    low.unshift(task);\r\n  }\r\n\r\n  private getQueues() {\r\n    const high = this.queue[TaskPriority.HIGH];\r\n    const normal = this.queue[TaskPriority.NORMAL];\r\n    const low = this.queue[TaskPriority.LOW];\r\n\r\n    return {\r\n      high,\r\n      normal,\r\n      low,\r\n    };\r\n  }\r\n}\r\n\r\ntype TaskCallback = (fn: TaskRestorer) => void;\r\ntype TaskRestorer = (options: RestoreOptions) => void;\r\ntype LocationCreator = () => string;\r\n\r\nclass Task {\r\n  private id: number;\r\n  private priority: TaskPriority;\r\n  private forceAsync: boolean;\r\n  private isTransition: boolean;\r\n  private isPending: boolean;\r\n  private isUnnecessary: boolean;\r\n  private callback: TaskCallback;\r\n  private taskRestorer?: TaskRestorer = null;\r\n  private locationCreator?: LocationCreator;\r\n  private pendingSetter?: SetPendingStatus = null;\r\n  private static nextTaskId = 0;\r\n\r\n  constructor(callback: TaskCallback, priority: TaskPriority, forceAsync: boolean) {\r\n    this.id = ++Task.nextTaskId;\r\n    this.callback = callback;\r\n    this.priority = priority;\r\n    this.forceAsync = forceAsync;\r\n  }\r\n\r\n  getPriority() {\r\n    return this.priority;\r\n  }\r\n\r\n  getForceAsync() {\r\n    return this.forceAsync;\r\n  }\r\n\r\n  setIsTransition(value: boolean) {\r\n    this.isTransition = value;\r\n  }\r\n\r\n  getIsTransition() {\r\n    return this.isTransition;\r\n  }\r\n\r\n  run() {\r\n    this.callback(this.taskRestorer);\r\n    this.taskRestorer = null;\r\n  }\r\n\r\n  pending(value: boolean) {\r\n    this.isTransition && this.pendingSetter && this.pendingSetter(value);\r\n  }\r\n\r\n  markAsPending() {\r\n    this.isPending = true;\r\n  }\r\n\r\n  canPending() {\r\n    return !this.isPending && detectIsFunction(this.pendingSetter);\r\n  }\r\n\r\n  markAsUnnecessary() {\r\n    this.isUnnecessary = true;\r\n  }\r\n\r\n  getIsUnnecessary() {\r\n    return this.isUnnecessary;\r\n  }\r\n\r\n  setTaskRestorer(fn: TaskRestorer) {\r\n    this.taskRestorer = fn;\r\n  }\r\n\r\n  setLocationCreator(fn: LocationCreator) {\r\n    this.locationCreator = fn;\r\n  }\r\n\r\n  createLocation() {\r\n    return this.locationCreator();\r\n  }\r\n\r\n  setPendingSetter(fn: SetPendingStatus) {\r\n    this.pendingSetter = fn;\r\n  }\r\n\r\n  static detectHasRelatedUpdate(loc: string, tasks: Array<Task>, deep = false) {\r\n    const [$loc] = loc.split(HOOK_DELIMETER);\r\n\r\n    return tasks.some(x => {\r\n      const $$loc = x.createLocation();\r\n      const has = $$loc === loc || (deep && $$loc.length > loc.length && $$loc.indexOf($loc) !== -1);\r\n\r\n      return has;\r\n    });\r\n  }\r\n}\r\n\r\nconst createRootLocation: LocationCreator = () => ROOT;\r\n\r\ntype PortEvent = 'message';\r\ntype PortListener = (value: unknown) => void;\r\n\r\nexport type RestoreOptions = {\r\n  fiber: Fiber;\r\n  setValue?: () => void;\r\n  resetValue?: () => void;\r\n};\r\n\r\nexport type ScheduleCallbackOptions = {\r\n  priority?: TaskPriority;\r\n  forceAsync?: boolean;\r\n  isTransition?: boolean;\r\n  createLocation?: () => string;\r\n  setPendingStatus?: SetPendingStatus;\r\n  onCompleted?: () => void;\r\n};\r\n\r\nconst scheduler = new Scheduler();\r\n\r\nexport { scheduler };\r\n","import { type ScheduleCallbackOptions, scheduler } from '../scheduler';\r\nimport { type UpdateChanger, createUpdate } from '../workloop';\r\nimport { getRootId, $$scope } from '../scope';\r\nimport { TaskPriority } from '../constants';\r\nimport { addBatch } from '../batch';\r\nimport { detectIsFunction } from '../utils';\r\nimport { createHookLocation } from '../walk';\r\n\r\nexport type UpdateOptions = UpdateChanger;\r\n\r\nfunction useUpdate() {\r\n  const rootId = getRootId();\r\n  const fiber = $$scope().getCursorFiber();\r\n  const hook = fiber.hook; // !\r\n  const { idx } = hook;\r\n  const update = (createChanger?: () => UpdateChanger) => {\r\n    const $scope = $$scope();\r\n    if ($scope.getIsInsertionEffectsZone()) return;\r\n    const { owner } = hook;\r\n    const hasChanger = detectIsFunction(createChanger);\r\n    const isTransition = $scope.getIsTransitionZone();\r\n    const isBatch = $scope.getIsBatchZone();\r\n    const isEvent = $scope.getIsEventZone();\r\n    const priority = isTransition ? TaskPriority.LOW : isEvent ? TaskPriority.HIGH : TaskPriority.NORMAL; // !\r\n    const forceAsync = isTransition;\r\n    const setPendingStatus = $scope.getPendingStatusSetter();\r\n    const callback = createUpdate({\r\n      rootId,\r\n      hook,\r\n      isTransition,\r\n      createChanger: hasChanger ? createChanger : undefined,\r\n    });\r\n    const createLocation = () => createHookLocation(rootId, idx, owner);\r\n    const callbackOptions: ScheduleCallbackOptions = {\r\n      priority,\r\n      forceAsync,\r\n      isTransition,\r\n      createLocation,\r\n      setPendingStatus,\r\n    };\r\n\r\n    if (isBatch) {\r\n      addBatch(\r\n        owner,\r\n        () => scheduler.schedule(callback, callbackOptions),\r\n        () => hasChanger && createChanger().setValue(),\r\n      );\r\n    } else {\r\n      scheduler.schedule(callback, callbackOptions);\r\n    }\r\n  };\r\n\r\n  return update;\r\n}\r\n\r\nexport { useUpdate };\r\n","import { $$scope } from '../scope';\r\nimport { type Fiber } from '../fiber';\r\nimport { type Callback } from '../shared';\r\n\r\nfunction batch(callback: () => void) {\r\n  const $scope = $$scope();\r\n\r\n  $scope.setIsBatchZone(true);\r\n  callback();\r\n  $scope.setIsBatchZone(false);\r\n}\r\n\r\nfunction addBatch(fiber: Fiber, callback: Callback, change: Callback) {\r\n  const $scope = $$scope();\r\n\r\n  if ($scope.getIsTransitionZone()) {\r\n    callback();\r\n  } else {\r\n    const batch = fiber.batch || { timer: null, changes: [] };\r\n\r\n    fiber.batch = batch;\r\n    batch.changes.push(change);\r\n    batch.timer && clearTimeout(batch.timer);\r\n    batch.timer = setTimeout(() => {\r\n      batch.changes.splice(-1);\r\n      batch.changes.forEach(x => x());\r\n      fiber.batch = null;\r\n      callback();\r\n    });\r\n  }\r\n}\r\n\r\nexport { batch, addBatch };\r\n","import { detectIsFunction } from '../utils';\r\nimport { type UpdateOptions, useUpdate } from '../use-update';\r\nimport { useMemo } from '../use-memo';\r\nimport { $$scope } from '../scope';\r\nimport { useCallback } from '../use-callback';\r\n\r\ntype Value<T> = T | ((prevValue: T) => T);\r\n\r\nfunction useState<T = unknown>(initialValue: T | (() => T)): [T, (value: Value<T>) => void] {\r\n  const update = useUpdate();\r\n  const scope = useMemo(\r\n    () => ({\r\n      value: detectIsFunction(initialValue) ? initialValue() : initialValue,\r\n    }),\r\n    [],\r\n  );\r\n  const setState = useCallback((sourceValue: Value<T>) => {\r\n    const $scope = $$scope();\r\n    const isBatch = $scope.getIsBatchZone();\r\n    const create = (): UpdateOptions => {\r\n      const prevValue = scope.value;\r\n      const newValue = detectIsFunction(sourceValue) ? sourceValue(prevValue) : sourceValue;\r\n      const shouldUpdate = () => isBatch || !Object.is(prevValue, newValue);\r\n      const setValue = () => (scope.value = newValue);\r\n      const resetValue = () => (scope.value = prevValue);\r\n\r\n      return { shouldUpdate, setValue, resetValue };\r\n    };\r\n\r\n    update(create);\r\n  }, []);\r\n\r\n  return [scope.value, setState];\r\n}\r\n\r\nexport { useState };\r\n","import { useMemo } from '../use-memo';\r\n\r\nfunction useCallback<T = Function>(callback: T, deps: Array<any>): T {\r\n  const value = useMemo(() => callback, deps);\r\n\r\n  return value;\r\n}\r\n\r\nexport { useCallback };\r\n","import { detectIsObject, detectIsNull, detectIsFunction } from '../utils';\r\nimport type { Component, ComponentFactory } from '../component';\r\nimport type { RefProps, KeyProps, FlagProps } from '../shared';\r\nimport { useMemo } from '../use-memo';\r\n\r\nfunction forwardRef<P extends object, R>(\r\n  component: ComponentFactory<P, R>,\r\n): ComponentFactory<P & RefProps<R> & KeyProps & FlagProps, R> {\r\n  type Props = P & RefProps<R>;\r\n\r\n  return (props: Props) => {\r\n    const { ref, ...rest } = (props || {}) as Props;\r\n\r\n    return component(rest as P, ref) as Component<P, R>;\r\n  };\r\n}\r\n\r\nfunction detectIsMutableRef(ref: unknown): ref is MutableRef {\r\n  if (!detectIsObject(ref) || detectIsNull(ref)) return false;\r\n  const mutableRef = ref as MutableRef;\r\n\r\n  for (const key in mutableRef) {\r\n    if (key === 'current' && mutableRef.hasOwnProperty(key)) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nfunction applyRef<T>(ref: Ref<T>, current: T) {\r\n  if (detectIsFunction(ref)) {\r\n    ref(current);\r\n  } else if (detectIsMutableRef(ref)) {\r\n    ref.current = current;\r\n  }\r\n}\r\n\r\nfunction useRef<T>(initialValue: T = null): MutableRef<T> {\r\n  const ref = useMemo(() => ({ current: initialValue }), []) as MutableRef<T>;\r\n\r\n  return ref;\r\n}\r\n\r\nexport type MutableRef<T = unknown> = {\r\n  current: T;\r\n};\r\n\r\nexport type FunctionRef<T = unknown> = (ref: T) => void;\r\n\r\nexport type Ref<T = unknown> = MutableRef<T> | FunctionRef<T>;\r\n\r\nexport { forwardRef, detectIsMutableRef, applyRef, useRef };\r\n","import { detectIsString, detectIsFunction } from '../utils';\r\nimport { type TagVirtualNodeFactory, type ViewOptions, View } from '../view';\r\nimport { type ComponentFactory } from '../component';\r\n\r\nfunction createElement(\r\n  element: string | Function,\r\n  props: object,\r\n  ...slot: Array<any>\r\n): ComponentFactory | TagVirtualNodeFactory | null {\r\n  if (detectIsString(element)) {\r\n    const options = (props || {}) as ViewOptions;\r\n\r\n    options.as = element;\r\n    options.slot = slot;\r\n\r\n    return View(options);\r\n  }\r\n\r\n  if (detectIsFunction(element)) {\r\n    const options = (props || {}) as { slot: unknown };\r\n\r\n    options.slot = slot.length === 1 ? slot[0] : slot;\r\n\r\n    return element(options);\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nexport { createElement, createElement as h };\r\n","import { type DarkElement, type Fiber, component, useMemo, $$scope, detectIsComponent } from '@dark-engine/core';\r\n\r\nimport type { TagNativeElement } from '../native-element';\r\n\r\nconst $$portal = Symbol('portal');\r\n\r\nfunction createPortal(slot: DarkElement, container: TagNativeElement) {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    if (!(container instanceof Element)) {\r\n      throw new Error(`[Dark]: createPortal receives only Element as container!`);\r\n    }\r\n  }\r\n\r\n  return Portal({ container, slot });\r\n}\r\n\r\ntype PortalProps = {\r\n  container: TagNativeElement;\r\n  slot: DarkElement;\r\n};\r\n\r\nconst Portal = component<PortalProps>(\r\n  props => {\r\n    const element = props.container;\r\n    const fiber = $$scope().getCursorFiber();\r\n\r\n    useMemo(() => (element.innerHTML = ''), []);\r\n\r\n    fiber.element = element;\r\n    props.container = null;\r\n\r\n    return props.slot;\r\n  },\r\n  { token: $$portal },\r\n);\r\n\r\nconst detectIsPortal = (instance: unknown) => detectIsComponent(instance) && instance.token === $$portal;\r\n\r\nconst getPortalContainer = (fiber: Fiber<TagNativeElement>): TagNativeElement | null =>\r\n  detectIsPortal(fiber.inst) ? fiber.element : null;\r\n\r\nfunction unmountPortal(fiber: Fiber<TagNativeElement>) {\r\n  const element = getPortalContainer(fiber);\r\n\r\n  element && (element.innerHTML = '');\r\n}\r\n\r\nexport { createPortal, unmountPortal, detectIsPortal };\r\n","import { detectIsFunction, $$scope, detectIsArray } from '@dark-engine/core';\r\n\r\nimport type { TagNativeElement } from '../native-element';\r\n\r\ntype BrowserEventConstructor = (type: string, event: Event) => void;\r\n\r\nclass SyntheticEvent<E extends Event, T = TagNativeElement> {\r\n  public type = '';\r\n  public sourceEvent: E = null;\r\n  public target: T = null;\r\n  private propagation = true;\r\n\r\n  constructor(options: Pick<SyntheticEvent<E, T>, 'sourceEvent' | 'target'>) {\r\n    this.type = options.sourceEvent.type;\r\n    this.sourceEvent = options.sourceEvent;\r\n    this.target = options.target;\r\n  }\r\n\r\n  public stopPropagation() {\r\n    this.propagation = false;\r\n    this.sourceEvent.stopPropagation();\r\n  }\r\n\r\n  public preventDefault() {\r\n    this.sourceEvent.preventDefault();\r\n  }\r\n\r\n  public getPropagation() {\r\n    return this.propagation;\r\n  }\r\n}\r\n\r\nfunction delegateEvent(\r\n  target: Element,\r\n  eventName: string,\r\n  handler: (e: Event) => void | [fn: () => void, ...args: Array<any>],\r\n) {\r\n  const $scope = $$scope();\r\n  const eventsMap = $scope.getEvents();\r\n  const handlersMap = eventsMap.get(eventName);\r\n  const $handler = detectIsArray(handler) ? (e: Event) => handler[0](...handler.slice(1), e) : handler;\r\n\r\n  if (!handlersMap) {\r\n    const rootHandler = (event: Event) => {\r\n      const handler = eventsMap.get(eventName).get(event.target);\r\n      const target = event.target as TagNativeElement;\r\n      let $event: SyntheticEvent<Event> = null;\r\n\r\n      if (detectIsFunction(handler)) {\r\n        $event = new SyntheticEvent({ sourceEvent: event, target });\r\n\r\n        $scope.setIsEventZone(true);\r\n        handler($event);\r\n        $scope.setIsEventZone(false);\r\n      }\r\n\r\n      if (target.parentElement) {\r\n        const shouldPropagate = $event ? $event.getPropagation() : true;\r\n\r\n        if (shouldPropagate) {\r\n          const constructor = event.constructor as BrowserEventConstructor;\r\n\r\n          target.parentElement.dispatchEvent(new constructor(event.type, event));\r\n        }\r\n      }\r\n    };\r\n\r\n    eventsMap.set(eventName, new WeakMap([[target, $handler]]));\r\n    document.addEventListener(eventName, rootHandler, true);\r\n    $scope.addEventUnsubscriber(() => document.removeEventListener(eventName, rootHandler, true));\r\n  } else {\r\n    handlersMap.set(target, $handler);\r\n  }\r\n}\r\n\r\nconst detectIsEvent = (attrName: string) => attrName.startsWith('on');\r\n\r\nconst getEventName = (attrName: string) => attrName.slice(2, attrName.length).toLowerCase();\r\n\r\nexport { SyntheticEvent, delegateEvent, detectIsEvent, getEventName };\r\n","export const VERSION = '0.25.1';\r\nexport const STYLE_ATTR = 'style';\r\nexport const CLASS_ATTR = 'class';\r\nexport const CLASS_NAME_ATTR = 'className';\r\nexport const EXCLUDE_ATTR_MARK = '$';\r\n","import {\r\n  type Fiber,\r\n  type VirtualNode,\r\n  type TagVirtualNode,\r\n  type TextVirtualNode,\r\n  type CommentVirtualNode,\r\n  type PlainVirtualNode,\r\n  type Callback,\r\n  REF_ATTR,\r\n  ATTR_BLACK_LIST,\r\n  CREATE_EFFECT_TAG,\r\n  UPDATE_EFFECT_TAG,\r\n  DELETE_EFFECT_TAG,\r\n  SKIP_EFFECT_TAG,\r\n  MOVE_MASK,\r\n  FLUSH_MASK,\r\n  SHADOW_MASK,\r\n  detectIsUndefined,\r\n  detectIsBoolean,\r\n  detectIsObject,\r\n  NodeType,\r\n  detectIsTagVirtualNode,\r\n  detectIsTextVirtualNode,\r\n  detectIsPlainVirtualNode,\r\n  getFiberWithElement,\r\n  collectElements,\r\n  walk,\r\n  dummyFn,\r\n  $$scope,\r\n  applyRef,\r\n} from '@dark-engine/core';\r\n\r\nimport { detectIsPortal } from '../portal';\r\nimport { delegateEvent, detectIsEvent, getEventName } from '../events';\r\nimport { STYLE_ATTR, CLASS_ATTR, CLASS_NAME_ATTR, EXCLUDE_ATTR_MARK } from '../constants';\r\nimport type {\r\n  NativeElement,\r\n  TagNativeElement,\r\n  TextNativeElement,\r\n  CommentNativeElement,\r\n  NativeNode,\r\n  AttributeValue,\r\n} from '../native-element';\r\n\r\nlet moves: Array<Callback> = [];\r\nlet patches: Array<Callback> = [];\r\nlet trackUpdate: (nativeElement: NativeElement) => void = null;\r\nconst svgTagNames = new Set([\r\n  'svg',\r\n  'animate',\r\n  'animateMotion',\r\n  'animateTransform',\r\n  'circle',\r\n  'clipPath',\r\n  'defs',\r\n  'desc',\r\n  'ellipse',\r\n  'feBlend',\r\n  'feColorMatrix',\r\n  'feComponentTransfer',\r\n  'feComposite',\r\n  'feConvolveMatrix',\r\n  'feDiffuseLighting',\r\n  'feDisplacementMap',\r\n  'feDistantLight',\r\n  'feDropShadow',\r\n  'feFlood',\r\n  'feFuncA',\r\n  'feFuncB',\r\n  'feFuncG',\r\n  'feFuncR',\r\n  'feGaussianBlur',\r\n  'feImage',\r\n  'feMerge',\r\n  'feMergeNode',\r\n  'feMorphology',\r\n  'feOffset',\r\n  'fePointLight',\r\n  'feSpecularLighting',\r\n  'feSpotLight',\r\n  'feTile',\r\n  'feTurbulence',\r\n  'filter',\r\n  'foreignObject',\r\n  'g',\r\n  'image',\r\n  'line',\r\n  'linearGradient',\r\n  'marker',\r\n  'mask',\r\n  'metadata',\r\n  'mpath',\r\n  'path',\r\n  'pattern',\r\n  'polygon',\r\n  'polyline',\r\n  'radialGradient',\r\n  'rect',\r\n  'stop',\r\n  'switch',\r\n  'symbol',\r\n  'text',\r\n  'textPath',\r\n  'tspan',\r\n  'use',\r\n  'view',\r\n]);\r\nconst voidTagNames = new Set([\r\n  'area',\r\n  'base',\r\n  'br',\r\n  'col',\r\n  'embed',\r\n  'hr',\r\n  'img',\r\n  'input',\r\n  'link',\r\n  'meta',\r\n  'param',\r\n  'source',\r\n  'track',\r\n  'wbr',\r\n]);\r\n\r\nconst createNativeElementMap = {\r\n  [NodeType.TAG]: (vNode: VirtualNode): TagNativeElement => {\r\n    const tagNode = vNode as TagVirtualNode;\r\n    const name = tagNode.name;\r\n\r\n    return detectIsSvgElement(name)\r\n      ? document.createElementNS('http://www.w3.org/2000/svg', name)\r\n      : document.createElement(name);\r\n  },\r\n  [NodeType.TEXT]: (vNode: VirtualNode): TextNativeElement => {\r\n    return document.createTextNode((vNode as TextVirtualNode).value);\r\n  },\r\n  [NodeType.COMMENT]: (vNode: VirtualNode): CommentNativeElement => {\r\n    return document.createComment((vNode as CommentVirtualNode).value);\r\n  },\r\n};\r\n\r\nfunction createNativeElement(node: VirtualNode): NativeElement {\r\n  return createNativeElementMap[node.type](node);\r\n}\r\n\r\nfunction detectIsSvgElement(name: string) {\r\n  return svgTagNames.has(name);\r\n}\r\n\r\nfunction detectIsVoidElement(name: string) {\r\n  return voidTagNames.has(name);\r\n}\r\n\r\nfunction setObjectStyle(element: TagNativeElement, style: object) {\r\n  const keys = Object.keys(style);\r\n\r\n  for (const key of keys) {\r\n    element.style.setProperty(key, String(style[key]));\r\n  }\r\n}\r\n\r\nfunction addAttributes(element: NativeElement, node: TagVirtualNode, isHydrateZone: boolean) {\r\n  const attrNames = Object.keys(node.attrs);\r\n  const tagElement = element as TagNativeElement;\r\n\r\n  for (const attrName of attrNames) {\r\n    const attrValue = node.attrs[attrName];\r\n\r\n    if (attrName[0] === EXCLUDE_ATTR_MARK) continue;\r\n\r\n    if (attrName === REF_ATTR) {\r\n      applyRef(attrValue, element);\r\n      continue;\r\n    }\r\n\r\n    if (attrName === CLASS_ATTR || attrName === CLASS_NAME_ATTR) {\r\n      toggleAttribute(tagElement, CLASS_ATTR, attrValue);\r\n      continue;\r\n    }\r\n\r\n    if (attrName === STYLE_ATTR && attrValue && detectIsObject(attrValue)) {\r\n      setObjectStyle(tagElement, attrValue);\r\n      continue;\r\n    }\r\n\r\n    if (detectIsEvent(attrName)) {\r\n      delegateEvent(tagElement, getEventName(attrName), attrValue);\r\n    } else if (!isHydrateZone && !detectIsUndefined(attrValue) && !ATTR_BLACK_LIST[attrName]) {\r\n      const stop = patchProperties({\r\n        tagName: node.name,\r\n        element: tagElement,\r\n        attrValue,\r\n        attrName,\r\n      });\r\n\r\n      !stop && tagElement.setAttribute(attrName, attrValue);\r\n    }\r\n  }\r\n}\r\n\r\nfunction updateAttributes(element: NativeElement, prevNode: TagVirtualNode, nextNode: TagVirtualNode) {\r\n  const attrNames = getAttributeNames(prevNode, nextNode);\r\n  const tagElement = element as TagNativeElement;\r\n\r\n  for (const attrName of attrNames) {\r\n    const prevAttrValue = prevNode.attrs[attrName];\r\n    const nextAttrValue = nextNode.attrs[attrName];\r\n\r\n    if (attrName[0] === EXCLUDE_ATTR_MARK) continue;\r\n\r\n    if (attrName === REF_ATTR) {\r\n      applyRef(prevAttrValue, element);\r\n      continue;\r\n    }\r\n\r\n    if ((attrName === CLASS_ATTR || attrName === CLASS_NAME_ATTR) && prevAttrValue !== nextAttrValue) {\r\n      toggleAttribute(tagElement, CLASS_ATTR, nextAttrValue);\r\n      continue;\r\n    }\r\n\r\n    if (attrName === STYLE_ATTR && nextAttrValue && prevAttrValue !== nextAttrValue && detectIsObject(nextAttrValue)) {\r\n      setObjectStyle(tagElement, nextAttrValue);\r\n      continue;\r\n    }\r\n\r\n    if (!detectIsUndefined(nextAttrValue)) {\r\n      if (detectIsEvent(attrName)) {\r\n        prevAttrValue !== nextAttrValue && delegateEvent(tagElement, getEventName(attrName), nextAttrValue);\r\n      } else if (!ATTR_BLACK_LIST[attrName] && prevAttrValue !== nextAttrValue) {\r\n        const stop = patchProperties({\r\n          tagName: nextNode.name,\r\n          element: tagElement,\r\n          attrValue: nextAttrValue,\r\n          attrName,\r\n        });\r\n\r\n        !stop && tagElement.setAttribute(attrName, nextAttrValue);\r\n      }\r\n    } else {\r\n      tagElement.removeAttribute(attrName);\r\n    }\r\n  }\r\n}\r\n\r\nfunction toggleAttribute(element: TagNativeElement, name: string, value: string) {\r\n  value ? element.setAttribute(name, value) : element.removeAttribute(name);\r\n}\r\n\r\nfunction getAttributeNames(prevNode: TagVirtualNode, nextNode: TagVirtualNode) {\r\n  const attrNames = new Set<string>();\r\n  const prevAttrs = Object.keys(prevNode.attrs);\r\n  const nextAttrs = Object.keys(nextNode.attrs);\r\n  const size = Math.max(prevAttrs.length, nextAttrs.length);\r\n\r\n  for (let i = 0; i < size; i++) {\r\n    attrNames.add(prevAttrs[i] || nextAttrs[i]);\r\n  }\r\n\r\n  return attrNames;\r\n}\r\n\r\ntype PatchPropertiesOptions = {\r\n  tagName: string;\r\n  element: TagNativeElement;\r\n  attrName: string;\r\n  attrValue: AttributeValue;\r\n};\r\n\r\nfunction patchProperties(options: PatchPropertiesOptions): boolean {\r\n  const { tagName, element, attrName, attrValue } = options;\r\n  const fn = patchPropertiesSpecialCasesMap[tagName];\r\n  let stop = fn ? fn(element, attrName, attrValue) : false;\r\n\r\n  if (canSetProperty(element, attrName)) {\r\n    element[attrName] = attrValue;\r\n  }\r\n\r\n  if (!stop && detectIsBoolean(attrValue)) {\r\n    stop = !attrName.includes('-');\r\n  }\r\n\r\n  return stop;\r\n}\r\n\r\nfunction canSetProperty(element: TagNativeElement, key: string) {\r\n  const prototype = Object.getPrototypeOf(element);\r\n  const descriptor = Object.getOwnPropertyDescriptor(prototype, key);\r\n\r\n  return Boolean(descriptor?.set);\r\n}\r\n\r\nconst patchPropertiesSpecialCasesMap: Record<\r\n  string,\r\n  (element: NativeElement, attrName: string, attrValue: AttributeValue) => boolean\r\n> = {\r\n  input: (element: HTMLInputElement, attrName: string, attrValue: AttributeValue) => {\r\n    if (attrName === 'value') {\r\n      patches.push(() => {\r\n        detectIsBoolean(attrValue) ? (element.checked = attrValue) : (element.value = String(attrValue));\r\n      });\r\n    } else if (attrName === 'autoFocus') {\r\n      patches.push(() => {\r\n        element.autofocus = Boolean(attrValue);\r\n        element.autofocus && element.focus();\r\n      });\r\n    }\r\n\r\n    return false;\r\n  },\r\n  textarea: (element: HTMLTextAreaElement, attrName: string, attrValue: AttributeValue) => {\r\n    if (attrName === 'value') {\r\n      element.innerText = String(attrValue);\r\n\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  },\r\n};\r\n\r\nfunction commitCreation(fiber: Fiber<NativeElement>) {\r\n  const parentFiber = getFiberWithElement<NativeElement, TagNativeElement>(fiber.parent);\r\n  const parentElement = parentFiber.element;\r\n  const childNodes = parentElement.childNodes;\r\n  const isHydrateZone = $$scope().getIsHydrateZone();\r\n\r\n  if (isHydrateZone) {\r\n    const nativeElement = childNodes[fiber.eidx] as NativeElement;\r\n\r\n    if (\r\n      detectIsTextVirtualNode(fiber.inst) &&\r\n      nativeElement instanceof Text &&\r\n      fiber.inst.value.length !== nativeElement.length\r\n    ) {\r\n      nativeElement.splitText(fiber.inst.value.length);\r\n    }\r\n\r\n    fiber.element = nativeElement;\r\n  } else {\r\n    if (!(fiber.mask & SHADOW_MASK)) {\r\n      if (childNodes.length === 0 || fiber.eidx > childNodes.length - 1) {\r\n        !detectIsVoidElement((parentFiber.inst as TagVirtualNode).name) &&\r\n          appendNativeElement(fiber.element, parentElement);\r\n      } else {\r\n        insertNativeElement(fiber.element, parentElement.childNodes[fiber.eidx], parentElement);\r\n      }\r\n    }\r\n  }\r\n\r\n  detectIsTagVirtualNode(fiber.inst) && addAttributes(fiber.element, fiber.inst, isHydrateZone);\r\n}\r\n\r\nfunction commitUpdate(fiber: Fiber<NativeElement>) {\r\n  const element = fiber.element;\r\n  const prevInstance = fiber.alt.inst as VirtualNode;\r\n  const nextInstance = fiber.inst as VirtualNode;\r\n\r\n  detectIsPlainVirtualNode(nextInstance)\r\n    ? (prevInstance as PlainVirtualNode).value !== nextInstance.value && (element.textContent = nextInstance.value)\r\n    : updateAttributes(element, prevInstance as TagVirtualNode, nextInstance as TagVirtualNode);\r\n}\r\n\r\nfunction commitDeletion(fiber: Fiber<NativeElement>) {\r\n  const parentFiber = getFiberWithElement<NativeElement, TagNativeElement>(fiber.parent);\r\n\r\n  if (fiber.mask & FLUSH_MASK) {\r\n    parentFiber.element.innerHTML && (parentFiber.element.innerHTML = '');\r\n    return;\r\n  }\r\n\r\n  walk<NativeElement>(fiber, (fiber, skip) => {\r\n    if (fiber.element) {\r\n      !detectIsPortal(fiber.inst) &&\r\n        canRemoveNativeElement(fiber.element, parentFiber.element) &&\r\n        removeNativeElement(fiber.element, parentFiber.element);\r\n      return skip();\r\n    }\r\n  });\r\n}\r\n\r\nfunction move(fiber: Fiber<NativeElement>) {\r\n  const sourceNodes = collectElements(fiber, x => x.element);\r\n  const sourceNode = sourceNodes[0];\r\n  const parentElement = sourceNode.parentElement;\r\n  const sourceFragment = new DocumentFragment();\r\n  const elementIdx = fiber.eidx;\r\n  let idx = 0;\r\n  const move = () => {\r\n    for (let i = 1; i < sourceNodes.length; i++) {\r\n      removeNativeElement(parentElement.childNodes[elementIdx + 1], parentElement);\r\n    }\r\n\r\n    replaceNativeElement(sourceFragment, parentElement.childNodes[elementIdx], parentElement);\r\n  };\r\n\r\n  for (const node of sourceNodes) {\r\n    insertNativeElement(document.createComment(`${elementIdx}:${idx}`), node, parentElement);\r\n    appendNativeElement(node, sourceFragment);\r\n    idx++;\r\n  }\r\n\r\n  moves.push(move);\r\n}\r\n\r\nconst commitMap: Record<string, (fiber: Fiber<NativeElement>) => void> = {\r\n  [CREATE_EFFECT_TAG]: (fiber: Fiber<NativeElement>) => {\r\n    if (!fiber.element || detectIsPortal(fiber.inst)) return;\r\n    trackUpdate && trackUpdate(fiber.element);\r\n    commitCreation(fiber);\r\n  },\r\n  [UPDATE_EFFECT_TAG]: (fiber: Fiber<NativeElement>) => {\r\n    fiber.mask & MOVE_MASK && (move(fiber), (fiber.mask &= ~MOVE_MASK));\r\n    if (!fiber.element || detectIsPortal(fiber.inst)) return;\r\n    trackUpdate && trackUpdate(fiber.element);\r\n    commitUpdate(fiber);\r\n  },\r\n  [DELETE_EFFECT_TAG]: commitDeletion,\r\n  [SKIP_EFFECT_TAG]: dummyFn,\r\n};\r\n\r\nfunction finishCommit() {\r\n  moves.forEach(x => x());\r\n  patches.forEach(x => x());\r\n  moves = [];\r\n  patches = [];\r\n}\r\n\r\nconst commit = (fiber: Fiber<NativeElement>) => commitMap[fiber.tag](fiber);\r\n\r\nconst setTrackUpdate = (fn: typeof trackUpdate) => (trackUpdate = fn);\r\n\r\nconst appendNativeElement = (element: NativeNode, parent: NativeNode) => parent.appendChild(element);\r\n\r\nconst insertNativeElement = (element: NativeNode, sibling: NativeNode, parent: TagNativeElement) =>\r\n  parent.insertBefore(element, sibling);\r\n\r\nconst insertNativeElementByIndex = (element: NativeNode, idx: number, parent: TagNativeElement) =>\r\n  parent.insertBefore(element, parent.childNodes[idx]);\r\n\r\nconst replaceNativeElement = (element: NativeNode, candidate: NativeNode, parent: TagNativeElement) =>\r\n  parent.replaceChild(element, candidate);\r\n\r\nconst canRemoveNativeElement = (element: NativeNode, parent: NativeNode) => element.parentElement === parent;\r\n\r\nconst removeNativeElement = (element: NativeNode, parent: TagNativeElement) => parent.removeChild(element);\r\n\r\nexport { createNativeElement, commit, finishCommit, setTrackUpdate, insertNativeElementByIndex };\r\n","import {\r\n  type DarkElement,\r\n  type Callback,\r\n  ROOT,\r\n  Fiber,\r\n  CREATE_EFFECT_TAG,\r\n  UPDATE_EFFECT_TAG,\r\n  platform,\r\n  flatten,\r\n  detectIsUndefined,\r\n  detectIsFunction,\r\n  trueFn,\r\n  TagVirtualNode,\r\n  TaskPriority,\r\n  createReplacer,\r\n  setRootId,\r\n  $$scope,\r\n  dummyFn,\r\n  scheduler,\r\n} from '@dark-engine/core';\r\n\r\nimport { createNativeElement, insertNativeElementByIndex, commit, finishCommit } from '../dom';\r\nimport { detectIsPortal, unmountPortal } from '../portal';\r\nimport type { TagNativeElement } from '../native-element';\r\n\r\nconst roots = new Map<Element, number>();\r\nconst raf = requestAnimationFrame.bind(window);\r\nconst caf = cancelAnimationFrame.bind(window);\r\nconst spawn = raf;\r\nlet isInjected = false;\r\n\r\nfunction inject() {\r\n  platform.createElement = createNativeElement as typeof platform.createElement;\r\n  platform.insertElement = insertNativeElementByIndex as typeof platform.insertElement;\r\n  platform.raf = raf;\r\n  platform.caf = caf;\r\n  platform.spawn = spawn;\r\n  platform.commit = commit;\r\n  platform.finishCommit = finishCommit;\r\n  platform.detectIsDynamic = trueFn;\r\n  platform.detectIsPortal = detectIsPortal;\r\n  platform.unmountPortal = unmountPortal;\r\n  platform.chunk = dummyFn;\r\n  isInjected = true;\r\n}\r\n\r\nfunction render(element: DarkElement, container: TagNativeElement, hydrate?: Callback) {\r\n  !isInjected && inject();\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    if (!(container instanceof Element)) {\r\n      throw new Error(`[Dark]: render receives only Element as container!`);\r\n    }\r\n  }\r\n\r\n  const isMounted = !detectIsUndefined(roots.get(container));\r\n  const isHydrate = detectIsFunction(hydrate);\r\n  let rootId: number = null;\r\n\r\n  if (!isMounted) {\r\n    rootId = roots.size;\r\n    roots.set(container, rootId);\r\n    !isHydrate && (container.innerHTML = '');\r\n  } else {\r\n    rootId = roots.get(container);\r\n  }\r\n\r\n  const $scope = $$scope(rootId);\r\n\r\n  // insertion effect can't schedule renders\r\n  if ($scope?.getIsInsertionEffectsZone()) return;\r\n\r\n  const callback = () => {\r\n    setRootId(rootId); // !\r\n    const $scope = $$scope();\r\n    const rootFiber = $scope.getRoot();\r\n    const isUpdate = Boolean(rootFiber);\r\n    const fiber = new Fiber().mutate({\r\n      element: container,\r\n      inst: new TagVirtualNode(ROOT, {}, flatten([element || createReplacer()]) as TagVirtualNode['children']),\r\n      alt: rootFiber,\r\n      tag: isUpdate ? UPDATE_EFFECT_TAG : CREATE_EFFECT_TAG,\r\n    });\r\n\r\n    $scope.resetMount();\r\n    $scope.setWorkInProgress(fiber);\r\n    $scope.setIsHydrateZone(isHydrate);\r\n    $scope.setNextUnitOfWork(fiber);\r\n    isHydrate && hydrate();\r\n  };\r\n\r\n  scheduler.schedule(callback, { priority: TaskPriority.NORMAL });\r\n}\r\n\r\nexport { render, roots, inject };\r\n","import { type ElementKey, type TimerId, detectIsEmpty } from '@dark-engine/core';\r\n\r\nimport { type Controller, type StartFn } from '../controller';\r\nimport { type SpringValue } from '../shared';\r\n\r\nclass SharedState<T extends string = string> {\r\n  private ctrls: Array<Controller<T>> = [];\r\n  private stack = new Set<ElementKey>();\r\n  private flow = Flow.RIGHT;\r\n  private isTrail = false;\r\n  private isPaused = false;\r\n  private isCanceled = false;\r\n  private timeout = 0;\r\n  private timerId: TimerId = null;\r\n  private events = new Map<AnimationEventName, Set<AnimationEventHandler<T>>>();\r\n\r\n  getCtrls() {\r\n    return this.ctrls;\r\n  }\r\n\r\n  setCtrls(ctrls: Array<Controller<T>>) {\r\n    this.ctrls = ctrls;\r\n  }\r\n\r\n  setIsTrail(x: boolean) {\r\n    this.isTrail = x;\r\n  }\r\n\r\n  getIsTrail() {\r\n    return this.isTrail;\r\n  }\r\n\r\n  setFlow(x: Flow) {\r\n    this.flow = x;\r\n  }\r\n\r\n  getIsPaused() {\r\n    return this.isPaused;\r\n  }\r\n\r\n  getIsCanceled() {\r\n    return this.isCanceled;\r\n  }\r\n\r\n  detectIsRightFlow() {\r\n    return this.flow === Flow.RIGHT;\r\n  }\r\n\r\n  setIsPlaying(x: boolean, key: ElementKey) {\r\n    if (x) {\r\n      this.stack.add(key);\r\n    } else {\r\n      this.stack.delete(key);\r\n    }\r\n  }\r\n\r\n  detectIsPlaying(key?: ElementKey) {\r\n    return detectIsEmpty(key) ? this.stack.size > 0 : this.stack.has(key);\r\n  }\r\n\r\n  start(fn?: StartFn<T>) {\r\n    this.defer(() => {\r\n      if (this.ctrls.length === 0) return;\r\n      this.event('series-start');\r\n\r\n      if (this.isTrail) {\r\n        const ctrl = this.flow === Flow.RIGHT ? this.ctrls[0] : this.ctrls[this.ctrls.length - 1];\r\n\r\n        ctrl.start(fn);\r\n      } else {\r\n        this.ctrls.forEach(x => x.start(fn));\r\n      }\r\n    });\r\n  }\r\n\r\n  pause() {\r\n    this.isPaused = true;\r\n  }\r\n\r\n  resume() {\r\n    this.isPaused = false;\r\n  }\r\n\r\n  delay(timeout: number) {\r\n    this.timeout = timeout;\r\n  }\r\n\r\n  reset() {\r\n    this.ctrls.forEach(x => x.reset());\r\n  }\r\n\r\n  cancel() {\r\n    this.ctrls.forEach(x => x.cancel());\r\n    this.resetTimer();\r\n    this.isCanceled = true;\r\n  }\r\n\r\n  on(event: AnimationEventName, handler: AnimationEventHandler<T>) {\r\n    if (!this.events.has(event)) {\r\n      this.events.set(event, new Set());\r\n    }\r\n\r\n    const subs = this.events.get(event);\r\n\r\n    subs.add(handler);\r\n\r\n    return () => subs.delete(handler);\r\n  }\r\n\r\n  event(name: AnimationEventName, value: AnimationEventValue<T> = null) {\r\n    this.events.has(name) && this.events.get(name).forEach(x => x(value));\r\n  }\r\n\r\n  completeSeries() {\r\n    const isCompleted = !this.detectIsPlaying();\r\n\r\n    isCompleted && this.event('series-end');\r\n  }\r\n\r\n  defer(fn: () => void) {\r\n    this.resetTimer();\r\n\r\n    if (this.timeout > 0) {\r\n      this.timerId = setTimeout(() => {\r\n        this.timerId = null;\r\n        fn();\r\n      }, this.timeout);\r\n    } else {\r\n      fn();\r\n    }\r\n  }\r\n\r\n  private resetTimer() {\r\n    this.timerId && clearTimeout(this.timerId);\r\n    this.timerId = null;\r\n  }\r\n}\r\n\r\nexport enum Flow {\r\n  RIGHT = 'RIGHT',\r\n  LEFT = 'LEFT',\r\n}\r\n\r\nlet sharedState: SharedState = null;\r\n\r\nfunction setSharedState(state: SharedState) {\r\n  sharedState = state;\r\n}\r\n\r\nfunction getSharedState() {\r\n  const state = sharedState;\r\n\r\n  sharedState = null;\r\n\r\n  return state;\r\n}\r\n\r\nexport type AnimationEventName = 'series-start' | 'item-start' | 'item-change' | 'item-end' | 'series-end';\r\n\r\nexport type AnimationEventValue<T extends string = string> = {\r\n  value: SpringValue<T>;\r\n  idx: number;\r\n  key: ElementKey;\r\n};\r\n\r\nexport type AnimationEventHandler<T extends string = string> = (value?: AnimationEventValue<T>) => void;\r\n\r\nexport { SharedState, setSharedState, getSharedState };\r\n","import { preset } from '../preset';\r\n\r\nexport type SpringValue<T extends string = string> = Record<T, number>;\r\n\r\nexport type SpringConfig = {\r\n  mass: number;\r\n  tension: number;\r\n  friction: number;\r\n  precision: number;\r\n  fix: number;\r\n};\r\n\r\nconst defaultSpringConfig: SpringConfig = {\r\n  ...preset('no-wobble'),\r\n  mass: 1,\r\n  precision: 3,\r\n  fix: 4,\r\n};\r\n\r\nexport { defaultSpringConfig };\r\n","import { type SpringConfig } from '../shared';\r\n\r\ntype Preset = Pick<SpringConfig, 'tension' | 'friction'>;\r\ntype PresetName = 'no-wobble' | 'gentle' | 'wobbly' | 'stiff';\r\n\r\nconst presets: Record<PresetName, Preset> = {\r\n  'no-wobble': { tension: 170, friction: 26 },\r\n  gentle: { tension: 120, friction: 14 },\r\n  wobbly: { tension: 180, friction: 12 },\r\n  stiff: { tension: 210, friction: 20 },\r\n};\r\n\r\nfunction preset(name: PresetName): Preset {\r\n  return presets[name] || ({} as Preset);\r\n}\r\n\r\nexport { preset };\r\n","import { detectIsFunction, detectIsEmpty, detectAreDepsDifferent, trueFn, error } from '../utils';\r\nimport { useLayoutEffect } from '../use-layout-effect';\r\nimport { type SubscriberWithValue } from '../shared';\r\nimport { ATOM_HOST_MASK } from '../constants';\r\nimport { $$scope, getRootId } from '../scope';\r\nimport { createUpdate } from '../workloop';\r\nimport { useUpdate } from '../use-update';\r\nimport { EventEmitter } from '../emitter';\r\nimport { scheduler } from '../scheduler';\r\nimport { useMemo } from '../use-memo';\r\nimport { type Hook } from '../fiber';\r\nimport { batch } from '../batch';\r\n\r\nclass Atom<T = unknown> {\r\n  private value: T;\r\n  private connections1: Map<Hook, Tuple<T>>;\r\n  private connections2: Map<T, Tuple<T>>;\r\n  private subjects: Set<ReadableAtom>;\r\n  private emitter: EventEmitter<'data', EmitterValue<T>>;\r\n\r\n  constructor(value: T) {\r\n    this.value = value;\r\n  }\r\n\r\n  val(fn?: ShouldUpdate<T>, key?: T) {\r\n    try {\r\n      this.__connect(fn, key);\r\n    } catch (err) {\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        error('[Dark]: Illegal invocation atom.val() outside render process!');\r\n      }\r\n    }\r\n\r\n    return this.value;\r\n  }\r\n\r\n  get() {\r\n    return this.value;\r\n  }\r\n\r\n  on(fn: SubscriberWithValue<EmitterValue<T>>) {\r\n    !this.emitter && (this.emitter = new EventEmitter());\r\n\r\n    return this.emitter.on('data', fn);\r\n  }\r\n\r\n  kill() {\r\n    if (this.connections1) {\r\n      for (const [hook, [_, __, ___, key]] of this.connections1) {\r\n        this.off(hook, key);\r\n      }\r\n    }\r\n\r\n    if (this.connections2) {\r\n      for (const [key, [_, hook]] of this.connections2) {\r\n        this.off(hook, key);\r\n      }\r\n    }\r\n\r\n    this.connections1 = null;\r\n    this.connections2 = null;\r\n    this.emitter = null;\r\n    this.subjects = null;\r\n  }\r\n\r\n  toString() {\r\n    return String(this.value);\r\n  }\r\n\r\n  toJSON() {\r\n    return this.value;\r\n  }\r\n\r\n  valueOf() {\r\n    return this.value;\r\n  }\r\n\r\n  __connect(fn: ShouldUpdate<T>, key: T) {\r\n    const rootId = getRootId();\r\n    const fiber = $$scope().getCursorFiber();\r\n    const { hook } = fiber;\r\n    const disconnect = () => this.off(hook, key);\r\n\r\n    !fiber.atoms && (fiber.atoms = new Map());\r\n    fiber.atoms.set(this, disconnect);\r\n    fiber.markHost(ATOM_HOST_MASK);\r\n\r\n    if (detectIsEmpty(key)) {\r\n      !this.connections1 && (this.connections1 = new Map());\r\n      this.connections1.set(hook, [rootId, hook, fn, key]);\r\n    } else {\r\n      !this.connections2 && (this.connections2 = new Map());\r\n      this.connections2.set(key, [rootId, hook, fn, key]);\r\n    }\r\n\r\n    return disconnect;\r\n  }\r\n\r\n  __addSubject(atom$: ReadableAtom) {\r\n    !this.subjects && (this.subjects = new Set());\r\n    this.subjects.add(atom$);\r\n  }\r\n\r\n  __removeSubject(atom$: ReadableAtom) {\r\n    return this.subjects && this.subjects.delete(atom$);\r\n  }\r\n\r\n  __getSize() {\r\n    const size1 = this.connections1 ? this.connections1.size : 0;\r\n    const size2 = this.connections2 ? this.connections2.size : 0;\r\n    const size3 = this.subjects ? this.subjects.size : 0;\r\n    const size4 = this.emitter ? this.emitter.__getSize() : 0;\r\n\r\n    return size1 + size2 + size3 + size4;\r\n  }\r\n\r\n  protected setValue(value: T | ((prevValue: T) => T)) {\r\n    const prev = this.value;\r\n    const next = detectIsFunction(value) ? value(this.value) : value;\r\n    const data: EmitterValue<T> = { prev, next };\r\n    const make = (tuple: Tuple<T>, prev: T, next: T) => {\r\n      const [rootId, hook, shouldUpdate, key] = tuple;\r\n      const fn = shouldUpdate || trueFn;\r\n\r\n      fn(prev, next, key) && scheduler.schedule(createUpdate({ rootId, hook }));\r\n    };\r\n\r\n    this.value = next;\r\n\r\n    if (this.connections1) {\r\n      for (const [_, tuple] of this.connections1) {\r\n        make(tuple, prev, next);\r\n      }\r\n    }\r\n\r\n    if (this.connections2) {\r\n      if (this.connections2.has(next)) {\r\n        make(this.connections2.get(next), prev, next);\r\n        this.connections2.has(prev) && make(this.connections2.get(prev), prev, next);\r\n      }\r\n    }\r\n\r\n    this.emitter && this.emitter.emit('data', data);\r\n    this.subjects && this.subjects.forEach(x => x.__notify());\r\n  }\r\n\r\n  private off(hook: Hook, key: T) {\r\n    hook.owner.atoms.delete(this);\r\n    this.connections1 && this.connections1.delete(hook);\r\n    this.connections2 && this.connections2.delete(key);\r\n  }\r\n}\r\n\r\nclass WritableAtom<T = unknown> extends Atom<T> {\r\n  set(value: T | ((prevValue: T) => T)) {\r\n    super.setValue(value);\r\n  }\r\n}\r\n\r\nclass ReadableAtom<T = unknown> extends Atom<T> {\r\n  private deps$: Array<Atom> = [];\r\n  private fn: ComputedFn<T> = null;\r\n  private values: Array<unknown> = [];\r\n\r\n  constructor(deps$: Array<Atom>, fn: ComputedFn<T>) {\r\n    const values = ReadableAtom.values(deps$);\r\n\r\n    super(ReadableAtom.compute(fn, values));\r\n    this.deps$ = deps$;\r\n    this.fn = fn;\r\n    this.values = values;\r\n    deps$.forEach(x => x.__addSubject(this));\r\n  }\r\n\r\n  __notify() {\r\n    const values = ReadableAtom.values(this.deps$);\r\n\r\n    if (detectAreDepsDifferent(this.values, values)) {\r\n      super.setValue(ReadableAtom.compute(this.fn, values));\r\n    }\r\n\r\n    this.values = values;\r\n  }\r\n\r\n  override kill() {\r\n    super.kill();\r\n    this.deps$.forEach(x => x.__removeSubject(this));\r\n    this.deps$ = [];\r\n    this.fn = null;\r\n  }\r\n\r\n  private static compute(fn: Function, values: Array<unknown>) {\r\n    return fn(...values);\r\n  }\r\n\r\n  private static values(deps$: Array<Atom>) {\r\n    return deps$.map(x => x.get());\r\n  }\r\n}\r\n\r\nconst detectIsAtom = (x: unknown): x is Atom => x instanceof Atom;\r\n\r\nconst detectIsWritableAtom = (x: unknown): x is WritableAtom => x instanceof WritableAtom;\r\n\r\nconst detectIsReadableAtom = (x: unknown): x is ReadableAtom => x instanceof ReadableAtom;\r\n\r\nconst atom = <T>(value?: T) => new WritableAtom(value);\r\n\r\nconst computed = <T, A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\r\n  deps$: [\r\n    Atom<A>,\r\n    Atom<B>?,\r\n    Atom<C>?,\r\n    Atom<D>?,\r\n    Atom<E>?,\r\n    Atom<F>?,\r\n    Atom<G>?,\r\n    Atom<H>?,\r\n    Atom<I>?,\r\n    Atom<J>?,\r\n    Atom<K>?,\r\n    Atom<L>?,\r\n    Atom<M>?,\r\n    Atom<N>?,\r\n  ],\r\n  fn: ComputedFn<T, A, B, C, D, E, F, G, H, I, J, K, L, M, N>,\r\n) => new ReadableAtom(deps$, fn) as ReadableAtom<ReturnType<typeof fn>>;\r\n\r\nfunction useAtom<T>(value?: T): WritableAtom<T> {\r\n  const atom$ = useMemo(() => atom<T>(value), []);\r\n\r\n  useLayoutEffect(() => () => atom$.kill(), []);\r\n\r\n  return atom$;\r\n}\r\n\r\nfunction useComputed<T, A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\r\n  deps$: [\r\n    Atom<A>,\r\n    Atom<B>?,\r\n    Atom<C>?,\r\n    Atom<D>?,\r\n    Atom<E>?,\r\n    Atom<F>?,\r\n    Atom<G>?,\r\n    Atom<H>?,\r\n    Atom<I>?,\r\n    Atom<J>?,\r\n    Atom<K>?,\r\n    Atom<L>?,\r\n    Atom<M>?,\r\n    Atom<N>?,\r\n  ],\r\n  fn: ComputedFn<T, A, B, C, D, E, F, G, H, I, J, K, L, M, N>,\r\n) {\r\n  const atom$ = useMemo(() => computed(deps$, fn), []);\r\n\r\n  useLayoutEffect(() => () => atom$.kill(), []);\r\n\r\n  return atom$;\r\n}\r\n\r\nfunction useStore<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\r\n  atoms$: [\r\n    Atom<A>,\r\n    Atom<B>?,\r\n    Atom<C>?,\r\n    Atom<D>?,\r\n    Atom<E>?,\r\n    Atom<F>?,\r\n    Atom<G>?,\r\n    Atom<H>?,\r\n    Atom<I>?,\r\n    Atom<J>?,\r\n    Atom<K>?,\r\n    Atom<L>?,\r\n    Atom<M>?,\r\n    Atom<N>?,\r\n  ],\r\n) {\r\n  const forceUpdate = useUpdate();\r\n  const update = () => batch(forceUpdate);\r\n\r\n  useLayoutEffect(() => {\r\n    const offs = atoms$.map(x => x.on(update));\r\n\r\n    return () => offs.forEach(x => x());\r\n  }, [...atoms$]);\r\n\r\n  return atoms$.map(x => x.get()) as [A, B, C, D, E, F, G, H, I, J, K, L, M, N];\r\n}\r\n\r\ntype ShouldUpdate<T> = (p: T, n: T, key?: T) => boolean;\r\ntype EmitterValue<T> = { prev: T; next: T };\r\ntype Tuple<T> = [number, Hook, ShouldUpdate<T>, T];\r\ntype ComputedFn<\r\n  T,\r\n  A = unknown,\r\n  B = unknown,\r\n  C = unknown,\r\n  D = unknown,\r\n  E = unknown,\r\n  F = unknown,\r\n  G = unknown,\r\n  H = unknown,\r\n  I = unknown,\r\n  J = unknown,\r\n  K = unknown,\r\n  L = unknown,\r\n  M = unknown,\r\n  N = unknown,\r\n> = (a: A, b?: B, c?: C, d?: D, e?: E, f?: F, g?: G, h?: H, i?: I, j?: J, k?: K, l?: L, m?: M, n?: N) => T;\r\n\r\nexport {\r\n  type Atom,\r\n  WritableAtom,\r\n  ReadableAtom,\r\n  detectIsAtom,\r\n  detectIsWritableAtom,\r\n  detectIsReadableAtom,\r\n  atom,\r\n  computed,\r\n  useAtom,\r\n  useComputed,\r\n  useStore,\r\n};\r\n","import { type WritableAtom, type SubscriberWithValue, atom } from '@dark-engine/core';\r\n\r\nimport { type SpringValue } from '../shared';\r\n\r\nclass Spring<T extends string = string> {\r\n  private props: Record<T, WritableAtom<number>> = {} as Record<T, WritableAtom<number>>;\r\n  private subscribers = new Set<SubscriberWithValue<SpringValue<T>>>();\r\n\r\n  prop(key: T) {\r\n    return this.props[key] ? this.props[key].get() : null;\r\n  }\r\n\r\n  prop$(key: T) {\r\n    return this.props[key] || null;\r\n  }\r\n\r\n  setProp(key: T, value: number) {\r\n    !this.props[key] && (this.props[key] = atom(value));\r\n    this.props[key].set(value);\r\n  }\r\n\r\n  value(): SpringValue<T> {\r\n    const value = Object.keys(this.props).reduce((acc, x) => ((acc[x] = this.props[x].get()), acc), {});\r\n\r\n    return value as SpringValue<T>;\r\n  }\r\n\r\n  on(fn: SubscriberWithValue<SpringValue<T>>) {\r\n    this.subscribers.add(fn);\r\n\r\n    return () => this.subscribers.delete(fn);\r\n  }\r\n\r\n  notify() {\r\n    this.subscribers.forEach(x => x(this.value()));\r\n  }\r\n}\r\n\r\nexport { Spring };\r\n","const time = () => performance.now();\r\n\r\nconst fix = (x: number, precision = 4) => Number(x.toFixed(precision));\r\n\r\nconst illegal = (value: string) => {\r\n  throw new Error(value);\r\n};\r\n\r\nconst range = (x: number) =>\r\n  Array(x)\r\n    .fill(null)\r\n    .map((_, idx) => idx);\r\n\r\nconst uniq = <T>(items: Array<T>, selector: (x: T) => unknown) => {\r\n  const arr: Array<T> = [];\r\n  const set = new Set();\r\n\r\n  for (const item of items) {\r\n    const key = selector(item);\r\n\r\n    !set.has(key) && arr.push(item);\r\n    set.add(key);\r\n  }\r\n\r\n  return arr;\r\n};\r\n\r\nexport { time, fix, illegal, range, uniq };\r\n","import { type SpringConfig } from '../shared';\r\n\r\nfunction stepper(pos: number, vel: number, dest: number, step: number, config: Omit<SpringConfig, 'fix'>) {\r\n  const { tension, friction, mass, precision } = config;\r\n  const [nPos, nVel] = spring(pos, vel, dest, step, tension, friction, mass);\r\n\r\n  if (Math.abs(nPos - dest) < 10 ** (-1 * precision)) return [dest, 0];\r\n\r\n  return [nPos, nVel];\r\n}\r\n\r\nfunction spring(pos: number, vel: number, dest: number, step: number, tension: number, friction: number, mass: number) {\r\n  const disp = pos - dest;\r\n  const sf = -1 * tension * disp;\r\n  const df = -1 * friction * vel;\r\n  const a = (sf + df) / mass;\r\n  const nVel = vel + a * step;\r\n  const nPos = pos + nVel * step;\r\n\r\n  return [nPos, nVel];\r\n}\r\n\r\nexport { stepper };\r\n","import { type ElementKey, platform, falseFn, detectIsUndefined } from '@dark-engine/core';\r\n\r\nimport { type SpringValue, type SpringConfig, defaultSpringConfig } from '../shared';\r\nimport { type AnimationEventName, SharedState } from '../state';\r\nimport { Spring } from '../spring';\r\nimport { time, fix } from '../utils';\r\nimport { stepper } from '../stepper';\r\n\r\nconst BASE_FRAME_TIME_IN_MS = 1000 / 60;\r\nconst MAX_SKIPPED_FRAMES = 10;\r\nconst MAX_DELTA_TIME_IN_SEC = MAX_SKIPPED_FRAMES * (BASE_FRAME_TIME_IN_MS / 1000);\r\nconst MIN_STEP = 0.01;\r\n\r\nclass Controller<T extends string, I = unknown> {\r\n  private key: ElementKey;\r\n  private idx: number;\r\n  private from: SpringValue<T>;\r\n  private to: SpringValue<T>;\r\n  private value: SpringValue<T>;\r\n  private dest: SpringValue<T>;\r\n  private state: SharedState = null;\r\n  private frameTime: number;\r\n  private frameId: number;\r\n  private results: Record<string, [number, number]> = {};\r\n  private completed: Record<string, boolean> = {};\r\n  private queue: Array<SpringValue<T>> = [];\r\n  private left: Controller<T> = null;\r\n  private right: Controller<T> = null;\r\n  private springConfigFn: SpringConfigFn<T>;\r\n  private configurator: ConfiguratorFn<T>;\r\n  private immediate: ImmediateFn<T> = falseFn;\r\n  private immediates: Array<() => void> = [];\r\n  private primaryKey: ElementKey;\r\n  private isReplaced = false;\r\n  private item: I = null;\r\n  private spring = new Spring<T>();\r\n\r\n  constructor(state: SharedState) {\r\n    this.state = state;\r\n    this.key = String(++Controller.key);\r\n  }\r\n\r\n  getKey() {\r\n    return this.key;\r\n  }\r\n\r\n  setKey(x: ElementKey) {\r\n    this.key = x;\r\n  }\r\n\r\n  getIdx() {\r\n    return this.idx;\r\n  }\r\n\r\n  setIdx(x: number) {\r\n    this.idx = x;\r\n  }\r\n\r\n  setFrom(x: SpringValue<T>) {\r\n    this.from = x;\r\n    this.value = this.value || { ...x };\r\n  }\r\n\r\n  setTo(x: SpringValue<T>) {\r\n    this.to = x || { ...this.from };\r\n    this.dest = this.dest || { ...(x || this.from) };\r\n  }\r\n\r\n  setSpringConfigFn(fn?: PatialConfigFn<T>) {\r\n    this.springConfigFn = fn ? (key: T) => ({ ...defaultSpringConfig, ...fn(key) }) : () => defaultSpringConfig;\r\n  }\r\n\r\n  setLeft(x: Controller<T>) {\r\n    this.left = x;\r\n  }\r\n\r\n  setRight(x: Controller<T>) {\r\n    this.right = x;\r\n  }\r\n\r\n  notify() {\r\n    this.sync();\r\n    this.event('item-change');\r\n  }\r\n\r\n  setConfigurator(fn: ConfiguratorFn<T>) {\r\n    this.configurator = fn;\r\n  }\r\n\r\n  setImmediate(fn: ImmediateFn<T>) {\r\n    this.immediate = fn || this.immediate;\r\n  }\r\n\r\n  replaceValue(x: SpringValue<T>) {\r\n    this.value = x;\r\n    this.sync();\r\n  }\r\n\r\n  markAsFake(x: ElementKey) {\r\n    this.primaryKey = x;\r\n\r\n    return Controller.generateFakeKey(x);\r\n  }\r\n\r\n  detectIsFake() {\r\n    return !detectIsUndefined(this.primaryKey);\r\n  }\r\n\r\n  getIsReplaced() {\r\n    return this.isReplaced;\r\n  }\r\n\r\n  setIsReplaced(x: boolean) {\r\n    this.isReplaced = x;\r\n  }\r\n\r\n  getItem() {\r\n    return this.item;\r\n  }\r\n\r\n  setItem(x: I) {\r\n    this.item = x;\r\n  }\r\n\r\n  getState() {\r\n    return this.state;\r\n  }\r\n\r\n  getSpring() {\r\n    this.sync();\r\n\r\n    return this.spring;\r\n  }\r\n\r\n  start(fn?: StartFn<T>) {\r\n    if (this.state.getIsCanceled()) return; // !\r\n    const config1 = this.configurator(this.idx);\r\n    const config2 = fn ? fn(this.idx) : this.configurator(this.idx);\r\n    const from = { ...config1.from, ...config2.from };\r\n    const to = { ...config1.to, ...config2.to };\r\n    const config = config2.config || config1.config;\r\n    const immediate = config2.immediate || config1.immediate;\r\n\r\n    this.setFrom(config1.from || from);\r\n    this.setTo(config1.to || to);\r\n    this.setSpringConfigFn(config);\r\n    this.setImmediate(immediate);\r\n    Object.assign(this.dest, to);\r\n\r\n    this.play(this.dest);\r\n  }\r\n\r\n  reset() {\r\n    this.value = { ...this.from };\r\n    this.dest = { ...(this.to || this.from) };\r\n    this.sync();\r\n  }\r\n\r\n  cancel() {\r\n    this.frameId && platform.caf(this.frameId);\r\n    this.frameId = null;\r\n  }\r\n\r\n  setIsPlaying(x: boolean) {\r\n    this.state.setIsPlaying(x, this.key);\r\n  }\r\n\r\n  private play(to: SpringValue<T>) {\r\n    this.queue.push(to);\r\n    if (this.frameId) return false;\r\n    this.setIsPlaying(true);\r\n    this.event('item-start');\r\n    this.motion(to);\r\n  }\r\n\r\n  private motion(to: SpringValue<T>) {\r\n    const { value, results, completed, springConfigFn } = this;\r\n    const keys = Object.keys(value) as Array<T>;\r\n    const make = () => this.motion(to);\r\n\r\n    this.frameTime = time();\r\n    this.frameId = platform.raf(() => {\r\n      if (this.state.getIsPaused()) return make();\r\n      let step = (time() - this.frameTime) / 1000;\r\n\r\n      if (step > MAX_DELTA_TIME_IN_SEC) {\r\n        step = MIN_STEP;\r\n      }\r\n\r\n      if (this.queue.length === 0) {\r\n        this.queue.push(this.dest);\r\n      }\r\n\r\n      for (const key of keys) {\r\n        if (this.immediate(key)) {\r\n          completed[key] = true;\r\n\r\n          const complete = () => {\r\n            value[key] = to[key];\r\n            results[key] = [to[key], 0];\r\n          };\r\n\r\n          if (to[key] === this.from[key]) {\r\n            this.immediates.push(complete);\r\n          } else {\r\n            complete();\r\n          }\r\n        } else {\r\n          if (!results[key]) {\r\n            results[key] = [value[key], 0];\r\n          }\r\n\r\n          const config = springConfigFn(key);\r\n          let pos = results[key][0];\r\n          let vel = results[key][1];\r\n\r\n          for (const update of this.queue) {\r\n            const dest = update[key] as number;\r\n\r\n            [pos, vel] = stepper(pos, vel, dest, step, config);\r\n            results[key] = [pos, vel];\r\n            completed[key] = pos === dest;\r\n          }\r\n\r\n          value[key] = pos;\r\n        }\r\n      }\r\n\r\n      this.queue = [];\r\n      this.change();\r\n\r\n      if (this.checkCompleted(keys)) {\r\n        this.complete();\r\n      } else {\r\n        make();\r\n      }\r\n    });\r\n  }\r\n\r\n  private event(name: AnimationEventName) {\r\n    this.state.event(name, { value: this.value, idx: this.idx, key: this.key });\r\n  }\r\n\r\n  private change() {\r\n    this.notify();\r\n\r\n    if (this.state.getIsTrail()) {\r\n      if (this.state.detectIsRightFlow()) {\r\n        this.right && this.right.start(() => ({ to: this.value }));\r\n      } else {\r\n        this.left && this.left.start(() => ({ to: this.value }));\r\n      }\r\n    }\r\n  }\r\n\r\n  private complete() {\r\n    this.setIsPlaying(false);\r\n    this.frameTime = null;\r\n    this.frameId = null;\r\n    this.results = {};\r\n    this.completed = {};\r\n    this.immediates.forEach(x => x());\r\n    this.immediates.length > 0 && this.notify();\r\n    this.immediates = [];\r\n    this.event('item-end');\r\n    this.state.completeSeries();\r\n  }\r\n\r\n  private checkCompleted(keys: Array<string>) {\r\n    for (const key of keys) {\r\n      if (!this.completed[key]) return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  private sync() {\r\n    const keys = Object.keys(this.value) as Array<T>;\r\n\r\n    for (const key of keys) {\r\n      const config = this.springConfigFn(key);\r\n      const value = fix(this.value[key], config.fix);\r\n\r\n      this.spring.setProp(key, value);\r\n    }\r\n\r\n    this.spring.notify();\r\n  }\r\n\r\n  private static generateFakeKey(x: ElementKey) {\r\n    return `__${x}:${++Controller.fakeKey}__`;\r\n  }\r\n\r\n  private static key = -1;\r\n  private static fakeKey = -1;\r\n}\r\n\r\nexport type BaseItemConfig<T extends string> = {\r\n  from: SpringValue<T>;\r\n  to?: SpringValue<T>;\r\n  config?: PatialConfigFn<T>;\r\n  immediate?: ImmediateFn<T>;\r\n};\r\n\r\nexport type StartFnConfig<T extends string> = {\r\n  from?: SpringValue<T>;\r\n  to: Partial<SpringValue<T>>;\r\n} & Omit<BaseItemConfig<T>, 'from' | 'to'>;\r\n\r\nexport type ConfiguratorFn<T extends string> = (idx: number) => BaseItemConfig<T>;\r\n\r\nexport type StartFn<T extends string> = (idx: number) => StartFnConfig<T>;\r\n\r\nexport type SpringConfigFn<T extends string> = (key: T) => SpringConfig;\r\n\r\nexport type PatialConfigFn<T extends string> = (key: T) => Partial<SpringConfig>;\r\n\r\nexport type ImmediateFn<T extends string> = (key: T) => boolean;\r\n\r\nexport type NotifierFn<T extends string> = (x: SpringValue<T>) => void;\r\n\r\nexport { Controller };\r\n","import {\r\n  type Component,\r\n  type TagVirtualNodeFactory,\r\n  type Callback,\r\n  type ElementKey,\r\n  Fragment,\r\n  batch,\r\n  useMemo,\r\n  useUpdate,\r\n  useEffect,\r\n  useLayoutEffect,\r\n  detectIsArray,\r\n  detectIsNumber,\r\n} from '@dark-engine/core';\r\n\r\nimport { type SpringValue } from '../shared';\r\nimport { type AnimationEventValue, SharedState } from '../state';\r\nimport { type BaseItemConfig, type ConfiguratorFn, Controller } from '../controller';\r\nimport { type SpringApi } from '../use-springs';\r\nimport { type Spring } from '../spring';\r\nimport { uniq } from '../utils';\r\n\r\nexport type TransitionItemConfig<T extends string> = {\r\n  from: SpringValue<T>;\r\n  enter: SpringValue<T>;\r\n  leave?: SpringValue<T>;\r\n  update?: SpringValue<T>;\r\n  trail?: number;\r\n} & Pick<BaseItemConfig<T>, 'config' | 'immediate'>;\r\n\r\nfunction useTransition<T extends string, I = unknown>(\r\n  items: Array<I>,\r\n  getKey: KeyExtractor<I>,\r\n  configurator: TransitionConfiguratorFn<T, I>,\r\n): [TransitionFn<T, I>, TransitionApi<T>] {\r\n  const forceUpdate = useUpdate();\r\n  const update = () => batch(forceUpdate);\r\n  const state = useMemo(() => new SharedState<T>(), []);\r\n  const scope = useMemo<Scope<T, I>>(\r\n    () => ({\r\n      ctrlsMap: new Map(),\r\n      itemsMap: new Map(),\r\n      fakesMap: new Map(),\r\n      items: [],\r\n      queue: [],\r\n      hasReplaces: false,\r\n      fromApi: false,\r\n      inChain: false,\r\n      pending: null,\r\n      configurator,\r\n    }),\r\n    [],\r\n  );\r\n\r\n  scope.configurator = configurator;\r\n\r\n  useMemo(() => setup({ items, getKey, configurator, state, ctrlsMap: scope.ctrlsMap }), []);\r\n\r\n  const transition = useMemo<TransitionFn<T, I>>(\r\n    () => (render: TransitionRenderFn<T, I>) => {\r\n      const { ctrlsMap } = scope;\r\n      const elements: Array<TransitionElement> = [];\r\n\r\n      for (const [key, ctrl] of ctrlsMap) {\r\n        const idx = ctrl.getIdx();\r\n        const item = ctrl.getItem();\r\n        const spring = ctrl.getSpring();\r\n        const element = Fragment({ key, slot: render({ spring, item, idx }) });\r\n\r\n        if (elements[idx]) {\r\n          const sibling = elements[idx];\r\n\r\n          if (detectIsArray(sibling)) {\r\n            sibling.push(element);\r\n          } else {\r\n            elements[idx] = [sibling, element] as unknown as TransitionElement;\r\n          }\r\n        } else {\r\n          elements[idx] = element;\r\n        }\r\n      }\r\n\r\n      return Fragment({ slot: elements });\r\n    },\r\n    [],\r\n  );\r\n\r\n  const api = useMemo<TransitionApi<T>>(() => {\r\n    return {\r\n      start: fn => {\r\n        scope.fromApi = true;\r\n\r\n        if (scope.inChain) {\r\n          scope.pending && scope.pending();\r\n          scope.pending = null;\r\n        } else {\r\n          state.start(fn);\r\n        }\r\n      },\r\n      chain: (value: boolean) => (scope.inChain = value),\r\n      delay: state.delay.bind(state),\r\n      cancel: state.cancel.bind(state),\r\n      pause: state.pause.bind(state),\r\n      resume: state.resume.bind(state),\r\n      on: state.on.bind(state),\r\n      isCanceled: state.getIsCanceled.bind(state),\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const { inChain } = scope;\r\n    const nextItems = uniq(items, getKey);\r\n    const start = (items: Array<I>) => {\r\n      const { ctrlsMap, fakesMap, items: $items } = scope;\r\n      const configurator: TransitionConfiguratorFn<T, I> = (idx, item) => scope.configurator(idx, item);\r\n      const { ctrls, itemsMap } = setup({ items, getKey, configurator, state, ctrlsMap });\r\n      const { hasChanges, insMap, remMap, movMap, stabMap, replaced } = diff($items, items, getKey);\r\n\r\n      scope.hasReplaces = replaced.size > 0;\r\n      state.setCtrls(ctrls);\r\n      replaced.forEach(key => ctrlsMap.get(key).setIsReplaced(true));\r\n\r\n      state.event('series-start');\r\n      animate({ action: Action.LEAVE, space: fakesMap, state, scope }); // !\r\n      animate({ action: Action.ENTER, space: insMap, state, scope });\r\n      animate({ action: Action.LEAVE, space: remMap, state, scope });\r\n      animate({ action: Action.UPDATE, space: movMap, state, scope });\r\n      animate({ action: Action.UPDATE, space: stabMap, state, scope });\r\n\r\n      scope.items = items; // !\r\n      scope.itemsMap = itemsMap;\r\n      scope.fromApi = false;\r\n      hasChanges && forceUpdate(); // !\r\n    };\r\n\r\n    if (inChain) {\r\n      scope.pending = () => state.defer(() => start(nextItems));\r\n    } else {\r\n      start(nextItems);\r\n    }\r\n  }, [items]);\r\n\r\n  useLayoutEffect(() => {\r\n    const offs: Array<Callback> = [];\r\n\r\n    offs.push(\r\n      api.on('item-end', e => handleItemEnd(e, scope)),\r\n      api.on('series-end', () => handleSeriesEnd(update, state, scope)),\r\n    );\r\n\r\n    return () => offs.forEach(x => x());\r\n  }, []);\r\n\r\n  useLayoutEffect(() => () => api.cancel(), []);\r\n\r\n  return [transition, api];\r\n}\r\n\r\ntype SetupOptions<T extends string, I = unknown> = {\r\n  items: Array<I>;\r\n  getKey: KeyExtractor<I>;\r\n  state: SharedState<T>;\r\n} & Pick<Scope<T, I>, 'configurator' | 'ctrlsMap'>;\r\n\r\nfunction setup<T extends string, I = unknown>(options: SetupOptions<T, I>) {\r\n  const { items, getKey, configurator, state, ctrlsMap } = options;\r\n  const itemsMap = new Map<ElementKey, I>();\r\n  const ctrls = items.map((item, idx) => {\r\n    const key = getKey(item);\r\n\r\n    itemsMap.set(key, item);\r\n\r\n    return getController<T, I>({ idx, item, getKey, configurator, state, ctrlsMap });\r\n  });\r\n\r\n  return { ctrls, itemsMap };\r\n}\r\n\r\ntype GetControllerOptions<T extends string, I = unknown> = {\r\n  idx: number;\r\n  item: I;\r\n} & Pick<SetupOptions<T, I>, 'getKey' | 'configurator' | 'state' | 'ctrlsMap'>;\r\n\r\nfunction getController<T extends string, I = unknown>(options: GetControllerOptions<T, I>) {\r\n  const { idx, item, getKey, configurator, state, ctrlsMap } = options;\r\n  const key = getKey(item);\r\n  const ctrl = ctrlsMap.get(key) || new Controller<T, I>(state);\r\n\r\n  prepare({ ctrl, key, idx, item, configurator });\r\n  ctrlsMap.set(key, ctrl);\r\n\r\n  return ctrl;\r\n}\r\n\r\nfunction extractKeys<I = unknown>(prevItems: Array<I>, nextItems: Array<I>, getKey: KeyExtractor<I>) {\r\n  const prevKeys: Array<ElementKey> = [];\r\n  const nextKeys: Array<ElementKey> = [];\r\n  const prevKeysMap: Record<ElementKey, boolean> = {};\r\n  const nextKeysMap: Record<ElementKey, boolean> = {};\r\n  const max = Math.max(prevItems.length, nextItems.length);\r\n\r\n  for (let i = 0; i < max; i++) {\r\n    const prevItem = prevItems[i];\r\n    const nextItem = nextItems[i];\r\n\r\n    if (prevItem) {\r\n      const prevKey = getKey(prevItem);\r\n\r\n      if (!prevKeysMap[prevKey]) {\r\n        prevKeysMap[prevKey] = true;\r\n        prevKeys.push(prevKey);\r\n      }\r\n    }\r\n\r\n    if (nextItem) {\r\n      const nextKey = getKey(nextItem);\r\n\r\n      if (!nextKeysMap[nextKey]) {\r\n        nextKeysMap[nextKey] = true;\r\n        nextKeys.push(nextKey);\r\n      }\r\n    }\r\n  }\r\n\r\n  return {\r\n    prevKeys,\r\n    nextKeys,\r\n    prevKeysMap,\r\n    nextKeysMap,\r\n  };\r\n}\r\n\r\nfunction diff<I = unknown>(prevItems: Array<I>, nextItems: Array<I>, getKey: KeyExtractor<I>) {\r\n  const { prevKeys, nextKeys, prevKeysMap, nextKeysMap } = extractKeys(prevItems, nextItems, getKey);\r\n  let size = Math.max(prevKeys.length, nextKeys.length);\r\n  let p = 0;\r\n  let n = 0;\r\n  let hasChanges = false;\r\n  const insMap = new Map<ElementKey, number>();\r\n  const remMap = new Map<ElementKey, number>();\r\n  const movMap = new Map<ElementKey, number>();\r\n  const stabMap = new Map<ElementKey, number>();\r\n  const replaced = new Set<ElementKey>();\r\n\r\n  for (let i = 0; i < size; i++) {\r\n    const nextKey = nextKeys[i - n] ?? null;\r\n    const prevKey = prevKeys[i - p] ?? null;\r\n\r\n    if (nextKey !== prevKey) {\r\n      if (nextKey !== null && !prevKeysMap[nextKey]) {\r\n        if (prevKey !== null && !nextKeysMap[prevKey]) {\r\n          insMap.set(nextKey, i);\r\n          remMap.set(prevKey, i);\r\n          replaced.add(prevKey);\r\n          hasChanges = true;\r\n        } else {\r\n          insMap.set(nextKey, i);\r\n          hasChanges = true;\r\n          p++;\r\n          size++;\r\n        }\r\n      } else if (!nextKeysMap[prevKey]) {\r\n        remMap.set(prevKey, i);\r\n        hasChanges = true;\r\n        n++;\r\n        size++;\r\n      } else if (nextKeysMap[prevKey] && nextKeysMap[nextKey]) {\r\n        movMap.set(nextKey, i);\r\n        hasChanges = true;\r\n      }\r\n    } else if (nextKey !== null) {\r\n      stabMap.set(nextKey, i);\r\n    }\r\n  }\r\n\r\n  return {\r\n    hasChanges,\r\n    insMap,\r\n    remMap,\r\n    movMap,\r\n    stabMap,\r\n    replaced,\r\n  };\r\n}\r\n\r\ntype AnimateOptions<T extends string, I = unknown> = {\r\n  action: Action;\r\n  space: Map<ElementKey, number>;\r\n  state: SharedState<T>;\r\n  scope: Scope<T, I>;\r\n};\r\n\r\nfunction animate<T extends string, I = unknown>(options: AnimateOptions<T, I>) {\r\n  const { space, action, state, scope } = options;\r\n  const { configurator, ctrlsMap, fakesMap } = scope;\r\n  const ctrls = state.getCtrls();\r\n  const isEnter = action === Action.ENTER;\r\n  const isLeave = action === Action.LEAVE;\r\n  let $idx = 0;\r\n\r\n  for (const [key, idx] of space) {\r\n    const ctrl = ctrlsMap.get(key);\r\n    const item = ctrl.getItem();\r\n    const config = configurator(idx, item);\r\n    const { trail } = config;\r\n    const to = isLeave && !config[action] ? config.from : config[action];\r\n    let $ctrl = ctrl;\r\n\r\n    if (isEnter) {\r\n      const isReplaced = ctrl.getIsReplaced();\r\n      const isPlaying = state.detectIsPlaying(key);\r\n\r\n      if (isReplaced) {\r\n        if (isPlaying) {\r\n          const fake = new Controller<T, I>(state);\r\n          const fakeKey = fake.markAsFake(key);\r\n\r\n          $ctrl = fake;\r\n          prepare({ ctrl: fake, key: fakeKey, idx, item, configurator });\r\n          ctrlsMap.set(fakeKey, fake);\r\n          fakesMap.set(fakeKey, idx);\r\n          ctrls.push(fake);\r\n        } else {\r\n          ctrl.setIsReplaced(false);\r\n        }\r\n      }\r\n    }\r\n\r\n    to && withTrail(() => $ctrl.start(() => ({ to })), $idx, trail);\r\n    $idx++;\r\n  }\r\n}\r\n\r\nfunction withTrail(fn: () => void, idx: number, trail?: number) {\r\n  if (detectIsNumber(trail)) {\r\n    setTimeout(fn, idx * trail);\r\n  } else {\r\n    fn();\r\n  }\r\n}\r\n\r\ntype PrepareOptions<T extends string, I = unknown> = {\r\n  ctrl: Controller<T, I>;\r\n  idx: number;\r\n  key: ElementKey;\r\n  item: I;\r\n  configurator: TransitionConfiguratorFn<T, I>;\r\n};\r\n\r\nfunction prepare<T extends string, I = unknown>(options: PrepareOptions<T, I>) {\r\n  const { ctrl, key, idx, item, configurator } = options;\r\n  const { from, enter, config } = configurator(idx, item);\r\n  const $configurator: ConfiguratorFn<T> = (idx: number) => {\r\n    const { enter, leave, update, trail, ...rest } = configurator(idx, item);\r\n\r\n    return { ...rest };\r\n  };\r\n\r\n  ctrl.setKey(key);\r\n  ctrl.setIdx(idx);\r\n  ctrl.setItem(item);\r\n  ctrl.setFrom(from);\r\n  ctrl.setTo(enter);\r\n  ctrl.setSpringConfigFn(config);\r\n  ctrl.setConfigurator($configurator);\r\n}\r\n\r\nfunction handleItemEnd<T extends string, I = unknown>({ key }: AnimationEventValue<T>, scope: Scope<T, I>) {\r\n  const { ctrlsMap, fakesMap, itemsMap, hasReplaces, queue, fromApi } = scope;\r\n\r\n  if (ctrlsMap.has(key) && ctrlsMap.get(key).detectIsFake()) {\r\n    ctrlsMap.delete(key);\r\n    fakesMap.delete(key);\r\n  }\r\n\r\n  if (fromApi || hasReplaces) {\r\n    !itemsMap.has(key) && ctrlsMap.delete(key);\r\n  } else {\r\n    queue.push(() => !scope.itemsMap.has(key) && ctrlsMap.delete(key));\r\n  }\r\n}\r\n\r\nfunction handleSeriesEnd<T extends string, I = unknown>(update: () => void, state: SharedState<T>, scope: Scope<T, I>) {\r\n  const { ctrlsMap, configurator, fromApi } = scope;\r\n  const ctrls: Array<Controller<T, I>> = [];\r\n\r\n  if (fromApi) return;\r\n  scope.queue.forEach(x => x());\r\n  scope.queue = [];\r\n\r\n  for (const [_, ctrl] of ctrlsMap) {\r\n    const { enter } = configurator(ctrl.getIdx(), ctrl.getItem());\r\n\r\n    ctrl.replaceValue({ ...enter });\r\n    ctrl.notify();\r\n    ctrls.push(ctrl);\r\n  }\r\n\r\n  state.setCtrls(ctrls);\r\n  update();\r\n}\r\n\r\ntype Scope<T extends string, I = unknown> = {\r\n  items: Array<I>;\r\n  configurator: TransitionConfiguratorFn<T, I>;\r\n  ctrlsMap: Map<ElementKey, Controller<T, I>>;\r\n  itemsMap: Map<ElementKey, I>;\r\n  fakesMap: Map<ElementKey, number>;\r\n  queue: Array<Callback>;\r\n  hasReplaces: boolean;\r\n  fromApi: boolean;\r\n  inChain: boolean;\r\n  pending: Callback;\r\n};\r\n\r\nenum Action {\r\n  ENTER = 'enter',\r\n  LEAVE = 'leave',\r\n  UPDATE = 'update',\r\n}\r\n\r\ntype KeyExtractor<I> = (x: I) => ElementKey;\r\n\r\ntype TransitionElement = Component | TagVirtualNodeFactory;\r\n\r\ntype TransitionConfiguratorFn<T extends string = string, I = unknown> = (\r\n  idx: number,\r\n  item: I,\r\n) => TransitionItemConfig<T>;\r\n\r\nexport type TransitionApi<T extends string = string> = Omit<SpringApi<T>, 'reset'>;\r\n\r\nexport type TransitionRenderFn<T extends string = string, I = unknown> = (options: {\r\n  spring: Spring<T>;\r\n  item: I;\r\n  idx: number;\r\n}) => TransitionElement;\r\n\r\nexport type TransitionFn<T extends string = string, I = unknown> = (render: TransitionRenderFn<T, I>) => Component;\r\n\r\nexport { useTransition };\r\n","import {\r\n  type Component,\r\n  type TagVirtualNodeFactory,\r\n  type Callback,\r\n  component,\r\n  useMemo,\r\n  useInsertionEffect,\r\n  $$scope,\r\n  walk,\r\n  nextTick,\r\n} from '@dark-engine/core';\r\n\r\nimport { type SpringValue } from '../shared';\r\nimport { type Spring } from '../spring';\r\n\r\ntype AnimatedProps<E = unknown, T extends string = string> = {\r\n  spring: Spring<T>;\r\n  fn: StyleFn<E, T>;\r\n  slot: Component | TagVirtualNodeFactory;\r\n};\r\n\r\nconst Animated = component<AnimatedProps>(({ spring, fn, slot }) => {\r\n  const cursor = $$scope().getCursorFiber();\r\n  const scope = useMemo<Scope>(() => ({ element: null, notify: null }), []);\r\n  const notify = () => scope.element && fn(scope.element, spring.value());\r\n\r\n  scope.notify = notify;\r\n\r\n  useInsertionEffect(() => {\r\n    const make = () => {\r\n      const fiber = cursor.hook.owner;\r\n\r\n      walk(fiber.child, (fiber, _, stop) => {\r\n        if (fiber.element) {\r\n          scope.element = fiber.element;\r\n          return stop();\r\n        }\r\n      });\r\n\r\n      notify();\r\n    };\r\n\r\n    if ($$scope().getIsHydrateZone()) {\r\n      nextTick(make);\r\n    } else {\r\n      make();\r\n    }\r\n\r\n    return spring.on(() => scope.notify());\r\n  }, [spring]);\r\n\r\n  notify();\r\n\r\n  return slot;\r\n});\r\n\r\ntype Scope = { element: unknown; notify: Callback };\r\ntype StyleFn<E = unknown, T extends string = string> = (element: E, value: SpringValue<T>) => void;\r\n\r\nexport { Animated };\r\n","import { h, Fragment, component, useEffect, useLayoutEffect, useState, useMemo, useRef } from '@dark-engine/core';\r\nimport { createRoot } from '@dark-engine/platform-browser';\r\nimport { SpringValue, Animated, useTransition } from '@dark-engine/animations';\r\n\r\nfunction shuffle<T = unknown>(list: Array<T>) {\r\n  let currentIndex = list.length;\r\n  let randomIndex: number;\r\n\r\n  while (currentIndex != 0) {\r\n    randomIndex = Math.floor(Math.random() * currentIndex);\r\n    currentIndex--;\r\n\r\n    [list[currentIndex], list[randomIndex]] = [list[randomIndex], list[currentIndex]];\r\n  }\r\n\r\n  return [...list];\r\n}\r\n\r\nfunction useMedia(queries: string[], values: number[], defaultValue: number) {\r\n  const match = () => values[queries.findIndex(q => matchMedia(q).matches)] || defaultValue;\r\n  const [value, set] = useState(match);\r\n\r\n  useEffect(() => {\r\n    const handler = () => set(match);\r\n\r\n    window.addEventListener('resize', handler);\r\n\r\n    return () => window.removeEventListener('resize', handler);\r\n  }, []);\r\n\r\n  return value;\r\n}\r\n\r\ntype GridItem = {\r\n  width?: number;\r\n  height: number;\r\n  x?: number;\r\n  y?: number;\r\n  src: string;\r\n};\r\n\r\ntype DataItem = Pick<GridItem, 'src' | 'height'>;\r\n\r\nconst data: Array<DataItem> = [\r\n  { src: 'https://images.pexels.com/photos/416430/pexels-photo-416430.jpeg', height: 150 },\r\n  { src: 'https://images.pexels.com/photos/1103970/pexels-photo-1103970.jpeg', height: 300 },\r\n  { src: 'https://images.pexels.com/photos/911738/pexels-photo-911738.jpeg', height: 300 },\r\n  { src: 'https://images.pexels.com/photos/358574/pexels-photo-358574.jpeg', height: 300 },\r\n  { src: 'https://images.pexels.com/photos/1738986/pexels-photo-1738986.jpeg', height: 300 },\r\n  { src: 'https://images.pexels.com/photos/96381/pexels-photo-96381.jpeg', height: 300 },\r\n  { src: 'https://images.pexels.com/photos/1005644/pexels-photo-1005644.jpeg', height: 200 },\r\n  { src: 'https://images.pexels.com/photos/227675/pexels-photo-227675.jpeg', height: 300 },\r\n  { src: 'https://images.pexels.com/photos/325185/pexels-photo-325185.jpeg', height: 200 },\r\n  { src: 'https://images.pexels.com/photos/327482/pexels-photo-327482.jpeg', height: 400 },\r\n  { src: 'https://images.pexels.com/photos/2736834/pexels-photo-2736834.jpeg', height: 200 },\r\n  { src: 'https://images.pexels.com/photos/249074/pexels-photo-249074.jpeg', height: 150 },\r\n  { src: 'https://images.pexels.com/photos/310452/pexels-photo-310452.jpeg', height: 400 },\r\n  { src: 'https://images.pexels.com/photos/380337/pexels-photo-380337.jpeg', height: 200 },\r\n];\r\n\r\ntype SpringProps = 'x' | 'y' | 'width' | 'height' | 'opacity';\r\n\r\nconst App = component(() => {\r\n  const ref = useRef<HTMLDivElement>(null);\r\n  const columns = useMedia(['(min-width: 1500px)', '(min-width: 1000px)', '(min-width: 600px)'], [5, 4, 3], 2);\r\n  const [items, setItems] = useState(data);\r\n  const [width, setWidth] = useState(0);\r\n  const [heights, gridItems] = useMemo(() => {\r\n    const heights = new Array(columns).fill(0); // Each column gets a height starting with zero\r\n    const gridItems: Array<GridItem> = items.map(child => {\r\n      const column = heights.indexOf(Math.min(...heights)); // Basic masonry-grid placing, puts tile into the smallest column using Math.min\r\n      const x = Number(((width / columns) * column).toFixed(0)); // x = container width / number of columns * column index,\r\n      const y = (heights[column] += child.height / 2) - child.height / 2; // y = it's just the height of the current column\r\n\r\n      return {\r\n        ...child,\r\n        x,\r\n        y,\r\n        width: Number((width / columns).toFixed(0)),\r\n        height: child.height / 2,\r\n      };\r\n    });\r\n\r\n    return [heights, gridItems];\r\n  }, [columns, items, width]);\r\n\r\n  const [transition] = useTransition<SpringProps, GridItem>(\r\n    gridItems,\r\n    x => x.src,\r\n    (_, { x, y, width, height }) => ({\r\n      from: { x, y, width, height, opacity: 0 },\r\n      enter: { x, y, width, height, opacity: 1 },\r\n      update: { x, y, width, height, opacity: 1 },\r\n      leave: { x, y, width, height: 0, opacity: 0 },\r\n      config: () => ({ mass: 5, tension: 500, friction: 100 }),\r\n      trail: 25,\r\n    }),\r\n  );\r\n\r\n  useEffect(() => {\r\n    const t = setInterval(() => setItems(shuffle), 2000);\r\n\r\n    return () => clearInterval(t);\r\n  }, []);\r\n\r\n  useLayoutEffect(() => {\r\n    const setSize = () => {\r\n      const { width } = ref.current.getBoundingClientRect();\r\n\r\n      setWidth(width);\r\n    };\r\n\r\n    setSize();\r\n\r\n    window.addEventListener('resize', setSize);\r\n\r\n    return () => window.removeEventListener('resize', setSize);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div ref={ref} class='list' style={{ height: Math.max(...heights) + 'px' }}>\r\n        {transition(({ spring, item }) => {\r\n          return (\r\n            <Animated spring={spring} fn={styleFn}>\r\n              <div>\r\n                <div style={{ 'background-image': `url(${item.src}?auto=compress&dpr=2&h=500&w=500)` }} />\r\n              </div>\r\n            </Animated>\r\n          );\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n});\r\n\r\nconst styleFn = (element: HTMLDivElement, value: SpringValue<SpringProps>) => {\r\n  const { x, y, width, height, opacity } = value;\r\n  const setProp = setPropOf(element);\r\n\r\n  setProp('width', `${width}px`);\r\n  setProp('height', `${height}px`);\r\n  setProp('opacity', `${opacity}`);\r\n  setProp('transform', `translate3d(${x}px, ${y}px, 0)`);\r\n};\r\n\r\nconst setPropOf = (element: HTMLElement) => (k: string, v: string) => element.style.setProperty(k, v);\r\n\r\ncreateRoot(document.getElementById('root')).render(<App />);\r\n","import { type DarkElement, unmountRoot } from '@dark-engine/core';\r\n\r\nimport { render, roots } from '../render';\r\nimport type { TagNativeElement } from '../native-element';\r\n\r\nfunction createRoot(container: TagNativeElement) {\r\n  return {\r\n    render: (element: DarkElement) => render(element, container),\r\n    unmount: () => unmount(container),\r\n  };\r\n}\r\n\r\nfunction unmount(container: TagNativeElement) {\r\n  const rootId = roots.get(container);\r\n\r\n  unmountRoot(rootId, () => {\r\n    roots.delete(container);\r\n    container.innerHTML = '';\r\n  });\r\n}\r\n\r\nexport { createRoot, unmount };\r\n"],"names":["ROOT","REPLACER","KEY_ATTR","REF_ATTR","CREATE_EFFECT_TAG","UPDATE_EFFECT_TAG","SKIP_EFFECT_TAG","MOVE_MASK","TaskPriority","Flag","ATTR_BLACK_LIST","SKIP_SCAN_OPT","MEMO_SLOT_OPT","STATIC_SLOT_OPT","detectIsFunction","o","detectIsUndefined","detectIsTextBased","detectIsObject","detectIsBoolean","detectIsArray","Array","isArray","detectIsNull","detectIsEmpty","getTime","Date","now","dummyFn","trueFn","falseFn","sameFn","x","flatten","source","transform","length","list","stack","idx","pop","i","push","prevDeps","nextDeps","max","Math","Object","is","nextTick","callback","Promise","resolve","then","createIndexKey","defaultRealisation","Error","platform","createElement","insertElement","raf","caf","spawn","commit","finishCommit","detectIsDynamic","detectIsPortal","unmountPortal","chunk","EventEmitter","subscribers","Map","on","e","fn","this","has","set","Set","get","add","delete","emit","data","forEach","kill","__getSize","size","Scope","root","wip","cursor","unit","mountDeep","mountLevel","mountNav","events","unsubs","actions","candidates","deletions","cancels","asyncEffects","layoutEffects","insertionEffects","resourceId","resources","defers","setPendingStatus","isLayoutEffectsZone","isInsertionEffectsZone","isUpdateZone","isBatchZone","isHydrateZone","isStreamZone","isTransitionZone","isEventZone","isHot","isDynamic","isServer","emitter","resetActions","getActionsById","id","addActionMap","map","replace","insert","remove","move","stable","addReplaceAction","nextKey","addInsertAction","addRemoveAction","prevKey","addMoveAction","addStableAction","copy","scope","getRoot","setRoot","fiber","getWorkInProgress","setWorkInProgress","getNextUnitOfWork","setNextUnitOfWork","getCursorFiber","setCursorFiber","navToChild","navToSibling","navToParent","navToPrev","getMountIndex","setMountDeep","getMountDeep","value","resetMount","getEvents","addEventUnsubscriber","unsubscribeEvents","getCandidates","addCandidate","resetCandidates","getDeletions","hasDeletion","nextFiber","parent","addDeletion","resetDeletions","addAsyncEffect","resetAsyncEffects","runAsyncEffects","effects","setTimeout","addLayoutEffect","resetLayoutEffects","runLayoutEffects","setIsLayoutEffectsZone","addInsertionEffect","resetInsertionEffects","runInsertionEffects","setIsInsertionEffectsZone","addCancel","applyCancels","resetCancels","getIsLayoutEffectsZone","getIsInsertionEffectsZone","getIsUpdateZone","setIsUpdateZone","getIsBatchZone","setIsBatchZone","getIsHydrateZone","setIsHydrateZone","getIsStreamZone","setIsStreamZone","getIsTransitionZone","setIsTransitionZone","getIsEventZone","setIsEventZone","getIsHot","setIsHot","getPendingStatusSetter","setPendingStatusSetter","flush","getEmitter","defer","getDefers","resetDefers","getResource","setResource","res","getResources","getResourceId","setResourceId","getNextResourceId","runAfterCommit","rootId","scopes","getRootId","setRootId","$$scope","$$inject","Symbol","Component","constructor","type","token","props","ref","shouldUpdate","displayName","children","component","options","$token","factory","defaultInject","detectIsComponent","$$vNode","ATTR_TYPE","VirtualNode","TagVirtualNode","name","attrs","super","NodeType","TAG","TextVirtualNode","TEXT","String","CommentVirtualNode","text","COMMENT","from","detectIsTextVirtualNode","detectIsVirtualNode","vNode","detectIsTagVirtualNode","detectIsCommentVirtualNode","detectIsVirtualNodeFactory","detectIsPlainVirtualNode","createReplacer","getElementKey","inst","hasElementFlag","flag","Boolean","hasComponentFlag","hasVirtualNodeFactoryFlag","hasTagVirtualNodeFlag","getElementType","hasChildrenProp","detectAreSameInstanceTypes","prevInst","nextInst","isComponentFactories","nc","Fiber","hook","provider","cc","cec","eidx","mask","element","tag","child","next","alt","atoms","nextId","mutate","keys","key","markHost","increment","count","force","$scope","wipFiber","stop","setError","error","catch","static","Hook","values","owner","$$memo","defaultShouldUpdate","nextProps","detectIsMemo","instance","walk","onWalk","shouldDeep","shouldStop","skip","getFiberWithElement","$fiber","buildChildNodes","onNode","getKey","buildChildNode","altMap","startEidx","prevIdx","nextIdx","left","right","isFirst","isLast","notifyParents","$$fragment","Fragment","slot","Memo","memo","getValue","p","n","deps","state","$value","detectIsElement","$$useEffect","createEffect","useEffect","effect","cleanup","undefined","isInsertionEffect","EffectType","INSERTION","isLayoutEffect","LAYOUT","isAsyncEffect","ASYNC","runEffect","dropEffects","$$useLayoutEffect","dropLayoutEffects","$$useInsertionEffect","useInsertionEffect","dropInsertionEffects","shouldUnmountFiber","INSERTION_EFFECT_HOST_MASK","unmountFiber","_","hasPendingPromise","hasRenderError","workLoop","isAsync","shouldYield","hasMoreWork","performUnitOfWork","scheduler","hasPrimaryTask","fork","unmounts","diff","parentFiber","isRight","sync","err","finally","isDeepWalking","isStream","hasChildren","$inst","createFiber","getAlternate","share","mountChild","mountSibling","prev","shouldMount","pc","mount","hasSameCount","prevKeys","nextKeys","prevKeysMap","nextKeysMap","keyedFibersMap","usedKeysMap","extractKeys","prevKeyFiber","tryOptStaticSlot","hasMove","hasRemove","hasInsert","hasReplace","detectIsStableMemoTree","tryOptMov","tryOptRem","tryOptMemoSlot","reconcile","isUpdate","setup","detectAreSameComponentTypesWithSameKeys","getHook","fromChild","parentId","isMove","isStable","isComponent","result","promise","all","setNextId","args","console","supportConditional","cancel","$$scope$","cancelTask","setValue","resetValue","assign","replaceScope","createUpdate","isTransition","createChanger","$createChanger","restore","fromRestore","detectIsFiberAlive","MessageChannel","port1","port2","MessagePort","channel","offs","event","off","postMessage","unref","Task","priority","forceAsync","taskRestorer","pendingSetter","nextTaskId","getPriority","getForceAsync","setIsTransition","getIsTransition","run","pending","markAsPending","isPending","canPending","markAsUnnecessary","isUnnecessary","getIsUnnecessary","setTaskRestorer","setLocationCreator","locationCreator","createLocation","setPendingSetter","loc","tasks","deep","$loc","split","some","$$loc","indexOf","createRootLocation","queue","HIGH","NORMAL","LOW","deadline","task","scheduledCallback","isMessageLoopRunning","port","performWorkUntilDeadline","bind","reset","schedule","put","execute","high","normal","low","getQueues","hasPrimary","hasLow","detectHasRelatedUpdate","complete","filter","splice","pick","shift","requestCallbackAsync","requestCallback","isBusy","unshift","hasChanger","isBatch","isEvent","callbackOptions","createHookLocation","change","batch","timer","changes","clearTimeout","addBatch","useState","initialValue","update","setState","sourceValue","prevValue","newValue","applyRef","current","mutableRef","hasOwnProperty","detectIsMutableRef","as","_void","View","$$portal","container","innerHTML","getPortalContainer","SyntheticEvent","sourceEvent","target","propagation","stopPropagation","preventDefault","getPropagation","delegateEvent","eventName","handler","eventsMap","handlersMap","$handler","slice","rootHandler","$event","parentElement","dispatchEvent","WeakMap","document","addEventListener","removeEventListener","detectIsEvent","attrName","startsWith","getEventName","toLowerCase","STYLE_ATTR","CLASS_ATTR","CLASS_NAME_ATTR","moves","patches","svgTagNames","voidTagNames","createNativeElementMap","detectIsSvgElement","createElementNS","createTextNode","createComment","createNativeElement","node","setObjectStyle","style","setProperty","toggleAttribute","setAttribute","removeAttribute","patchProperties","tagName","attrValue","patchPropertiesSpecialCasesMap","prototype","getPrototypeOf","descriptor","getOwnPropertyDescriptor","canSetProperty","includes","input","checked","autofocus","focus","textarea","innerText","commitMap","childNodes","nativeElement","Text","splitText","appendNativeElement","insertNativeElement","attrNames","tagElement","addAttributes","commitCreation","sourceNodes","elements","collectElements","sourceFragment","DocumentFragment","elementIdx","removeNativeElement","replaceNativeElement","prevInstance","nextInstance","textContent","prevNode","nextNode","prevAttrs","nextAttrs","getAttributeNames","prevAttrValue","nextAttrValue","updateAttributes","commitUpdate","canRemoveNativeElement","appendChild","sibling","insertBefore","insertNativeElementByIndex","candidate","replaceChild","removeChild","roots","requestAnimationFrame","window","cancelAnimationFrame","isInjected","SharedState","ctrls","flow","Flow","RIGHT","isTrail","isPaused","isCanceled","timeout","timerId","getCtrls","setCtrls","setIsTrail","getIsTrail","setFlow","getIsPaused","getIsCanceled","detectIsRightFlow","setIsPlaying","detectIsPlaying","start","pause","resume","delay","resetTimer","subs","completeSeries","defaultSpringConfig","tension","friction","mass","precision","fix","Atom","val","__connect","connections1","__","___","connections2","subjects","toString","toJSON","valueOf","disconnect","__addSubject","atom$","__removeSubject","make","tuple","__notify","WritableAtom","Spring","prop","prop$","setProp","atom","reduce","acc","notify","time","performance","Number","toFixed","stepper","pos","vel","dest","step","config","nPos","nVel","spring","abs","Controller","results","completed","immediate","immediates","isReplaced","item","setKey","getIdx","setIdx","setFrom","setTo","to","setSpringConfigFn","springConfigFn","setLeft","setRight","setConfigurator","configurator","setImmediate","replaceValue","markAsFake","primaryKey","generateFakeKey","detectIsFake","getIsReplaced","setIsReplaced","getItem","setItem","getState","getSpring","config1","config2","play","frameId","motion","frameTime","MAX_SKIPPED_FRAMES","checkCompleted","fakeKey","items","ctrlsMap","itemsMap","ctrl","prepare","getController","animate","space","action","fakesMap","isEnter","Action","ENTER","isLeave","LEAVE","$idx","trail","$ctrl","isPlaying","fake","withTrail","enter","leave","rest","Animated","shuffle","randomIndex","currentIndex","floor","random","src","height","App","useRef","columns","queries","defaultValue","match","findIndex","q","matchMedia","matches","useMedia","setItems","width","setWidth","heights","gridItems","fill","column","min","y","transition","forceUpdate","hasReplaces","fromApi","inChain","render","api","chain","nextItems","selector","arr","uniq","$items","hasChanges","insMap","remMap","movMap","stabMap","replaced","prevItems","prevItem","nextItem","UPDATE","handleItemEnd","handleSeriesEnd","useTransition","opacity","t","setInterval","clearInterval","setSize","getBoundingClientRect","class","styleFn","setPropOf","k","v","getElementById","hydrate","isMounted","isHydrate","rootFiber","unmount","onCompleted","unmountRoot"],"sourceRoot":""}