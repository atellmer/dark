{"version":3,"file":"build.js","mappings":"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","sources":["webpack://dark-spring-snake/../../packages/core/src/constants.ts","webpack://dark-spring-snake/../../packages/core/src/component/component.ts","webpack://dark-spring-snake/../../packages/core/src/utils/utils.ts","webpack://dark-spring-snake/../../packages/core/src/platform/platform.ts","webpack://dark-spring-snake/../../packages/core/src/emitter/emitter.ts","webpack://dark-spring-snake/../../packages/core/src/scope/scope.ts","webpack://dark-spring-snake/../../packages/core/src/view/view.ts","webpack://dark-spring-snake/../../packages/core/src/fiber/fiber.ts","webpack://dark-spring-snake/../../packages/core/src/memo/memo.ts","webpack://dark-spring-snake/../../packages/core/src/walk/walk.ts","webpack://dark-spring-snake/../../packages/core/src/fragment/fragment.ts","webpack://dark-spring-snake/../../packages/core/src/use-memo/use-memo.ts","webpack://dark-spring-snake/../../packages/core/src/use-effect/use-effect.ts","webpack://dark-spring-snake/../../packages/core/src/use-layout-effect/use-layout-effect.ts","webpack://dark-spring-snake/../../packages/core/src/use-insertion-effect/use-insertion-effect.ts","webpack://dark-spring-snake/../../packages/core/src/unmount/unmount.ts","webpack://dark-spring-snake/../../packages/core/src/workloop/workloop.ts","webpack://dark-spring-snake/../../packages/core/src/scheduler/scheduler.ts","webpack://dark-spring-snake/../../packages/core/src/use-update/use-update.ts","webpack://dark-spring-snake/../../packages/core/src/batch/batch.ts","webpack://dark-spring-snake/../../packages/core/src/element/element.ts","webpack://dark-spring-snake/../../packages/core/src/ref/ref.ts","webpack://dark-spring-snake/../../packages/platform-browser/src/portal/portal.ts","webpack://dark-spring-snake/../../packages/platform-browser/src/events/events.ts","webpack://dark-spring-snake/../../packages/platform-browser/src/constants.ts","webpack://dark-spring-snake/../../packages/platform-browser/src/dom/dom.ts","webpack://dark-spring-snake/../../packages/platform-browser/src/render/render.ts","webpack://dark-spring-snake/../../packages/styled/src/constants.ts","webpack://dark-spring-snake/../../packages/styled/src/utils/utils.ts","webpack://dark-spring-snake/../../packages/styled/src/keyframes/keyframes.ts","webpack://dark-spring-snake/../../packages/styled/src/tokens/tokens.ts","webpack://dark-spring-snake/../../packages/core/src/context/context.ts","webpack://dark-spring-snake/../../packages/styled/src/theme/theme.ts","webpack://dark-spring-snake/../../packages/styled/src/server/manager.ts","webpack://dark-spring-snake/../../packages/styled/src/parse/parse.ts","webpack://dark-spring-snake/../../packages/styled/src/hash/hash.ts","webpack://dark-spring-snake/../../packages/styled/src/styled/styled.ts","webpack://dark-spring-snake/../../packages/animations/src/state/state.ts","webpack://dark-spring-snake/../../packages/animations/src/preset/preset.ts","webpack://dark-spring-snake/../../packages/animations/src/shared/shared.ts","webpack://dark-spring-snake/../../packages/core/src/atom/atom.ts","webpack://dark-spring-snake/../../packages/animations/src/spring/spring.ts","webpack://dark-spring-snake/../../packages/animations/src/utils/utils.ts","webpack://dark-spring-snake/../../packages/animations/src/stepper/stepper.ts","webpack://dark-spring-snake/../../packages/animations/src/controller/controller.ts","webpack://dark-spring-snake/../../packages/animations/src/use-trail/use-trail.ts","webpack://dark-spring-snake/../../packages/animations/src/use-springs/use-springs.ts","webpack://dark-spring-snake/../../packages/animations/src/animated/animated.ts","webpack://dark-spring-snake/./index.tsx","webpack://dark-spring-snake/../../packages/core/src/use-state/use-state.ts","webpack://dark-spring-snake/../../packages/core/src/use-callback/use-callback.ts","webpack://dark-spring-snake/../../packages/platform-browser/src/create-root/create-root.tsx"],"sourcesContent":["export const VERSION = '0.25.1';\r\nexport const ROOT = 'dark:root';\r\nexport const REPLACER = 'dark:matter';\r\nexport const INDEX_KEY = 'dark:idx';\r\nexport const KEY_ATTR = 'key';\r\nexport const REF_ATTR = 'ref';\r\nexport const CREATE_EFFECT_TAG = 'C';\r\nexport const UPDATE_EFFECT_TAG = 'U';\r\nexport const DELETE_EFFECT_TAG = 'D';\r\nexport const SKIP_EFFECT_TAG = 'S';\r\nexport const INSERTION_EFFECT_HOST_MASK = 1;\r\nexport const LAYOUT_EFFECT_HOST_MASK = 2;\r\nexport const ASYNC_EFFECT_HOST_MASK = 4;\r\nexport const ATOM_HOST_MASK = 8;\r\nexport const PORTAL_HOST_MASK = 16;\r\nexport const SHADOW_MASK = 32;\r\nexport const FLUSH_MASK = 64;\r\nexport const MOVE_MASK = 128;\r\nexport const HOOK_DELIMETER = ':';\r\nexport const YIELD_INTERVAL = 6;\r\nexport const APP_STATE_ATTR = 'dark-app-state';\r\n\r\nexport enum TaskPriority {\r\n  LOW = 0,\r\n  NORMAL = 1,\r\n  HIGH = 2,\r\n}\r\n\r\nexport enum Flag {\r\n  SKIP_SCAN_OPT = '__skipScanOpt',\r\n  MEMO_SLOT_OPT = '__memoSlotOpt',\r\n  STATIC_SLOT_OPT = '__staticSlotOpt',\r\n}\r\n\r\nexport const FLAGS = {\r\n  __skipScanOpt: true,\r\n  __memoSlotOpt: true,\r\n  __staticSlotOpt: true,\r\n};\r\n\r\nexport const ATTR_BLACK_LIST = {\r\n  [KEY_ATTR]: true,\r\n  [REF_ATTR]: true,\r\n  [Flag.SKIP_SCAN_OPT]: true,\r\n  [Flag.MEMO_SLOT_OPT]: true,\r\n  [Flag.STATIC_SLOT_OPT]: true,\r\n};\r\n","import type { ElementKey, Instance, DarkElement, RefProps, KeyProps, FlagProps } from '../shared';\r\nimport { KEY_ATTR } from '../constants';\r\nimport { error } from '../utils';\r\nimport { type Ref } from '../ref';\r\n\r\nconst $$inject = Symbol('inject');\r\nclass Component<P extends StandardComponentProps = any, R = any> {\r\n  public type: CreateElement<P>;\r\n  public props: P;\r\n  public ref?: Ref<R>;\r\n  public token?: Symbol;\r\n  public displayName?: string;\r\n  public shouldUpdate?: ShouldUpdate<P>;\r\n  public children: Array<Instance> = [];\r\n\r\n  constructor(\r\n    type: CreateElement<P>,\r\n    token: Symbol,\r\n    props: P,\r\n    ref: Ref<R>,\r\n    shouldUpdate: ShouldUpdate<P>,\r\n    displayName: string,\r\n  ) {\r\n    this.type = type;\r\n    this.props = props;\r\n    ref && (this.ref = ref);\r\n    token && (this.token = token);\r\n    shouldUpdate && (this.shouldUpdate = shouldUpdate);\r\n    displayName && (this.displayName = displayName);\r\n  }\r\n}\r\n\r\nfunction component<P extends object, R = unknown>(type: CreateElement<P, R>, options: ComponentOptions = {}) {\r\n  const { token: $token, displayName } = options;\r\n  type Props = P & StandardComponentProps;\r\n  const factory: ComponentFactoryWithPossiblyInject<Props, R> = (props = {} as Props, ref?: Ref<R>) => {\r\n    const { token = $token, shouldUpdate } = factory[$$inject] || defaultInject;\r\n\r\n    if (props.ref) {\r\n      delete props.ref;\r\n\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        process.env.NODE_ENV === 'development' &&\r\n          error(`[Dark]: To use ref you need to wrap the component with forwardRef!`);\r\n      }\r\n    }\r\n\r\n    return new Component(type, token, props, ref, shouldUpdate, displayName);\r\n  };\r\n\r\n  return factory as ComponentFactory<Props, R>;\r\n}\r\n\r\nconst defaultInject: ComponentInject = {};\r\n\r\nconst detectIsComponent = (x: unknown): x is Component => x instanceof Component;\r\n\r\nconst getComponentKey = (x: Component): ElementKey => x.props[KEY_ATTR] ?? null;\r\n\r\nconst hasComponentFlag = (inst: Component, flag: string) => Boolean(inst.props[flag]);\r\n\r\ntype ComponentOptions = Readonly<{\r\n  displayName?: string;\r\n  token?: Symbol;\r\n}>;\r\n\r\ntype ComponentFactoryWithPossiblyInject<P extends object = {}, R = unknown> = {\r\n  (props?: P, ref?: Ref<R>): Component<P, R>;\r\n  [$$inject]?: ComponentInject<P>;\r\n};\r\n\r\ntype CreateElement<P extends StandardComponentProps, R = unknown> = (props: P, ref?: Ref<R>) => DarkElement;\r\n\r\nexport type ComponentInject<P extends object = {}> = Readonly<{\r\n  token?: Symbol;\r\n  shouldUpdate?: ShouldUpdate<P>;\r\n}>;\r\n\r\nexport type ShouldUpdate<P> = (prevProps: P, nextProps: P) => boolean;\r\n\r\nexport type StandardComponentProps = KeyProps & RefProps & FlagProps;\r\n\r\nexport type ComponentFactory<P extends object = {}, R = unknown> = (props?: P, ref?: Ref<R>) => Component<P, R>;\r\n\r\nexport { Component, component, $$inject, detectIsComponent, getComponentKey, hasComponentFlag };\r\n","import type { NestedArray } from '../shared';\r\nimport { INDEX_KEY } from '../constants';\r\n\r\nconst detectIsFunction = (o: any): o is Function => typeof o === 'function';\r\n\r\nconst detectIsUndefined = (o: any): o is undefined => typeof o === 'undefined';\r\n\r\nconst detectIsNumber = (o: any): o is number => typeof o === 'number';\r\n\r\nconst detectIsString = (o: any): o is string => typeof o === 'string';\r\n\r\nconst detectIsTextBased = (o: any): o is string | number => typeof o === 'string' || typeof o === 'number';\r\n\r\nconst detectIsObject = (o: any): o is object => typeof o === 'object';\r\n\r\nconst detectIsBoolean = (o: any): o is boolean => typeof o === 'boolean';\r\n\r\nconst detectIsArray = (o: any): o is Array<any> => Array.isArray(o);\r\n\r\nconst detectIsNull = (o: any): o is null => o === null;\r\n\r\nconst detectIsEmpty = (o: any) => detectIsNull(o) || detectIsUndefined(o);\r\n\r\nconst detectIsFalsy = (o: any) => detectIsEmpty(o) || o === false;\r\n\r\nconst getTime = () => Date.now();\r\n\r\nconst dummyFn = () => {};\r\n\r\nconst trueFn = () => true;\r\n\r\nconst falseFn = () => false;\r\n\r\nconst sameFn = <T = any>(x: T) => x;\r\n\r\nconst error = (...args: Array<any>) => !detectIsUndefined(console) && console.error(...args);\r\n\r\nfunction flatten<T = any>(source: Array<NestedArray<T>>, transform: (x: T) => any = sameFn): Array<T> {\r\n  if (detectIsArray(source)) {\r\n    if (source.length === 0) return [];\r\n  } else {\r\n    return [transform(source)];\r\n  }\r\n  const list: Array<T> = [];\r\n  const stack = [source[0]];\r\n  let idx = 0;\r\n\r\n  while (stack.length > 0) {\r\n    const x = stack.pop();\r\n\r\n    if (detectIsArray(x)) {\r\n      for (let i = x.length - 1; i >= 0; i--) {\r\n        stack.push(x[i]);\r\n      }\r\n    } else {\r\n      list.push(transform(x));\r\n\r\n      if (stack.length === 0 && idx < source.length - 1) {\r\n        idx++;\r\n        stack.push(source[idx]);\r\n      }\r\n    }\r\n  }\r\n\r\n  return list;\r\n}\r\n\r\nfunction keyBy<T = any>(\r\n  list: Array<T>,\r\n  fn: (o: T) => string | number,\r\n  value = false,\r\n): Record<string | number, T | boolean> {\r\n  return list.reduce((acc, x) => ((acc[fn(x)] = value ? x : true), acc), {});\r\n}\r\n\r\nfunction detectAreDepsDifferent(prevDeps: Array<unknown>, nextDeps: Array<unknown>): boolean {\r\n  if (prevDeps === nextDeps) return false;\r\n  const max = Math.max(prevDeps.length, nextDeps.length);\r\n\r\n  for (let i = 0; i < max; i++) {\r\n    if (!Object.is(prevDeps[i], nextDeps[i])) return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nfunction nextTick(callback: () => void) {\r\n  Promise.resolve().then(callback);\r\n}\r\n\r\nconst createIndexKey = (idx: number) => `${INDEX_KEY}:${idx}`;\r\n\r\nexport {\r\n  detectIsFunction,\r\n  detectIsUndefined,\r\n  detectIsNumber,\r\n  detectIsString,\r\n  detectIsTextBased,\r\n  detectIsObject,\r\n  detectIsBoolean,\r\n  detectIsArray,\r\n  detectIsNull,\r\n  detectIsEmpty,\r\n  detectIsFalsy,\r\n  getTime,\r\n  dummyFn,\r\n  trueFn,\r\n  falseFn,\r\n  error,\r\n  flatten,\r\n  keyBy,\r\n  detectAreDepsDifferent,\r\n  nextTick,\r\n  createIndexKey,\r\n};\r\n","import { type Fiber } from '../fiber';\r\nimport { type VirtualNode } from '../view';\r\nimport { type Callback } from '../shared';\r\n\r\nexport type Platform = {\r\n  createElement: <N>(vNode: VirtualNode) => N;\r\n  insertElement: <N>(node: N, idx: number, parent: N) => void;\r\n  raf: typeof requestAnimationFrame;\r\n  caf: typeof cancelAnimationFrame;\r\n  spawn: (callback: Callback) => void;\r\n  commit: (fiber: Fiber) => void;\r\n  finishCommit: () => void;\r\n  detectIsDynamic: () => boolean;\r\n  detectIsPortal: (instance: unknown) => boolean;\r\n  unmountPortal: (fiber: Fiber) => void;\r\n  chunk: (fiber: Fiber) => void;\r\n};\r\n\r\nconst defaultRealisation = () => {\r\n  throw new Error('Function not installed by renderer!');\r\n};\r\n\r\nconst platform: Platform = {\r\n  createElement: defaultRealisation,\r\n  insertElement: defaultRealisation,\r\n  raf: defaultRealisation,\r\n  caf: defaultRealisation,\r\n  spawn: defaultRealisation,\r\n  commit: defaultRealisation,\r\n  finishCommit: defaultRealisation,\r\n  detectIsDynamic: defaultRealisation,\r\n  detectIsPortal: defaultRealisation,\r\n  unmountPortal: defaultRealisation,\r\n  chunk: defaultRealisation,\r\n};\r\n\r\nconst detectIsServer = () => !platform.detectIsDynamic();\r\n\r\nexport { platform, detectIsServer };\r\n","import { type SubscriberWithValue } from '../shared';\r\n\r\ntype EventName = 'finish' | 'chunk';\r\n\r\nclass EventEmitter<E extends string = EventName, T = unknown> {\r\n  private subscribers: Map<Partial<E>, Set<SubscriberWithValue<unknown>>> = new Map();\r\n\r\n  on<T>(e: E, fn: SubscriberWithValue<T>) {\r\n    !this.subscribers.has(e) && this.subscribers.set(e, new Set());\r\n    this.subscribers.get(e).add(fn);\r\n\r\n    return () => this.subscribers.has(e) && this.subscribers.get(e).delete(fn);\r\n  }\r\n\r\n  emit(e: E, data?: T) {\r\n    this.subscribers.has(e) && this.subscribers.get(e).forEach(x => x(data));\r\n  }\r\n\r\n  kill() {\r\n    this.subscribers = new Map();\r\n  }\r\n\r\n  __getSize() {\r\n    return this.subscribers.size;\r\n  }\r\n}\r\n\r\nexport { EventEmitter };\r\n","import type { Callback, ElementKey, AppResources, AppResource } from '../shared';\r\nimport { type SetPendingStatus } from '../start-transition';\r\nimport { platform, detectIsServer } from '../platform';\r\nimport { EventEmitter } from '../emitter';\r\nimport { type Fiber } from '../fiber';\r\n\r\nclass Scope {\r\n  private root: Fiber = null;\r\n  private wip: Fiber = null;\r\n  private cursor: Fiber = null;\r\n  private unit: Fiber = null;\r\n  private mountDeep = true;\r\n  private mountLevel = 0;\r\n  private mountNav: Record<number, number> = {};\r\n  private events: Map<string, WeakMap<object, Function>> = new Map();\r\n  private unsubs: Set<Callback> = new Set();\r\n  private actions: Actions = {};\r\n  private candidates: Set<Fiber> = new Set();\r\n  private deletions: Set<Fiber> = new Set();\r\n  private cancels: Array<Callback> = [];\r\n  private asyncEffects: Set<Callback> = new Set();\r\n  private layoutEffects: Set<Callback> = new Set();\r\n  private insertionEffects: Set<Callback> = new Set();\r\n  private resourceId = 0;\r\n  private resources: AppResources = new Map();\r\n  private defers: Array<() => Promise<unknown>> = [];\r\n  private setPendingStatus: SetPendingStatus = null;\r\n  private isLayoutEffectsZone = false;\r\n  private isInsertionEffectsZone = false;\r\n  private isUpdateZone = false;\r\n  private isBatchZone = false;\r\n  private isHydrateZone = false;\r\n  private isStreamZone = false;\r\n  private isTransitionZone = false;\r\n  private isEventZone = false;\r\n  private isHot = false;\r\n  private isDynamic = platform.detectIsDynamic();\r\n  private isServer = detectIsServer();\r\n  private emitter = new EventEmitter();\r\n\r\n  private resetActions() {\r\n    this.actions = {};\r\n  }\r\n\r\n  getActionsById(id: number) {\r\n    return this.actions[id];\r\n  }\r\n\r\n  addActionMap(id: number, map: Record<ElementKey, Fiber>) {\r\n    this.actions[id] = {\r\n      map,\r\n      replace: null,\r\n      insert: null,\r\n      remove: null,\r\n      move: null,\r\n      stable: null,\r\n    };\r\n  }\r\n\r\n  addReplaceAction(id: number, nextKey: ElementKey) {\r\n    !this.actions[id].replace && (this.actions[id].replace = {});\r\n    this.actions[id].replace[nextKey] = true;\r\n  }\r\n\r\n  addInsertAction(id: number, nextKey: ElementKey) {\r\n    !this.actions[id].insert && (this.actions[id].insert = {});\r\n    this.actions[id].insert[nextKey] = true;\r\n  }\r\n\r\n  addRemoveAction(id: number, prevKey: ElementKey) {\r\n    !this.actions[id].remove && (this.actions[id].remove = {});\r\n    this.actions[id].remove[prevKey] = true;\r\n  }\r\n\r\n  addMoveAction(id: number, nextKey: ElementKey) {\r\n    !this.actions[id].move && (this.actions[id].move = {});\r\n    this.actions[id].move[nextKey] = true;\r\n  }\r\n\r\n  addStableAction(id: number, nextKey: ElementKey) {\r\n    !this.actions[id].stable && (this.actions[id].stable = {});\r\n    this.actions[id].stable[nextKey] = true;\r\n  }\r\n\r\n  copy() {\r\n    const scope = new Scope();\r\n\r\n    scope.root = null;\r\n    scope.wip = null;\r\n    scope.cursor = null;\r\n    scope.unit = this.unit;\r\n    scope.mountDeep = this.mountDeep;\r\n    scope.mountLevel = this.mountLevel;\r\n    scope.mountNav = { ...this.mountNav };\r\n    scope.events = this.events;\r\n    scope.unsubs = this.unsubs;\r\n    scope.actions = { ...this.actions };\r\n    scope.candidates = new Set([...this.candidates]);\r\n    scope.deletions = new Set([...this.deletions]);\r\n    scope.asyncEffects = new Set([...this.asyncEffects]);\r\n    scope.layoutEffects = new Set([...this.layoutEffects]);\r\n    scope.insertionEffects = new Set([...this.insertionEffects]);\r\n    scope.isUpdateZone = this.isUpdateZone;\r\n    scope.emitter = this.emitter;\r\n\r\n    return scope;\r\n  }\r\n\r\n  getRoot() {\r\n    return this.root;\r\n  }\r\n\r\n  setRoot(fiber: Fiber) {\r\n    this.root = fiber;\r\n  }\r\n\r\n  getWorkInProgress() {\r\n    return this.wip;\r\n  }\r\n\r\n  setWorkInProgress(fiber: Fiber) {\r\n    this.wip = fiber;\r\n  }\r\n\r\n  getNextUnitOfWork() {\r\n    return this.unit;\r\n  }\r\n\r\n  setNextUnitOfWork(fiber: Fiber) {\r\n    this.unit = fiber;\r\n  }\r\n\r\n  getCursorFiber() {\r\n    return this.cursor;\r\n  }\r\n\r\n  setCursorFiber(fiber: Fiber) {\r\n    this.cursor = fiber;\r\n  }\r\n\r\n  navToChild() {\r\n    this.mountLevel = this.mountLevel + 1;\r\n    this.mountNav[this.mountLevel] = 0;\r\n  }\r\n\r\n  navToSibling() {\r\n    this.mountNav[this.mountLevel] = this.mountNav[this.mountLevel] + 1;\r\n  }\r\n\r\n  navToParent() {\r\n    this.mountLevel = this.mountLevel - 1;\r\n  }\r\n\r\n  navToPrev() {\r\n    const idx = this.getMountIndex();\r\n\r\n    if (idx === 0) {\r\n      this.navToParent();\r\n      this.setMountDeep(true);\r\n    } else {\r\n      this.mountNav[this.mountLevel] = this.mountNav[this.mountLevel] - 1;\r\n      this.setMountDeep(false);\r\n    }\r\n  }\r\n\r\n  getMountIndex() {\r\n    return this.mountNav[this.mountLevel];\r\n  }\r\n\r\n  getMountDeep() {\r\n    return this.mountDeep;\r\n  }\r\n\r\n  setMountDeep(value: boolean) {\r\n    this.mountDeep = value;\r\n  }\r\n\r\n  resetMount() {\r\n    this.mountLevel = 0;\r\n    this.mountNav = {};\r\n    this.mountDeep = true;\r\n  }\r\n\r\n  getEvents() {\r\n    return this.events;\r\n  }\r\n\r\n  addEventUnsubscriber(fn: Callback) {\r\n    this.unsubs.add(fn);\r\n  }\r\n\r\n  unsubscribeEvents() {\r\n    this.unsubs.forEach(x => x());\r\n    this.unsubs = new Set();\r\n  }\r\n\r\n  getCandidates() {\r\n    return this.candidates;\r\n  }\r\n\r\n  addCandidate(fiber: Fiber) {\r\n    this.candidates.add(fiber);\r\n  }\r\n\r\n  resetCandidates() {\r\n    this.candidates = new Set();\r\n  }\r\n\r\n  getDeletions() {\r\n    return this.deletions;\r\n  }\r\n\r\n  hasDeletion(fiber: Fiber) {\r\n    let nextFiber = fiber;\r\n\r\n    while (nextFiber) {\r\n      if (this.deletions.has(nextFiber)) return true;\r\n      nextFiber = nextFiber.parent;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  addDeletion(fiber: Fiber) {\r\n    !this.hasDeletion(fiber) && this.deletions.add(fiber);\r\n  }\r\n\r\n  resetDeletions() {\r\n    this.deletions = new Set();\r\n  }\r\n\r\n  addAsyncEffect(fn: Callback) {\r\n    this.asyncEffects.add(fn);\r\n  }\r\n\r\n  resetAsyncEffects() {\r\n    this.asyncEffects = new Set();\r\n  }\r\n\r\n  runAsyncEffects() {\r\n    if (!this.isDynamic) return;\r\n    const effects = this.asyncEffects;\r\n    effects.size > 0 && setTimeout(() => effects.forEach(fn => fn()));\r\n  }\r\n\r\n  addLayoutEffect(fn: Callback) {\r\n    this.layoutEffects.add(fn);\r\n  }\r\n\r\n  resetLayoutEffects() {\r\n    this.layoutEffects = new Set();\r\n  }\r\n\r\n  runLayoutEffects() {\r\n    if (!this.isDynamic) return;\r\n    this.setIsLayoutEffectsZone(true);\r\n    this.layoutEffects.forEach(fn => fn());\r\n    this.setIsLayoutEffectsZone(false);\r\n  }\r\n\r\n  addInsertionEffect(fn: Callback) {\r\n    this.insertionEffects.add(fn);\r\n  }\r\n\r\n  resetInsertionEffects() {\r\n    this.insertionEffects = new Set();\r\n  }\r\n\r\n  runInsertionEffects() {\r\n    if (!this.isDynamic) return;\r\n    this.setIsInsertionEffectsZone(true);\r\n    this.insertionEffects.forEach(fn => fn());\r\n    this.setIsInsertionEffectsZone(false);\r\n  }\r\n\r\n  addCancel(fn: Callback) {\r\n    this.cancels.push(fn);\r\n  }\r\n\r\n  applyCancels() {\r\n    for (let i = this.cancels.length - 1; i >= 0; i--) {\r\n      this.cancels[i]();\r\n    }\r\n  }\r\n\r\n  resetCancels() {\r\n    this.cancels = [];\r\n  }\r\n\r\n  getIsLayoutEffectsZone() {\r\n    return this.isLayoutEffectsZone;\r\n  }\r\n\r\n  setIsLayoutEffectsZone(value: boolean) {\r\n    this.isLayoutEffectsZone = value;\r\n  }\r\n\r\n  getIsInsertionEffectsZone() {\r\n    return this.isInsertionEffectsZone;\r\n  }\r\n\r\n  setIsInsertionEffectsZone(value: boolean) {\r\n    this.isInsertionEffectsZone = value;\r\n  }\r\n\r\n  getIsUpdateZone() {\r\n    return this.isUpdateZone;\r\n  }\r\n\r\n  setIsUpdateZone(value: boolean) {\r\n    this.isUpdateZone = value;\r\n  }\r\n\r\n  getIsBatchZone() {\r\n    return this.isBatchZone;\r\n  }\r\n\r\n  setIsBatchZone(value: boolean) {\r\n    this.isBatchZone = value;\r\n  }\r\n\r\n  getIsHydrateZone() {\r\n    return this.isHydrateZone;\r\n  }\r\n\r\n  setIsHydrateZone(value: boolean) {\r\n    this.isHydrateZone = value;\r\n  }\r\n\r\n  getIsStreamZone() {\r\n    return this.isStreamZone;\r\n  }\r\n\r\n  setIsStreamZone(value: boolean) {\r\n    this.isStreamZone = value;\r\n  }\r\n\r\n  getIsTransitionZone() {\r\n    return this.isTransitionZone;\r\n  }\r\n\r\n  setIsTransitionZone(value: boolean) {\r\n    this.isTransitionZone = value;\r\n  }\r\n\r\n  getIsEventZone() {\r\n    return this.isEventZone;\r\n  }\r\n\r\n  setIsEventZone(value: boolean) {\r\n    this.isEventZone = value;\r\n  }\r\n\r\n  getIsHot() {\r\n    return this.isHot;\r\n  }\r\n\r\n  setIsHot(value: boolean) {\r\n    this.isHot = value;\r\n  }\r\n\r\n  getPendingStatusSetter() {\r\n    return this.setPendingStatus;\r\n  }\r\n\r\n  setPendingStatusSetter(fn: SetPendingStatus) {\r\n    this.setPendingStatus = fn;\r\n  }\r\n\r\n  flush() {\r\n    !this.isUpdateZone && this.setRoot(this.wip); // !\r\n    this.setWorkInProgress(null);\r\n    this.setNextUnitOfWork(null);\r\n    this.setCursorFiber(null);\r\n    this.resetMount();\r\n    this.resetCandidates();\r\n    this.resetDeletions();\r\n    this.resetCancels();\r\n    this.resetInsertionEffects();\r\n    this.resetLayoutEffects();\r\n    this.resetAsyncEffects();\r\n    this.setIsHydrateZone(false);\r\n    this.setIsUpdateZone(false);\r\n    this.resetActions();\r\n  }\r\n\r\n  getEmitter() {\r\n    return this.emitter;\r\n  }\r\n\r\n  defer(fn: () => Promise<unknown>) {\r\n    this.defers.push(fn);\r\n  }\r\n\r\n  getDefers() {\r\n    return this.defers;\r\n  }\r\n\r\n  resetDefers() {\r\n    this.defers = [];\r\n  }\r\n\r\n  getResource(id: number) {\r\n    return this.resources.get(id);\r\n  }\r\n\r\n  setResource(id: number, res: AppResource) {\r\n    this.resources.set(id, res);\r\n  }\r\n\r\n  getResources() {\r\n    return this.resources;\r\n  }\r\n\r\n  getResourceId() {\r\n    return this.resourceId;\r\n  }\r\n\r\n  setResourceId(id: number) {\r\n    this.resourceId = id;\r\n  }\r\n\r\n  getNextResourceId() {\r\n    return ++this.resourceId;\r\n  }\r\n\r\n  runAfterCommit() {\r\n    this.resources = new Map();\r\n    this.isServer && (this.resourceId = 0);\r\n  }\r\n}\r\n\r\ntype Actions = Record<\r\n  number,\r\n  {\r\n    map: Record<ElementKey, Fiber>;\r\n    replace: Record<ElementKey, true>;\r\n    insert: Record<ElementKey, true>;\r\n    remove: Record<ElementKey, true>;\r\n    move: Record<ElementKey, true>;\r\n    stable: Record<ElementKey, true>;\r\n  }\r\n>;\r\n\r\nlet rootId: number = null;\r\nconst scopes = new Map<number, Scope>();\r\n\r\nconst getRootId = () => rootId;\r\n\r\nconst setRootId = (id: number) => {\r\n  rootId = id;\r\n  !scopes.has(rootId) && scopes.set(rootId, new Scope());\r\n};\r\n\r\nconst removeScope = (id: number) => scopes.delete(id);\r\n\r\nconst replaceScope = (scope: Scope, id: number = rootId) => {\r\n  Object.assign(scopes.get(id), scope);\r\n};\r\n\r\nconst $$scope = (id: number = rootId) => scopes.get(id);\r\n\r\nexport { type Scope, getRootId, setRootId, removeScope, replaceScope, $$scope };\r\n","import type { ElementKey, DarkElement, Instance, SlotProps, RefProps, KeyProps, FlagProps } from '../shared';\r\nimport { type Component, detectIsComponent, getComponentKey, hasComponentFlag } from '../component';\r\nimport { detectIsArray, detectIsFunction } from '../utils';\r\nimport { REPLACER, KEY_ATTR } from '../constants';\r\nimport { $$scope } from '../scope';\r\n\r\nconst $$vNode = Symbol('vNode');\r\nconst ATTR_TYPE = 'type';\r\n\r\nclass VirtualNode {\r\n  public type: NodeType = null;\r\n\r\n  constructor(type: NodeType) {\r\n    this.type = type;\r\n  }\r\n}\r\n\r\nclass TagVirtualNode extends VirtualNode {\r\n  public name: string;\r\n  public attrs: Record<string, any>;\r\n  public children: Array<TextVirtualNode | CommentVirtualNode | TagVirtualNode | VirtualNodeFactory | Component>;\r\n\r\n  constructor(name: string, attrs: TagVirtualNode['attrs'], children: TagVirtualNode['children']) {\r\n    super(NodeType.TAG);\r\n    this.name = name;\r\n    this.attrs = attrs;\r\n    this.children = children;\r\n  }\r\n}\r\n\r\nclass TextVirtualNode extends VirtualNode {\r\n  public value: string;\r\n\r\n  constructor(source: TextSource) {\r\n    super(NodeType.TEXT);\r\n    this.value = String(source);\r\n  }\r\n}\r\n\r\nclass CommentVirtualNode extends VirtualNode {\r\n  public value = '';\r\n\r\n  constructor(text: string) {\r\n    super(NodeType.COMMENT);\r\n    this.value = text;\r\n  }\r\n}\r\n\r\nfunction View(options: ViewOptions) {\r\n  const factory: TagVirtualNodeFactory = () => {\r\n    const { as: name, slot, _void = false, ...attrs } = options;\r\n    const children = (_void ? [] : detectIsArray(slot) ? slot : slot ? [slot] : []) as TagVirtualNode['children'];\r\n\r\n    return new TagVirtualNode(name, attrs, children);\r\n  };\r\n\r\n  factory[$$vNode] = true;\r\n  factory[ATTR_TYPE] = options.as;\r\n  factory[KEY_ATTR] = options.key;\r\n\r\n  return factory;\r\n}\r\n\r\nconst Text = (source: TextSource) => new TextVirtualNode(source);\r\n\r\nText.from = (source: DarkElement) => (detectIsTextVirtualNode(source) ? source.value : source + '');\r\n\r\nconst Comment = (text: string) => new CommentVirtualNode(text);\r\n\r\nconst detectIsVirtualNode = (vNode: unknown): vNode is VirtualNode => vNode instanceof VirtualNode;\r\n\r\nconst detectIsTagVirtualNode = (vNode: unknown): vNode is TagVirtualNode => vNode instanceof TagVirtualNode;\r\n\r\nconst detectIsCommentVirtualNode = (vNode: unknown): vNode is CommentVirtualNode => vNode instanceof CommentVirtualNode;\r\n\r\nconst detectIsTextVirtualNode = (vNode: unknown): vNode is TextVirtualNode => vNode instanceof TextVirtualNode;\r\n\r\nconst detectIsVirtualNodeFactory = (factory: unknown): factory is VirtualNodeFactory =>\r\n  detectIsFunction(factory) && factory[$$vNode] === true;\r\n\r\nconst getTagVirtualNodeKey = (vNode: TagVirtualNode): ElementKey | null =>\r\n  vNode.attrs ? vNode.attrs[KEY_ATTR] ?? null : null;\r\n\r\nconst hasTagVirtualNodeFlag = (vNode: TagVirtualNode, flag: string) => Boolean(vNode.attrs && vNode.attrs[flag]);\r\n\r\nconst getVirtualNodeFactoryKey = (factory: VirtualNodeFactory): ElementKey | null => factory[KEY_ATTR] ?? null;\r\n\r\nconst hasVirtualNodeFactoryFlag = (factory: VirtualNodeFactory, flag: string) => Boolean(factory[flag]);\r\n\r\nconst detectIsPlainVirtualNode = (vNode: unknown): vNode is PlainVirtualNode =>\r\n  detectIsTextVirtualNode(vNode) || detectIsCommentVirtualNode(vNode);\r\n\r\nconst createReplacer = () => new CommentVirtualNode(REPLACER);\r\n\r\nconst detectIsReplacer = (vNode: unknown) => detectIsCommentVirtualNode(vNode) && vNode.value === REPLACER;\r\n\r\nfunction getElementKey(inst: Instance): ElementKey | null {\r\n  return detectIsComponent(inst)\r\n    ? getComponentKey(inst)\r\n    : detectIsVirtualNodeFactory(inst)\r\n    ? getVirtualNodeFactoryKey(inst)\r\n    : detectIsTagVirtualNode(inst)\r\n    ? getTagVirtualNodeKey(inst)\r\n    : null;\r\n}\r\n\r\nfunction hasElementFlag(inst: Instance, flag: string) {\r\n  return detectIsComponent(inst)\r\n    ? hasComponentFlag(inst, flag)\r\n    : detectIsVirtualNodeFactory(inst)\r\n    ? hasVirtualNodeFactoryFlag(inst, flag)\r\n    : detectIsTagVirtualNode(inst)\r\n    ? hasTagVirtualNodeFlag(inst, flag)\r\n    : false;\r\n}\r\n\r\nfunction getElementType(inst: Instance): string | Function {\r\n  return detectIsComponent(inst)\r\n    ? inst.type\r\n    : detectIsVirtualNodeFactory(inst)\r\n    ? inst[ATTR_TYPE]\r\n    : detectIsTagVirtualNode(inst)\r\n    ? inst.name\r\n    : detectIsVirtualNode(inst)\r\n    ? inst.type\r\n    : null;\r\n}\r\n\r\nfunction hasChildrenProp(inst: Instance): inst is TagVirtualNode | Component {\r\n  return detectIsTagVirtualNode(inst) || detectIsComponent(inst);\r\n}\r\n\r\nfunction detectAreSameInstanceTypes(prevInst: Instance, nextInst: Instance, isComponentFactories = false) {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    if (process.env.NODE_ENV === 'development' && $$scope().getIsHot()) {\r\n      if (detectIsComponent(prevInst) && detectIsComponent(nextInst)) {\r\n        return prevInst.displayName === nextInst.displayName;\r\n      }\r\n    }\r\n  }\r\n\r\n  if (isComponentFactories) {\r\n    const pc = prevInst as Component;\r\n    const nc = nextInst as Component;\r\n\r\n    return pc.type === nc.type;\r\n  }\r\n\r\n  return getElementType(prevInst) === getElementType(nextInst);\r\n}\r\n\r\nfunction detectAreSameComponentTypesWithSameKeys(prevInst: Instance | null, nextInst: Instance | null) {\r\n  if (\r\n    prevInst &&\r\n    nextInst &&\r\n    detectIsComponent(prevInst) &&\r\n    detectIsComponent(nextInst) &&\r\n    detectAreSameInstanceTypes(prevInst, nextInst, true)\r\n  ) {\r\n    return getElementKey(prevInst) === getElementKey(nextInst);\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\ntype TextSource = string | number;\r\n\r\nexport type VirtualNodeFactory = () => VirtualNode;\r\n\r\nexport type TagVirtualNodeFactory = () => TagVirtualNode;\r\n\r\nexport type PlainVirtualNode = TextVirtualNode | CommentVirtualNode;\r\n\r\nexport type ViewOptions = {\r\n  as: string;\r\n  _void?: boolean;\r\n  [prop: string]: any;\r\n} & Partial<SlotProps> &\r\n  RefProps &\r\n  KeyProps &\r\n  FlagProps;\r\n\r\nexport enum NodeType {\r\n  TAG = 'TAG',\r\n  TEXT = 'TEXT',\r\n  COMMENT = 'COMMENT',\r\n}\r\n\r\nexport {\r\n  View,\r\n  Text,\r\n  Comment,\r\n  VirtualNode,\r\n  TagVirtualNode,\r\n  TextVirtualNode,\r\n  CommentVirtualNode,\r\n  createReplacer,\r\n  detectIsReplacer,\r\n  getElementKey,\r\n  hasElementFlag,\r\n  getElementType,\r\n  hasChildrenProp,\r\n  detectIsVirtualNode,\r\n  detectIsTagVirtualNode,\r\n  detectIsCommentVirtualNode,\r\n  detectIsTextVirtualNode,\r\n  detectIsPlainVirtualNode,\r\n  detectIsVirtualNodeFactory,\r\n  detectAreSameInstanceTypes,\r\n  detectAreSameComponentTypesWithSameKeys,\r\n};\r\n","import { detectIsTagVirtualNode, detectIsPlainVirtualNode, detectAreSameComponentTypesWithSameKeys } from '../view';\r\nimport { type Instance, type Callback, type TimerId } from '../shared';\r\nimport { type Context, type ContextProviderValue } from '../context';\r\nimport { detectIsComponent } from '../component';\r\nimport { detectIsFunction } from '../utils';\r\nimport { type Atom } from '../atom';\r\nimport { $$scope } from '../scope';\r\n\r\nclass Fiber<N = NativeElement> {\r\n  id = 0;\r\n  cc = 0; // child fibers count\r\n  cec = 0; // child native elements count\r\n  idx = 0; // idx of fiber in the parent fiber\r\n  eidx = 0; // native element idx\r\n  mask = 0; // bit mask\r\n  element: N = null; // native element\r\n  tag: string = null; // effect tag (CREATE, UPDATE, DELETE, SKIP)\r\n  parent: Fiber<N> = null; // parent fiber\r\n  child: Fiber<N> = null; // child fiber\r\n  next: Fiber<N> = null; // next sibling fiber\r\n  alt: Fiber<N> = null; // alternate fiber (previous)\r\n  inst: Instance = null; // instance of component or virtual node\r\n  hook: Hook | null = null; // hook\r\n  provider: Map<Context, ContextProviderValue> = null; // provider of context\r\n  atoms: Map<Atom, Callback> = null;\r\n  marker: string; // for dev\r\n  batch: Batch;\r\n  catch: (error: Error) => void;\r\n\r\n  constructor(hook: Hook = null, provider: Fiber['provider'] = null, idx = 0) {\r\n    this.id = ++Fiber.nextId;\r\n    this.idx = idx;\r\n    hook && (this.hook = hook);\r\n    provider && (this.provider = provider);\r\n  }\r\n\r\n  mutate(fiber: Partial<Fiber<N>>) {\r\n    const keys = Object.keys(fiber);\r\n\r\n    for (const key of keys) {\r\n      this[key] = fiber[key];\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  markHost(mask: number) {\r\n    this.mask |= mask;\r\n    this.parent && !(this.parent.mask & mask) && this.parent.markHost(mask);\r\n  }\r\n\r\n  increment(count = 1, force = false) {\r\n    if (!this.parent) return;\r\n    const $scope = $$scope();\r\n    const isUpdateZone = $scope.getIsUpdateZone();\r\n    const wipFiber = $scope.getWorkInProgress();\r\n    const stop = isUpdateZone && wipFiber.parent === this.parent;\r\n\r\n    if (\r\n      detectIsPlainVirtualNode(this.inst) ||\r\n      (detectIsTagVirtualNode(this.inst) && this.inst.children?.length === 0)\r\n    ) {\r\n      this.cec = 1;\r\n    }\r\n\r\n    if (isUpdateZone && stop && !force) return;\r\n\r\n    this.parent.cec += count;\r\n\r\n    if (!this.parent.element) {\r\n      this.parent.increment(count);\r\n    }\r\n  }\r\n\r\n  setError(error: Error) {\r\n    if (detectIsFunction(this.catch)) {\r\n      this.catch(error);\r\n    } else if (this.parent) {\r\n      this.parent.setError(error);\r\n    }\r\n  }\r\n\r\n  static setNextId(id: number) {\r\n    Fiber.nextId = id;\r\n  }\r\n\r\n  private static nextId = 0;\r\n}\r\n\r\nclass Hook<T = any> {\r\n  id = 0;\r\n  idx = 0;\r\n  values: Array<T> = [];\r\n  owner: Fiber = null;\r\n  private static nextId = 0;\r\n\r\n  constructor() {\r\n    this.id = ++Hook.nextId;\r\n  }\r\n}\r\n\r\nfunction getHook(alt: Fiber, prevInst: Instance, nextInst: Instance): Hook | null {\r\n  if (alt && detectAreSameComponentTypesWithSameKeys(prevInst, nextInst)) return alt.hook;\r\n  if (detectIsComponent(nextInst)) return new Hook();\r\n\r\n  return null;\r\n}\r\n\r\ntype Batch = {\r\n  timer: TimerId;\r\n  changes: Array<Callback>;\r\n};\r\n\r\nexport type NativeElement = unknown;\r\nexport type HookValue<T = any> = { deps: Array<any>; value: T };\r\n\r\nexport { Fiber, Hook, getHook };\r\n","import {\r\n  type ComponentFactory,\r\n  type StandardComponentProps,\r\n  type ShouldUpdate,\r\n  type ComponentInject,\r\n  $$inject,\r\n  detectIsComponent,\r\n} from '../component';\r\nimport type { SlotProps, RefProps } from '../shared';\r\n\r\nconst $$memo = Symbol('memo');\r\n\r\nconst defaultShouldUpdate = (props: {}, nextProps: {}): boolean => {\r\n  const keys = Object.keys(nextProps);\r\n\r\n  for (const key of keys) {\r\n    if (key !== 'slot' && nextProps[key] !== props[key]) return true;\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\nfunction memo<P extends object, R = unknown>(\r\n  factory: ComponentFactory<P, R>,\r\n  shouldUpdate: ShouldUpdate<P & SlotProps> = defaultShouldUpdate,\r\n) {\r\n  type P1 = P & Omit<StandardComponentProps, 'ref'> & RefProps<R>;\r\n\r\n  factory[$$inject] = {\r\n    token: $$memo,\r\n    shouldUpdate,\r\n  } as ComponentInject<P1>;\r\n\r\n  return factory as ComponentFactory<P1, R>;\r\n}\r\n\r\nconst detectIsMemo = (instance: unknown) => detectIsComponent(instance) && instance.token === $$memo;\r\n\r\nexport { memo, detectIsMemo };\r\n","import {\r\n  DELETE_EFFECT_TAG,\r\n  UPDATE_EFFECT_TAG,\r\n  SKIP_EFFECT_TAG,\r\n  INSERTION_EFFECT_HOST_MASK,\r\n  LAYOUT_EFFECT_HOST_MASK,\r\n  ASYNC_EFFECT_HOST_MASK,\r\n  ATOM_HOST_MASK,\r\n  PORTAL_HOST_MASK,\r\n  MOVE_MASK,\r\n  HOOK_DELIMETER,\r\n} from '../constants';\r\nimport { Fiber } from '../fiber';\r\nimport { platform } from '../platform';\r\nimport { type TagVirtualNode, getElementKey, hasChildrenProp } from '../view';\r\nimport { type Scope } from '../scope';\r\nimport { type Component } from '../component';\r\nimport { detectIsMemo } from '../memo';\r\nimport { type Instance, type ElementKey } from '../shared';\r\nimport { createIndexKey } from '../utils';\r\n\r\nfunction walk<T = unknown>(fiber: Fiber<T>, onWalk: (fiber: Fiber<T>, skip: () => void, stop: () => void) => void) {\r\n  let shouldDeep = true;\r\n  let shouldStop = false;\r\n  const skip = () => (shouldDeep = false);\r\n  const stop = () => (shouldStop = true);\r\n  const stack: Array<Fiber<T>> = [fiber];\r\n\r\n  while (stack.length !== 0) {\r\n    const unit = stack.pop();\r\n\r\n    onWalk(unit, skip, stop);\r\n    if (shouldStop) break;\r\n    unit !== fiber && unit.next && stack.push(unit.next);\r\n    shouldDeep && unit.child && stack.push(unit.child);\r\n    shouldDeep = true;\r\n  }\r\n}\r\n\r\nfunction collectElements<T, P = T>(fiber: Fiber<T>, transform: (fiber: Fiber<T>) => P): Array<P> {\r\n  const elements: Array<P> = [];\r\n\r\n  walk<T>(fiber, (fiber, skip) => {\r\n    if (fiber.element) {\r\n      !platform.detectIsPortal(fiber.inst) && elements.push(transform(fiber));\r\n      return skip();\r\n    }\r\n  });\r\n\r\n  return elements;\r\n}\r\n\r\nfunction getFiberWithElement<T1, T2 = T1>(fiber: Fiber<T1>): Fiber<T2> {\r\n  let $fiber = fiber as unknown as Fiber<T2>;\r\n\r\n  while ($fiber) {\r\n    if ($fiber.element) return $fiber;\r\n    $fiber = $fiber.parent;\r\n  }\r\n\r\n  return $fiber;\r\n}\r\n\r\nfunction detectIsFiberAlive(fiber: Fiber) {\r\n  let $fiber = fiber;\r\n\r\n  while ($fiber) {\r\n    if ($fiber.tag === DELETE_EFFECT_TAG) return false;\r\n    $fiber = $fiber.parent;\r\n  }\r\n\r\n  return Boolean(fiber);\r\n}\r\n\r\nfunction createHookLocation(rootId: number, idx: number, fiber: Fiber) {\r\n  let $fiber = fiber;\r\n  let loc = `${fiber.idx}${HOOK_DELIMETER}${idx}`;\r\n\r\n  while ($fiber) {\r\n    $fiber = $fiber.parent;\r\n    $fiber && (loc = `${$fiber.idx}.${loc}`);\r\n  }\r\n\r\n  loc = `[${rootId}]${loc}`;\r\n\r\n  return loc;\r\n}\r\n\r\nfunction detectIsStableMemoTree(fiber: Fiber, $scope: Scope) {\r\n  if (!hasChildrenProp(fiber.inst)) return;\r\n  const actions = $scope.getActionsById(fiber.id);\r\n  const children = fiber.inst.children;\r\n\r\n  for (let i = 0; i < children.length; i++) {\r\n    const inst = children[i];\r\n    const key = getElementKey(inst);\r\n    if (key === null) return false;\r\n    const alt = actions.map[key];\r\n    if (!alt) return false;\r\n    const pc = alt.inst as Component;\r\n    const nc = inst as Component;\r\n    const isStable =\r\n      detectIsMemo(nc) && detectIsMemo(pc) && nc.type === pc.type && !nc.shouldUpdate(pc.props, nc.props);\r\n\r\n    if (!isStable) return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction tryOptStaticSlot(fiber: Fiber, alt: Fiber, $scope: Scope) {\r\n  const actions = $scope.getActionsById(fiber.id);\r\n  const inst = fiber.inst as Component | TagVirtualNode;\r\n\r\n  alt.element && (fiber.element = alt.element); //!\r\n\r\n  for (let i = 0; i < inst.children.length; i++) {\r\n    buildChildNode(inst.children, fiber, actions.map, i, fiber.eidx);\r\n  }\r\n\r\n  fiber.cc = inst.children.length;\r\n  $scope.setMountDeep(false);\r\n}\r\n\r\nfunction tryOptMemoSlot(fiber: Fiber, alt: Fiber, $scope: Scope) {\r\n  const actions = $scope.getActionsById(fiber.id);\r\n  const hasMove = Boolean(actions.move);\r\n  const hasRemove = Boolean(actions.remove);\r\n  const hasInsert = Boolean(actions.insert);\r\n  const hasReplace = Boolean(actions.insert);\r\n  const canOptimize = ((hasMove && !hasRemove) || (hasRemove && !hasMove)) && !hasInsert && !hasReplace;\r\n\r\n  if (!canOptimize || !detectIsStableMemoTree(fiber, $scope)) return;\r\n\r\n  hasMove && tryOptMov(fiber, alt, $scope);\r\n  hasRemove && tryOptRem(fiber, alt, $scope);\r\n}\r\n\r\nfunction tryOptMov(fiber: Fiber, alt: Fiber, $scope: Scope) {\r\n  const actions = $scope.getActionsById(fiber.id);\r\n\r\n  buildChildNodes(fiber, alt, $scope, (fiber, key) => {\r\n    if (!actions.move[key]) return;\r\n    fiber.alt = new Fiber().mutate(fiber);\r\n    fiber.tag = UPDATE_EFFECT_TAG;\r\n    fiber.mask |= MOVE_MASK;\r\n    $scope.addCandidate(fiber);\r\n  });\r\n}\r\n\r\nfunction tryOptRem(fiber: Fiber, alt: Fiber, $scope: Scope) {\r\n  buildChildNodes(fiber, alt, $scope);\r\n}\r\n\r\nfunction buildChildNodes(fiber: Fiber, alt: Fiber, $scope: Scope, onNode?: (fiber: Fiber, key: ElementKey) => void) {\r\n  const actions = $scope.getActionsById(fiber.id);\r\n  const inst = fiber.inst as Component | TagVirtualNode;\r\n  const children = inst.children;\r\n\r\n  alt.element && (fiber.element = alt.element); //!\r\n\r\n  for (let i = 0; i < children.length; i++) {\r\n    const key = getKey(children[i], i);\r\n    const $fiber = actions.map[key];\r\n\r\n    buildChildNode(children, fiber, actions.map, i, fiber.eidx);\r\n    onNode && onNode($fiber, key);\r\n  }\r\n\r\n  fiber.cc = children.length;\r\n  $scope.setMountDeep(false);\r\n}\r\n\r\nfunction buildChildNode(\r\n  children: Array<Instance>,\r\n  parent: Fiber,\r\n  altMap: Record<string, Fiber>,\r\n  idx: number,\r\n  startEidx: number,\r\n) {\r\n  const prevIdx = idx - 1;\r\n  const nextIdx = idx + 1;\r\n  const key = getKey(children[idx], idx);\r\n  const prevKey = getKey(children[prevIdx], prevIdx);\r\n  const nextKey = getKey(children[nextIdx], nextIdx);\r\n  const fiber = altMap[key];\r\n  const left = altMap[prevKey];\r\n  const right = altMap[nextKey];\r\n  const isFirst = idx === 0;\r\n  const isLast = idx === children.length - 1;\r\n\r\n  isFirst && (parent.child = fiber);\r\n  fiber.alt = null;\r\n  fiber.parent = parent;\r\n  fiber.tag = SKIP_EFFECT_TAG;\r\n  fiber.idx = idx;\r\n  left ? (fiber.eidx = left.eidx + (left.element ? 1 : left.cec)) : (fiber.eidx = startEidx);\r\n  right && (fiber.next = right);\r\n  isLast && (fiber.next = null);\r\n  notifyParents(fiber);\r\n}\r\n\r\nfunction getKey(inst: Instance, idx: number) {\r\n  const key = getElementKey(inst);\r\n  return key !== null ? key : createIndexKey(idx);\r\n}\r\n\r\nfunction notifyParents(fiber: Fiber, alt: Fiber = fiber) {\r\n  fiber.increment(alt.element ? 1 : alt.cec);\r\n  alt.mask & INSERTION_EFFECT_HOST_MASK && fiber.markHost(INSERTION_EFFECT_HOST_MASK);\r\n  alt.mask & LAYOUT_EFFECT_HOST_MASK && fiber.markHost(LAYOUT_EFFECT_HOST_MASK);\r\n  alt.mask & ASYNC_EFFECT_HOST_MASK && fiber.markHost(ASYNC_EFFECT_HOST_MASK);\r\n  alt.mask & ATOM_HOST_MASK && fiber.markHost(ATOM_HOST_MASK);\r\n  alt.mask & PORTAL_HOST_MASK && fiber.markHost(PORTAL_HOST_MASK);\r\n}\r\n\r\nexport {\r\n  walk,\r\n  collectElements,\r\n  getFiberWithElement,\r\n  detectIsFiberAlive,\r\n  createHookLocation,\r\n  tryOptStaticSlot,\r\n  tryOptMemoSlot,\r\n  notifyParents,\r\n};\r\n","import { component, detectIsComponent } from '../component';\r\nimport type { KeyProps, SlotProps } from '../shared';\r\n\r\ntype FragmentProps = Required<SlotProps> & KeyProps;\r\n\r\nconst $$fragment = Symbol('fragment');\r\n\r\nconst Fragment = component<FragmentProps>(({ slot }) => slot || null, { token: $$fragment });\r\n\r\nconst detectIsFragment = (instance: unknown) => detectIsComponent(instance) && instance.token === $$fragment;\r\n\r\nexport { Fragment, detectIsFragment };\r\n","import { type VirtualNodeFactory, detectIsVirtualNodeFactory } from '../view';\r\nimport { type Component, detectIsComponent, component } from '../component';\r\nimport { type Hook, type HookValue } from '../fiber';\r\nimport { detectAreDepsDifferent } from '../utils';\r\nimport { $$scope } from '../scope';\r\nimport { memo } from '../memo';\r\n\r\ntype GetMemoValue = () => Component | VirtualNodeFactory;\r\n\r\ntype MemoProps = {\r\n  deps: Array<any>;\r\n  getValue: GetMemoValue;\r\n};\r\n\r\nconst Memo = memo(\r\n  component<MemoProps>(({ getValue }) => getValue()),\r\n  (p, n) => detectAreDepsDifferent(p.deps, n.deps),\r\n);\r\n\r\nfunction detectIsElement<T>(value: T) {\r\n  return detectIsComponent(value) || detectIsVirtualNodeFactory(value);\r\n}\r\n\r\nfunction useMemo<T>(getValue: () => T, deps: Array<any>): T {\r\n  const fiber = $$scope().getCursorFiber();\r\n  const { hook } = fiber;\r\n  const { idx, values } = hook as Hook<HookValue<T>>;\r\n  const state =\r\n    values[idx] ||\r\n    (values[idx] = {\r\n      deps,\r\n      value: getValue(),\r\n    });\r\n  let value: T = null;\r\n  let $value: T = null;\r\n\r\n  if (detectIsElement(state.value)) {\r\n    value = state.value;\r\n    $value = Memo({ getValue: getValue as GetMemoValue, deps }) as unknown as T;\r\n  } else {\r\n    value = detectAreDepsDifferent(state.deps, deps) ? getValue() : state.value;\r\n    $value = value;\r\n  }\r\n\r\n  state.deps = deps;\r\n  state.value = value;\r\n  hook.idx++;\r\n\r\n  return $value;\r\n}\r\n\r\nexport { useMemo };\r\n","import { detectIsFunction } from '../utils';\r\nimport { INSERTION_EFFECT_HOST_MASK, LAYOUT_EFFECT_HOST_MASK, ASYNC_EFFECT_HOST_MASK } from '../constants';\r\nimport { $$scope } from '../scope';\r\nimport { useMemo } from '../use-memo';\r\nimport { type Hook, type HookValue } from '../fiber';\r\n\r\nconst $$useEffect = Symbol('use-effect');\r\n\r\ntype UseEffectValue = {\r\n  token: Symbol;\r\n  cleanup: DropEffect;\r\n};\r\n\r\nfunction createEffect(token: Symbol, type: EffectType) {\r\n  function useEffect(effect: Effect, deps: Array<any> = [{}]) {\r\n    const $scope = $$scope();\r\n    const fiber = $scope.getCursorFiber();\r\n    const scope = useMemo<UseEffectValue>(() => ({ token, cleanup: undefined }), []);\r\n    const isInsertionEffect = type === EffectType.INSERTION;\r\n    const isLayoutEffect = type === EffectType.LAYOUT;\r\n    const isAsyncEffect = type === EffectType.ASYNC;\r\n\r\n    isInsertionEffect && fiber.markHost(INSERTION_EFFECT_HOST_MASK);\r\n    isLayoutEffect && fiber.markHost(LAYOUT_EFFECT_HOST_MASK);\r\n    isAsyncEffect && fiber.markHost(ASYNC_EFFECT_HOST_MASK);\r\n\r\n    useMemo(() => {\r\n      const runEffect = () => (scope.cleanup = effect());\r\n\r\n      isInsertionEffect && $scope.addInsertionEffect(runEffect);\r\n      isLayoutEffect && $scope.addLayoutEffect(runEffect);\r\n      isAsyncEffect && $scope.addAsyncEffect(runEffect);\r\n\r\n      detectIsFunction(scope.cleanup) && scope.cleanup();\r\n\r\n      return null;\r\n    }, deps);\r\n  }\r\n\r\n  function dropEffects(hook: Hook<HookValue<UseEffectValue>>) {\r\n    for (const { value: effect } of hook.values) {\r\n      effect && effect.token === token && detectIsFunction(effect.cleanup) && effect.cleanup();\r\n    }\r\n  }\r\n\r\n  return {\r\n    useEffect,\r\n    dropEffects,\r\n  };\r\n}\r\n\r\nexport type DropEffect = void | (() => void);\r\n\r\nexport type Effect = () => DropEffect;\r\n\r\nexport enum EffectType {\r\n  ASYNC = 'ASYNC',\r\n  LAYOUT = 'LAYOUT',\r\n  INSERTION = 'INSERTION',\r\n}\r\n\r\nconst { useEffect, dropEffects } = createEffect($$useEffect, EffectType.ASYNC);\r\n\r\nexport { useEffect, dropEffects, createEffect };\r\n","import { createEffect, EffectType } from '../use-effect';\r\n\r\nconst $$useLayoutEffect = Symbol('use-layout-effect');\r\nconst { useEffect: useLayoutEffect, dropEffects: dropLayoutEffects } = createEffect(\r\n  $$useLayoutEffect,\r\n  EffectType.LAYOUT,\r\n);\r\n\r\nexport { useLayoutEffect, dropLayoutEffects };\r\n","import { createEffect, EffectType } from '../use-effect';\r\n\r\nconst $$useInsertionEffect = Symbol('use-insertion-effect');\r\nconst { useEffect: useInsertionEffect, dropEffects: dropInsertionEffects } = createEffect(\r\n  $$useInsertionEffect,\r\n  EffectType.INSERTION,\r\n);\r\n\r\nexport { useInsertionEffect, dropInsertionEffects };\r\n","import { type Fiber } from '../fiber';\r\nimport { platform } from '../platform';\r\nimport { dropEffects } from '../use-effect';\r\nimport { dropLayoutEffects } from '../use-layout-effect';\r\nimport { dropInsertionEffects } from '../use-insertion-effect';\r\nimport { walk } from '../walk';\r\nimport { detectIsUndefined } from '../utils';\r\nimport { removeScope, $$scope } from '../scope';\r\nimport {\r\n  INSERTION_EFFECT_HOST_MASK,\r\n  LAYOUT_EFFECT_HOST_MASK,\r\n  ASYNC_EFFECT_HOST_MASK,\r\n  ATOM_HOST_MASK,\r\n  PORTAL_HOST_MASK,\r\n} from '../constants';\r\n\r\nconst combinedMask =\r\n  INSERTION_EFFECT_HOST_MASK | LAYOUT_EFFECT_HOST_MASK | ASYNC_EFFECT_HOST_MASK | ATOM_HOST_MASK | PORTAL_HOST_MASK;\r\n\r\nconst shouldUnmountFiber = (fiber: Fiber) => fiber.mask & combinedMask;\r\n\r\nfunction unmountFiber(fiber: Fiber) {\r\n  if (!shouldUnmountFiber(fiber)) return;\r\n  walk(fiber, (fiber, skip) => {\r\n    if (!shouldUnmountFiber(fiber)) return skip();\r\n\r\n    if (fiber.hook && fiber.hook.values.length > 0) {\r\n      fiber.mask & INSERTION_EFFECT_HOST_MASK && dropInsertionEffects(fiber.hook);\r\n      fiber.mask & LAYOUT_EFFECT_HOST_MASK && dropLayoutEffects(fiber.hook);\r\n      fiber.mask & ASYNC_EFFECT_HOST_MASK && dropEffects(fiber.hook);\r\n    }\r\n\r\n    if (fiber.atoms) {\r\n      for (const [_, cleanup] of fiber.atoms) {\r\n        cleanup();\r\n      }\r\n      fiber.atoms = null;\r\n    }\r\n\r\n    fiber.mask & PORTAL_HOST_MASK && platform.unmountPortal(fiber);\r\n  });\r\n}\r\n\r\nfunction unmountRoot(rootId: number, onCompleted: () => void) {\r\n  if (detectIsUndefined(rootId)) return;\r\n  const $scope = $$scope(rootId);\r\n\r\n  unmountFiber($scope.getRoot());\r\n  $scope.unsubscribeEvents();\r\n  removeScope(rootId);\r\n  onCompleted();\r\n}\r\n\r\nexport { unmountFiber, unmountRoot };\r\n","import { platform } from '../platform';\r\nimport {\r\n  CREATE_EFFECT_TAG,\r\n  UPDATE_EFFECT_TAG,\r\n  DELETE_EFFECT_TAG,\r\n  SKIP_EFFECT_TAG,\r\n  INSERTION_EFFECT_HOST_MASK,\r\n  LAYOUT_EFFECT_HOST_MASK,\r\n  ASYNC_EFFECT_HOST_MASK,\r\n  ATOM_HOST_MASK,\r\n  PORTAL_HOST_MASK,\r\n  MOVE_MASK,\r\n  FLUSH_MASK,\r\n  SHADOW_MASK,\r\n  Flag,\r\n} from '../constants';\r\nimport {\r\n  flatten,\r\n  error,\r\n  detectIsEmpty,\r\n  detectIsFalsy,\r\n  detectIsArray,\r\n  detectIsFunction,\r\n  detectIsTextBased,\r\n  createIndexKey,\r\n  trueFn,\r\n} from '../utils';\r\nimport { type Scope, setRootId, $$scope, replaceScope } from '../scope';\r\nimport { type Component, detectIsComponent } from '../component';\r\nimport { type ElementKey, type Instance } from '../shared';\r\nimport { Fiber, getHook, Hook } from '../fiber';\r\nimport {\r\n  Text,\r\n  detectIsVirtualNode,\r\n  detectIsVirtualNodeFactory,\r\n  getElementKey,\r\n  hasElementFlag,\r\n  hasChildrenProp,\r\n  detectIsReplacer,\r\n  createReplacer,\r\n  detectAreSameInstanceTypes,\r\n} from '../view';\r\nimport { detectIsMemo } from '../memo';\r\nimport {\r\n  walk,\r\n  getFiberWithElement,\r\n  detectIsFiberAlive,\r\n  notifyParents,\r\n  tryOptStaticSlot,\r\n  tryOptMemoSlot,\r\n} from '../walk';\r\nimport { type RestoreOptions, scheduler } from '../scheduler';\r\nimport { Fragment, detectIsFragment } from '../fragment';\r\nimport { unmountFiber } from '../unmount';\r\n\r\nlet hasPendingPromise = false;\r\nlet hasRenderError = false;\r\n\r\nexport type WorkLoop = (isAsync: boolean) => boolean;\r\n\r\nfunction workLoop(isAsync: boolean): boolean | null {\r\n  if (hasPendingPromise) return null;\r\n  if (hasRenderError) return false;\r\n  const $scope = $$scope();\r\n  const wipFiber = $scope.getWorkInProgress();\r\n  let unit = $scope.getNextUnitOfWork();\r\n  let shouldYield = false;\r\n  let hasMoreWork = Boolean(unit);\r\n\r\n  try {\r\n    while (unit && !shouldYield) {\r\n      unit = performUnitOfWork(unit, $scope);\r\n      $scope.setNextUnitOfWork(unit);\r\n      hasMoreWork = Boolean(unit);\r\n      shouldYield = isAsync && scheduler.shouldYield();\r\n      if (shouldYield && scheduler.hasPrimaryTask()) return fork($scope);\r\n    }\r\n\r\n    if (!unit && wipFiber) {\r\n      commit($scope);\r\n    }\r\n  } catch (err) {\r\n    if (err instanceof Promise) {\r\n      hasPendingPromise = true;\r\n      err.finally(() => {\r\n        hasPendingPromise = false;\r\n        !isAsync && workLoop(false);\r\n      });\r\n    } else {\r\n      hasRenderError = true;\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  return hasMoreWork;\r\n}\r\n\r\nfunction performUnitOfWork(fiber: Fiber, $scope: Scope): Fiber | null {\r\n  const wipFiber = $scope.getWorkInProgress();\r\n  const isDeepWalking = $scope.getMountDeep();\r\n  const isStream = $scope.getIsStreamZone();\r\n  const hasChildren = isDeepWalking && hasChildrenProp(fiber.inst) && fiber.inst.children.length > 0;\r\n\r\n  fiber.hook && (fiber.hook.idx = 0);\r\n\r\n  if (hasChildren) {\r\n    const child = mountChild(fiber, $scope);\r\n\r\n    isStream && platform.chunk(child);\r\n\r\n    return child;\r\n  } else {\r\n    while (fiber.parent && fiber !== wipFiber) {\r\n      const next = mountSibling(fiber, $scope);\r\n\r\n      isStream && platform.chunk(fiber);\r\n\r\n      if (next) {\r\n        isStream && platform.chunk(next);\r\n        return next;\r\n      }\r\n\r\n      fiber = fiber.parent;\r\n    }\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nfunction mountChild(parent: Fiber, $scope: Scope) {\r\n  $scope.navToChild();\r\n  const $inst = parent.inst;\r\n  const idx = 0;\r\n  const inst = hasChildrenProp($inst) ? $inst.children[idx] : null;\r\n  const alt = getAlternate(parent, inst, true, $scope);\r\n  const fiber = createFiber(alt, inst, idx);\r\n\r\n  fiber.parent = parent;\r\n  parent.child = fiber;\r\n  fiber.eidx = parent.element ? 0 : parent.eidx;\r\n\r\n  share(fiber, parent, inst, $scope);\r\n\r\n  return fiber;\r\n}\r\n\r\nfunction mountSibling(left: Fiber, $scope: Scope) {\r\n  $scope.navToSibling();\r\n  const $inst = left.parent.inst;\r\n  const idx = $scope.getMountIndex();\r\n  const inst = hasChildrenProp($inst) && $inst.children ? $inst.children[idx] : null;\r\n  const hasSibling = Boolean(inst);\r\n\r\n  if (!hasSibling) {\r\n    $scope.navToParent();\r\n    $scope.setMountDeep(false);\r\n\r\n    return null;\r\n  }\r\n\r\n  $scope.setMountDeep(true);\r\n  const alt = getAlternate(left, inst, false, $scope);\r\n  const fiber = createFiber(alt, inst, idx);\r\n\r\n  fiber.parent = left.parent;\r\n  left.next = fiber;\r\n  fiber.eidx = left.eidx + (left.element ? 1 : left.cec);\r\n\r\n  share(fiber, left, inst, $scope);\r\n\r\n  return fiber;\r\n}\r\n\r\nfunction share(fiber: Fiber, prev: Fiber, inst: Instance, $scope: Scope) {\r\n  const { alt } = fiber;\r\n  const shouldMount = alt && detectIsMemo(inst) ? shouldUpdate(fiber, inst, $scope) : true;\r\n\r\n  $scope.setCursorFiber(fiber);\r\n  fiber.inst = inst;\r\n\r\n  if (alt && alt.mask & MOVE_MASK) {\r\n    fiber.mask |= MOVE_MASK;\r\n    alt.mask &= ~MOVE_MASK;\r\n  }\r\n\r\n  fiber.hook && (fiber.hook.owner = fiber); // !\r\n\r\n  if (shouldMount) {\r\n    fiber.inst = mount(fiber, prev, $scope);\r\n    alt && reconcile(fiber, alt, $scope);\r\n    setup(fiber, alt);\r\n  } else if (fiber.mask & MOVE_MASK) {\r\n    fiber.tag = UPDATE_EFFECT_TAG;\r\n  }\r\n\r\n  $scope.addCandidate(fiber); // !\r\n}\r\n\r\nfunction createFiber(alt: Fiber, inst: Instance, idx: number) {\r\n  const fiber = new Fiber(getHook(alt, alt ? alt.inst : null, inst), alt ? alt.provider : null, idx);\r\n\r\n  fiber.alt = alt || null;\r\n\r\n  return fiber;\r\n}\r\n\r\nfunction getAlternate(fiber: Fiber, inst: Instance, fromChild: boolean, $scope: Scope) {\r\n  const key = getElementKey(inst);\r\n\r\n  if (key !== null) {\r\n    const parentId = fromChild ? fiber.id : fiber.parent.id;\r\n    const actions = $scope.getActionsById(parentId);\r\n\r\n    if (actions) {\r\n      const isMove = actions.move && Boolean(actions.move[key]);\r\n      const isStable = actions.stable && Boolean(actions.stable[key]);\r\n\r\n      if (isMove || isStable) {\r\n        const alt = actions.map[key];\r\n\r\n        isMove && (alt.mask |= MOVE_MASK);\r\n\r\n        return alt;\r\n      }\r\n\r\n      return null;\r\n    }\r\n  }\r\n\r\n  const alt = fiber.alt ? (fromChild ? fiber.alt.child || null : fiber.alt.next || null) : null;\r\n\r\n  return alt;\r\n}\r\n\r\nfunction reconcile(fiber: Fiber, alt: Fiber, $scope: Scope) {\r\n  const { id, inst } = fiber;\r\n  const areSameTypes = detectAreSameInstanceTypes(alt.inst, inst);\r\n\r\n  if (!areSameTypes) {\r\n    $scope.addDeletion(alt);\r\n  } else if (hasChildrenProp(alt.inst) && hasChildrenProp(inst) && alt.cc !== 0) {\r\n    const hasSameCount = alt.cc === inst.children.length;\r\n    const check = hasElementFlag(inst, Flag.SKIP_SCAN_OPT) ? !hasSameCount : true;\r\n\r\n    if (check) {\r\n      const { prevKeys, nextKeys, prevKeysMap, nextKeysMap, keyedFibersMap } = extractKeys(alt.child, inst.children);\r\n      const flush = nextKeys.length === 0;\r\n      let size = Math.max(prevKeys.length, nextKeys.length);\r\n      let p = 0;\r\n      let n = 0;\r\n\r\n      $scope.addActionMap(id, keyedFibersMap);\r\n\r\n      for (let i = 0; i < size; i++) {\r\n        const nextKey = nextKeys[i - n] ?? null;\r\n        const prevKey = prevKeys[i - p] ?? null;\r\n        const prevKeyFiber = keyedFibersMap[prevKey] || null;\r\n\r\n        if (nextKey !== prevKey) {\r\n          if (nextKey !== null && !prevKeysMap[nextKey]) {\r\n            if (prevKey !== null && !nextKeysMap[prevKey]) {\r\n              $scope.addReplaceAction(id, nextKey);\r\n              $scope.addDeletion(prevKeyFiber);\r\n            } else {\r\n              $scope.addInsertAction(id, nextKey);\r\n              p++;\r\n              size++;\r\n            }\r\n          } else if (!nextKeysMap[prevKey]) {\r\n            $scope.addRemoveAction(id, prevKey);\r\n            $scope.addDeletion(prevKeyFiber);\r\n            flush && (prevKeyFiber.mask |= FLUSH_MASK);\r\n            n++;\r\n            size++;\r\n          } else if (nextKeysMap[prevKey] && nextKeysMap[nextKey]) {\r\n            $scope.addMoveAction(id, nextKey);\r\n          }\r\n        } else if (nextKey !== null) {\r\n          $scope.addStableAction(id, nextKey);\r\n        }\r\n      }\r\n\r\n      hasElementFlag(inst, Flag.STATIC_SLOT_OPT) && tryOptStaticSlot(fiber, alt, $scope);\r\n      hasElementFlag(inst, Flag.MEMO_SLOT_OPT) && tryOptMemoSlot(fiber, alt, $scope);\r\n    }\r\n  }\r\n}\r\n\r\nfunction setup(fiber: Fiber, alt: Fiber) {\r\n  const inst = fiber.inst;\r\n  let isUpdate = false;\r\n\r\n  fiber.parent.tag === CREATE_EFFECT_TAG && (fiber.tag = fiber.parent.tag);\r\n  fiber.parent.mask & SHADOW_MASK && !fiber.parent.element && !detectIsReplacer(inst) && (fiber.mask |= SHADOW_MASK);\r\n  isUpdate =\r\n    alt &&\r\n    fiber.tag !== CREATE_EFFECT_TAG &&\r\n    detectAreSameInstanceTypes(alt.inst, inst) &&\r\n    getElementKey(alt.inst) === getElementKey(inst);\r\n  isUpdate && !fiber.element && alt.element && (fiber.element = alt.element);\r\n  fiber.tag = isUpdate ? UPDATE_EFFECT_TAG : CREATE_EFFECT_TAG;\r\n  hasChildrenProp(fiber.inst) && (fiber.cc = fiber.inst.children.length);\r\n  !fiber.element && detectIsVirtualNode(fiber.inst) && (fiber.element = platform.createElement(fiber.inst));\r\n  fiber.element && fiber.increment();\r\n}\r\n\r\nfunction shouldUpdate(fiber: Fiber, inst: Instance, $scope: Scope) {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    if ($scope.getIsHot()) return true;\r\n  }\r\n\r\n  const alt = fiber.alt;\r\n  const pc = alt.inst as Component;\r\n  const nc = inst as Component;\r\n\r\n  if (nc.type !== pc.type || nc.shouldUpdate(pc.props, nc.props)) return true;\r\n\r\n  $scope.setMountDeep(false);\r\n  fiber.tag = SKIP_EFFECT_TAG;\r\n  fiber.child = alt.child;\r\n  fiber.child.parent = fiber;\r\n  fiber.hook = alt.hook;\r\n  fiber.cc = alt.cc;\r\n  fiber.cec = alt.cec;\r\n  alt.element && (fiber.element = alt.element);\r\n  alt.provider && (fiber.provider = alt.provider);\r\n  alt.catch && (fiber.catch = alt.catch);\r\n  alt.atoms && (fiber.atoms = alt.atoms);\r\n\r\n  const diff = fiber.eidx - alt.eidx;\r\n  const deep = diff !== 0;\r\n\r\n  if (deep) {\r\n    walk(fiber.child, ($fiber, skip) => {\r\n      $fiber.eidx += diff;\r\n      if ($fiber.element) return skip();\r\n    });\r\n  }\r\n\r\n  notifyParents(fiber, alt);\r\n\r\n  return false;\r\n}\r\n\r\nfunction mount(fiber: Fiber, prev: Fiber, $scope: Scope) {\r\n  let inst = fiber.inst;\r\n  const isComponent = detectIsComponent(inst);\r\n  const component = inst as Component;\r\n\r\n  if (isComponent) {\r\n    try {\r\n      const id = $scope.getResourceId();\r\n      let result = component.type(component.props, component.ref);\r\n      const defers = $scope.getDefers();\r\n\r\n      if (defers.length > 0) {\r\n        const promise = Promise.all(defers.map(x => x()));\r\n\r\n        $scope.setResourceId(id);\r\n        $scope.resetDefers();\r\n        $scope.navToPrev();\r\n        $scope.setNextUnitOfWork(prev);\r\n        Fiber.setNextId(prev.id);\r\n\r\n        throw promise;\r\n      }\r\n\r\n      if (detectIsArray(result)) {\r\n        !detectIsFragment(component) && (result = Fragment({ slot: result }));\r\n      } else if (detectIsTextBased(result)) {\r\n        result = Text(result);\r\n      }\r\n\r\n      component.children = result as Array<Instance>;\r\n      platform.detectIsPortal(inst) && fiber.markHost(PORTAL_HOST_MASK);\r\n    } catch (err) {\r\n      if (err instanceof Promise) throw err;\r\n      component.children = [];\r\n      fiber.setError(err);\r\n      error(err);\r\n    }\r\n  } else if (detectIsVirtualNodeFactory(inst)) {\r\n    inst = inst();\r\n  }\r\n\r\n  if (hasChildrenProp(inst)) {\r\n    inst.children = flatten(inst.children, x => (detectIsTextBased(x) ? Text(x) : x || supportConditional(x)));\r\n    isComponent && component.children.length === 0 && component.children.push(createReplacer());\r\n  }\r\n\r\n  return inst;\r\n}\r\n\r\nfunction extractKeys(alt: Fiber, children: Array<Instance>) {\r\n  let nextFiber = alt;\r\n  let idx = 0;\r\n  const prevKeys: Array<ElementKey> = [];\r\n  const nextKeys: Array<ElementKey> = [];\r\n  const prevKeysMap: Record<ElementKey, boolean> = {};\r\n  const nextKeysMap: Record<ElementKey, boolean> = {};\r\n  const keyedFibersMap: Record<ElementKey, Fiber> = {};\r\n  const usedKeysMap: Record<ElementKey, boolean> = {};\r\n\r\n  while (nextFiber || idx < children.length) {\r\n    if (nextFiber) {\r\n      const key = getElementKey(nextFiber.inst);\r\n      const prevKey = detectIsEmpty(key) ? createIndexKey(idx) : key;\r\n\r\n      if (!prevKeysMap[prevKey]) {\r\n        prevKeysMap[prevKey] = true; // !\r\n        prevKeys.push(prevKey);\r\n      }\r\n\r\n      keyedFibersMap[prevKey] = nextFiber;\r\n    }\r\n\r\n    if (children[idx]) {\r\n      const inst = children[idx];\r\n      const key = getElementKey(inst);\r\n      const nextKey = detectIsEmpty(key) ? createIndexKey(idx) : key;\r\n\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        if (usedKeysMap[nextKey]) {\r\n          error(`[Dark]: The key of node [${nextKey}] already has been used!`, [inst]);\r\n        }\r\n      }\r\n\r\n      if (!nextKeysMap[nextKey]) {\r\n        nextKeysMap[nextKey] = true; // !\r\n        nextKeys.push(nextKey);\r\n      }\r\n\r\n      usedKeysMap[nextKey] = true;\r\n    }\r\n\r\n    nextFiber = nextFiber ? nextFiber.next : null;\r\n    idx++;\r\n  }\r\n\r\n  return {\r\n    prevKeys,\r\n    nextKeys,\r\n    prevKeysMap,\r\n    nextKeysMap,\r\n    keyedFibersMap,\r\n  };\r\n}\r\n\r\nfunction supportConditional(inst: Instance) {\r\n  return detectIsFalsy(inst) ? createReplacer() : inst;\r\n}\r\n\r\nfunction commit($scope: Scope) {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    process.env.NODE_ENV === 'development' && $scope.setIsHot(false);\r\n  }\r\n\r\n  const wipFiber = $scope.getWorkInProgress();\r\n  const deletions = $scope.getDeletions();\r\n  const candidates = $scope.getCandidates();\r\n  const isUpdateZone = $scope.getIsUpdateZone();\r\n  const unmounts: Array<Fiber> = [];\r\n  const combinedMask = INSERTION_EFFECT_HOST_MASK | LAYOUT_EFFECT_HOST_MASK | ASYNC_EFFECT_HOST_MASK | PORTAL_HOST_MASK;\r\n\r\n  // !\r\n  for (const fiber of deletions) {\r\n    const withNextTick = fiber.mask & ATOM_HOST_MASK && !(fiber.mask & combinedMask);\r\n\r\n    withNextTick ? unmounts.push(fiber) : unmountFiber(fiber);\r\n    fiber.tag = DELETE_EFFECT_TAG;\r\n    platform.commit(fiber);\r\n  }\r\n\r\n  isUpdateZone && sync(wipFiber);\r\n  $scope.runInsertionEffects();\r\n\r\n  for (const fiber of candidates) {\r\n    fiber.tag !== SKIP_EFFECT_TAG && platform.commit(fiber);\r\n    fiber.alt = null;\r\n    hasChildrenProp(fiber.inst) && (fiber.inst.children = null);\r\n  }\r\n\r\n  wipFiber.alt = null;\r\n  platform.finishCommit(); // !\r\n  $scope.runLayoutEffects();\r\n  $scope.runAsyncEffects();\r\n  unmounts.length > 0 && setTimeout(() => unmounts.forEach(x => unmountFiber(x)));\r\n  flush($scope);\r\n}\r\n\r\nfunction flush($scope: Scope, cancel = false) {\r\n  $scope.flush();\r\n  !cancel && $scope.getEmitter().emit('finish');\r\n  $scope.runAfterCommit(); // !\r\n}\r\n\r\nfunction sync(fiber: Fiber) {\r\n  const diff = fiber.cec - fiber.alt.cec;\r\n  if (diff === 0) return;\r\n  const parentFiber = getFiberWithElement(fiber.parent);\r\n  let isRight = false;\r\n\r\n  fiber.increment(diff, true);\r\n\r\n  walk(parentFiber.child, ($fiber, skip) => {\r\n    if ($fiber === fiber) {\r\n      isRight = true;\r\n      return skip();\r\n    }\r\n\r\n    $fiber.element && skip();\r\n    isRight && ($fiber.eidx += diff);\r\n  });\r\n}\r\n\r\nfunction fork($scope: Scope): false {\r\n  const $$scope$ = $scope.copy();\r\n  const wipFiber = $scope.getWorkInProgress();\r\n  const child = wipFiber.child;\r\n  child && (child.parent = null);\r\n  const restore = (options: RestoreOptions) => {\r\n    const { fiber: wipFiber, setValue, resetValue } = options;\r\n    const $scope = $$scope();\r\n\r\n    detectIsFunction(setValue) && setValue();\r\n    detectIsFunction(resetValue) && $$scope$.addCancel(resetValue);\r\n\r\n    wipFiber.alt = new Fiber().mutate(wipFiber);\r\n    wipFiber.tag = UPDATE_EFFECT_TAG;\r\n    wipFiber.child = child;\r\n    child && (child.parent = wipFiber);\r\n\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      wipFiber.marker = '✌️';\r\n    }\r\n\r\n    $$scope$.setRoot($scope.getRoot());\r\n    $$scope$.setWorkInProgress(wipFiber);\r\n    replaceScope($$scope$);\r\n  };\r\n\r\n  wipFiber.child = wipFiber.alt.child;\r\n  wipFiber.alt = null;\r\n  $scope.applyCancels();\r\n  flush($scope, true);\r\n  scheduler.cancelTask(restore);\r\n\r\n  return false;\r\n}\r\n\r\nexport type CreateUpdateOptions = {\r\n  rootId: number;\r\n  isTransition?: boolean;\r\n  hook: Hook;\r\n  createChanger?: () => UpdateChanger;\r\n};\r\n\r\nexport type UpdateChanger = {\r\n  shouldUpdate: () => boolean;\r\n} & Pick<RestoreOptions, 'setValue' | 'resetValue'>;\r\n\r\nfunction createUpdate(options: CreateUpdateOptions) {\r\n  const { rootId, hook, isTransition, createChanger = $createChanger } = options;\r\n  const callback = (restore?: (options: RestoreOptions) => void) => {\r\n    setRootId(rootId); // !\r\n    const fromRestore = detectIsFunction(restore);\r\n    const { shouldUpdate, setValue, resetValue } = createChanger();\r\n    const $scope = $$scope();\r\n    const owner = hook.owner;\r\n    const fiber = owner.alt || owner;\r\n\r\n    if (!shouldUpdate() || !detectIsFiberAlive(fiber) || fromRestore) {\r\n      fromRestore && restore({ fiber, setValue, resetValue });\r\n      return;\r\n    }\r\n\r\n    detectIsFunction(setValue) && setValue();\r\n    detectIsFunction(resetValue) && isTransition && $scope.addCancel(resetValue);\r\n\r\n    fiber.alt = new Fiber().mutate(fiber);\r\n    fiber.tag = UPDATE_EFFECT_TAG;\r\n    fiber.cc = 0;\r\n    fiber.cec = 0;\r\n    fiber.child = null;\r\n\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      fiber.marker = '🔥';\r\n    }\r\n\r\n    $scope.setIsUpdateZone(true);\r\n    $scope.resetMount();\r\n    $scope.setWorkInProgress(fiber);\r\n    $scope.setCursorFiber(fiber);\r\n    fiber.inst = mount(fiber, null, $scope);\r\n    $scope.setNextUnitOfWork(fiber);\r\n  };\r\n\r\n  return callback;\r\n}\r\n\r\nconst $createChanger = (): UpdateChanger => ({\r\n  shouldUpdate: trueFn,\r\n  setValue: null,\r\n  resetValue: null,\r\n});\r\n\r\nconst detectIsBusy = () => Boolean($$scope()?.getWorkInProgress());\r\n\r\nexport { Fiber, workLoop, createUpdate, detectIsBusy };\r\n","import { type WorkLoop, workLoop, detectIsBusy } from '../workloop';\r\nimport { type SetPendingStatus } from '../start-transition';\r\nimport { type Callback } from '../shared';\r\nimport { type Fiber } from '../fiber';\r\nimport { ROOT, HOOK_DELIMETER, YIELD_INTERVAL, TaskPriority } from '../constants';\r\nimport { getTime, detectIsFunction, nextTick } from '../utils';\r\nimport { EventEmitter } from '../emitter';\r\nimport { platform } from '../platform';\r\n\r\nclass MessageChannel extends EventEmitter<PortEvent> {\r\n  port1: MessagePort = null;\r\n  port2: MessagePort = null;\r\n\r\n  constructor() {\r\n    super();\r\n    this.port1 = new MessagePort(this);\r\n    this.port2 = new MessagePort(this);\r\n  }\r\n}\r\n\r\nclass MessagePort {\r\n  channel: MessageChannel;\r\n  offs: Array<Callback> = [];\r\n\r\n  constructor(channel: MessageChannel) {\r\n    this.channel = channel;\r\n  }\r\n\r\n  on(event: PortEvent, callback: PortListener) {\r\n    const off = this.channel.on(event, callback);\r\n\r\n    this.offs.push(off);\r\n  }\r\n\r\n  postMessage(value: unknown) {\r\n    platform.spawn(() => {\r\n      this.channel.emit('message', value);\r\n    });\r\n  }\r\n\r\n  unref() {\r\n    this.offs.forEach(x => x());\r\n  }\r\n}\r\n\r\nclass Scheduler {\r\n  private queue: Record<TaskPriority, Array<Task>> = {\r\n    [TaskPriority.HIGH]: [],\r\n    [TaskPriority.NORMAL]: [],\r\n    [TaskPriority.LOW]: [],\r\n  };\r\n  private deadline = 0;\r\n  private task: Task = null;\r\n  private scheduledCallback: WorkLoop = null;\r\n  private isMessageLoopRunning = false;\r\n  private channel: MessageChannel = null;\r\n  private port: MessagePort = null;\r\n\r\n  constructor() {\r\n    this.channel = new MessageChannel();\r\n    this.port = this.channel.port2;\r\n    this.channel.port1.on('message', this.performWorkUntilDeadline.bind(this));\r\n  }\r\n\r\n  reset() {\r\n    this.deadline = 0;\r\n    this.task = null;\r\n    this.scheduledCallback = null;\r\n    this.isMessageLoopRunning = false;\r\n  }\r\n\r\n  shouldYield() {\r\n    return getTime() >= this.deadline;\r\n  }\r\n\r\n  schedule(callback: Callback, options?: ScheduleCallbackOptions) {\r\n    const {\r\n      priority = TaskPriority.NORMAL,\r\n      forceAsync = false,\r\n      isTransition = false,\r\n      createLocation,\r\n      setPendingStatus,\r\n    } = options || {};\r\n    const task = new Task(callback, priority, forceAsync);\r\n\r\n    task.setIsTransition(isTransition);\r\n    task.setPendingSetter(setPendingStatus);\r\n    task.setLocationCreator(createLocation || createRootLocation);\r\n    this.put(task);\r\n    this.execute();\r\n  }\r\n\r\n  hasPrimaryTask() {\r\n    if (!this.task.getIsTransition()) return false;\r\n    const { high, normal, low } = this.getQueues();\r\n    const hasPrimary = high.length > 0 || normal.length > 0;\r\n    const hasLow = low.length > 0;\r\n\r\n    if (hasPrimary || hasLow) {\r\n      const loc = this.task.createLocation();\r\n\r\n      if (hasPrimary) {\r\n        const has = Task.detectHasRelatedUpdate(loc, high, true) || Task.detectHasRelatedUpdate(loc, normal, true);\r\n\r\n        if (has) {\r\n          this.task.markAsUnnecessary();\r\n        }\r\n\r\n        return true;\r\n      }\r\n\r\n      if (hasLow) {\r\n        const has = Task.detectHasRelatedUpdate(loc, low);\r\n\r\n        if (has) {\r\n          this.task.markAsUnnecessary();\r\n\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  cancelTask(fn: TaskRestorer) {\r\n    if (this.task.getIsUnnecessary()) return this.complete(this.task);\r\n    this.task.setTaskRestorer(fn);\r\n    this.defer(this.task);\r\n  }\r\n\r\n  private complete(task: Task) {\r\n    task.pending(false);\r\n  }\r\n\r\n  private put(task: Task) {\r\n    const queue = this.queue[task.getPriority()];\r\n\r\n    if (task.getIsTransition()) {\r\n      const loc = task.createLocation();\r\n      const tasks = queue.filter(x => x.createLocation() !== loc);\r\n\r\n      queue.splice(0, queue.length, ...tasks);\r\n    }\r\n\r\n    queue.push(task);\r\n  }\r\n\r\n  private pick(queue: Array<Task>) {\r\n    if (queue.length === 0) return false;\r\n    this.task = queue.shift();\r\n\r\n    if (this.task.getIsTransition() && this.task.canPending()) {\r\n      const task = this.task;\r\n\r\n      task.markAsPending();\r\n      this.defer(this.task);\r\n      this.task = null;\r\n\r\n      nextTick(() => task.pending(true));\r\n\r\n      return true;\r\n    }\r\n\r\n    this.task.run();\r\n    this.task.getForceAsync() ? this.requestCallbackAsync(workLoop) : this.requestCallback(workLoop);\r\n\r\n    return true;\r\n  }\r\n\r\n  private execute() {\r\n    const isBusy = detectIsBusy();\r\n    const { high, normal, low } = this.getQueues();\r\n\r\n    if (!isBusy && !this.isMessageLoopRunning) {\r\n      this.pick(high) || this.pick(normal) || this.pick(low);\r\n    }\r\n  }\r\n\r\n  private requestCallbackAsync(callback: WorkLoop) {\r\n    this.scheduledCallback = callback;\r\n\r\n    if (!this.isMessageLoopRunning) {\r\n      this.isMessageLoopRunning = true;\r\n      this.port.postMessage(null);\r\n    }\r\n  }\r\n\r\n  private requestCallback(callback: WorkLoop) {\r\n    callback(false);\r\n    this.task = null;\r\n    this.execute();\r\n  }\r\n\r\n  private performWorkUntilDeadline() {\r\n    if (this.scheduledCallback) {\r\n      this.deadline = getTime() + YIELD_INTERVAL;\r\n      const hasMoreWork = this.scheduledCallback(true);\r\n\r\n      if (hasMoreWork) {\r\n        this.port.postMessage(null);\r\n      } else {\r\n        if (hasMoreWork === null) {\r\n          setTimeout(() => this.port.postMessage(null)); // has promise\r\n        } else {\r\n          this.complete(this.task);\r\n          this.reset();\r\n          this.execute();\r\n        }\r\n      }\r\n    } else {\r\n      this.isMessageLoopRunning = false;\r\n    }\r\n  }\r\n\r\n  private defer(task: Task) {\r\n    const { low } = this.getQueues();\r\n\r\n    low.unshift(task);\r\n  }\r\n\r\n  private getQueues() {\r\n    const high = this.queue[TaskPriority.HIGH];\r\n    const normal = this.queue[TaskPriority.NORMAL];\r\n    const low = this.queue[TaskPriority.LOW];\r\n\r\n    return {\r\n      high,\r\n      normal,\r\n      low,\r\n    };\r\n  }\r\n}\r\n\r\ntype TaskCallback = (fn: TaskRestorer) => void;\r\ntype TaskRestorer = (options: RestoreOptions) => void;\r\ntype LocationCreator = () => string;\r\n\r\nclass Task {\r\n  private id: number;\r\n  private priority: TaskPriority;\r\n  private forceAsync: boolean;\r\n  private isTransition: boolean;\r\n  private isPending: boolean;\r\n  private isUnnecessary: boolean;\r\n  private callback: TaskCallback;\r\n  private taskRestorer?: TaskRestorer = null;\r\n  private locationCreator?: LocationCreator;\r\n  private pendingSetter?: SetPendingStatus = null;\r\n  private static nextTaskId = 0;\r\n\r\n  constructor(callback: TaskCallback, priority: TaskPriority, forceAsync: boolean) {\r\n    this.id = ++Task.nextTaskId;\r\n    this.callback = callback;\r\n    this.priority = priority;\r\n    this.forceAsync = forceAsync;\r\n  }\r\n\r\n  getPriority() {\r\n    return this.priority;\r\n  }\r\n\r\n  getForceAsync() {\r\n    return this.forceAsync;\r\n  }\r\n\r\n  setIsTransition(value: boolean) {\r\n    this.isTransition = value;\r\n  }\r\n\r\n  getIsTransition() {\r\n    return this.isTransition;\r\n  }\r\n\r\n  run() {\r\n    this.callback(this.taskRestorer);\r\n    this.taskRestorer = null;\r\n  }\r\n\r\n  pending(value: boolean) {\r\n    this.isTransition && this.pendingSetter && this.pendingSetter(value);\r\n  }\r\n\r\n  markAsPending() {\r\n    this.isPending = true;\r\n  }\r\n\r\n  canPending() {\r\n    return !this.isPending && detectIsFunction(this.pendingSetter);\r\n  }\r\n\r\n  markAsUnnecessary() {\r\n    this.isUnnecessary = true;\r\n  }\r\n\r\n  getIsUnnecessary() {\r\n    return this.isUnnecessary;\r\n  }\r\n\r\n  setTaskRestorer(fn: TaskRestorer) {\r\n    this.taskRestorer = fn;\r\n  }\r\n\r\n  setLocationCreator(fn: LocationCreator) {\r\n    this.locationCreator = fn;\r\n  }\r\n\r\n  createLocation() {\r\n    return this.locationCreator();\r\n  }\r\n\r\n  setPendingSetter(fn: SetPendingStatus) {\r\n    this.pendingSetter = fn;\r\n  }\r\n\r\n  static detectHasRelatedUpdate(loc: string, tasks: Array<Task>, deep = false) {\r\n    const [$loc] = loc.split(HOOK_DELIMETER);\r\n\r\n    return tasks.some(x => {\r\n      const $$loc = x.createLocation();\r\n      const has = $$loc === loc || (deep && $$loc.length > loc.length && $$loc.indexOf($loc) !== -1);\r\n\r\n      return has;\r\n    });\r\n  }\r\n}\r\n\r\nconst createRootLocation: LocationCreator = () => ROOT;\r\n\r\ntype PortEvent = 'message';\r\ntype PortListener = (value: unknown) => void;\r\n\r\nexport type RestoreOptions = {\r\n  fiber: Fiber;\r\n  setValue?: () => void;\r\n  resetValue?: () => void;\r\n};\r\n\r\nexport type ScheduleCallbackOptions = {\r\n  priority?: TaskPriority;\r\n  forceAsync?: boolean;\r\n  isTransition?: boolean;\r\n  createLocation?: () => string;\r\n  setPendingStatus?: SetPendingStatus;\r\n  onCompleted?: () => void;\r\n};\r\n\r\nconst scheduler = new Scheduler();\r\n\r\nexport { scheduler };\r\n","import { type ScheduleCallbackOptions, scheduler } from '../scheduler';\r\nimport { type UpdateChanger, createUpdate } from '../workloop';\r\nimport { getRootId, $$scope } from '../scope';\r\nimport { TaskPriority } from '../constants';\r\nimport { addBatch } from '../batch';\r\nimport { detectIsFunction } from '../utils';\r\nimport { createHookLocation } from '../walk';\r\n\r\nexport type UpdateOptions = UpdateChanger;\r\n\r\nfunction useUpdate() {\r\n  const rootId = getRootId();\r\n  const fiber = $$scope().getCursorFiber();\r\n  const hook = fiber.hook; // !\r\n  const { idx } = hook;\r\n  const update = (createChanger?: () => UpdateChanger) => {\r\n    const $scope = $$scope();\r\n    if ($scope.getIsInsertionEffectsZone()) return;\r\n    const { owner } = hook;\r\n    const hasChanger = detectIsFunction(createChanger);\r\n    const isTransition = $scope.getIsTransitionZone();\r\n    const isBatch = $scope.getIsBatchZone();\r\n    const isEvent = $scope.getIsEventZone();\r\n    const priority = isTransition ? TaskPriority.LOW : isEvent ? TaskPriority.HIGH : TaskPriority.NORMAL; // !\r\n    const forceAsync = isTransition;\r\n    const setPendingStatus = $scope.getPendingStatusSetter();\r\n    const callback = createUpdate({\r\n      rootId,\r\n      hook,\r\n      isTransition,\r\n      createChanger: hasChanger ? createChanger : undefined,\r\n    });\r\n    const createLocation = () => createHookLocation(rootId, idx, owner);\r\n    const callbackOptions: ScheduleCallbackOptions = {\r\n      priority,\r\n      forceAsync,\r\n      isTransition,\r\n      createLocation,\r\n      setPendingStatus,\r\n    };\r\n\r\n    if (isBatch) {\r\n      addBatch(\r\n        owner,\r\n        () => scheduler.schedule(callback, callbackOptions),\r\n        () => hasChanger && createChanger().setValue(),\r\n      );\r\n    } else {\r\n      scheduler.schedule(callback, callbackOptions);\r\n    }\r\n  };\r\n\r\n  return update;\r\n}\r\n\r\nexport { useUpdate };\r\n","import { $$scope } from '../scope';\r\nimport { type Fiber } from '../fiber';\r\nimport { type Callback } from '../shared';\r\n\r\nfunction batch(callback: () => void) {\r\n  const $scope = $$scope();\r\n\r\n  $scope.setIsBatchZone(true);\r\n  callback();\r\n  $scope.setIsBatchZone(false);\r\n}\r\n\r\nfunction addBatch(fiber: Fiber, callback: Callback, change: Callback) {\r\n  const $scope = $$scope();\r\n\r\n  if ($scope.getIsTransitionZone()) {\r\n    callback();\r\n  } else {\r\n    const batch = fiber.batch || { timer: null, changes: [] };\r\n\r\n    fiber.batch = batch;\r\n    batch.changes.push(change);\r\n    batch.timer && clearTimeout(batch.timer);\r\n    batch.timer = setTimeout(() => {\r\n      batch.changes.splice(-1);\r\n      batch.changes.forEach(x => x());\r\n      fiber.batch = null;\r\n      callback();\r\n    });\r\n  }\r\n}\r\n\r\nexport { batch, addBatch };\r\n","import { detectIsString, detectIsFunction } from '../utils';\r\nimport { type TagVirtualNodeFactory, type ViewOptions, View } from '../view';\r\nimport { type ComponentFactory } from '../component';\r\n\r\nfunction createElement(\r\n  element: string | Function,\r\n  props: object,\r\n  ...slot: Array<any>\r\n): ComponentFactory | TagVirtualNodeFactory | null {\r\n  if (detectIsString(element)) {\r\n    const options = (props || {}) as ViewOptions;\r\n\r\n    options.as = element;\r\n    options.slot = slot;\r\n\r\n    return View(options);\r\n  }\r\n\r\n  if (detectIsFunction(element)) {\r\n    const options = (props || {}) as { slot: unknown };\r\n\r\n    options.slot = slot.length === 1 ? slot[0] : slot;\r\n\r\n    return element(options);\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nexport { createElement, createElement as h };\r\n","import { detectIsObject, detectIsNull, detectIsFunction } from '../utils';\r\nimport type { Component, ComponentFactory } from '../component';\r\nimport type { RefProps, KeyProps, FlagProps } from '../shared';\r\nimport { useMemo } from '../use-memo';\r\n\r\nfunction forwardRef<P extends object, R>(\r\n  component: ComponentFactory<P, R>,\r\n): ComponentFactory<P & RefProps<R> & KeyProps & FlagProps, R> {\r\n  type Props = P & RefProps<R>;\r\n\r\n  return (props: Props) => {\r\n    const { ref, ...rest } = (props || {}) as Props;\r\n\r\n    return component(rest as P, ref) as Component<P, R>;\r\n  };\r\n}\r\n\r\nfunction detectIsMutableRef(ref: unknown): ref is MutableRef {\r\n  if (!detectIsObject(ref) || detectIsNull(ref)) return false;\r\n  const mutableRef = ref as MutableRef;\r\n\r\n  for (const key in mutableRef) {\r\n    if (key === 'current' && mutableRef.hasOwnProperty(key)) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nfunction applyRef<T>(ref: Ref<T>, current: T) {\r\n  if (detectIsFunction(ref)) {\r\n    ref(current);\r\n  } else if (detectIsMutableRef(ref)) {\r\n    ref.current = current;\r\n  }\r\n}\r\n\r\nfunction useRef<T>(initialValue: T = null): MutableRef<T> {\r\n  const ref = useMemo(() => ({ current: initialValue }), []) as MutableRef<T>;\r\n\r\n  return ref;\r\n}\r\n\r\nexport type MutableRef<T = unknown> = {\r\n  current: T;\r\n};\r\n\r\nexport type FunctionRef<T = unknown> = (ref: T) => void;\r\n\r\nexport type Ref<T = unknown> = MutableRef<T> | FunctionRef<T>;\r\n\r\nexport { forwardRef, detectIsMutableRef, applyRef, useRef };\r\n","import { type DarkElement, type Fiber, component, useMemo, $$scope, detectIsComponent } from '@dark-engine/core';\r\n\r\nimport type { TagNativeElement } from '../native-element';\r\n\r\nconst $$portal = Symbol('portal');\r\n\r\nfunction createPortal(slot: DarkElement, container: TagNativeElement) {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    if (!(container instanceof Element)) {\r\n      throw new Error(`[Dark]: createPortal receives only Element as container!`);\r\n    }\r\n  }\r\n\r\n  return Portal({ container, slot });\r\n}\r\n\r\ntype PortalProps = {\r\n  container: TagNativeElement;\r\n  slot: DarkElement;\r\n};\r\n\r\nconst Portal = component<PortalProps>(\r\n  props => {\r\n    const element = props.container;\r\n    const fiber = $$scope().getCursorFiber();\r\n\r\n    useMemo(() => (element.innerHTML = ''), []);\r\n\r\n    fiber.element = element;\r\n    props.container = null;\r\n\r\n    return props.slot;\r\n  },\r\n  { token: $$portal },\r\n);\r\n\r\nconst detectIsPortal = (instance: unknown) => detectIsComponent(instance) && instance.token === $$portal;\r\n\r\nconst getPortalContainer = (fiber: Fiber<TagNativeElement>): TagNativeElement | null =>\r\n  detectIsPortal(fiber.inst) ? fiber.element : null;\r\n\r\nfunction unmountPortal(fiber: Fiber<TagNativeElement>) {\r\n  const element = getPortalContainer(fiber);\r\n\r\n  element && (element.innerHTML = '');\r\n}\r\n\r\nexport { createPortal, unmountPortal, detectIsPortal };\r\n","import { detectIsFunction, $$scope, detectIsArray } from '@dark-engine/core';\r\n\r\nimport type { TagNativeElement } from '../native-element';\r\n\r\ntype BrowserEventConstructor = (type: string, event: Event) => void;\r\n\r\nclass SyntheticEvent<E extends Event, T = TagNativeElement> {\r\n  public type = '';\r\n  public sourceEvent: E = null;\r\n  public target: T = null;\r\n  private propagation = true;\r\n\r\n  constructor(options: Pick<SyntheticEvent<E, T>, 'sourceEvent' | 'target'>) {\r\n    this.type = options.sourceEvent.type;\r\n    this.sourceEvent = options.sourceEvent;\r\n    this.target = options.target;\r\n  }\r\n\r\n  public stopPropagation() {\r\n    this.propagation = false;\r\n    this.sourceEvent.stopPropagation();\r\n  }\r\n\r\n  public preventDefault() {\r\n    this.sourceEvent.preventDefault();\r\n  }\r\n\r\n  public getPropagation() {\r\n    return this.propagation;\r\n  }\r\n}\r\n\r\nfunction delegateEvent(\r\n  target: Element,\r\n  eventName: string,\r\n  handler: (e: Event) => void | [fn: () => void, ...args: Array<any>],\r\n) {\r\n  const $scope = $$scope();\r\n  const eventsMap = $scope.getEvents();\r\n  const handlersMap = eventsMap.get(eventName);\r\n  const $handler = detectIsArray(handler) ? (e: Event) => handler[0](...handler.slice(1), e) : handler;\r\n\r\n  if (!handlersMap) {\r\n    const rootHandler = (event: Event) => {\r\n      const handler = eventsMap.get(eventName).get(event.target);\r\n      const target = event.target as TagNativeElement;\r\n      let $event: SyntheticEvent<Event> = null;\r\n\r\n      if (detectIsFunction(handler)) {\r\n        $event = new SyntheticEvent({ sourceEvent: event, target });\r\n\r\n        $scope.setIsEventZone(true);\r\n        handler($event);\r\n        $scope.setIsEventZone(false);\r\n      }\r\n\r\n      if (target.parentElement) {\r\n        const shouldPropagate = $event ? $event.getPropagation() : true;\r\n\r\n        if (shouldPropagate) {\r\n          const constructor = event.constructor as BrowserEventConstructor;\r\n\r\n          target.parentElement.dispatchEvent(new constructor(event.type, event));\r\n        }\r\n      }\r\n    };\r\n\r\n    eventsMap.set(eventName, new WeakMap([[target, $handler]]));\r\n    document.addEventListener(eventName, rootHandler, true);\r\n    $scope.addEventUnsubscriber(() => document.removeEventListener(eventName, rootHandler, true));\r\n  } else {\r\n    handlersMap.set(target, $handler);\r\n  }\r\n}\r\n\r\nconst detectIsEvent = (attrName: string) => attrName.startsWith('on');\r\n\r\nconst getEventName = (attrName: string) => attrName.slice(2, attrName.length).toLowerCase();\r\n\r\nexport { SyntheticEvent, delegateEvent, detectIsEvent, getEventName };\r\n","export const VERSION = '0.25.1';\r\nexport const STYLE_ATTR = 'style';\r\nexport const CLASS_ATTR = 'class';\r\nexport const CLASS_NAME_ATTR = 'className';\r\nexport const EXCLUDE_ATTR_MARK = '$';\r\n","import {\r\n  type Fiber,\r\n  type VirtualNode,\r\n  type TagVirtualNode,\r\n  type TextVirtualNode,\r\n  type CommentVirtualNode,\r\n  type PlainVirtualNode,\r\n  type Callback,\r\n  REF_ATTR,\r\n  ATTR_BLACK_LIST,\r\n  CREATE_EFFECT_TAG,\r\n  UPDATE_EFFECT_TAG,\r\n  DELETE_EFFECT_TAG,\r\n  SKIP_EFFECT_TAG,\r\n  MOVE_MASK,\r\n  FLUSH_MASK,\r\n  SHADOW_MASK,\r\n  detectIsUndefined,\r\n  detectIsBoolean,\r\n  detectIsObject,\r\n  NodeType,\r\n  detectIsTagVirtualNode,\r\n  detectIsTextVirtualNode,\r\n  detectIsPlainVirtualNode,\r\n  getFiberWithElement,\r\n  collectElements,\r\n  walk,\r\n  dummyFn,\r\n  $$scope,\r\n  applyRef,\r\n} from '@dark-engine/core';\r\n\r\nimport { detectIsPortal } from '../portal';\r\nimport { delegateEvent, detectIsEvent, getEventName } from '../events';\r\nimport { STYLE_ATTR, CLASS_ATTR, CLASS_NAME_ATTR, EXCLUDE_ATTR_MARK } from '../constants';\r\nimport type {\r\n  NativeElement,\r\n  TagNativeElement,\r\n  TextNativeElement,\r\n  CommentNativeElement,\r\n  NativeNode,\r\n  AttributeValue,\r\n} from '../native-element';\r\n\r\nlet moves: Array<Callback> = [];\r\nlet patches: Array<Callback> = [];\r\nlet trackUpdate: (nativeElement: NativeElement) => void = null;\r\nconst svgTagNames = new Set([\r\n  'svg',\r\n  'animate',\r\n  'animateMotion',\r\n  'animateTransform',\r\n  'circle',\r\n  'clipPath',\r\n  'defs',\r\n  'desc',\r\n  'ellipse',\r\n  'feBlend',\r\n  'feColorMatrix',\r\n  'feComponentTransfer',\r\n  'feComposite',\r\n  'feConvolveMatrix',\r\n  'feDiffuseLighting',\r\n  'feDisplacementMap',\r\n  'feDistantLight',\r\n  'feDropShadow',\r\n  'feFlood',\r\n  'feFuncA',\r\n  'feFuncB',\r\n  'feFuncG',\r\n  'feFuncR',\r\n  'feGaussianBlur',\r\n  'feImage',\r\n  'feMerge',\r\n  'feMergeNode',\r\n  'feMorphology',\r\n  'feOffset',\r\n  'fePointLight',\r\n  'feSpecularLighting',\r\n  'feSpotLight',\r\n  'feTile',\r\n  'feTurbulence',\r\n  'filter',\r\n  'foreignObject',\r\n  'g',\r\n  'image',\r\n  'line',\r\n  'linearGradient',\r\n  'marker',\r\n  'mask',\r\n  'metadata',\r\n  'mpath',\r\n  'path',\r\n  'pattern',\r\n  'polygon',\r\n  'polyline',\r\n  'radialGradient',\r\n  'rect',\r\n  'stop',\r\n  'switch',\r\n  'symbol',\r\n  'text',\r\n  'textPath',\r\n  'tspan',\r\n  'use',\r\n  'view',\r\n]);\r\nconst voidTagNames = new Set([\r\n  'area',\r\n  'base',\r\n  'br',\r\n  'col',\r\n  'embed',\r\n  'hr',\r\n  'img',\r\n  'input',\r\n  'link',\r\n  'meta',\r\n  'param',\r\n  'source',\r\n  'track',\r\n  'wbr',\r\n]);\r\n\r\nconst createNativeElementMap = {\r\n  [NodeType.TAG]: (vNode: VirtualNode): TagNativeElement => {\r\n    const tagNode = vNode as TagVirtualNode;\r\n    const name = tagNode.name;\r\n\r\n    return detectIsSvgElement(name)\r\n      ? document.createElementNS('http://www.w3.org/2000/svg', name)\r\n      : document.createElement(name);\r\n  },\r\n  [NodeType.TEXT]: (vNode: VirtualNode): TextNativeElement => {\r\n    return document.createTextNode((vNode as TextVirtualNode).value);\r\n  },\r\n  [NodeType.COMMENT]: (vNode: VirtualNode): CommentNativeElement => {\r\n    return document.createComment((vNode as CommentVirtualNode).value);\r\n  },\r\n};\r\n\r\nfunction createNativeElement(node: VirtualNode): NativeElement {\r\n  return createNativeElementMap[node.type](node);\r\n}\r\n\r\nfunction detectIsSvgElement(name: string) {\r\n  return svgTagNames.has(name);\r\n}\r\n\r\nfunction detectIsVoidElement(name: string) {\r\n  return voidTagNames.has(name);\r\n}\r\n\r\nfunction setObjectStyle(element: TagNativeElement, style: object) {\r\n  const keys = Object.keys(style);\r\n\r\n  for (const key of keys) {\r\n    element.style.setProperty(key, String(style[key]));\r\n  }\r\n}\r\n\r\nfunction addAttributes(element: NativeElement, node: TagVirtualNode, isHydrateZone: boolean) {\r\n  const attrNames = Object.keys(node.attrs);\r\n  const tagElement = element as TagNativeElement;\r\n\r\n  for (const attrName of attrNames) {\r\n    const attrValue = node.attrs[attrName];\r\n\r\n    if (attrName[0] === EXCLUDE_ATTR_MARK) continue;\r\n\r\n    if (attrName === REF_ATTR) {\r\n      applyRef(attrValue, element);\r\n      continue;\r\n    }\r\n\r\n    if (attrName === CLASS_ATTR || attrName === CLASS_NAME_ATTR) {\r\n      toggleAttribute(tagElement, CLASS_ATTR, attrValue);\r\n      continue;\r\n    }\r\n\r\n    if (attrName === STYLE_ATTR && attrValue && detectIsObject(attrValue)) {\r\n      setObjectStyle(tagElement, attrValue);\r\n      continue;\r\n    }\r\n\r\n    if (detectIsEvent(attrName)) {\r\n      delegateEvent(tagElement, getEventName(attrName), attrValue);\r\n    } else if (!isHydrateZone && !detectIsUndefined(attrValue) && !ATTR_BLACK_LIST[attrName]) {\r\n      const stop = patchProperties({\r\n        tagName: node.name,\r\n        element: tagElement,\r\n        attrValue,\r\n        attrName,\r\n      });\r\n\r\n      !stop && tagElement.setAttribute(attrName, attrValue);\r\n    }\r\n  }\r\n}\r\n\r\nfunction updateAttributes(element: NativeElement, prevNode: TagVirtualNode, nextNode: TagVirtualNode) {\r\n  const attrNames = getAttributeNames(prevNode, nextNode);\r\n  const tagElement = element as TagNativeElement;\r\n\r\n  for (const attrName of attrNames) {\r\n    const prevAttrValue = prevNode.attrs[attrName];\r\n    const nextAttrValue = nextNode.attrs[attrName];\r\n\r\n    if (attrName[0] === EXCLUDE_ATTR_MARK) continue;\r\n\r\n    if (attrName === REF_ATTR) {\r\n      applyRef(prevAttrValue, element);\r\n      continue;\r\n    }\r\n\r\n    if ((attrName === CLASS_ATTR || attrName === CLASS_NAME_ATTR) && prevAttrValue !== nextAttrValue) {\r\n      toggleAttribute(tagElement, CLASS_ATTR, nextAttrValue);\r\n      continue;\r\n    }\r\n\r\n    if (attrName === STYLE_ATTR && nextAttrValue && prevAttrValue !== nextAttrValue && detectIsObject(nextAttrValue)) {\r\n      setObjectStyle(tagElement, nextAttrValue);\r\n      continue;\r\n    }\r\n\r\n    if (!detectIsUndefined(nextAttrValue)) {\r\n      if (detectIsEvent(attrName)) {\r\n        prevAttrValue !== nextAttrValue && delegateEvent(tagElement, getEventName(attrName), nextAttrValue);\r\n      } else if (!ATTR_BLACK_LIST[attrName] && prevAttrValue !== nextAttrValue) {\r\n        const stop = patchProperties({\r\n          tagName: nextNode.name,\r\n          element: tagElement,\r\n          attrValue: nextAttrValue,\r\n          attrName,\r\n        });\r\n\r\n        !stop && tagElement.setAttribute(attrName, nextAttrValue);\r\n      }\r\n    } else {\r\n      tagElement.removeAttribute(attrName);\r\n    }\r\n  }\r\n}\r\n\r\nfunction toggleAttribute(element: TagNativeElement, name: string, value: string) {\r\n  value ? element.setAttribute(name, value) : element.removeAttribute(name);\r\n}\r\n\r\nfunction getAttributeNames(prevNode: TagVirtualNode, nextNode: TagVirtualNode) {\r\n  const attrNames = new Set<string>();\r\n  const prevAttrs = Object.keys(prevNode.attrs);\r\n  const nextAttrs = Object.keys(nextNode.attrs);\r\n  const size = Math.max(prevAttrs.length, nextAttrs.length);\r\n\r\n  for (let i = 0; i < size; i++) {\r\n    attrNames.add(prevAttrs[i] || nextAttrs[i]);\r\n  }\r\n\r\n  return attrNames;\r\n}\r\n\r\ntype PatchPropertiesOptions = {\r\n  tagName: string;\r\n  element: TagNativeElement;\r\n  attrName: string;\r\n  attrValue: AttributeValue;\r\n};\r\n\r\nfunction patchProperties(options: PatchPropertiesOptions): boolean {\r\n  const { tagName, element, attrName, attrValue } = options;\r\n  const fn = patchPropertiesSpecialCasesMap[tagName];\r\n  let stop = fn ? fn(element, attrName, attrValue) : false;\r\n\r\n  if (canSetProperty(element, attrName)) {\r\n    element[attrName] = attrValue;\r\n  }\r\n\r\n  if (!stop && detectIsBoolean(attrValue)) {\r\n    stop = !attrName.includes('-');\r\n  }\r\n\r\n  return stop;\r\n}\r\n\r\nfunction canSetProperty(element: TagNativeElement, key: string) {\r\n  const prototype = Object.getPrototypeOf(element);\r\n  const descriptor = Object.getOwnPropertyDescriptor(prototype, key);\r\n\r\n  return Boolean(descriptor?.set);\r\n}\r\n\r\nconst patchPropertiesSpecialCasesMap: Record<\r\n  string,\r\n  (element: NativeElement, attrName: string, attrValue: AttributeValue) => boolean\r\n> = {\r\n  input: (element: HTMLInputElement, attrName: string, attrValue: AttributeValue) => {\r\n    if (attrName === 'value') {\r\n      patches.push(() => {\r\n        detectIsBoolean(attrValue) ? (element.checked = attrValue) : (element.value = String(attrValue));\r\n      });\r\n    } else if (attrName === 'autoFocus') {\r\n      patches.push(() => {\r\n        element.autofocus = Boolean(attrValue);\r\n        element.autofocus && element.focus();\r\n      });\r\n    }\r\n\r\n    return false;\r\n  },\r\n  textarea: (element: HTMLTextAreaElement, attrName: string, attrValue: AttributeValue) => {\r\n    if (attrName === 'value') {\r\n      element.innerText = String(attrValue);\r\n\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  },\r\n};\r\n\r\nfunction commitCreation(fiber: Fiber<NativeElement>) {\r\n  const parentFiber = getFiberWithElement<NativeElement, TagNativeElement>(fiber.parent);\r\n  const parentElement = parentFiber.element;\r\n  const childNodes = parentElement.childNodes;\r\n  const isHydrateZone = $$scope().getIsHydrateZone();\r\n\r\n  if (isHydrateZone) {\r\n    const nativeElement = childNodes[fiber.eidx] as NativeElement;\r\n\r\n    if (\r\n      detectIsTextVirtualNode(fiber.inst) &&\r\n      nativeElement instanceof Text &&\r\n      fiber.inst.value.length !== nativeElement.length\r\n    ) {\r\n      nativeElement.splitText(fiber.inst.value.length);\r\n    }\r\n\r\n    fiber.element = nativeElement;\r\n  } else {\r\n    if (!(fiber.mask & SHADOW_MASK)) {\r\n      if (childNodes.length === 0 || fiber.eidx > childNodes.length - 1) {\r\n        !detectIsVoidElement((parentFiber.inst as TagVirtualNode).name) &&\r\n          appendNativeElement(fiber.element, parentElement);\r\n      } else {\r\n        insertNativeElement(fiber.element, parentElement.childNodes[fiber.eidx], parentElement);\r\n      }\r\n    }\r\n  }\r\n\r\n  detectIsTagVirtualNode(fiber.inst) && addAttributes(fiber.element, fiber.inst, isHydrateZone);\r\n}\r\n\r\nfunction commitUpdate(fiber: Fiber<NativeElement>) {\r\n  const element = fiber.element;\r\n  const prevInstance = fiber.alt.inst as VirtualNode;\r\n  const nextInstance = fiber.inst as VirtualNode;\r\n\r\n  detectIsPlainVirtualNode(nextInstance)\r\n    ? (prevInstance as PlainVirtualNode).value !== nextInstance.value && (element.textContent = nextInstance.value)\r\n    : updateAttributes(element, prevInstance as TagVirtualNode, nextInstance as TagVirtualNode);\r\n}\r\n\r\nfunction commitDeletion(fiber: Fiber<NativeElement>) {\r\n  const parentFiber = getFiberWithElement<NativeElement, TagNativeElement>(fiber.parent);\r\n\r\n  if (fiber.mask & FLUSH_MASK) {\r\n    parentFiber.element.innerHTML && (parentFiber.element.innerHTML = '');\r\n    return;\r\n  }\r\n\r\n  walk<NativeElement>(fiber, (fiber, skip) => {\r\n    if (fiber.element) {\r\n      !detectIsPortal(fiber.inst) &&\r\n        canRemoveNativeElement(fiber.element, parentFiber.element) &&\r\n        removeNativeElement(fiber.element, parentFiber.element);\r\n      return skip();\r\n    }\r\n  });\r\n}\r\n\r\nfunction move(fiber: Fiber<NativeElement>) {\r\n  const sourceNodes = collectElements(fiber, x => x.element);\r\n  const sourceNode = sourceNodes[0];\r\n  const parentElement = sourceNode.parentElement;\r\n  const sourceFragment = new DocumentFragment();\r\n  const elementIdx = fiber.eidx;\r\n  let idx = 0;\r\n  const move = () => {\r\n    for (let i = 1; i < sourceNodes.length; i++) {\r\n      removeNativeElement(parentElement.childNodes[elementIdx + 1], parentElement);\r\n    }\r\n\r\n    replaceNativeElement(sourceFragment, parentElement.childNodes[elementIdx], parentElement);\r\n  };\r\n\r\n  for (const node of sourceNodes) {\r\n    insertNativeElement(document.createComment(`${elementIdx}:${idx}`), node, parentElement);\r\n    appendNativeElement(node, sourceFragment);\r\n    idx++;\r\n  }\r\n\r\n  moves.push(move);\r\n}\r\n\r\nconst commitMap: Record<string, (fiber: Fiber<NativeElement>) => void> = {\r\n  [CREATE_EFFECT_TAG]: (fiber: Fiber<NativeElement>) => {\r\n    if (!fiber.element || detectIsPortal(fiber.inst)) return;\r\n    trackUpdate && trackUpdate(fiber.element);\r\n    commitCreation(fiber);\r\n  },\r\n  [UPDATE_EFFECT_TAG]: (fiber: Fiber<NativeElement>) => {\r\n    fiber.mask & MOVE_MASK && (move(fiber), (fiber.mask &= ~MOVE_MASK));\r\n    if (!fiber.element || detectIsPortal(fiber.inst)) return;\r\n    trackUpdate && trackUpdate(fiber.element);\r\n    commitUpdate(fiber);\r\n  },\r\n  [DELETE_EFFECT_TAG]: commitDeletion,\r\n  [SKIP_EFFECT_TAG]: dummyFn,\r\n};\r\n\r\nfunction finishCommit() {\r\n  moves.forEach(x => x());\r\n  patches.forEach(x => x());\r\n  moves = [];\r\n  patches = [];\r\n}\r\n\r\nconst commit = (fiber: Fiber<NativeElement>) => commitMap[fiber.tag](fiber);\r\n\r\nconst setTrackUpdate = (fn: typeof trackUpdate) => (trackUpdate = fn);\r\n\r\nconst appendNativeElement = (element: NativeNode, parent: NativeNode) => parent.appendChild(element);\r\n\r\nconst insertNativeElement = (element: NativeNode, sibling: NativeNode, parent: TagNativeElement) =>\r\n  parent.insertBefore(element, sibling);\r\n\r\nconst insertNativeElementByIndex = (element: NativeNode, idx: number, parent: TagNativeElement) =>\r\n  parent.insertBefore(element, parent.childNodes[idx]);\r\n\r\nconst replaceNativeElement = (element: NativeNode, candidate: NativeNode, parent: TagNativeElement) =>\r\n  parent.replaceChild(element, candidate);\r\n\r\nconst canRemoveNativeElement = (element: NativeNode, parent: NativeNode) => element.parentElement === parent;\r\n\r\nconst removeNativeElement = (element: NativeNode, parent: TagNativeElement) => parent.removeChild(element);\r\n\r\nexport { createNativeElement, commit, finishCommit, setTrackUpdate, insertNativeElementByIndex };\r\n","import {\r\n  type DarkElement,\r\n  type Callback,\r\n  ROOT,\r\n  Fiber,\r\n  CREATE_EFFECT_TAG,\r\n  UPDATE_EFFECT_TAG,\r\n  platform,\r\n  flatten,\r\n  detectIsUndefined,\r\n  detectIsFunction,\r\n  trueFn,\r\n  TagVirtualNode,\r\n  TaskPriority,\r\n  createReplacer,\r\n  setRootId,\r\n  $$scope,\r\n  dummyFn,\r\n  scheduler,\r\n} from '@dark-engine/core';\r\n\r\nimport { createNativeElement, insertNativeElementByIndex, commit, finishCommit } from '../dom';\r\nimport { detectIsPortal, unmountPortal } from '../portal';\r\nimport type { TagNativeElement } from '../native-element';\r\n\r\nconst roots = new Map<Element, number>();\r\nconst raf = requestAnimationFrame.bind(window);\r\nconst caf = cancelAnimationFrame.bind(window);\r\nconst spawn = raf;\r\nlet isInjected = false;\r\n\r\nfunction inject() {\r\n  platform.createElement = createNativeElement as typeof platform.createElement;\r\n  platform.insertElement = insertNativeElementByIndex as typeof platform.insertElement;\r\n  platform.raf = raf;\r\n  platform.caf = caf;\r\n  platform.spawn = spawn;\r\n  platform.commit = commit;\r\n  platform.finishCommit = finishCommit;\r\n  platform.detectIsDynamic = trueFn;\r\n  platform.detectIsPortal = detectIsPortal;\r\n  platform.unmountPortal = unmountPortal;\r\n  platform.chunk = dummyFn;\r\n  isInjected = true;\r\n}\r\n\r\nfunction render(element: DarkElement, container: TagNativeElement, hydrate?: Callback) {\r\n  !isInjected && inject();\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    if (!(container instanceof Element)) {\r\n      throw new Error(`[Dark]: render receives only Element as container!`);\r\n    }\r\n  }\r\n\r\n  const isMounted = !detectIsUndefined(roots.get(container));\r\n  const isHydrate = detectIsFunction(hydrate);\r\n  let rootId: number = null;\r\n\r\n  if (!isMounted) {\r\n    rootId = roots.size;\r\n    roots.set(container, rootId);\r\n    !isHydrate && (container.innerHTML = '');\r\n  } else {\r\n    rootId = roots.get(container);\r\n  }\r\n\r\n  const $scope = $$scope(rootId);\r\n\r\n  // insertion effect can't schedule renders\r\n  if ($scope?.getIsInsertionEffectsZone()) return;\r\n\r\n  const callback = () => {\r\n    setRootId(rootId); // !\r\n    const $scope = $$scope();\r\n    const rootFiber = $scope.getRoot();\r\n    const isUpdate = Boolean(rootFiber);\r\n    const fiber = new Fiber().mutate({\r\n      element: container,\r\n      inst: new TagVirtualNode(ROOT, {}, flatten([element || createReplacer()]) as TagVirtualNode['children']),\r\n      alt: rootFiber,\r\n      tag: isUpdate ? UPDATE_EFFECT_TAG : CREATE_EFFECT_TAG,\r\n    });\r\n\r\n    $scope.resetMount();\r\n    $scope.setWorkInProgress(fiber);\r\n    $scope.setIsHydrateZone(isHydrate);\r\n    $scope.setNextUnitOfWork(fiber);\r\n    isHydrate && hydrate();\r\n  };\r\n\r\n  scheduler.schedule(callback, { priority: TaskPriority.NORMAL });\r\n}\r\n\r\nexport { render, roots, inject };\r\n","export const VERSION = '0.25.1';\r\nexport const STYLE_TAG = 'style';\r\nexport const STYLED_ATTR = 'dark-styled';\r\nexport const GLOBAL_ATTR_VALUE = 'global';\r\nexport const COMPONENTS_ATTR_VALUE = 'components';\r\nexport const INTERLEAVE_GLOBAL_ATTR_VALUE = 'interleave-global';\r\nexport const INTERLEAVE_COMPONENTS_ATTR_VALUE = 'interleave-components';\r\nexport const CLASS_NAME_PREFIX = 'dk';\r\nexport const ANIMATION_NAME_PREFIX = 'dka';\r\nexport const OPENING_CURLY_BRACE_MARK = '{';\r\nexport const CLOSING_CURLY_BRACE_MARK = '}';\r\nexport const OPENING_PARENTHESIS_MARK = '(';\r\nexport const CLOSING_PARENTHESIS_MARK = ')';\r\nexport const COLON_MARK = ':';\r\nexport const SEMICOLON_MARK = ';';\r\nexport const DOT_MARK = '.';\r\nexport const BLANK_SPACE = ' ';\r\nexport const MEDIA_QUERY_MARK = '@media';\r\nexport const CONTAINER_QUERY_MARK = '@container';\r\nexport const KEYFRAMES_MARK = '@keyframes';\r\nexport const NESTING_MARK = '>';\r\nexport const SELF_MARK = '&';\r\nexport const FUNCTION_MARK = '[$]';\r\nexport const SINGLE_LINE_COMMENT_START_MARK = '//';\r\nexport const SINGLE_LINE_COMMENT_END_MARK = '\\n';\r\nexport const MULTI_LINE_COMMENT_START_MARK = '/*';\r\nexport const MULTI_LINE_COMMENT_END_MARK = '*/';\r\nexport const URL_FN_MARK = 'url';\r\n","import { STYLE_TAG, BLANK_SPACE } from '../constants';\r\n\r\nconst uniq = <T>(items: Array<T>, selector: (x: T) => unknown = x => x) => {\r\n  const arr: Array<T> = [];\r\n  const set = new Set();\r\n\r\n  for (const item of items) {\r\n    const key = selector(item);\r\n\r\n    !set.has(key) && arr.push(item);\r\n    set.add(key);\r\n  }\r\n\r\n  return arr;\r\n};\r\n\r\nconst mapProps = <T extends object>(props: T) => Object.keys(props).map(key => props[key]);\r\n\r\nconst mergeClassNames = (classNames: Array<string>) => uniq(classNames.filter(Boolean)).join(BLANK_SPACE);\r\n\r\nconst getElement = (selector: string) => document.querySelector(selector);\r\n\r\nconst getElements = (selector: string) => Array.from(document.querySelectorAll(selector));\r\n\r\nconst createStyleElement = () => document.createElement(STYLE_TAG);\r\n\r\nconst setAttr = (element: Element, attrName: string, attrValue: string) => element.setAttribute(attrName, attrValue);\r\n\r\nconst append = (parent: Element, element: Element) => parent.appendChild(element);\r\n\r\nconst insertBefore = (parent: Element, element: Element, sibling: Element) => parent.insertBefore(element, sibling);\r\n\r\nconst mergeTemplates = (t1: TemplateStringsArray, t2: TemplateStringsArray) => {\r\n  const [first] = t2;\r\n  const $t1 = [...t1];\r\n  const $t2: Array<string> = [];\r\n  let result: Omit<TemplateStringsArray, 'raw'> = null;\r\n\r\n  for (let i = 0; i < t2.length; i++) {\r\n    if (i > 0) {\r\n      $t2.push(t2[i]);\r\n    }\r\n  }\r\n\r\n  $t1[$t1.length - 1] = $t1[$t1.length - 1] + first;\r\n  result = [...$t1, ...$t2];\r\n\r\n  Object.assign(result, { raw: result });\r\n\r\n  return result as TemplateStringsArray;\r\n};\r\n\r\nconst detectIsBrowser = () => typeof window !== 'undefined';\r\n\r\nexport {\r\n  uniq,\r\n  mapProps,\r\n  mergeClassNames,\r\n  getElement,\r\n  getElements,\r\n  createStyleElement,\r\n  setAttr,\r\n  append,\r\n  insertBefore,\r\n  mergeTemplates,\r\n  detectIsBrowser,\r\n};\r\n","import { detectIsTextBased } from '@dark-engine/core';\r\n\r\nimport { type TextBased } from '../shared';\r\nimport { hash } from '../hash';\r\nimport { parse } from '../parse';\r\nimport {\r\n  KEYFRAMES_MARK,\r\n  FUNCTION_MARK,\r\n  OPENING_CURLY_BRACE_MARK,\r\n  CLOSING_CURLY_BRACE_MARK,\r\n  ANIMATION_NAME_PREFIX,\r\n} from '../constants';\r\nimport { type KeyframesRule } from '../tokens';\r\n\r\nclass Keyframes {\r\n  constructor(private name: string, private token: KeyframesRule) {}\r\n\r\n  getName() {\r\n    return this.name;\r\n  }\r\n\r\n  getToken() {\r\n    return this.token;\r\n  }\r\n}\r\n\r\nfunction keyframes(source: TemplateStringsArray, ...args: Array<TextBased>) {\r\n  const joined = join(pad(source), args);\r\n  const name = genAnimationName(joined);\r\n  const [token] = parse(joined.replace(FUNCTION_MARK, name)).children;\r\n  const keyframes = new Keyframes(name, token as KeyframesRule);\r\n\r\n  return keyframes;\r\n}\r\n\r\nfunction pad(source: TemplateStringsArray) {\r\n  const start = `${KEYFRAMES_MARK} ${FUNCTION_MARK} ${OPENING_CURLY_BRACE_MARK}`;\r\n  const end = CLOSING_CURLY_BRACE_MARK;\r\n  const strings: Array<string> = [];\r\n\r\n  for (let i = 0; i < source.length; i++) {\r\n    const isStart = i === 0;\r\n    const isEnd = i === source.length - 1;\r\n\r\n    if (isStart) {\r\n      strings.push(start + source[i]);\r\n    } else if (isEnd) {\r\n      strings.push(source[i] + end);\r\n    } else {\r\n      strings.push(source[i]);\r\n    }\r\n  }\r\n\r\n  return strings;\r\n}\r\n\r\nfunction join(source: Array<string>, args: Array<TextBased>) {\r\n  let joined = '';\r\n\r\n  for (let i = 0; i < source.length; i++) {\r\n    joined += source[i];\r\n\r\n    if (detectIsTextBased(args[i])) {\r\n      joined += args[i];\r\n    }\r\n  }\r\n\r\n  return joined;\r\n}\r\n\r\nconst genAnimationName = (key: string) => `${ANIMATION_NAME_PREFIX}-${hash(key)}`;\r\n\r\nconst detectIsKeyframes = (x: unknown): x is Keyframes => x instanceof Keyframes;\r\n\r\nexport { Keyframes, keyframes, detectIsKeyframes };\r\n","import {\r\n  OPENING_CURLY_BRACE_MARK,\r\n  CLOSING_CURLY_BRACE_MARK,\r\n  COLON_MARK,\r\n  SEMICOLON_MARK,\r\n  MEDIA_QUERY_MARK,\r\n  CONTAINER_QUERY_MARK,\r\n  KEYFRAMES_MARK,\r\n  NESTING_MARK,\r\n  SELF_MARK,\r\n  DOT_MARK,\r\n  FUNCTION_MARK,\r\n  BLANK_SPACE,\r\n} from '../constants';\r\n\r\nimport { detectIsKeyframes } from '../keyframes';\r\n\r\nabstract class Token {\r\n  name = '';\r\n  value = '';\r\n  parent: Parent;\r\n  isDynamic = false;\r\n\r\n  normalize() {\r\n    this.name = this.name.trim();\r\n    this.value = this.value.trim();\r\n  }\r\n\r\n  markAsDynamic() {\r\n    this.isDynamic = true;\r\n    detectIsToken(this.parent) && !this.parent.isDynamic && this.parent.markAsDynamic();\r\n  }\r\n\r\n  abstract generate(): string | Tuple;\r\n  abstract generate(props: object, args: Array<Function>): string | Tuple;\r\n  abstract generate(className: string | null, props: object, args: Array<Function>): string | Tuple;\r\n}\r\n\r\nclass StyleRule extends Token {\r\n  override generate(): string {\r\n    return `${this.name}${COLON_MARK}${this.value}${SEMICOLON_MARK}`;\r\n  }\r\n}\r\n\r\nclass NestingRule<P extends object = {}> extends Token {\r\n  name = NESTING_MARK;\r\n  children: Children = [];\r\n\r\n  override generate(...args: Array<unknown>): string {\r\n    const className = args[0] as string | null;\r\n    const props = args[1] as P;\r\n    const fns = args[2] as Array<Function>;\r\n    let styles = `${this.value.replaceAll(SELF_MARK, `${DOT_MARK}${className}`)}${OPENING_CURLY_BRACE_MARK}`;\r\n    let keyframes = '';\r\n\r\n    for (const token of this.children) {\r\n      const [$styles, _, __, ___, $keyframes] = generate({ token, className, props, fns });\r\n\r\n      styles += $styles;\r\n      keyframes += $keyframes;\r\n    }\r\n\r\n    styles += `${CLOSING_CURLY_BRACE_MARK}${keyframes}`;\r\n\r\n    return styles;\r\n  }\r\n}\r\n\r\nclass MediaQueryRule<P extends object = {}> extends Token {\r\n  name = MEDIA_QUERY_MARK;\r\n  children: Children = [];\r\n\r\n  override generate(...args: Array<unknown>): string {\r\n    const className = args[0] as string | null;\r\n    const props = args[1] as P;\r\n    const fns = args[2] as Array<Function>;\r\n    let styles = className\r\n      ? `${this.value}${OPENING_CURLY_BRACE_MARK}${DOT_MARK}${className}${OPENING_CURLY_BRACE_MARK}`\r\n      : `${this.value}${OPENING_CURLY_BRACE_MARK}`;\r\n    let nesting = '';\r\n\r\n    for (const token of this.children) {\r\n      const [$styles, $nesting] = generate({ token, className, props, fns });\r\n\r\n      styles += $styles;\r\n      nesting += $nesting;\r\n    }\r\n\r\n    if (className) {\r\n      styles += `${CLOSING_CURLY_BRACE_MARK}${nesting}${CLOSING_CURLY_BRACE_MARK}`;\r\n    } else {\r\n      styles += `${nesting}${CLOSING_CURLY_BRACE_MARK}`;\r\n    }\r\n\r\n    return styles;\r\n  }\r\n}\r\n\r\nclass ContainerQueryRule<P extends object = {}> extends Token {\r\n  name = CONTAINER_QUERY_MARK;\r\n  children: Children = [];\r\n\r\n  override generate(...args: Array<unknown>): string {\r\n    const className = args[0] as string | null;\r\n    const props = args[1] as P;\r\n    const fns = args[2] as Array<Function>;\r\n    let styles = className\r\n      ? `${this.value}${OPENING_CURLY_BRACE_MARK}${DOT_MARK}${className}${OPENING_CURLY_BRACE_MARK}`\r\n      : `${this.value}${OPENING_CURLY_BRACE_MARK}`;\r\n    let nesting = '';\r\n\r\n    for (const token of this.children) {\r\n      const [$styles, $nesting] = generate({ token, className, props, fns });\r\n\r\n      styles += $styles;\r\n      nesting += $nesting;\r\n    }\r\n\r\n    if (className) {\r\n      styles += `${CLOSING_CURLY_BRACE_MARK}${nesting}${CLOSING_CURLY_BRACE_MARK}`;\r\n    } else {\r\n      styles += `${nesting}${CLOSING_CURLY_BRACE_MARK}`;\r\n    }\r\n\r\n    return styles;\r\n  }\r\n}\r\n\r\nclass KeyframesRule<P extends object = {}> extends Token {\r\n  name = KEYFRAMES_MARK;\r\n  children: Children = [];\r\n\r\n  override generate(...args: Array<unknown>): string {\r\n    const props = args[0] as P;\r\n    const fns = args[1] as Array<Function>;\r\n    let keyframes = `${this.value}${OPENING_CURLY_BRACE_MARK}`;\r\n\r\n    for (const token of this.children) {\r\n      const [$styles, $nesting] = generate({ token, props, fns });\r\n\r\n      keyframes += $styles;\r\n      keyframes += $nesting;\r\n    }\r\n\r\n    keyframes += `${CLOSING_CURLY_BRACE_MARK}`;\r\n\r\n    return keyframes;\r\n  }\r\n}\r\n\r\nclass FunctionRule<P extends object = {}> extends Token {\r\n  name = FUNCTION_MARK;\r\n  args: Array<number> = [];\r\n  style: StyleRule = null;\r\n  private end = '';\r\n  private isSealed = false;\r\n\r\n  add(idx: number) {\r\n    this.args.push(idx);\r\n  }\r\n\r\n  seal(end: string) {\r\n    this.isSealed = true;\r\n    this.end = end;\r\n  }\r\n\r\n  getIsSealed() {\r\n    return this.isSealed;\r\n  }\r\n\r\n  getEnd() {\r\n    return this.end;\r\n  }\r\n\r\n  generate(...args: Array<unknown>): Tuple {\r\n    const className = args[0] as string | null;\r\n    const props = args[1] as P;\r\n    const fns = args[2] as Array<Function>;\r\n    const styleExp = this.style;\r\n    const [idx, ...rest] = this.args;\r\n    const value = fns[idx](props);\r\n    let styles = '';\r\n    let nesting = '';\r\n    let media = '';\r\n    let container = '';\r\n    let keyframes = '';\r\n\r\n    if (detectIsStyleSheet(value)) {\r\n      for (const token of value.children) {\r\n        const [$styles, $nesting, $media, $container, $keyframes] = generate({ token, className, props, fns });\r\n\r\n        styles += $styles;\r\n        nesting += $nesting;\r\n        media += $media;\r\n        container += $container;\r\n        keyframes += $keyframes;\r\n      }\r\n    } else if (styleExp) {\r\n      const end = rest.reduce((acc, x) => (acc += BLANK_SPACE + fns[x](props)), '') + this.end;\r\n\r\n      if (detectIsKeyframes(value)) {\r\n        styleExp.value = replace(this.name, value.getName()) + end;\r\n        styles += styleExp.generate();\r\n        keyframes += value.getToken().generate(props, fns);\r\n      } else {\r\n        styleExp.value = replace(this.name, value) + end;\r\n        styles += styleExp.generate();\r\n      }\r\n    }\r\n\r\n    return [styles, nesting, media, container, keyframes];\r\n  }\r\n}\r\n\r\ntype GenerateOptions<P extends object> = {\r\n  className?: string;\r\n  props?: P;\r\n  fns?: Array<Function>;\r\n};\r\n\r\nclass StyleSheet<P extends object = {}> {\r\n  children: Children = [];\r\n\r\n  generate(options: GenerateOptions<P> = {}) {\r\n    const { className = null, props, fns } = options;\r\n    let styles = className ? `${DOT_MARK}${className}${OPENING_CURLY_BRACE_MARK}` : '';\r\n    let nesting = '';\r\n    let media = '';\r\n    let container = '';\r\n    let keyframes = '';\r\n\r\n    for (const token of this.children) {\r\n      const [$styles, $nesting, $media, $container, $keyframes] = generate({ token, className, props, fns });\r\n\r\n      styles += $styles;\r\n      nesting += $nesting;\r\n      media += $media;\r\n      container += $container;\r\n      keyframes += $keyframes;\r\n    }\r\n\r\n    if (className) {\r\n      styles += `${CLOSING_CURLY_BRACE_MARK}${nesting}${media}${container}${keyframes}`;\r\n    } else {\r\n      styles += `${nesting}${media}${container}${keyframes}`;\r\n    }\r\n\r\n    return styles;\r\n  }\r\n}\r\n\r\ntype GenerateProps<P extends object> = {\r\n  token: Token;\r\n  className?: string | null;\r\n  props?: P;\r\n  fns?: Array<Function>;\r\n};\r\n\r\nfunction generate<P extends object = {}>(options: GenerateProps<P>): Tuple {\r\n  const { token, className = null, props, fns } = options;\r\n  let styles = '';\r\n  let nesting = '';\r\n  let media = '';\r\n  let container = '';\r\n  let keyframes = '';\r\n\r\n  if (detectIsStyleRule(token)) {\r\n    styles += token.generate();\r\n  } else if (detectIsNestingRule(token)) {\r\n    nesting += token.generate(className, props, fns);\r\n  } else if (detectIsMediaQueryRule(token)) {\r\n    media += token.generate(className, props, fns);\r\n  } else if (detectIsContainerQueryRule(token)) {\r\n    container += token.generate(className, props, fns);\r\n  } else if (detectIsKeyframesRule(token)) {\r\n    keyframes += token.generate(props, fns);\r\n  } else if (detectIsFunctionRule(token)) {\r\n    const [$styles, $nesting, $media, $container, $keyframes] = token.generate(className, props, fns);\r\n\r\n    styles += $styles;\r\n    nesting += $nesting;\r\n    media += $media;\r\n    container += $container;\r\n    keyframes += $keyframes;\r\n  }\r\n\r\n  return [styles, nesting, media, container, keyframes];\r\n}\r\n\r\ntype Tuple = [string, string, string, string, string];\r\n\r\nexport type Parent = StyleSheet | Token;\r\n\r\nexport type Children = Array<Token>;\r\n\r\nconst detectIsToken = (x: unknown): x is Token => x instanceof Token;\r\n\r\nconst detectIsStyleRule = (x: unknown): x is StyleRule => x instanceof StyleRule;\r\n\r\nconst detectIsMediaQueryRule = (x: unknown): x is MediaQueryRule => x instanceof MediaQueryRule;\r\n\r\nconst detectIsContainerQueryRule = (x: unknown): x is ContainerQueryRule => x instanceof ContainerQueryRule;\r\n\r\nconst detectIsKeyframesRule = (x: unknown): x is KeyframesRule => x instanceof KeyframesRule;\r\n\r\nconst detectIsNestingRule = (x: unknown): x is NestingRule => x instanceof NestingRule;\r\n\r\nconst detectIsFunctionRule = (x: unknown): x is FunctionRule => x instanceof FunctionRule;\r\n\r\nconst detectIsStyleSheet = (x: unknown): x is StyleSheet => x instanceof StyleSheet;\r\n\r\nconst replace = (target: string, x: string) => target.replace(FUNCTION_MARK, x);\r\n\r\nexport {\r\n  StyleSheet,\r\n  StyleRule,\r\n  MediaQueryRule,\r\n  ContainerQueryRule,\r\n  KeyframesRule,\r\n  NestingRule,\r\n  FunctionRule,\r\n  detectIsStyleSheet,\r\n  detectIsStyleRule,\r\n  detectIsMediaQueryRule,\r\n  detectIsContainerQueryRule,\r\n  detectIsKeyframesRule,\r\n  detectIsNestingRule,\r\n  detectIsFunctionRule,\r\n};\r\n","import type { DarkElement, Subscribe, SubscriberWithValue, SlotProps, KeyProps } from '../shared';\r\nimport { type ComponentFactory, component } from '../component';\r\nimport type { Fiber } from '../fiber';\r\nimport { detectIsFunction } from '../utils';\r\nimport { $$scope } from '../scope';\r\nimport { useEffect } from '../use-effect';\r\nimport { useMemo } from '../use-memo';\r\nimport { useUpdate } from '../use-update';\r\n\r\ntype CreateContextOptions = {\r\n  displayName?: string;\r\n};\r\n\r\nfunction createContext<T>(defaultValue: T, options?: CreateContextOptions): Context<T> {\r\n  const { displayName = 'Context' } = options || {};\r\n  const context: Context<T> = {\r\n    displayName,\r\n    defaultValue,\r\n    Provider: null,\r\n    Consumer: null,\r\n  };\r\n\r\n  context.Provider = createProvider(context, defaultValue, displayName);\r\n  context.Consumer = createConsumer(context, displayName);\r\n\r\n  return context;\r\n}\r\n\r\nfunction createProvider<T>(context: Context<T>, defaultValue: T, displayName: string) {\r\n  return component<ContexProviderProps<T>>(\r\n    ({ value = defaultValue, slot }) => {\r\n      const fiber = $$scope().getCursorFiber();\r\n\r\n      if (!fiber.provider) {\r\n        const providerValue: ContextProviderValue<T> = {\r\n          value,\r\n          subscribers: new Set(),\r\n          subscribe: (subscriber: (value: T) => void) => {\r\n            providerValue.subscribers.add(subscriber);\r\n\r\n            return () => providerValue.subscribers.delete(subscriber);\r\n          },\r\n        };\r\n\r\n        fiber.provider = new Map();\r\n        fiber.provider.set(context, providerValue);\r\n      }\r\n\r\n      const provider = fiber.provider.get(context);\r\n\r\n      useEffect(() => {\r\n        provider.subscribers.forEach(fn => fn(value));\r\n      }, [value]);\r\n\r\n      provider.value = value;\r\n\r\n      return slot;\r\n    },\r\n    { displayName: `${displayName}.Provider` },\r\n  );\r\n}\r\n\r\ntype ConsumerProps<T> = {\r\n  slot: (value: T) => DarkElement;\r\n};\r\n\r\nfunction createConsumer<T>(context: Context<T>, displayName: string) {\r\n  return component<ConsumerProps<T>>(\r\n    ({ slot }) => {\r\n      const value = useContext(context);\r\n\r\n      return detectIsFunction(slot) ? slot(value) : null;\r\n    },\r\n    { displayName: `${displayName}.Consumer` },\r\n  );\r\n}\r\n\r\nfunction useContext<T>(context: Context<T>): T {\r\n  const { defaultValue } = context;\r\n  const fiber = $$scope().getCursorFiber();\r\n  const provider = useMemo(() => getProvider<T>(context, fiber), []);\r\n  const value = provider ? provider.value : defaultValue;\r\n  const update = useUpdate();\r\n  const scope = useMemo(() => ({ value }), []);\r\n  const hasProvider = Boolean(provider);\r\n\r\n  useEffect(() => {\r\n    if (!hasProvider) return;\r\n    const unsubscribe = provider.subscribe((value: T) => {\r\n      if (!Object.is(scope.value, value)) {\r\n        update();\r\n      }\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, [hasProvider]);\r\n\r\n  scope.value = value;\r\n\r\n  return value;\r\n}\r\n\r\nfunction getProvider<T>(context: Context<T>, fiber: Fiber): ContextProviderValue<T> {\r\n  let nextFiber = fiber;\r\n\r\n  while (nextFiber) {\r\n    if (nextFiber.provider && nextFiber.provider.get(context)) {\r\n      return nextFiber.provider.get(context) as ContextProviderValue<T>;\r\n    }\r\n\r\n    nextFiber = nextFiber.parent;\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\ntype ContexProviderProps<T> = {\r\n  value: T;\r\n} & SlotProps &\r\n  KeyProps;\r\n\r\nexport type Context<T = unknown> = {\r\n  Provider: ComponentFactory<ContexProviderProps<T>>;\r\n  Consumer: ComponentFactory<SlotProps<(value: T) => DarkElement>>;\r\n  displayName?: string;\r\n  defaultValue: T;\r\n};\r\n\r\nexport type ContextProviderValue<T = unknown> = {\r\n  value: T;\r\n  subscribers: Set<(value: T) => void>;\r\n  subscribe: Subscribe<SubscriberWithValue<T>>;\r\n};\r\n\r\nexport { createContext, useContext };\r\n","import { type DarkElement, createContext, useContext, component } from '@dark-engine/core';\r\n\r\nimport { type DefaultTheme } from '../';\r\n\r\n// styled.d.ts\r\n// type Theme = {\r\n//   color1: string;\r\n//   color2: string;\r\n//   color3: string;\r\n// };\r\n// declare module '@dark-engine/styled' {\r\n//   export interface DefaultTheme extends Theme {}\r\n// }\r\n\r\nexport type ThemeProps = { theme: DefaultTheme };\r\n\r\nexport type ThemeContextValue = DefaultTheme;\r\n\r\nconst ThemeContext = createContext<ThemeContextValue>(null, { displayName: 'Theme' });\r\n\r\nconst useTheme = () => useContext(ThemeContext);\r\n\r\ntype ThemeProviderProps = {\r\n  theme: DefaultTheme;\r\n  slot: DarkElement;\r\n};\r\n\r\nconst ThemeProvider = component<ThemeProviderProps>(({ theme, slot }) => {\r\n  return ThemeContext.Provider({ value: theme, slot });\r\n});\r\n\r\nexport { ThemeProvider, useTheme };\r\n","import { type DarkElement, type Callback, createContext, useContext, component } from '@dark-engine/core';\r\n\r\nexport enum STYLE_LEVEL {\r\n  GLOBAL,\r\n  COMPONENT,\r\n}\r\n\r\nclass Manager {\r\n  private styles = createStyles();\r\n  private resets = new Set<Callback>();\r\n\r\n  collectGlobalStyle(css: string) {\r\n    this.styles[STYLE_LEVEL.GLOBAL].add(css);\r\n  }\r\n\r\n  collectComponentStyle(css: string) {\r\n    this.styles[STYLE_LEVEL.COMPONENT].add(css);\r\n  }\r\n\r\n  getStyles() {\r\n    return this.styles;\r\n  }\r\n\r\n  reset(fn: Callback) {\r\n    this.resets.add(fn);\r\n  }\r\n\r\n  seal() {\r\n    this.styles = createStyles();\r\n    this.resets.forEach(x => x());\r\n    this.resets = new Set();\r\n  }\r\n}\r\n\r\nconst createStyles = () => ({\r\n  [STYLE_LEVEL.GLOBAL]: new Set<string>(),\r\n  [STYLE_LEVEL.COMPONENT]: new Set<string>(),\r\n});\r\n\r\nconst ManagerContext = createContext<Manager>(null, { displayName: 'Manager' });\r\n\r\nfunction useManager() {\r\n  return useContext(ManagerContext);\r\n}\r\n\r\ntype ThemeProviderProps = {\r\n  manager: Manager;\r\n  slot: DarkElement;\r\n};\r\n\r\nconst ManagerProvider = component<ThemeProviderProps>(({ manager, slot }) => {\r\n  return ManagerContext.Provider({ value: manager, slot });\r\n});\r\n\r\nexport { Manager, useManager, ManagerProvider };\r\n","import {\r\n  OPENING_CURLY_BRACE_MARK,\r\n  CLOSING_CURLY_BRACE_MARK,\r\n  COLON_MARK,\r\n  SEMICOLON_MARK,\r\n  MEDIA_QUERY_MARK,\r\n  CONTAINER_QUERY_MARK,\r\n  KEYFRAMES_MARK,\r\n  FUNCTION_MARK,\r\n  SINGLE_LINE_COMMENT_START_MARK,\r\n  SINGLE_LINE_COMMENT_END_MARK,\r\n  MULTI_LINE_COMMENT_START_MARK,\r\n  MULTI_LINE_COMMENT_END_MARK,\r\n  OPENING_PARENTHESIS_MARK,\r\n  CLOSING_PARENTHESIS_MARK,\r\n  URL_FN_MARK,\r\n} from '../constants';\r\nimport {\r\n  type Children,\r\n  StyleSheet,\r\n  StyleRule,\r\n  MediaQueryRule,\r\n  ContainerQueryRule,\r\n  KeyframesRule,\r\n  NestingRule,\r\n  FunctionRule,\r\n  detectIsStyleSheet,\r\n  detectIsStyleRule,\r\n  detectIsMediaQueryRule,\r\n  detectIsContainerQueryRule,\r\n  detectIsKeyframesRule,\r\n  detectIsNestingRule,\r\n  detectIsFunctionRule,\r\n} from '../tokens';\r\n\r\nfunction parse<P extends object>(css: string) {\r\n  const stylesheet = new StyleSheet<P>();\r\n  const stack: Array<NestingRule | MediaQueryRule> = [];\r\n  let buffer = '';\r\n  let end = '';\r\n  let fnIdx = -1;\r\n  let isSingleLineComment = false;\r\n  let isMultiLineComment = false;\r\n  let isPropValue = false;\r\n  let isUrl = false;\r\n\r\n  for (let i = 0; i < css.length; i++) {\r\n    const char = css[i];\r\n    const parent = stack[stack.length - 1] || stylesheet;\r\n    const last = parent.children[parent.children.length - 1];\r\n\r\n    buffer += char;\r\n\r\n    if (!isSingleLineComment && detectHasSingleLineCommentStartMark(buffer)) {\r\n      isSingleLineComment = !isUrl;\r\n    } else if (isSingleLineComment && detectHasSingleLineCommentEndMark(buffer)) {\r\n      isSingleLineComment = false;\r\n      buffer = '';\r\n    }\r\n\r\n    if (!isMultiLineComment && detectHasMultiLineCommentStartMark(buffer)) {\r\n      isMultiLineComment = true;\r\n      end = detectIsStyleRule(last) ? createEnd(buffer) : '';\r\n    } else if (isMultiLineComment && detectHasMultiLineCommentEndMark(buffer)) {\r\n      isMultiLineComment = false;\r\n      buffer = '';\r\n    }\r\n\r\n    if (isSingleLineComment || isMultiLineComment) continue;\r\n\r\n    if (detectHasFunctionMark(buffer)) {\r\n      const token = new FunctionRule();\r\n\r\n      if (detectIsFunctionRule(last) && !last.getIsSealed() && last.style) {\r\n        last.add(++fnIdx);\r\n        buffer = '';\r\n        continue;\r\n      }\r\n\r\n      token.add(++fnIdx);\r\n      token.parent = parent;\r\n      token.markAsDynamic();\r\n\r\n      if (detectIsStyleRule(last) && !last.value) {\r\n        token.style = last;\r\n        token.name = buffer.trim();\r\n        last.normalize();\r\n        last.isDynamic = true;\r\n        parent.children[parent.children.length - 1] = token;\r\n      } else {\r\n        parent.children.push(token);\r\n      }\r\n\r\n      buffer = '';\r\n      continue;\r\n    }\r\n\r\n    switch (char) {\r\n      case OPENING_CURLY_BRACE_MARK:\r\n        {\r\n          const token = detectHasMediaQueryMark(buffer)\r\n            ? new MediaQueryRule()\r\n            : detectHasContainerQueryMark(buffer)\r\n            ? new ContainerQueryRule()\r\n            : detectHasKeyframesMark(buffer)\r\n            ? new KeyframesRule()\r\n            : new NestingRule();\r\n          const canNest =\r\n            detectIsMediaQueryRule(token) || detectIsContainerQueryRule(token) || detectIsKeyframesRule(token)\r\n              ? detectIsStyleSheet(parent)\r\n              : detectIsNestingRule(token)\r\n              ? detectIsStyleSheet(parent) ||\r\n                detectIsMediaQueryRule(parent) ||\r\n                detectIsContainerQueryRule(parent) ||\r\n                detectIsKeyframesRule(parent)\r\n              : false;\r\n\r\n          if (!canNest) {\r\n            throw new Error('Illegal style nesting!');\r\n          }\r\n\r\n          token.value = sub(buffer);\r\n          token.normalize();\r\n          token.parent = parent;\r\n\r\n          if (!token.value) {\r\n            throw new Error('Empty style nesting!');\r\n          }\r\n\r\n          parent.children.push(token);\r\n          stack.push(token);\r\n          buffer = '';\r\n        }\r\n        break;\r\n      case CLOSING_CURLY_BRACE_MARK:\r\n        stack.pop();\r\n        buffer = '';\r\n        break;\r\n      case COLON_MARK:\r\n        {\r\n          if (!detectIsPropName(buffer, i, css, parent.children)) continue;\r\n          const token = new StyleRule();\r\n\r\n          token.name = sub(buffer);\r\n          token.parent = parent;\r\n          parent.children.push(token);\r\n        }\r\n        buffer = '';\r\n        isPropValue = true;\r\n        break;\r\n      case SEMICOLON_MARK:\r\n        if (!last) {\r\n          throw new Error('Incorrect style!');\r\n        }\r\n\r\n        if (detectIsFunctionRule(last)) {\r\n          last.seal(sub(buffer));\r\n          buffer = '';\r\n          continue;\r\n        }\r\n\r\n        last.value = end || sub(buffer);\r\n        last.normalize();\r\n\r\n        buffer = '';\r\n        end = '';\r\n        isPropValue = false;\r\n        break;\r\n      case OPENING_PARENTHESIS_MARK:\r\n        if (isPropValue && detectHasUrlFnMark(buffer)) {\r\n          isUrl = true;\r\n        }\r\n        break;\r\n      case CLOSING_PARENTHESIS_MARK:\r\n        isUrl = false;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  return stylesheet;\r\n}\r\n\r\nfunction detectIsPropName(name: string, idx: number, css: string, children: Children) {\r\n  const last = children[children.length - 1];\r\n  if (detectHasMediaQueryMark(name) || detectHasContainerQueryMark(name)) return false;\r\n  if (detectIsStyleRule(last) && !last.value) return false;\r\n\r\n  for (let i = idx; i < css.length; i++) {\r\n    const char = css[i];\r\n\r\n    if (char === OPENING_CURLY_BRACE_MARK) return false;\r\n    if (char === SEMICOLON_MARK) return true;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nconst detectHasSingleLineCommentStartMark = (x: string) => x.endsWith(SINGLE_LINE_COMMENT_START_MARK);\r\n\r\nconst detectHasSingleLineCommentEndMark = (x: string) => x.endsWith(SINGLE_LINE_COMMENT_END_MARK);\r\n\r\nconst detectHasMultiLineCommentStartMark = (x: string) => x.endsWith(MULTI_LINE_COMMENT_START_MARK);\r\n\r\nconst detectHasMultiLineCommentEndMark = (x: string) => x.endsWith(MULTI_LINE_COMMENT_END_MARK);\r\n\r\nconst detectHasFunctionMark = (x: string) => x.endsWith(FUNCTION_MARK);\r\n\r\nconst detectHasUrlFnMark = (x: string) => x.endsWith(URL_FN_MARK + OPENING_PARENTHESIS_MARK);\r\n\r\nconst detectHasMediaQueryMark = (x: string) => x.trim().startsWith(MEDIA_QUERY_MARK);\r\n\r\nconst detectHasContainerQueryMark = (x: string) => x.trim().startsWith(CONTAINER_QUERY_MARK);\r\n\r\nconst detectHasKeyframesMark = (x: string) => x.trim().startsWith(KEYFRAMES_MARK);\r\n\r\nconst sub = (x: string) => x.substring(0, x.length - 1);\r\n\r\nconst createEnd = (x: string) => x.replace(MULTI_LINE_COMMENT_START_MARK, '').trim();\r\n\r\nexport { parse };\r\n","const SEED = 5381;\r\nconst SIZE = 6;\r\nconst map = { 0: 'a', 1: 'b', 2: 'c', 3: 'd', 4: 'e', 5: 'f', 6: 'g', 7: 'h', 8: 'i', 9: 'j' };\r\n\r\nfunction phash(h: number, x: string) {\r\n  let i = x.length;\r\n\r\n  while (i) {\r\n    h = (h * 33) ^ x.charCodeAt(--i);\r\n  }\r\n\r\n  return h;\r\n}\r\n\r\nfunction hash(x: string) {\r\n  const source = phash(SEED, x);\r\n  const hash = String(Math.abs(source))\r\n    .slice(0, SIZE)\r\n    .split('')\r\n    .map(x => map[x])\r\n    .join('');\r\n\r\n  return hash;\r\n}\r\n\r\nexport { hash };\r\n","import {\r\n  type ComponentFactory,\r\n  type TagVirtualNodeFactory,\r\n  type StandardComponentProps,\r\n  type Component,\r\n  type VirtualNode,\r\n  View,\r\n  component,\r\n  forwardRef,\r\n  useMemo,\r\n  detectIsString,\r\n  detectIsFunction,\r\n  detectIsTextBased,\r\n  detectIsServer,\r\n  useInsertionEffect,\r\n} from '@dark-engine/core';\r\n\r\nimport {\r\n  detectIsBrowser,\r\n  mapProps,\r\n  mergeClassNames,\r\n  getElement,\r\n  getElements,\r\n  createStyleElement,\r\n  setAttr,\r\n  append,\r\n  mergeTemplates,\r\n} from '../utils';\r\nimport {\r\n  CLASS_NAME_PREFIX,\r\n  FUNCTION_MARK,\r\n  DOT_MARK,\r\n  STYLED_ATTR,\r\n  COMPONENTS_ATTR_VALUE,\r\n  INTERLEAVE_COMPONENTS_ATTR_VALUE,\r\n  BLANK_SPACE,\r\n} from '../constants';\r\nimport { type KeyframesRule, StyleSheet, detectIsStyleSheet, detectIsKeyframesRule } from '../tokens';\r\nimport { type Keyframes, detectIsKeyframes } from '../keyframes';\r\nimport { type ThemeProps, useTheme } from '../theme';\r\nimport { type TextBased } from '../shared';\r\nimport { useManager } from '../server/manager';\r\nimport { parse } from '../parse';\r\nimport { hash } from '../hash';\r\n\r\nlet cache: Map<string, [string, string]> = null;\r\nlet injections: Set<string> = null;\r\nlet tag: HTMLStyleElement = null;\r\nlet isLoaded = false;\r\nconst $$styled = Symbol('styled');\r\n\r\nsetupGlobal();\r\nfunction styled<P extends object, T extends object = {}>(tagName: string | ComponentFactory<P>) {\r\n  const factory = detectIsString(tagName) ? (props: P) => View({ as: tagName, ...props }) : tagName;\r\n\r\n  if (!isLoaded && detectIsBrowser()) {\r\n    reuse(getInterleavedElements(), createTag);\r\n    isLoaded = true;\r\n  }\r\n\r\n  return createStyledComponent<P & T>(factory as Factory<P & T>);\r\n}\r\n\r\nfunction createStyledComponent<P extends StyledProps>(factory: Factory<P>) {\r\n  let transform: TransformFn<P> = x => x;\r\n  const isExtending = detectIsStyled(factory);\r\n  const config = isExtending ? getExtendingConfig(factory as StyledComponentFactory<P>) : null;\r\n  const fn = <T extends P>(source: TemplateStringsArray, ...args: Args<T & ThemeProps>) => {\r\n    const $source = isExtending ? mergeTemplates(config.source, source) : source;\r\n    const $args = isExtending ? [...config.args, ...args] : args;\r\n    const $transform = isExtending ? (p: T) => transform(config.transform(p)) : transform;\r\n    const fns = filterArgs<T>($args);\r\n    const [sheet, sheets] = slice<T>(css($source, ...$args));\r\n    const [baseName, baseStyle, baseKeyframes] = generate({ sheet, cache });\r\n    const styled = forwardRef<T, unknown>(\r\n      component((props, ref) => {\r\n        const { as: component, ...rest } = props;\r\n        const theme = useTheme();\r\n        const isSwap = detectIsFunction(component);\r\n        const $props = (isSwap ? rest : props) as unknown as T;\r\n        const $factory = isSwap ? component : isExtending ? config.factory : factory;\r\n        const [className, styles, keyframes] = useMemo(() => {\r\n          const [names, styles, keyframes] = sheets.reduce(\r\n            (acc, sheet) => {\r\n              const [className, style, keyframes] = generate({ sheet, cache, props: { ...props, theme }, fns });\r\n              const [names, styles, keyframesList] = acc;\r\n\r\n              names.push(className);\r\n              styles.push(style);\r\n              keyframesList.push(keyframes);\r\n\r\n              return acc;\r\n            },\r\n            [[], [baseStyle], [baseKeyframes]] as [Array<string>, Array<string>, Array<string>],\r\n          );\r\n          const className = mergeClassNames([...getClassNamesFrom(props), baseName, ...names]);\r\n\r\n          return [className, filter(styles, injections), filter(keyframes, injections)] as [\r\n            string,\r\n            Array<string>,\r\n            Array<string>,\r\n          ];\r\n        }, [...mapProps(props), theme]);\r\n\r\n        useInsertionEffect(() => {\r\n          if (!tag) {\r\n            const $tag = getTag();\r\n\r\n            if ($tag) {\r\n              tag = $tag; // after hydration\r\n              return;\r\n            } else {\r\n              tag = createTag();\r\n            }\r\n          }\r\n\r\n          styles.forEach(css => inject(css, tag));\r\n          keyframes.forEach(css => inject(css, tag));\r\n        }, [...styles, ...keyframes]);\r\n\r\n        if (detectIsServer()) {\r\n          const manager = useManager(); // special case of hook using, should be last in order\r\n\r\n          styles.forEach(css => manager.collectComponentStyle(css));\r\n          keyframes.forEach(css => manager.collectComponentStyle(css));\r\n          manager.reset(setupGlobal);\r\n        }\r\n\r\n        if (detectIsFunction($props.slot)) {\r\n          $props.slot = $props.slot((x: string) => `${className}_${x}`);\r\n        }\r\n\r\n        return $factory({ ...$transform($props), ref, className });\r\n      }),\r\n    ) as StyledComponentFactory<T>;\r\n\r\n    styled[$$styled] = {\r\n      className: baseName,\r\n      source: $source,\r\n      args: $args,\r\n      factory: (config?.factory || factory) as Factory<T>,\r\n      transform: config ? p => transform(config.transform(p)) : transform,\r\n    };\r\n\r\n    return styled;\r\n  };\r\n\r\n  fn.attrs = (t: TransformFn<P>) => {\r\n    transform = detectIsFunction(t) ? t : transform;\r\n\r\n    return fn;\r\n  };\r\n\r\n  return fn;\r\n}\r\n\r\nfunction filter(styles: Array<string>, injections: Set<string>) {\r\n  const $styles: Array<string> = [];\r\n\r\n  for (const css of styles) {\r\n    if (!injections.has(css)) {\r\n      $styles.push(css);\r\n      injections.add(css);\r\n    }\r\n  }\r\n\r\n  return $styles;\r\n}\r\n\r\nfunction setupGlobal() {\r\n  cache = new Map();\r\n  injections = new Set();\r\n  tag = null;\r\n  isLoaded = false;\r\n}\r\n\r\nfunction getExtendingConfig<P extends object>(factory: StyledComponentFactory<P>) {\r\n  const { className, ...rest } = factory[$$styled];\r\n  const config: ExtendingConfig<P> = rest;\r\n\r\n  return config;\r\n}\r\n\r\ntype GenerateOptions<P extends object> = {\r\n  sheet: StyleSheet<P>;\r\n  cache: Map<string, [string, string]>;\r\n  props?: P;\r\n  fns?: Array<Function>;\r\n};\r\n\r\nfunction generate<P extends object>(options: GenerateOptions<P>): [string, string, string] {\r\n  const { sheet: $sheet, cache, props, fns } = options;\r\n  const [sheet, rules] = split($sheet);\r\n  const key = sheet.generate({ className: FUNCTION_MARK, props, fns });\r\n  const item = cache.get(key);\r\n  const className = item ? item[0] : genClassName(key);\r\n  const css = item ? item[1] : key.replaceAll(FUNCTION_MARK, className);\r\n  let style = '';\r\n  let keyframes = '';\r\n\r\n  style += css;\r\n  cache.set(key, [className, css]);\r\n\r\n  for (const rule of rules) {\r\n    keyframes += rule.generate();\r\n  }\r\n\r\n  return [className, style, keyframes];\r\n}\r\n\r\nfunction split<P extends object>(source: StyleSheet<P>): [StyleSheet<P>, Array<KeyframesRule<P>>] {\r\n  const sheet = new StyleSheet<P>();\r\n  const rules: Array<KeyframesRule<P>> = [];\r\n\r\n  for (const token of source.children) {\r\n    if (detectIsKeyframesRule(token)) {\r\n      rules.push(token);\r\n    } else {\r\n      sheet.children.push(token);\r\n    }\r\n  }\r\n\r\n  return [sheet, rules];\r\n}\r\n\r\nfunction slice<P extends object>(source: StyleSheet<P>): [StyleSheet<P>, Array<StyleSheet<P>>] {\r\n  const sheet = new StyleSheet<P>();\r\n  const sheets: Array<StyleSheet> = [];\r\n\r\n  for (const token of source.children) {\r\n    if (token.isDynamic) {\r\n      const style = new StyleSheet<P>();\r\n\r\n      style.children.push(token);\r\n      sheets.push(style);\r\n    } else {\r\n      sheet.children.push(token);\r\n    }\r\n  }\r\n\r\n  return [sheet, sheets];\r\n}\r\n\r\nfunction join<P>(strings: TemplateStringsArray, args: Args<P>) {\r\n  let joined = '';\r\n  let keyframes = '';\r\n\r\n  for (let i = 0; i < strings.length; i++) {\r\n    const arg = args[i];\r\n\r\n    joined += strings[i];\r\n\r\n    if (detectIsStyled(arg)) {\r\n      joined += `${DOT_MARK}${arg[$$styled].className}`;\r\n    } else if (detectIsStyleSheet(arg)) {\r\n      joined += arg.generate();\r\n    } else if (detectIsKeyframes(arg)) {\r\n      joined += arg.getName();\r\n      keyframes += arg.getToken().generate();\r\n    } else if (detectIsFunction(arg)) {\r\n      joined += FUNCTION_MARK;\r\n    } else if (detectIsTextBased(arg)) {\r\n      joined += arg;\r\n    }\r\n  }\r\n\r\n  joined += keyframes;\r\n\r\n  return joined;\r\n}\r\n\r\nfunction createTag() {\r\n  const tag = createStyleElement();\r\n\r\n  setAttr(tag, STYLED_ATTR, COMPONENTS_ATTR_VALUE);\r\n  append(document.head, tag);\r\n\r\n  return tag;\r\n}\r\n\r\nfunction inject(css: string, tag: HTMLStyleElement) {\r\n  tag.textContent = `${tag.textContent}${css}`;\r\n}\r\n\r\nfunction reuse(elements: Array<HTMLStyleElement>, createTag: () => HTMLStyleElement) {\r\n  if (elements.length === 0) return;\r\n  const tag = createTag();\r\n  let content = '';\r\n\r\n  for (const element of elements) {\r\n    content += element.textContent;\r\n    element.remove();\r\n  }\r\n\r\n  tag.textContent = content;\r\n}\r\n\r\nfunction getInterleavedElements() {\r\n  return getElements(`[${STYLED_ATTR}=\"${INTERLEAVE_COMPONENTS_ATTR_VALUE}\"]`) as Array<HTMLStyleElement>;\r\n}\r\n\r\nconst getTag = () => getElement(`[${STYLED_ATTR}=\"${COMPONENTS_ATTR_VALUE}\"]`) as HTMLStyleElement;\r\n\r\nconst css = <P extends object>(strings: TemplateStringsArray, ...args: Args<P>) => parse<P>(join(strings, args));\r\n\r\nconst getClassNamesFrom = (props: StyledProps) => (props.class || props.className || '').split(BLANK_SPACE);\r\n\r\nconst genClassName = (key: string) => `${CLASS_NAME_PREFIX}-${hash(key)}`;\r\n\r\nconst detectIsStyled = (x: unknown): x is StyledComponentFactory => detectIsFunction(x) && Boolean(x[$$styled]);\r\n\r\nconst filterArgs = <P>(args: Args<unknown>) =>\r\n  args.filter(x => detectIsFunction(x) && !detectIsStyled(x)) as DynamicArgs<P>;\r\n\r\ntype Factory<P extends object> = ComponentFactory<P> | ((props: P) => TagVirtualNodeFactory);\r\n\r\ntype ClassNameFn = (className: string) => string;\r\n\r\ntype StyledElement = Component | VirtualNode | string | Array<Component | VirtualNode | string>;\r\n\r\ntype StyledProps = {\r\n  as?: string | ComponentFactory;\r\n  class?: string;\r\n  className?: string;\r\n  style?: string | Record<string, string>;\r\n  slot?: ((fn: ClassNameFn) => StyledElement) | StyledElement;\r\n};\r\n\r\ntype ExtendingConfig<P extends object = {}> = {\r\n  source: TemplateStringsArray;\r\n  args: Args<P>;\r\n  factory: Factory<P>;\r\n  transform: (x: P) => P;\r\n};\r\n\r\ntype TransformFn<P> = (p: P) => any;\r\n\r\ntype DynamicArgs<P> = Array<ArgFn<P>>;\r\n\r\ntype ArgFn<P> = Function | ((p: P) => TextBased | false);\r\n\r\nexport type Args<P> = Array<TextBased | ArgFn<P> | StyleSheet | Keyframes>;\r\n\r\nexport type StyledComponentFactory<P extends object = {}> = {\r\n  [$$styled]: {\r\n    className: string;\r\n  } & ExtendingConfig<P>;\r\n} & ComponentFactory<P & StandardComponentProps & StyledProps>;\r\n\r\nstyled.a = styled('a');\r\nstyled.abbr = styled('abbr');\r\nstyled.address = styled('address');\r\nstyled.area = styled('area');\r\nstyled.article = styled('article');\r\nstyled.aside = styled('aside');\r\nstyled.audio = styled('audio');\r\nstyled.b = styled('b');\r\nstyled.base = styled('base');\r\nstyled.bdi = styled('bdi');\r\nstyled.bdo = styled('bdo');\r\nstyled.blockquote = styled('blockquote');\r\nstyled.body = styled('body');\r\nstyled.br = styled('br');\r\nstyled.button = styled('button');\r\nstyled.canvas = styled('canvas');\r\nstyled.caption = styled('caption');\r\nstyled.cite = styled('cite');\r\nstyled.code = styled('code');\r\nstyled.col = styled('col');\r\nstyled.colgroup = styled('colgroup');\r\nstyled.data = styled('data');\r\nstyled.datalist = styled('datalist');\r\nstyled.dd = styled('dd');\r\nstyled.del = styled('del');\r\nstyled.details = styled('details');\r\nstyled.dfn = styled('dfn');\r\nstyled.dialog = styled('dialog');\r\nstyled.div = styled('div');\r\nstyled.dl = styled('dl');\r\nstyled.dt = styled('dt');\r\nstyled.em = styled('em');\r\nstyled.embed = styled('embed');\r\nstyled.fieldset = styled('fieldset');\r\nstyled.figcaption = styled('figcaption');\r\nstyled.figure = styled('figure');\r\nstyled.footer = styled('footer');\r\nstyled.form = styled('form');\r\nstyled.h1 = styled('h1');\r\nstyled.h2 = styled('h2');\r\nstyled.h3 = styled('h3');\r\nstyled.h4 = styled('h4');\r\nstyled.h5 = styled('h5');\r\nstyled.h6 = styled('h6');\r\nstyled.head = styled('head');\r\nstyled.header = styled('header');\r\nstyled.hgroup = styled('hgroup');\r\nstyled.hr = styled('hr');\r\nstyled.html = styled('html');\r\nstyled.i = styled('i');\r\nstyled.iframe = styled('iframe');\r\nstyled.img = styled('img');\r\nstyled.input = styled('input');\r\nstyled.ins = styled('ins');\r\nstyled.kbd = styled('kbd');\r\nstyled.label = styled('label');\r\nstyled.legend = styled('legend');\r\nstyled.li = styled('li');\r\nstyled.link = styled('link');\r\nstyled.main = styled('main');\r\nstyled.map = styled('map');\r\nstyled.mark = styled('mark');\r\nstyled.menu = styled('menu');\r\nstyled.meta = styled('meta');\r\nstyled.meter = styled('meter');\r\nstyled.nav = styled('nav');\r\nstyled.noscript = styled('noscript');\r\nstyled.object = styled('object');\r\nstyled.ol = styled('ol');\r\nstyled.optgroup = styled('optgroup');\r\nstyled.option = styled('option');\r\nstyled.output = styled('output');\r\nstyled.p = styled('p');\r\nstyled.param = styled('param');\r\nstyled.picture = styled('picture');\r\nstyled.pre = styled('pre');\r\nstyled.progress = styled('progress');\r\nstyled.q = styled('q');\r\nstyled.rp = styled('rp');\r\nstyled.rt = styled('rt');\r\nstyled.ruby = styled('ruby');\r\nstyled.s = styled('s');\r\nstyled.samp = styled('samp');\r\nstyled.script = styled('script');\r\nstyled.section = styled('section');\r\nstyled.select = styled('select');\r\nstyled.small = styled('small');\r\nstyled.source = styled('source');\r\nstyled.span = styled('span');\r\nstyled.strong = styled('strong');\r\nstyled.style = styled('style');\r\nstyled.sub = styled('sub');\r\nstyled.summary = styled('summary');\r\nstyled.sup = styled('sup');\r\nstyled.table = styled('table');\r\nstyled.tbody = styled('tbody');\r\nstyled.td = styled('td');\r\nstyled.template = styled('template');\r\nstyled.textarea = styled('textarea');\r\nstyled.tfoot = styled('tfoot');\r\nstyled.th = styled('th');\r\nstyled.thead = styled('thead');\r\nstyled.time = styled('time');\r\nstyled.title = styled('title');\r\nstyled.tr = styled('tr');\r\nstyled.track = styled('track');\r\nstyled.u = styled('u');\r\nstyled.ul = styled('ul');\r\nstyled.var = styled('var');\r\nstyled.video = styled('video');\r\nstyled.wbr = styled('wbr');\r\nstyled.svg = styled('svg');\r\nstyled.circle = styled('circle');\r\nstyled.clipPath = styled('clipPath');\r\nstyled.defs = styled('defs');\r\nstyled.desc = styled('desc');\r\nstyled.ellipse = styled('ellipse');\r\nstyled.feBlend = styled('feBlend');\r\nstyled.feColorMatrix = styled('feColorMatrix');\r\nstyled.feComponentTransfer = styled('feComponentTransfer');\r\nstyled.feComposite = styled('feComposite');\r\nstyled.feConvolveMatrix = styled('feConvolveMatrix');\r\nstyled.feDiffuseLighting = styled('feDiffuseLighting');\r\nstyled.feDisplacementMap = styled('feDisplacementMap');\r\nstyled.feDistantLight = styled('feDistantLight');\r\nstyled.feFlood = styled('feFlood');\r\nstyled.feFuncA = styled('feFuncA');\r\nstyled.feFuncB = styled('feFuncB');\r\nstyled.feFuncG = styled('feFuncG');\r\nstyled.feFuncR = styled('feFuncR');\r\nstyled.feGaussianBlur = styled('feGaussianBlur');\r\nstyled.feImage = styled('feImage');\r\nstyled.feMerge = styled('feMerge');\r\nstyled.feMergeNode = styled('feMergeNode');\r\nstyled.feMorphology = styled('feMorphology');\r\nstyled.feOffset = styled('feOffset');\r\nstyled.fePointLight = styled('fePointLight');\r\nstyled.feSpecularLighting = styled('feSpecularLighting');\r\nstyled.feSpotLight = styled('feSpotLight');\r\nstyled.feTile = styled('feTile');\r\nstyled.feTurbulence = styled('feTurbulence');\r\nstyled.filter = styled('filter');\r\nstyled.g = styled('g');\r\nstyled.image = styled('image');\r\nstyled.line = styled('line');\r\nstyled.linearGradient = styled('linearGradient');\r\nstyled.marker = styled('marker');\r\nstyled.mask = styled('mask');\r\nstyled.path = styled('path');\r\nstyled.pattern = styled('pattern');\r\nstyled.polygon = styled('polygon');\r\nstyled.polyline = styled('polyline');\r\nstyled.radialGradient = styled('radialGradient');\r\nstyled.rect = styled('rect');\r\nstyled.stop = styled('stop');\r\nstyled.switch = styled('switch');\r\nstyled.symbol = styled('symbol');\r\nstyled.text = styled('text');\r\nstyled.textPath = styled('textPath');\r\nstyled.tspan = styled('tspan');\r\nstyled.use = styled('use');\r\nstyled.view = styled('view');\r\n\r\nexport { setupGlobal, styled, css, inject, reuse, getTag, filterArgs, detectIsStyled };\r\n","import { type ElementKey, type TimerId, detectIsEmpty } from '@dark-engine/core';\r\n\r\nimport { type Controller, type StartFn } from '../controller';\r\nimport { type SpringValue } from '../shared';\r\n\r\nclass SharedState<T extends string = string> {\r\n  private ctrls: Array<Controller<T>> = [];\r\n  private stack = new Set<ElementKey>();\r\n  private flow = Flow.RIGHT;\r\n  private isTrail = false;\r\n  private isPaused = false;\r\n  private isCanceled = false;\r\n  private timeout = 0;\r\n  private timerId: TimerId = null;\r\n  private events = new Map<AnimationEventName, Set<AnimationEventHandler<T>>>();\r\n\r\n  getCtrls() {\r\n    return this.ctrls;\r\n  }\r\n\r\n  setCtrls(ctrls: Array<Controller<T>>) {\r\n    this.ctrls = ctrls;\r\n  }\r\n\r\n  setIsTrail(x: boolean) {\r\n    this.isTrail = x;\r\n  }\r\n\r\n  getIsTrail() {\r\n    return this.isTrail;\r\n  }\r\n\r\n  setFlow(x: Flow) {\r\n    this.flow = x;\r\n  }\r\n\r\n  getIsPaused() {\r\n    return this.isPaused;\r\n  }\r\n\r\n  getIsCanceled() {\r\n    return this.isCanceled;\r\n  }\r\n\r\n  detectIsRightFlow() {\r\n    return this.flow === Flow.RIGHT;\r\n  }\r\n\r\n  setIsPlaying(x: boolean, key: ElementKey) {\r\n    if (x) {\r\n      this.stack.add(key);\r\n    } else {\r\n      this.stack.delete(key);\r\n    }\r\n  }\r\n\r\n  detectIsPlaying(key?: ElementKey) {\r\n    return detectIsEmpty(key) ? this.stack.size > 0 : this.stack.has(key);\r\n  }\r\n\r\n  start(fn?: StartFn<T>) {\r\n    this.defer(() => {\r\n      if (this.ctrls.length === 0) return;\r\n      this.event('series-start');\r\n\r\n      if (this.isTrail) {\r\n        const ctrl = this.flow === Flow.RIGHT ? this.ctrls[0] : this.ctrls[this.ctrls.length - 1];\r\n\r\n        ctrl.start(fn);\r\n      } else {\r\n        this.ctrls.forEach(x => x.start(fn));\r\n      }\r\n    });\r\n  }\r\n\r\n  pause() {\r\n    this.isPaused = true;\r\n  }\r\n\r\n  resume() {\r\n    this.isPaused = false;\r\n  }\r\n\r\n  delay(timeout: number) {\r\n    this.timeout = timeout;\r\n  }\r\n\r\n  reset() {\r\n    this.ctrls.forEach(x => x.reset());\r\n  }\r\n\r\n  cancel() {\r\n    this.ctrls.forEach(x => x.cancel());\r\n    this.resetTimer();\r\n    this.isCanceled = true;\r\n  }\r\n\r\n  on(event: AnimationEventName, handler: AnimationEventHandler<T>) {\r\n    if (!this.events.has(event)) {\r\n      this.events.set(event, new Set());\r\n    }\r\n\r\n    const subs = this.events.get(event);\r\n\r\n    subs.add(handler);\r\n\r\n    return () => subs.delete(handler);\r\n  }\r\n\r\n  event(name: AnimationEventName, value: AnimationEventValue<T> = null) {\r\n    this.events.has(name) && this.events.get(name).forEach(x => x(value));\r\n  }\r\n\r\n  completeSeries() {\r\n    const isCompleted = !this.detectIsPlaying();\r\n\r\n    isCompleted && this.event('series-end');\r\n  }\r\n\r\n  defer(fn: () => void) {\r\n    this.resetTimer();\r\n\r\n    if (this.timeout > 0) {\r\n      this.timerId = setTimeout(() => {\r\n        this.timerId = null;\r\n        fn();\r\n      }, this.timeout);\r\n    } else {\r\n      fn();\r\n    }\r\n  }\r\n\r\n  private resetTimer() {\r\n    this.timerId && clearTimeout(this.timerId);\r\n    this.timerId = null;\r\n  }\r\n}\r\n\r\nexport enum Flow {\r\n  RIGHT = 'RIGHT',\r\n  LEFT = 'LEFT',\r\n}\r\n\r\nlet sharedState: SharedState = null;\r\n\r\nfunction setSharedState(state: SharedState) {\r\n  sharedState = state;\r\n}\r\n\r\nfunction getSharedState() {\r\n  const state = sharedState;\r\n\r\n  sharedState = null;\r\n\r\n  return state;\r\n}\r\n\r\nexport type AnimationEventName = 'series-start' | 'item-start' | 'item-change' | 'item-end' | 'series-end';\r\n\r\nexport type AnimationEventValue<T extends string = string> = {\r\n  value: SpringValue<T>;\r\n  idx: number;\r\n  key: ElementKey;\r\n};\r\n\r\nexport type AnimationEventHandler<T extends string = string> = (value?: AnimationEventValue<T>) => void;\r\n\r\nexport { SharedState, setSharedState, getSharedState };\r\n","import { type SpringConfig } from '../shared';\r\n\r\ntype Preset = Pick<SpringConfig, 'tension' | 'friction'>;\r\ntype PresetName = 'no-wobble' | 'gentle' | 'wobbly' | 'stiff';\r\n\r\nconst presets: Record<PresetName, Preset> = {\r\n  'no-wobble': { tension: 170, friction: 26 },\r\n  gentle: { tension: 120, friction: 14 },\r\n  wobbly: { tension: 180, friction: 12 },\r\n  stiff: { tension: 210, friction: 20 },\r\n};\r\n\r\nfunction preset(name: PresetName): Preset {\r\n  return presets[name] || ({} as Preset);\r\n}\r\n\r\nexport { preset };\r\n","import { preset } from '../preset';\r\n\r\nexport type SpringValue<T extends string = string> = Record<T, number>;\r\n\r\nexport type SpringConfig = {\r\n  mass: number;\r\n  tension: number;\r\n  friction: number;\r\n  precision: number;\r\n  fix: number;\r\n};\r\n\r\nconst defaultSpringConfig: SpringConfig = {\r\n  ...preset('no-wobble'),\r\n  mass: 1,\r\n  precision: 3,\r\n  fix: 4,\r\n};\r\n\r\nexport { defaultSpringConfig };\r\n","import { detectIsFunction, detectIsEmpty, detectAreDepsDifferent, trueFn, error } from '../utils';\r\nimport { useLayoutEffect } from '../use-layout-effect';\r\nimport { type SubscriberWithValue } from '../shared';\r\nimport { ATOM_HOST_MASK } from '../constants';\r\nimport { $$scope, getRootId } from '../scope';\r\nimport { createUpdate } from '../workloop';\r\nimport { useUpdate } from '../use-update';\r\nimport { EventEmitter } from '../emitter';\r\nimport { scheduler } from '../scheduler';\r\nimport { useMemo } from '../use-memo';\r\nimport { type Hook } from '../fiber';\r\nimport { batch } from '../batch';\r\n\r\nclass Atom<T = unknown> {\r\n  private value: T;\r\n  private connections1: Map<Hook, Tuple<T>>;\r\n  private connections2: Map<T, Tuple<T>>;\r\n  private subjects: Set<ReadableAtom>;\r\n  private emitter: EventEmitter<'data', EmitterValue<T>>;\r\n\r\n  constructor(value: T) {\r\n    this.value = value;\r\n  }\r\n\r\n  val(fn?: ShouldUpdate<T>, key?: T) {\r\n    try {\r\n      this.__connect(fn, key);\r\n    } catch (err) {\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        error('[Dark]: Illegal invocation atom.val() outside render process!');\r\n      }\r\n    }\r\n\r\n    return this.value;\r\n  }\r\n\r\n  get() {\r\n    return this.value;\r\n  }\r\n\r\n  on(fn: SubscriberWithValue<EmitterValue<T>>) {\r\n    !this.emitter && (this.emitter = new EventEmitter());\r\n\r\n    return this.emitter.on('data', fn);\r\n  }\r\n\r\n  kill() {\r\n    if (this.connections1) {\r\n      for (const [hook, [_, __, ___, key]] of this.connections1) {\r\n        this.off(hook, key);\r\n      }\r\n    }\r\n\r\n    if (this.connections2) {\r\n      for (const [key, [_, hook]] of this.connections2) {\r\n        this.off(hook, key);\r\n      }\r\n    }\r\n\r\n    this.connections1 = null;\r\n    this.connections2 = null;\r\n    this.emitter = null;\r\n    this.subjects = null;\r\n  }\r\n\r\n  toString() {\r\n    return String(this.value);\r\n  }\r\n\r\n  toJSON() {\r\n    return this.value;\r\n  }\r\n\r\n  valueOf() {\r\n    return this.value;\r\n  }\r\n\r\n  __connect(fn: ShouldUpdate<T>, key: T) {\r\n    const rootId = getRootId();\r\n    const fiber = $$scope().getCursorFiber();\r\n    const { hook } = fiber;\r\n    const disconnect = () => this.off(hook, key);\r\n\r\n    !fiber.atoms && (fiber.atoms = new Map());\r\n    fiber.atoms.set(this, disconnect);\r\n    fiber.markHost(ATOM_HOST_MASK);\r\n\r\n    if (detectIsEmpty(key)) {\r\n      !this.connections1 && (this.connections1 = new Map());\r\n      this.connections1.set(hook, [rootId, hook, fn, key]);\r\n    } else {\r\n      !this.connections2 && (this.connections2 = new Map());\r\n      this.connections2.set(key, [rootId, hook, fn, key]);\r\n    }\r\n\r\n    return disconnect;\r\n  }\r\n\r\n  __addSubject(atom$: ReadableAtom) {\r\n    !this.subjects && (this.subjects = new Set());\r\n    this.subjects.add(atom$);\r\n  }\r\n\r\n  __removeSubject(atom$: ReadableAtom) {\r\n    return this.subjects && this.subjects.delete(atom$);\r\n  }\r\n\r\n  __getSize() {\r\n    const size1 = this.connections1 ? this.connections1.size : 0;\r\n    const size2 = this.connections2 ? this.connections2.size : 0;\r\n    const size3 = this.subjects ? this.subjects.size : 0;\r\n    const size4 = this.emitter ? this.emitter.__getSize() : 0;\r\n\r\n    return size1 + size2 + size3 + size4;\r\n  }\r\n\r\n  protected setValue(value: T | ((prevValue: T) => T)) {\r\n    const prev = this.value;\r\n    const next = detectIsFunction(value) ? value(this.value) : value;\r\n    const data: EmitterValue<T> = { prev, next };\r\n    const make = (tuple: Tuple<T>, prev: T, next: T) => {\r\n      const [rootId, hook, shouldUpdate, key] = tuple;\r\n      const fn = shouldUpdate || trueFn;\r\n\r\n      fn(prev, next, key) && scheduler.schedule(createUpdate({ rootId, hook }));\r\n    };\r\n\r\n    this.value = next;\r\n\r\n    if (this.connections1) {\r\n      for (const [_, tuple] of this.connections1) {\r\n        make(tuple, prev, next);\r\n      }\r\n    }\r\n\r\n    if (this.connections2) {\r\n      if (this.connections2.has(next)) {\r\n        make(this.connections2.get(next), prev, next);\r\n        this.connections2.has(prev) && make(this.connections2.get(prev), prev, next);\r\n      }\r\n    }\r\n\r\n    this.emitter && this.emitter.emit('data', data);\r\n    this.subjects && this.subjects.forEach(x => x.__notify());\r\n  }\r\n\r\n  private off(hook: Hook, key: T) {\r\n    hook.owner.atoms.delete(this);\r\n    this.connections1 && this.connections1.delete(hook);\r\n    this.connections2 && this.connections2.delete(key);\r\n  }\r\n}\r\n\r\nclass WritableAtom<T = unknown> extends Atom<T> {\r\n  set(value: T | ((prevValue: T) => T)) {\r\n    super.setValue(value);\r\n  }\r\n}\r\n\r\nclass ReadableAtom<T = unknown> extends Atom<T> {\r\n  private deps$: Array<Atom> = [];\r\n  private fn: ComputedFn<T> = null;\r\n  private values: Array<unknown> = [];\r\n\r\n  constructor(deps$: Array<Atom>, fn: ComputedFn<T>) {\r\n    const values = ReadableAtom.values(deps$);\r\n\r\n    super(ReadableAtom.compute(fn, values));\r\n    this.deps$ = deps$;\r\n    this.fn = fn;\r\n    this.values = values;\r\n    deps$.forEach(x => x.__addSubject(this));\r\n  }\r\n\r\n  __notify() {\r\n    const values = ReadableAtom.values(this.deps$);\r\n\r\n    if (detectAreDepsDifferent(this.values, values)) {\r\n      super.setValue(ReadableAtom.compute(this.fn, values));\r\n    }\r\n\r\n    this.values = values;\r\n  }\r\n\r\n  override kill() {\r\n    super.kill();\r\n    this.deps$.forEach(x => x.__removeSubject(this));\r\n    this.deps$ = [];\r\n    this.fn = null;\r\n  }\r\n\r\n  private static compute(fn: Function, values: Array<unknown>) {\r\n    return fn(...values);\r\n  }\r\n\r\n  private static values(deps$: Array<Atom>) {\r\n    return deps$.map(x => x.get());\r\n  }\r\n}\r\n\r\nconst detectIsAtom = (x: unknown): x is Atom => x instanceof Atom;\r\n\r\nconst detectIsWritableAtom = (x: unknown): x is WritableAtom => x instanceof WritableAtom;\r\n\r\nconst detectIsReadableAtom = (x: unknown): x is ReadableAtom => x instanceof ReadableAtom;\r\n\r\nconst atom = <T>(value?: T) => new WritableAtom(value);\r\n\r\nconst computed = <T, A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\r\n  deps$: [\r\n    Atom<A>,\r\n    Atom<B>?,\r\n    Atom<C>?,\r\n    Atom<D>?,\r\n    Atom<E>?,\r\n    Atom<F>?,\r\n    Atom<G>?,\r\n    Atom<H>?,\r\n    Atom<I>?,\r\n    Atom<J>?,\r\n    Atom<K>?,\r\n    Atom<L>?,\r\n    Atom<M>?,\r\n    Atom<N>?,\r\n  ],\r\n  fn: ComputedFn<T, A, B, C, D, E, F, G, H, I, J, K, L, M, N>,\r\n) => new ReadableAtom(deps$, fn) as ReadableAtom<ReturnType<typeof fn>>;\r\n\r\nfunction useAtom<T>(value?: T): WritableAtom<T> {\r\n  const atom$ = useMemo(() => atom<T>(value), []);\r\n\r\n  useLayoutEffect(() => () => atom$.kill(), []);\r\n\r\n  return atom$;\r\n}\r\n\r\nfunction useComputed<T, A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\r\n  deps$: [\r\n    Atom<A>,\r\n    Atom<B>?,\r\n    Atom<C>?,\r\n    Atom<D>?,\r\n    Atom<E>?,\r\n    Atom<F>?,\r\n    Atom<G>?,\r\n    Atom<H>?,\r\n    Atom<I>?,\r\n    Atom<J>?,\r\n    Atom<K>?,\r\n    Atom<L>?,\r\n    Atom<M>?,\r\n    Atom<N>?,\r\n  ],\r\n  fn: ComputedFn<T, A, B, C, D, E, F, G, H, I, J, K, L, M, N>,\r\n) {\r\n  const atom$ = useMemo(() => computed(deps$, fn), []);\r\n\r\n  useLayoutEffect(() => () => atom$.kill(), []);\r\n\r\n  return atom$;\r\n}\r\n\r\nfunction useStore<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\r\n  atoms$: [\r\n    Atom<A>,\r\n    Atom<B>?,\r\n    Atom<C>?,\r\n    Atom<D>?,\r\n    Atom<E>?,\r\n    Atom<F>?,\r\n    Atom<G>?,\r\n    Atom<H>?,\r\n    Atom<I>?,\r\n    Atom<J>?,\r\n    Atom<K>?,\r\n    Atom<L>?,\r\n    Atom<M>?,\r\n    Atom<N>?,\r\n  ],\r\n) {\r\n  const forceUpdate = useUpdate();\r\n  const update = () => batch(forceUpdate);\r\n\r\n  useLayoutEffect(() => {\r\n    const offs = atoms$.map(x => x.on(update));\r\n\r\n    return () => offs.forEach(x => x());\r\n  }, [...atoms$]);\r\n\r\n  return atoms$.map(x => x.get()) as [A, B, C, D, E, F, G, H, I, J, K, L, M, N];\r\n}\r\n\r\ntype ShouldUpdate<T> = (p: T, n: T, key?: T) => boolean;\r\ntype EmitterValue<T> = { prev: T; next: T };\r\ntype Tuple<T> = [number, Hook, ShouldUpdate<T>, T];\r\ntype ComputedFn<\r\n  T,\r\n  A = unknown,\r\n  B = unknown,\r\n  C = unknown,\r\n  D = unknown,\r\n  E = unknown,\r\n  F = unknown,\r\n  G = unknown,\r\n  H = unknown,\r\n  I = unknown,\r\n  J = unknown,\r\n  K = unknown,\r\n  L = unknown,\r\n  M = unknown,\r\n  N = unknown,\r\n> = (a: A, b?: B, c?: C, d?: D, e?: E, f?: F, g?: G, h?: H, i?: I, j?: J, k?: K, l?: L, m?: M, n?: N) => T;\r\n\r\nexport {\r\n  type Atom,\r\n  WritableAtom,\r\n  ReadableAtom,\r\n  detectIsAtom,\r\n  detectIsWritableAtom,\r\n  detectIsReadableAtom,\r\n  atom,\r\n  computed,\r\n  useAtom,\r\n  useComputed,\r\n  useStore,\r\n};\r\n","import { type WritableAtom, type SubscriberWithValue, atom } from '@dark-engine/core';\r\n\r\nimport { type SpringValue } from '../shared';\r\n\r\nclass Spring<T extends string = string> {\r\n  private props: Record<T, WritableAtom<number>> = {} as Record<T, WritableAtom<number>>;\r\n  private subscribers = new Set<SubscriberWithValue<SpringValue<T>>>();\r\n\r\n  prop(key: T) {\r\n    return this.props[key] ? this.props[key].get() : null;\r\n  }\r\n\r\n  prop$(key: T) {\r\n    return this.props[key] || null;\r\n  }\r\n\r\n  setProp(key: T, value: number) {\r\n    !this.props[key] && (this.props[key] = atom(value));\r\n    this.props[key].set(value);\r\n  }\r\n\r\n  value(): SpringValue<T> {\r\n    const value = Object.keys(this.props).reduce((acc, x) => ((acc[x] = this.props[x].get()), acc), {});\r\n\r\n    return value as SpringValue<T>;\r\n  }\r\n\r\n  on(fn: SubscriberWithValue<SpringValue<T>>) {\r\n    this.subscribers.add(fn);\r\n\r\n    return () => this.subscribers.delete(fn);\r\n  }\r\n\r\n  notify() {\r\n    this.subscribers.forEach(x => x(this.value()));\r\n  }\r\n}\r\n\r\nexport { Spring };\r\n","const time = () => performance.now();\r\n\r\nconst fix = (x: number, precision = 4) => Number(x.toFixed(precision));\r\n\r\nconst illegal = (value: string) => {\r\n  throw new Error(value);\r\n};\r\n\r\nconst range = (x: number) =>\r\n  Array(x)\r\n    .fill(null)\r\n    .map((_, idx) => idx);\r\n\r\nconst uniq = <T>(items: Array<T>, selector: (x: T) => unknown) => {\r\n  const arr: Array<T> = [];\r\n  const set = new Set();\r\n\r\n  for (const item of items) {\r\n    const key = selector(item);\r\n\r\n    !set.has(key) && arr.push(item);\r\n    set.add(key);\r\n  }\r\n\r\n  return arr;\r\n};\r\n\r\nexport { time, fix, illegal, range, uniq };\r\n","import { type SpringConfig } from '../shared';\r\n\r\nfunction stepper(pos: number, vel: number, dest: number, step: number, config: Omit<SpringConfig, 'fix'>) {\r\n  const { tension, friction, mass, precision } = config;\r\n  const [nPos, nVel] = spring(pos, vel, dest, step, tension, friction, mass);\r\n\r\n  if (Math.abs(nPos - dest) < 10 ** (-1 * precision)) return [dest, 0];\r\n\r\n  return [nPos, nVel];\r\n}\r\n\r\nfunction spring(pos: number, vel: number, dest: number, step: number, tension: number, friction: number, mass: number) {\r\n  const disp = pos - dest;\r\n  const sf = -1 * tension * disp;\r\n  const df = -1 * friction * vel;\r\n  const a = (sf + df) / mass;\r\n  const nVel = vel + a * step;\r\n  const nPos = pos + nVel * step;\r\n\r\n  return [nPos, nVel];\r\n}\r\n\r\nexport { stepper };\r\n","import { type ElementKey, platform, falseFn, detectIsUndefined } from '@dark-engine/core';\r\n\r\nimport { type SpringValue, type SpringConfig, defaultSpringConfig } from '../shared';\r\nimport { type AnimationEventName, SharedState } from '../state';\r\nimport { Spring } from '../spring';\r\nimport { time, fix } from '../utils';\r\nimport { stepper } from '../stepper';\r\n\r\nconst BASE_FRAME_TIME_IN_MS = 1000 / 60;\r\nconst MAX_SKIPPED_FRAMES = 10;\r\nconst MAX_DELTA_TIME_IN_SEC = MAX_SKIPPED_FRAMES * (BASE_FRAME_TIME_IN_MS / 1000);\r\nconst MIN_STEP = 0.01;\r\n\r\nclass Controller<T extends string, I = unknown> {\r\n  private key: ElementKey;\r\n  private idx: number;\r\n  private from: SpringValue<T>;\r\n  private to: SpringValue<T>;\r\n  private value: SpringValue<T>;\r\n  private dest: SpringValue<T>;\r\n  private state: SharedState = null;\r\n  private frameTime: number;\r\n  private frameId: number;\r\n  private results: Record<string, [number, number]> = {};\r\n  private completed: Record<string, boolean> = {};\r\n  private queue: Array<SpringValue<T>> = [];\r\n  private left: Controller<T> = null;\r\n  private right: Controller<T> = null;\r\n  private springConfigFn: SpringConfigFn<T>;\r\n  private configurator: ConfiguratorFn<T>;\r\n  private immediate: ImmediateFn<T> = falseFn;\r\n  private immediates: Array<() => void> = [];\r\n  private primaryKey: ElementKey;\r\n  private isReplaced = false;\r\n  private item: I = null;\r\n  private spring = new Spring<T>();\r\n\r\n  constructor(state: SharedState) {\r\n    this.state = state;\r\n    this.key = String(++Controller.key);\r\n  }\r\n\r\n  getKey() {\r\n    return this.key;\r\n  }\r\n\r\n  setKey(x: ElementKey) {\r\n    this.key = x;\r\n  }\r\n\r\n  getIdx() {\r\n    return this.idx;\r\n  }\r\n\r\n  setIdx(x: number) {\r\n    this.idx = x;\r\n  }\r\n\r\n  setFrom(x: SpringValue<T>) {\r\n    this.from = x;\r\n    this.value = this.value || { ...x };\r\n  }\r\n\r\n  setTo(x: SpringValue<T>) {\r\n    this.to = x || { ...this.from };\r\n    this.dest = this.dest || { ...(x || this.from) };\r\n  }\r\n\r\n  setSpringConfigFn(fn?: PatialConfigFn<T>) {\r\n    this.springConfigFn = fn ? (key: T) => ({ ...defaultSpringConfig, ...fn(key) }) : () => defaultSpringConfig;\r\n  }\r\n\r\n  setLeft(x: Controller<T>) {\r\n    this.left = x;\r\n  }\r\n\r\n  setRight(x: Controller<T>) {\r\n    this.right = x;\r\n  }\r\n\r\n  notify() {\r\n    this.sync();\r\n    this.event('item-change');\r\n  }\r\n\r\n  setConfigurator(fn: ConfiguratorFn<T>) {\r\n    this.configurator = fn;\r\n  }\r\n\r\n  setImmediate(fn: ImmediateFn<T>) {\r\n    this.immediate = fn || this.immediate;\r\n  }\r\n\r\n  replaceValue(x: SpringValue<T>) {\r\n    this.value = x;\r\n    this.sync();\r\n  }\r\n\r\n  markAsFake(x: ElementKey) {\r\n    this.primaryKey = x;\r\n\r\n    return Controller.generateFakeKey(x);\r\n  }\r\n\r\n  detectIsFake() {\r\n    return !detectIsUndefined(this.primaryKey);\r\n  }\r\n\r\n  getIsReplaced() {\r\n    return this.isReplaced;\r\n  }\r\n\r\n  setIsReplaced(x: boolean) {\r\n    this.isReplaced = x;\r\n  }\r\n\r\n  getItem() {\r\n    return this.item;\r\n  }\r\n\r\n  setItem(x: I) {\r\n    this.item = x;\r\n  }\r\n\r\n  getState() {\r\n    return this.state;\r\n  }\r\n\r\n  getSpring() {\r\n    this.sync();\r\n\r\n    return this.spring;\r\n  }\r\n\r\n  start(fn?: StartFn<T>) {\r\n    if (this.state.getIsCanceled()) return; // !\r\n    const config1 = this.configurator(this.idx);\r\n    const config2 = fn ? fn(this.idx) : this.configurator(this.idx);\r\n    const from = { ...config1.from, ...config2.from };\r\n    const to = { ...config1.to, ...config2.to };\r\n    const config = config2.config || config1.config;\r\n    const immediate = config2.immediate || config1.immediate;\r\n\r\n    this.setFrom(config1.from || from);\r\n    this.setTo(config1.to || to);\r\n    this.setSpringConfigFn(config);\r\n    this.setImmediate(immediate);\r\n    Object.assign(this.dest, to);\r\n\r\n    this.play(this.dest);\r\n  }\r\n\r\n  reset() {\r\n    this.value = { ...this.from };\r\n    this.dest = { ...(this.to || this.from) };\r\n    this.sync();\r\n  }\r\n\r\n  cancel() {\r\n    this.frameId && platform.caf(this.frameId);\r\n    this.frameId = null;\r\n  }\r\n\r\n  setIsPlaying(x: boolean) {\r\n    this.state.setIsPlaying(x, this.key);\r\n  }\r\n\r\n  private play(to: SpringValue<T>) {\r\n    this.queue.push(to);\r\n    if (this.frameId) return false;\r\n    this.setIsPlaying(true);\r\n    this.event('item-start');\r\n    this.motion(to);\r\n  }\r\n\r\n  private motion(to: SpringValue<T>) {\r\n    const { value, results, completed, springConfigFn } = this;\r\n    const keys = Object.keys(value) as Array<T>;\r\n    const make = () => this.motion(to);\r\n\r\n    this.frameTime = time();\r\n    this.frameId = platform.raf(() => {\r\n      if (this.state.getIsPaused()) return make();\r\n      let step = (time() - this.frameTime) / 1000;\r\n\r\n      if (step > MAX_DELTA_TIME_IN_SEC) {\r\n        step = MIN_STEP;\r\n      }\r\n\r\n      if (this.queue.length === 0) {\r\n        this.queue.push(this.dest);\r\n      }\r\n\r\n      for (const key of keys) {\r\n        if (this.immediate(key)) {\r\n          completed[key] = true;\r\n\r\n          const complete = () => {\r\n            value[key] = to[key];\r\n            results[key] = [to[key], 0];\r\n          };\r\n\r\n          if (to[key] === this.from[key]) {\r\n            this.immediates.push(complete);\r\n          } else {\r\n            complete();\r\n          }\r\n        } else {\r\n          if (!results[key]) {\r\n            results[key] = [value[key], 0];\r\n          }\r\n\r\n          const config = springConfigFn(key);\r\n          let pos = results[key][0];\r\n          let vel = results[key][1];\r\n\r\n          for (const update of this.queue) {\r\n            const dest = update[key] as number;\r\n\r\n            [pos, vel] = stepper(pos, vel, dest, step, config);\r\n            results[key] = [pos, vel];\r\n            completed[key] = pos === dest;\r\n          }\r\n\r\n          value[key] = pos;\r\n        }\r\n      }\r\n\r\n      this.queue = [];\r\n      this.change();\r\n\r\n      if (this.checkCompleted(keys)) {\r\n        this.complete();\r\n      } else {\r\n        make();\r\n      }\r\n    });\r\n  }\r\n\r\n  private event(name: AnimationEventName) {\r\n    this.state.event(name, { value: this.value, idx: this.idx, key: this.key });\r\n  }\r\n\r\n  private change() {\r\n    this.notify();\r\n\r\n    if (this.state.getIsTrail()) {\r\n      if (this.state.detectIsRightFlow()) {\r\n        this.right && this.right.start(() => ({ to: this.value }));\r\n      } else {\r\n        this.left && this.left.start(() => ({ to: this.value }));\r\n      }\r\n    }\r\n  }\r\n\r\n  private complete() {\r\n    this.setIsPlaying(false);\r\n    this.frameTime = null;\r\n    this.frameId = null;\r\n    this.results = {};\r\n    this.completed = {};\r\n    this.immediates.forEach(x => x());\r\n    this.immediates.length > 0 && this.notify();\r\n    this.immediates = [];\r\n    this.event('item-end');\r\n    this.state.completeSeries();\r\n  }\r\n\r\n  private checkCompleted(keys: Array<string>) {\r\n    for (const key of keys) {\r\n      if (!this.completed[key]) return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  private sync() {\r\n    const keys = Object.keys(this.value) as Array<T>;\r\n\r\n    for (const key of keys) {\r\n      const config = this.springConfigFn(key);\r\n      const value = fix(this.value[key], config.fix);\r\n\r\n      this.spring.setProp(key, value);\r\n    }\r\n\r\n    this.spring.notify();\r\n  }\r\n\r\n  private static generateFakeKey(x: ElementKey) {\r\n    return `__${x}:${++Controller.fakeKey}__`;\r\n  }\r\n\r\n  private static key = -1;\r\n  private static fakeKey = -1;\r\n}\r\n\r\nexport type BaseItemConfig<T extends string> = {\r\n  from: SpringValue<T>;\r\n  to?: SpringValue<T>;\r\n  config?: PatialConfigFn<T>;\r\n  immediate?: ImmediateFn<T>;\r\n};\r\n\r\nexport type StartFnConfig<T extends string> = {\r\n  from?: SpringValue<T>;\r\n  to: Partial<SpringValue<T>>;\r\n} & Omit<BaseItemConfig<T>, 'from' | 'to'>;\r\n\r\nexport type ConfiguratorFn<T extends string> = (idx: number) => BaseItemConfig<T>;\r\n\r\nexport type StartFn<T extends string> = (idx: number) => StartFnConfig<T>;\r\n\r\nexport type SpringConfigFn<T extends string> = (key: T) => SpringConfig;\r\n\r\nexport type PatialConfigFn<T extends string> = (key: T) => Partial<SpringConfig>;\r\n\r\nexport type ImmediateFn<T extends string> = (key: T) => boolean;\r\n\r\nexport type NotifierFn<T extends string> = (x: SpringValue<T>) => void;\r\n\r\nexport { Controller };\r\n","import { useMemo } from '@dark-engine/core';\r\n\r\nimport { SharedState, setSharedState, Flow } from '../state';\r\nimport { type Spring } from '../spring';\r\nimport { type SpringItemConfig, type SpringApi, useSprings } from '../use-springs';\r\n\r\nfunction useTrail<T extends string>(\r\n  count: number,\r\n  configurator: (idx: number) => SpringItemConfig<T>,\r\n  deps?: Array<any>,\r\n): [Array<Spring<T>>, TrailApi<T>] {\r\n  const state = useMemo(() => {\r\n    const state = new SharedState();\r\n\r\n    state.setIsTrail(true);\r\n    setSharedState(state);\r\n\r\n    return state;\r\n  }, []);\r\n  const [springs, _api] = useSprings(count, configurator, deps);\r\n  const api = useMemo<TrailApi<T>>(() => {\r\n    return {\r\n      ..._api,\r\n      reverse: (value: boolean) => (value ? state.setFlow(Flow.LEFT) : state.setFlow(Flow.RIGHT)),\r\n    };\r\n  }, []);\r\n\r\n  return [springs, api];\r\n}\r\n\r\nexport type TrailApi<T extends string = string> = {\r\n  reverse: (value: boolean) => void;\r\n} & SpringApi<T>;\r\n\r\nexport { useTrail };\r\n","import { type Callback, useMemo, useLayoutEffect, useEffect } from '@dark-engine/core';\r\n\r\nimport { type AnimationEventName, type AnimationEventHandler, SharedState, getSharedState } from '../state';\r\nimport { type BaseItemConfig, type StartFn, Controller } from '../controller';\r\nimport { type Spring } from '../spring';\r\nimport { range } from '../utils';\r\n\r\nexport type SpringItemConfig<T extends string> = BaseItemConfig<T>;\r\n\r\nfunction useSprings<T extends string>(\r\n  count: number,\r\n  configurator: SpringConfiguratorFn<T>,\r\n  deps?: Array<any>,\r\n): [Array<Spring<T>>, SpringApi<T>] {\r\n  const state = useMemo(() => getSharedState() || new SharedState(), []);\r\n  const scope = useMemo<Scope<T>>(() => {\r\n    return {\r\n      configurator,\r\n      prevCount: count,\r\n      ctrls: range(count).map(() => new Controller<T>(state)),\r\n      inChain: false,\r\n      pending: null,\r\n    };\r\n  }, []);\r\n\r\n  scope.configurator = configurator;\r\n\r\n  const springs = useMemo(() => {\r\n    const configurator = (idx: number) => scope.configurator(idx);\r\n    const { ctrls, prevCount } = scope;\r\n\r\n    if (count > prevCount) {\r\n      ctrls.push(...range(count - prevCount).map(() => new Controller<T>(state)));\r\n    } else if (count < prevCount) {\r\n      const deleted = ctrls.splice(count, ctrls.length);\r\n\r\n      deleted.forEach(ctrl => ctrl.setIsPlaying(false));\r\n    }\r\n\r\n    state.setCtrls(ctrls);\r\n    scope.prevCount = count;\r\n    prepare(ctrls, configurator);\r\n\r\n    return ctrls.map(ctrl => ctrl.getSpring());\r\n  }, [count]);\r\n\r\n  const api = useMemo<SpringApi<T>>(() => {\r\n    return {\r\n      start: fn => {\r\n        if (scope.inChain) {\r\n          scope.pending && scope.pending();\r\n          scope.pending = null;\r\n        } else {\r\n          state.start(fn);\r\n        }\r\n      },\r\n      chain: (value: boolean) => (scope.inChain = value),\r\n      delay: state.delay.bind(state),\r\n      pause: state.pause.bind(state),\r\n      resume: state.resume.bind(state),\r\n      reset: state.reset.bind(state),\r\n      cancel: state.cancel.bind(state),\r\n      on: state.on.bind(state),\r\n      isCanceled: state.getIsCanceled.bind(state),\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!deps) return;\r\n    const { inChain } = scope;\r\n\r\n    if (inChain) {\r\n      scope.pending = () => state.start();\r\n    } else {\r\n      state.start();\r\n    }\r\n  }, deps || []);\r\n\r\n  useLayoutEffect(() => () => api.cancel(), []);\r\n\r\n  return [springs, api];\r\n}\r\n\r\nfunction prepare<T extends string>(ctrls: Array<Controller<T>>, configurator: (idx: number) => SpringItemConfig<T>) {\r\n  ctrls.forEach((ctrl, idx) => {\r\n    const { from, to, config } = configurator(idx);\r\n    const left = ctrls[idx - 1] || null;\r\n    const right = ctrls[idx + 1] || null;\r\n\r\n    ctrl.setIdx(idx);\r\n    ctrl.setFrom(from);\r\n    ctrl.setTo(to);\r\n    ctrl.setSpringConfigFn(config);\r\n    ctrl.setConfigurator(configurator);\r\n    ctrl.setLeft(left);\r\n    ctrl.setRight(right);\r\n  });\r\n}\r\n\r\ntype SpringConfiguratorFn<T extends string> = (idx: number) => SpringItemConfig<T>;\r\n\r\ntype Scope<T extends string> = {\r\n  prevCount: number;\r\n  configurator: SpringConfiguratorFn<T>;\r\n  ctrls: Array<Controller<T>>;\r\n  inChain: boolean;\r\n  pending: Callback;\r\n};\r\n\r\nexport type SpringApi<T extends string = string> = {\r\n  start: (fn?: StartFn<T>) => void;\r\n  chain: (value: boolean) => void;\r\n  delay: (timeout: number) => void;\r\n  pause: () => void;\r\n  resume: () => void;\r\n  reset: () => void;\r\n  cancel: () => void;\r\n  on: (event: AnimationEventName, handler: AnimationEventHandler<T>) => () => void;\r\n  isCanceled: () => void;\r\n};\r\n\r\nexport { useSprings };\r\n","import {\r\n  type Component,\r\n  type TagVirtualNodeFactory,\r\n  type Callback,\r\n  component,\r\n  useMemo,\r\n  useInsertionEffect,\r\n  $$scope,\r\n  walk,\r\n  nextTick,\r\n} from '@dark-engine/core';\r\n\r\nimport { type SpringValue } from '../shared';\r\nimport { type Spring } from '../spring';\r\n\r\ntype AnimatedProps<E = unknown, T extends string = string> = {\r\n  spring: Spring<T>;\r\n  fn: StyleFn<E, T>;\r\n  slot: Component | TagVirtualNodeFactory;\r\n};\r\n\r\nconst Animated = component<AnimatedProps>(({ spring, fn, slot }) => {\r\n  const cursor = $$scope().getCursorFiber();\r\n  const scope = useMemo<Scope>(() => ({ element: null, notify: null }), []);\r\n  const notify = () => scope.element && fn(scope.element, spring.value());\r\n\r\n  scope.notify = notify;\r\n\r\n  useInsertionEffect(() => {\r\n    const make = () => {\r\n      const fiber = cursor.hook.owner;\r\n\r\n      walk(fiber.child, (fiber, _, stop) => {\r\n        if (fiber.element) {\r\n          scope.element = fiber.element;\r\n          return stop();\r\n        }\r\n      });\r\n\r\n      notify();\r\n    };\r\n\r\n    if ($$scope().getIsHydrateZone()) {\r\n      nextTick(make);\r\n    } else {\r\n      make();\r\n    }\r\n\r\n    return spring.on(() => scope.notify());\r\n  }, [spring]);\r\n\r\n  notify();\r\n\r\n  return slot;\r\n});\r\n\r\ntype Scope = { element: unknown; notify: Callback };\r\ntype StyleFn<E = unknown, T extends string = string> = (element: E, value: SpringValue<T>) => void;\r\n\r\nexport { Animated };\r\n","import { h, Fragment, component, useEffect, useState } from '@dark-engine/core';\r\nimport { createRoot } from '@dark-engine/platform-browser';\r\nimport { styled } from '@dark-engine/styled';\r\nimport { type SpringValue, Animated, useTrail, preset } from '@dark-engine/animations';\r\n\r\ntype SpringProps = 'x' | 'y';\r\n\r\nconst App = component(() => {\r\n  const [size, setSize] = useState(10);\r\n  const [springs, api] = useTrail<SpringProps>(size, () => ({\r\n    from: { x: -100, y: -100 },\r\n    config: () => preset('gentle'),\r\n  }));\r\n\r\n  useEffect(() => {\r\n    const handler = (e: PointerEvent) => {\r\n      e.preventDefault();\r\n      api.start(() => ({ to: { x: e.pageX, y: e.pageY } }));\r\n    };\r\n\r\n    document.addEventListener('pointerdown', handler);\r\n    document.addEventListener('pointermove', handler);\r\n\r\n    return () => {\r\n      document.removeEventListener('pointerdown', handler);\r\n      document.removeEventListener('pointermove', handler);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Panel>\r\n        <button onClick={() => setSize(x => x + 1)}>add ball</button>\r\n        <button onClick={() => setSize(x => (x > 0 ? x - 1 : x))}>remove ball</button>\r\n        <div>{size}</div>\r\n      </Panel>\r\n      {springs.map((spring, idx) => {\r\n        return (\r\n          <Animated key={idx} spring={spring} fn={styleFn(size - idx)}>\r\n            <Item />\r\n          </Animated>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n});\r\n\r\nconst styleFn = (zIndex: number) => (element: HTMLDivElement, value: SpringValue<SpringProps>) => {\r\n  element.style.setProperty('transform', `translate3d(${value.x - 25}px, ${value.y - 25}px, 0)`);\r\n  element.style.setProperty('z-index', `${zIndex}`);\r\n};\r\n\r\nconst Panel = styled.div`\r\n  position: fixed;\r\n  right: 0;\r\n  bottom: 0;\r\n  display: inline-block;\r\n  padding: 9px;\r\n  background-color: blue;\r\n  color: #fff;\r\n  z-index: 10000;\r\n`;\r\n\r\nconst Item = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 50%;\r\n  background-color: purple;\r\n  border: 2px solid #fff;\r\n  touch-action: none;\r\n`;\r\n\r\ncreateRoot(document.getElementById('root')).render(<App />);\r\n","import { detectIsFunction } from '../utils';\r\nimport { type UpdateOptions, useUpdate } from '../use-update';\r\nimport { useMemo } from '../use-memo';\r\nimport { $$scope } from '../scope';\r\nimport { useCallback } from '../use-callback';\r\n\r\ntype Value<T> = T | ((prevValue: T) => T);\r\n\r\nfunction useState<T = unknown>(initialValue: T | (() => T)): [T, (value: Value<T>) => void] {\r\n  const update = useUpdate();\r\n  const scope = useMemo(\r\n    () => ({\r\n      value: detectIsFunction(initialValue) ? initialValue() : initialValue,\r\n    }),\r\n    [],\r\n  );\r\n  const setState = useCallback((sourceValue: Value<T>) => {\r\n    const $scope = $$scope();\r\n    const isBatch = $scope.getIsBatchZone();\r\n    const create = (): UpdateOptions => {\r\n      const prevValue = scope.value;\r\n      const newValue = detectIsFunction(sourceValue) ? sourceValue(prevValue) : sourceValue;\r\n      const shouldUpdate = () => isBatch || !Object.is(prevValue, newValue);\r\n      const setValue = () => (scope.value = newValue);\r\n      const resetValue = () => (scope.value = prevValue);\r\n\r\n      return { shouldUpdate, setValue, resetValue };\r\n    };\r\n\r\n    update(create);\r\n  }, []);\r\n\r\n  return [scope.value, setState];\r\n}\r\n\r\nexport { useState };\r\n","import { useMemo } from '../use-memo';\r\n\r\nfunction useCallback<T = Function>(callback: T, deps: Array<any>): T {\r\n  const value = useMemo(() => callback, deps);\r\n\r\n  return value;\r\n}\r\n\r\nexport { useCallback };\r\n","import { type DarkElement, unmountRoot } from '@dark-engine/core';\r\n\r\nimport { render, roots } from '../render';\r\nimport type { TagNativeElement } from '../native-element';\r\n\r\nfunction createRoot(container: TagNativeElement) {\r\n  return {\r\n    render: (element: DarkElement) => render(element, container),\r\n    unmount: () => unmount(container),\r\n  };\r\n}\r\n\r\nfunction unmount(container: TagNativeElement) {\r\n  const rootId = roots.get(container);\r\n\r\n  unmountRoot(rootId, () => {\r\n    roots.delete(container);\r\n    container.innerHTML = '';\r\n  });\r\n}\r\n\r\nexport { createRoot, unmount };\r\n"],"names":["ROOT","REPLACER","KEY_ATTR","REF_ATTR","CREATE_EFFECT_TAG","UPDATE_EFFECT_TAG","SKIP_EFFECT_TAG","MOVE_MASK","TaskPriority","Flag","ATTR_BLACK_LIST","SKIP_SCAN_OPT","MEMO_SLOT_OPT","STATIC_SLOT_OPT","$$inject","Symbol","Component","constructor","type","token","props","ref","shouldUpdate","displayName","children","this","component","options","$token","factory","defaultInject","detectIsComponent","x","detectIsFunction","o","detectIsUndefined","detectIsString","detectIsObject","detectIsBoolean","detectIsArray","Array","isArray","detectIsNull","detectIsEmpty","getTime","Date","now","dummyFn","trueFn","falseFn","sameFn","flatten","source","transform","length","list","stack","idx","pop","i","push","prevDeps","nextDeps","max","Math","Object","is","nextTick","callback","Promise","resolve","then","createIndexKey","defaultRealisation","Error","platform","createElement","insertElement","raf","caf","spawn","commit","finishCommit","detectIsDynamic","detectIsPortal","unmountPortal","chunk","detectIsServer","EventEmitter","subscribers","Map","on","e","fn","has","set","Set","get","add","delete","emit","data","forEach","kill","__getSize","size","Scope","root","wip","cursor","unit","mountDeep","mountLevel","mountNav","events","unsubs","actions","candidates","deletions","cancels","asyncEffects","layoutEffects","insertionEffects","resourceId","resources","defers","setPendingStatus","isLayoutEffectsZone","isInsertionEffectsZone","isUpdateZone","isBatchZone","isHydrateZone","isStreamZone","isTransitionZone","isEventZone","isHot","isDynamic","isServer","emitter","resetActions","getActionsById","id","addActionMap","map","replace","insert","remove","move","stable","addReplaceAction","nextKey","addInsertAction","addRemoveAction","prevKey","addMoveAction","addStableAction","copy","scope","getRoot","setRoot","fiber","getWorkInProgress","setWorkInProgress","getNextUnitOfWork","setNextUnitOfWork","getCursorFiber","setCursorFiber","navToChild","navToSibling","navToParent","navToPrev","getMountIndex","setMountDeep","getMountDeep","value","resetMount","getEvents","addEventUnsubscriber","unsubscribeEvents","getCandidates","addCandidate","resetCandidates","getDeletions","hasDeletion","nextFiber","parent","addDeletion","resetDeletions","addAsyncEffect","resetAsyncEffects","runAsyncEffects","effects","setTimeout","addLayoutEffect","resetLayoutEffects","runLayoutEffects","setIsLayoutEffectsZone","addInsertionEffect","resetInsertionEffects","runInsertionEffects","setIsInsertionEffectsZone","addCancel","applyCancels","resetCancels","getIsLayoutEffectsZone","getIsInsertionEffectsZone","getIsUpdateZone","setIsUpdateZone","getIsBatchZone","setIsBatchZone","getIsHydrateZone","setIsHydrateZone","getIsStreamZone","setIsStreamZone","getIsTransitionZone","setIsTransitionZone","getIsEventZone","setIsEventZone","getIsHot","setIsHot","getPendingStatusSetter","setPendingStatusSetter","flush","getEmitter","defer","getDefers","resetDefers","getResource","setResource","res","getResources","getResourceId","setResourceId","getNextResourceId","runAfterCommit","rootId","scopes","getRootId","setRootId","$$vNode","ATTR_TYPE","VirtualNode","TagVirtualNode","name","attrs","super","NodeType","TAG","TextVirtualNode","TEXT","String","CommentVirtualNode","text","COMMENT","View","as","slot","_void","key","from","detectIsTextVirtualNode","detectIsVirtualNode","vNode","detectIsTagVirtualNode","detectIsCommentVirtualNode","detectIsVirtualNodeFactory","detectIsPlainVirtualNode","createReplacer","getElementKey","inst","hasElementFlag","flag","Boolean","hasComponentFlag","hasVirtualNodeFactoryFlag","hasTagVirtualNodeFlag","getElementType","hasChildrenProp","detectAreSameInstanceTypes","prevInst","nextInst","isComponentFactories","nc","Fiber","hook","provider","cc","cec","eidx","mask","element","tag","child","next","alt","atoms","nextId","mutate","keys","markHost","increment","count","force","$scope","wipFiber","stop","setError","error","catch","static","Hook","values","owner","$$memo","defaultShouldUpdate","nextProps","detectIsMemo","instance","walk","onWalk","shouldDeep","shouldStop","skip","getFiberWithElement","$fiber","buildChildNodes","onNode","getKey","buildChildNode","altMap","startEidx","prevIdx","nextIdx","left","right","isFirst","isLast","notifyParents","$$fragment","Fragment","Memo","memo","getValue","p","n","deps","state","$value","detectIsElement","$$useEffect","createEffect","useEffect","effect","cleanup","undefined","isInsertionEffect","EffectType","INSERTION","isLayoutEffect","LAYOUT","isAsyncEffect","ASYNC","runEffect","dropEffects","$$useLayoutEffect","dropLayoutEffects","$$useInsertionEffect","useInsertionEffect","dropInsertionEffects","shouldUnmountFiber","INSERTION_EFFECT_HOST_MASK","unmountFiber","_","hasPendingPromise","hasRenderError","workLoop","isAsync","shouldYield","hasMoreWork","performUnitOfWork","scheduler","hasPrimaryTask","fork","unmounts","diff","parentFiber","isRight","sync","err","finally","isDeepWalking","isStream","hasChildren","$inst","createFiber","getAlternate","share","mountChild","mountSibling","prev","shouldMount","pc","mount","hasSameCount","prevKeys","nextKeys","prevKeysMap","nextKeysMap","keyedFibersMap","usedKeysMap","extractKeys","prevKeyFiber","tryOptStaticSlot","hasMove","hasRemove","hasInsert","hasReplace","detectIsStableMemoTree","tryOptMov","tryOptRem","tryOptMemoSlot","reconcile","isUpdate","setup","detectAreSameComponentTypesWithSameKeys","getHook","fromChild","parentId","isMove","isStable","isComponent","result","promise","all","setNextId","args","console","supportConditional","cancel","$$scope$","cancelTask","setValue","resetValue","assign","replaceScope","createUpdate","isTransition","createChanger","$createChanger","restore","fromRestore","detectIsFiberAlive","MessageChannel","port1","port2","MessagePort","channel","offs","event","off","postMessage","unref","Task","priority","forceAsync","taskRestorer","pendingSetter","nextTaskId","getPriority","getForceAsync","setIsTransition","getIsTransition","run","pending","markAsPending","isPending","canPending","markAsUnnecessary","isUnnecessary","getIsUnnecessary","setTaskRestorer","setLocationCreator","locationCreator","createLocation","setPendingSetter","loc","tasks","deep","$loc","split","some","$$loc","indexOf","createRootLocation","queue","HIGH","NORMAL","LOW","deadline","task","scheduledCallback","isMessageLoopRunning","port","performWorkUntilDeadline","bind","reset","schedule","put","execute","high","normal","low","getQueues","hasPrimary","hasLow","detectHasRelatedUpdate","complete","filter","splice","pick","shift","requestCallbackAsync","requestCallback","isBusy","unshift","hasChanger","isBatch","isEvent","callbackOptions","createHookLocation","change","batch","timer","changes","clearTimeout","addBatch","applyRef","current","mutableRef","hasOwnProperty","detectIsMutableRef","$$portal","container","innerHTML","getPortalContainer","SyntheticEvent","sourceEvent","target","propagation","stopPropagation","preventDefault","getPropagation","delegateEvent","eventName","handler","eventsMap","handlersMap","$handler","slice","rootHandler","$event","parentElement","dispatchEvent","WeakMap","document","addEventListener","removeEventListener","detectIsEvent","attrName","startsWith","getEventName","toLowerCase","STYLE_ATTR","CLASS_ATTR","CLASS_NAME_ATTR","moves","patches","svgTagNames","voidTagNames","createNativeElementMap","detectIsSvgElement","createElementNS","createTextNode","createComment","createNativeElement","node","setObjectStyle","style","setProperty","toggleAttribute","setAttribute","removeAttribute","patchProperties","tagName","attrValue","patchPropertiesSpecialCasesMap","prototype","getPrototypeOf","descriptor","getOwnPropertyDescriptor","canSetProperty","includes","input","checked","autofocus","focus","textarea","innerText","commitMap","childNodes","nativeElement","Text","splitText","appendNativeElement","insertNativeElement","attrNames","tagElement","addAttributes","commitCreation","sourceNodes","elements","collectElements","sourceFragment","DocumentFragment","elementIdx","removeNativeElement","replaceNativeElement","prevInstance","nextInstance","textContent","prevNode","nextNode","prevAttrs","nextAttrs","getAttributeNames","prevAttrValue","nextAttrValue","updateAttributes","commitUpdate","canRemoveNativeElement","appendChild","sibling","insertBefore","insertNativeElementByIndex","candidate","replaceChild","removeChild","roots","requestAnimationFrame","window","cancelAnimationFrame","isInjected","STYLED_ATTR","COMPONENTS_ATTR_VALUE","DOT_MARK","MEDIA_QUERY_MARK","CONTAINER_QUERY_MARK","mapProps","Keyframes","getName","getToken","detectIsKeyframes","Token","normalize","trim","markAsDynamic","detectIsToken","StyleRule","generate","NestingRule","className","fns","styles","replaceAll","keyframes","$styles","__","___","$keyframes","MediaQueryRule","nesting","$nesting","ContainerQueryRule","KeyframesRule","FunctionRule","end","isSealed","seal","getIsSealed","getEnd","styleExp","rest","media","detectIsStyleSheet","$media","$container","reduce","acc","StyleSheet","detectIsStyleRule","detectIsNestingRule","detectIsMediaQueryRule","detectIsContainerQueryRule","detectIsKeyframesRule","detectIsFunctionRule","createContext","defaultValue","context","Provider","Consumer","providerValue","subscribe","subscriber","createProvider","useContext","createConsumer","getProvider","update","hasProvider","unsubscribe","ThemeContext","STYLE_LEVEL","theme","ManagerContext","detectIsPropName","css","last","detectHasMediaQueryMark","detectHasContainerQueryMark","char","manager","detectHasSingleLineCommentEndMark","endsWith","detectHasMultiLineCommentStartMark","detectHasMultiLineCommentEndMark","detectHasFunctionMark","detectHasUrlFnMark","URL_FN_MARK","detectHasKeyframesMark","sub","substring","createEnd","cache","injections","isLoaded","$$styled","styled","selector","createTag","content","reuse","querySelectorAll","isExtending","detectIsStyled","config","getExtendingConfig","$source","t1","t2","first","$t1","$t2","raw","mergeTemplates","$args","$transform","filterArgs","sheet","sheets","baseName","baseStyle","baseKeyframes","forwardRef","isSwap","$props","$factory","names","keyframesList","classNames","getClassNamesFrom","items","arr","item","uniq","join","$tag","getTag","collectComponentStyle","setupGlobal","t","createStyledComponent","$sheet","rules","genClassName","rule","head","getElement","querySelector","strings","stylesheet","buffer","fnIdx","isSingleLineComment","isMultiLineComment","isPropValue","isUrl","joined","arg","class","h","charCodeAt","phash","abs","a","abbr","address","area","article","aside","audio","b","base","bdi","bdo","blockquote","body","br","button","canvas","caption","cite","code","col","colgroup","datalist","dd","del","details","dfn","dialog","div","dl","dt","em","embed","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","header","hgroup","hr","html","iframe","img","ins","kbd","label","legend","li","link","main","mark","menu","meta","meter","nav","noscript","object","ol","optgroup","option","output","param","picture","pre","progress","q","rp","rt","ruby","s","samp","script","section","select","small","span","strong","summary","sup","table","tbody","td","template","tfoot","th","thead","time","title","tr","track","u","ul","var","video","wbr","svg","circle","clipPath","defs","desc","ellipse","feBlend","feColorMatrix","feComponentTransfer","feComposite","feConvolveMatrix","feDiffuseLighting","feDisplacementMap","feDistantLight","feFlood","feFuncA","feFuncB","feFuncG","feFuncR","feGaussianBlur","feImage","feMerge","feMergeNode","feMorphology","feOffset","fePointLight","feSpecularLighting","feSpotLight","feTile","feTurbulence","g","image","line","linearGradient","marker","path","pattern","polygon","polyline","radialGradient","rect","switch","symbol","textPath","tspan","use","view","SharedState","ctrls","flow","Flow","RIGHT","isTrail","isPaused","isCanceled","timeout","timerId","getCtrls","setCtrls","setIsTrail","getIsTrail","setFlow","getIsPaused","getIsCanceled","detectIsRightFlow","setIsPlaying","detectIsPlaying","start","pause","resume","delay","resetTimer","subs","completeSeries","sharedState","presets","tension","friction","gentle","wobbly","stiff","preset","defaultSpringConfig","mass","precision","fix","Atom","val","__connect","connections1","connections2","subjects","toString","toJSON","valueOf","disconnect","__addSubject","atom$","__removeSubject","make","tuple","__notify","WritableAtom","Spring","prop","prop$","setProp","atom","notify","performance","Number","toFixed","range","fill","stepper","pos","vel","dest","step","nPos","nVel","spring","Controller","results","completed","immediate","immediates","isReplaced","setKey","getIdx","setIdx","setFrom","setTo","to","setSpringConfigFn","springConfigFn","setLeft","setRight","setConfigurator","configurator","setImmediate","replaceValue","markAsFake","primaryKey","generateFakeKey","detectIsFake","getIsReplaced","setIsReplaced","getItem","setItem","getState","getSpring","config1","config2","play","frameId","motion","frameTime","MAX_SKIPPED_FRAMES","checkCompleted","fakeKey","useTrail","setSharedState","springs","_api","getSharedState","prevCount","inChain","ctrl","prepare","api","chain","useSprings","reverse","LEFT","Animated","App","setSize","initialValue","setState","sourceValue","prevValue","newValue","useState","y","pageX","pageY","Panel","onClick","styleFn","Item","zIndex","getElementById","render","hydrate","isMounted","isHydrate","rootFiber","unmount","onCompleted","unmountRoot"],"sourceRoot":""}