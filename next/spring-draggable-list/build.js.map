{"version":3,"file":"build.js","mappings":"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","sources":["webpack://dark-spring-draggable-list/../../packages/core/src/constants.ts","webpack://dark-spring-draggable-list/../../packages/core/src/component/component.ts","webpack://dark-spring-draggable-list/../../packages/core/src/utils/utils.ts","webpack://dark-spring-draggable-list/../../packages/core/src/view/view.ts","webpack://dark-spring-draggable-list/../../packages/core/src/platform/platform.ts","webpack://dark-spring-draggable-list/../../packages/core/src/emitter/emitter.ts","webpack://dark-spring-draggable-list/../../packages/core/src/scope/scope.ts","webpack://dark-spring-draggable-list/../../packages/core/src/memo/memo.ts","webpack://dark-spring-draggable-list/../../packages/core/src/use-memo/use-memo.ts","webpack://dark-spring-draggable-list/../../packages/core/src/use-effect/use-effect.ts","webpack://dark-spring-draggable-list/../../packages/core/src/use-layout-effect/use-layout-effect.ts","webpack://dark-spring-draggable-list/../../packages/core/src/element/element.ts","webpack://dark-spring-draggable-list/../../packages/core/src/use-insertion-effect/use-insertion-effect.ts","webpack://dark-spring-draggable-list/../../packages/core/src/fiber/fiber.ts","webpack://dark-spring-draggable-list/../../packages/core/src/walk/walk.ts","webpack://dark-spring-draggable-list/../../packages/core/src/unmount/unmount.ts","webpack://dark-spring-draggable-list/../../packages/core/src/fragment/fragment.ts","webpack://dark-spring-draggable-list/../../packages/core/src/workloop/workloop.ts","webpack://dark-spring-draggable-list/../../packages/core/src/scheduler/scheduler.ts","webpack://dark-spring-draggable-list/../../packages/core/src/ref/ref.ts","webpack://dark-spring-draggable-list/../../packages/platform-browser/src/portal/portal.ts","webpack://dark-spring-draggable-list/../../packages/platform-browser/src/events/events.ts","webpack://dark-spring-draggable-list/../../packages/platform-browser/src/constants.ts","webpack://dark-spring-draggable-list/../../packages/platform-browser/src/dom/dom.ts","webpack://dark-spring-draggable-list/../../packages/platform-browser/src/render/render.ts","webpack://dark-spring-draggable-list/../../packages/animations/src/utils/utils.ts","webpack://dark-spring-draggable-list/../../packages/animations/src/state/state.ts","webpack://dark-spring-draggable-list/../../packages/animations/src/shared/shared.ts","webpack://dark-spring-draggable-list/../../packages/animations/src/preset/preset.ts","webpack://dark-spring-draggable-list/../../packages/core/src/atom/atom.ts","webpack://dark-spring-draggable-list/../../packages/animations/src/spring/spring.ts","webpack://dark-spring-draggable-list/../../packages/animations/src/stepper/stepper.ts","webpack://dark-spring-draggable-list/../../packages/animations/src/controller/controller.ts","webpack://dark-spring-draggable-list/../../packages/animations/src/animated/animated.ts","webpack://dark-spring-draggable-list/./index.tsx","webpack://dark-spring-draggable-list/../../packages/animations/src/use-springs/use-springs.ts","webpack://dark-spring-draggable-list/../../packages/platform-browser/src/create-root/create-root.tsx"],"sourcesContent":["export const VERSION = '0.25.1';\r\nexport const ROOT = 'dark:root';\r\nexport const REPLACER = 'dark:matter';\r\nexport const INDEX_KEY = 'dark:idx';\r\nexport const KEY_ATTR = 'key';\r\nexport const REF_ATTR = 'ref';\r\nexport const CREATE_EFFECT_TAG = 'C';\r\nexport const UPDATE_EFFECT_TAG = 'U';\r\nexport const DELETE_EFFECT_TAG = 'D';\r\nexport const SKIP_EFFECT_TAG = 'S';\r\nexport const INSERTION_EFFECT_HOST_MASK = 1;\r\nexport const LAYOUT_EFFECT_HOST_MASK = 2;\r\nexport const ASYNC_EFFECT_HOST_MASK = 4;\r\nexport const ATOM_HOST_MASK = 8;\r\nexport const PORTAL_HOST_MASK = 16;\r\nexport const SHADOW_MASK = 32;\r\nexport const FLUSH_MASK = 64;\r\nexport const MOVE_MASK = 128;\r\nexport const HOOK_DELIMETER = ':';\r\nexport const YIELD_INTERVAL = 6;\r\nexport const APP_STATE_ATTR = 'dark-app-state';\r\n\r\nexport enum TaskPriority {\r\n  LOW = 0,\r\n  NORMAL = 1,\r\n  HIGH = 2,\r\n}\r\n\r\nexport enum Flag {\r\n  SKIP_SCAN_OPT = '__skipScanOpt',\r\n  MEMO_SLOT_OPT = '__memoSlotOpt',\r\n  STATIC_SLOT_OPT = '__staticSlotOpt',\r\n}\r\n\r\nexport const FLAGS = {\r\n  __skipScanOpt: true,\r\n  __memoSlotOpt: true,\r\n  __staticSlotOpt: true,\r\n};\r\n\r\nexport const ATTR_BLACK_LIST = {\r\n  [KEY_ATTR]: true,\r\n  [REF_ATTR]: true,\r\n  [Flag.SKIP_SCAN_OPT]: true,\r\n  [Flag.MEMO_SLOT_OPT]: true,\r\n  [Flag.STATIC_SLOT_OPT]: true,\r\n};\r\n","import type { ElementKey, Instance, DarkElement, RefProps, KeyProps, FlagProps } from '../shared';\r\nimport { KEY_ATTR } from '../constants';\r\nimport { error } from '../utils';\r\nimport { type Ref } from '../ref';\r\n\r\nconst $$inject = Symbol('inject');\r\nclass Component<P extends StandardComponentProps = any, R = any> {\r\n  public type: CreateElement<P>;\r\n  public props: P;\r\n  public ref?: Ref<R>;\r\n  public token?: Symbol;\r\n  public displayName?: string;\r\n  public shouldUpdate?: ShouldUpdate<P>;\r\n  public children: Array<Instance> = [];\r\n\r\n  constructor(\r\n    type: CreateElement<P>,\r\n    token: Symbol,\r\n    props: P,\r\n    ref: Ref<R>,\r\n    shouldUpdate: ShouldUpdate<P>,\r\n    displayName: string,\r\n  ) {\r\n    this.type = type;\r\n    this.props = props;\r\n    ref && (this.ref = ref);\r\n    token && (this.token = token);\r\n    shouldUpdate && (this.shouldUpdate = shouldUpdate);\r\n    displayName && (this.displayName = displayName);\r\n  }\r\n}\r\n\r\nfunction component<P extends object, R = unknown>(type: CreateElement<P, R>, options: ComponentOptions = {}) {\r\n  const { token: $token, displayName } = options;\r\n  type Props = P & StandardComponentProps;\r\n  const factory: ComponentFactoryWithPossiblyInject<Props, R> = (props = {} as Props, ref?: Ref<R>) => {\r\n    const { token = $token, shouldUpdate } = factory[$$inject] || defaultInject;\r\n\r\n    if (props.ref) {\r\n      delete props.ref;\r\n\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        process.env.NODE_ENV === 'development' &&\r\n          error(`[Dark]: To use ref you need to wrap the component with forwardRef!`);\r\n      }\r\n    }\r\n\r\n    return new Component(type, token, props, ref, shouldUpdate, displayName);\r\n  };\r\n\r\n  return factory as ComponentFactory<Props, R>;\r\n}\r\n\r\nconst defaultInject: ComponentInject = {};\r\n\r\nconst detectIsComponent = (x: unknown): x is Component => x instanceof Component;\r\n\r\nconst getComponentKey = (x: Component): ElementKey => x.props[KEY_ATTR] ?? null;\r\n\r\nconst hasComponentFlag = (inst: Component, flag: string) => Boolean(inst.props[flag]);\r\n\r\ntype ComponentOptions = Readonly<{\r\n  displayName?: string;\r\n  token?: Symbol;\r\n}>;\r\n\r\ntype ComponentFactoryWithPossiblyInject<P extends object = {}, R = unknown> = {\r\n  (props?: P, ref?: Ref<R>): Component<P, R>;\r\n  [$$inject]?: ComponentInject<P>;\r\n};\r\n\r\ntype CreateElement<P extends StandardComponentProps, R = unknown> = (props: P, ref?: Ref<R>) => DarkElement;\r\n\r\nexport type ComponentInject<P extends object = {}> = Readonly<{\r\n  token?: Symbol;\r\n  shouldUpdate?: ShouldUpdate<P>;\r\n}>;\r\n\r\nexport type ShouldUpdate<P> = (prevProps: P, nextProps: P) => boolean;\r\n\r\nexport type StandardComponentProps = KeyProps & RefProps & FlagProps;\r\n\r\nexport type ComponentFactory<P extends object = {}, R = unknown> = (props?: P, ref?: Ref<R>) => Component<P, R>;\r\n\r\nexport { Component, component, $$inject, detectIsComponent, getComponentKey, hasComponentFlag };\r\n","import type { NestedArray } from '../shared';\r\nimport { INDEX_KEY } from '../constants';\r\n\r\nconst detectIsFunction = (o: any): o is Function => typeof o === 'function';\r\n\r\nconst detectIsUndefined = (o: any): o is undefined => typeof o === 'undefined';\r\n\r\nconst detectIsNumber = (o: any): o is number => typeof o === 'number';\r\n\r\nconst detectIsString = (o: any): o is string => typeof o === 'string';\r\n\r\nconst detectIsTextBased = (o: any): o is string | number => typeof o === 'string' || typeof o === 'number';\r\n\r\nconst detectIsObject = (o: any): o is object => typeof o === 'object';\r\n\r\nconst detectIsBoolean = (o: any): o is boolean => typeof o === 'boolean';\r\n\r\nconst detectIsArray = (o: any): o is Array<any> => Array.isArray(o);\r\n\r\nconst detectIsNull = (o: any): o is null => o === null;\r\n\r\nconst detectIsEmpty = (o: any) => detectIsNull(o) || detectIsUndefined(o);\r\n\r\nconst detectIsFalsy = (o: any) => detectIsEmpty(o) || o === false;\r\n\r\nconst getTime = () => Date.now();\r\n\r\nconst dummyFn = () => {};\r\n\r\nconst trueFn = () => true;\r\n\r\nconst falseFn = () => false;\r\n\r\nconst sameFn = <T = any>(x: T) => x;\r\n\r\nconst error = (...args: Array<any>) => !detectIsUndefined(console) && console.error(...args);\r\n\r\nfunction flatten<T = any>(source: Array<NestedArray<T>>, transform: (x: T) => any = sameFn): Array<T> {\r\n  if (detectIsArray(source)) {\r\n    if (source.length === 0) return [];\r\n  } else {\r\n    return [transform(source)];\r\n  }\r\n  const list: Array<T> = [];\r\n  const stack = [source[0]];\r\n  let idx = 0;\r\n\r\n  while (stack.length > 0) {\r\n    const x = stack.pop();\r\n\r\n    if (detectIsArray(x)) {\r\n      for (let i = x.length - 1; i >= 0; i--) {\r\n        stack.push(x[i]);\r\n      }\r\n    } else {\r\n      list.push(transform(x));\r\n\r\n      if (stack.length === 0 && idx < source.length - 1) {\r\n        idx++;\r\n        stack.push(source[idx]);\r\n      }\r\n    }\r\n  }\r\n\r\n  return list;\r\n}\r\n\r\nfunction keyBy<T = any>(\r\n  list: Array<T>,\r\n  fn: (o: T) => string | number,\r\n  value = false,\r\n): Record<string | number, T | boolean> {\r\n  return list.reduce((acc, x) => ((acc[fn(x)] = value ? x : true), acc), {});\r\n}\r\n\r\nfunction detectAreDepsDifferent(prevDeps: Array<unknown>, nextDeps: Array<unknown>): boolean {\r\n  if (prevDeps === nextDeps) return false;\r\n  const max = Math.max(prevDeps.length, nextDeps.length);\r\n\r\n  for (let i = 0; i < max; i++) {\r\n    if (!Object.is(prevDeps[i], nextDeps[i])) return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nfunction nextTick(callback: () => void) {\r\n  Promise.resolve().then(callback);\r\n}\r\n\r\nconst createIndexKey = (idx: number) => `${INDEX_KEY}:${idx}`;\r\n\r\nexport {\r\n  detectIsFunction,\r\n  detectIsUndefined,\r\n  detectIsNumber,\r\n  detectIsString,\r\n  detectIsTextBased,\r\n  detectIsObject,\r\n  detectIsBoolean,\r\n  detectIsArray,\r\n  detectIsNull,\r\n  detectIsEmpty,\r\n  detectIsFalsy,\r\n  getTime,\r\n  dummyFn,\r\n  trueFn,\r\n  falseFn,\r\n  error,\r\n  flatten,\r\n  keyBy,\r\n  detectAreDepsDifferent,\r\n  nextTick,\r\n  createIndexKey,\r\n};\r\n","import type { ElementKey, DarkElement, Instance, SlotProps, RefProps, KeyProps, FlagProps } from '../shared';\r\nimport { type Component, detectIsComponent, getComponentKey, hasComponentFlag } from '../component';\r\nimport { detectIsArray, detectIsFunction } from '../utils';\r\nimport { REPLACER, KEY_ATTR } from '../constants';\r\nimport { $$scope } from '../scope';\r\n\r\nconst $$vNode = Symbol('vNode');\r\nconst ATTR_TYPE = 'type';\r\n\r\nclass VirtualNode {\r\n  public type: NodeType = null;\r\n\r\n  constructor(type: NodeType) {\r\n    this.type = type;\r\n  }\r\n}\r\n\r\nclass TagVirtualNode extends VirtualNode {\r\n  public name: string;\r\n  public attrs: Record<string, any>;\r\n  public children: Array<TextVirtualNode | CommentVirtualNode | TagVirtualNode | VirtualNodeFactory | Component>;\r\n\r\n  constructor(name: string, attrs: TagVirtualNode['attrs'], children: TagVirtualNode['children']) {\r\n    super(NodeType.TAG);\r\n    this.name = name;\r\n    this.attrs = attrs;\r\n    this.children = children;\r\n  }\r\n}\r\n\r\nclass TextVirtualNode extends VirtualNode {\r\n  public value: string;\r\n\r\n  constructor(source: TextSource) {\r\n    super(NodeType.TEXT);\r\n    this.value = String(source);\r\n  }\r\n}\r\n\r\nclass CommentVirtualNode extends VirtualNode {\r\n  public value = '';\r\n\r\n  constructor(text: string) {\r\n    super(NodeType.COMMENT);\r\n    this.value = text;\r\n  }\r\n}\r\n\r\nfunction View(options: ViewOptions) {\r\n  const factory: TagVirtualNodeFactory = () => {\r\n    const { as: name, slot, _void = false, ...attrs } = options;\r\n    const children = (_void ? [] : detectIsArray(slot) ? slot : slot ? [slot] : []) as TagVirtualNode['children'];\r\n\r\n    return new TagVirtualNode(name, attrs, children);\r\n  };\r\n\r\n  factory[$$vNode] = true;\r\n  factory[ATTR_TYPE] = options.as;\r\n  factory[KEY_ATTR] = options.key;\r\n\r\n  return factory;\r\n}\r\n\r\nconst Text = (source: TextSource) => new TextVirtualNode(source);\r\n\r\nText.from = (source: DarkElement) => (detectIsTextVirtualNode(source) ? source.value : source + '');\r\n\r\nconst Comment = (text: string) => new CommentVirtualNode(text);\r\n\r\nconst detectIsVirtualNode = (vNode: unknown): vNode is VirtualNode => vNode instanceof VirtualNode;\r\n\r\nconst detectIsTagVirtualNode = (vNode: unknown): vNode is TagVirtualNode => vNode instanceof TagVirtualNode;\r\n\r\nconst detectIsCommentVirtualNode = (vNode: unknown): vNode is CommentVirtualNode => vNode instanceof CommentVirtualNode;\r\n\r\nconst detectIsTextVirtualNode = (vNode: unknown): vNode is TextVirtualNode => vNode instanceof TextVirtualNode;\r\n\r\nconst detectIsVirtualNodeFactory = (factory: unknown): factory is VirtualNodeFactory =>\r\n  detectIsFunction(factory) && factory[$$vNode] === true;\r\n\r\nconst getTagVirtualNodeKey = (vNode: TagVirtualNode): ElementKey | null =>\r\n  vNode.attrs ? vNode.attrs[KEY_ATTR] ?? null : null;\r\n\r\nconst hasTagVirtualNodeFlag = (vNode: TagVirtualNode, flag: string) => Boolean(vNode.attrs && vNode.attrs[flag]);\r\n\r\nconst getVirtualNodeFactoryKey = (factory: VirtualNodeFactory): ElementKey | null => factory[KEY_ATTR] ?? null;\r\n\r\nconst hasVirtualNodeFactoryFlag = (factory: VirtualNodeFactory, flag: string) => Boolean(factory[flag]);\r\n\r\nconst detectIsPlainVirtualNode = (vNode: unknown): vNode is PlainVirtualNode =>\r\n  detectIsTextVirtualNode(vNode) || detectIsCommentVirtualNode(vNode);\r\n\r\nconst createReplacer = () => new CommentVirtualNode(REPLACER);\r\n\r\nconst detectIsReplacer = (vNode: unknown) => detectIsCommentVirtualNode(vNode) && vNode.value === REPLACER;\r\n\r\nfunction getElementKey(inst: Instance): ElementKey | null {\r\n  return detectIsComponent(inst)\r\n    ? getComponentKey(inst)\r\n    : detectIsVirtualNodeFactory(inst)\r\n    ? getVirtualNodeFactoryKey(inst)\r\n    : detectIsTagVirtualNode(inst)\r\n    ? getTagVirtualNodeKey(inst)\r\n    : null;\r\n}\r\n\r\nfunction hasElementFlag(inst: Instance, flag: string) {\r\n  return detectIsComponent(inst)\r\n    ? hasComponentFlag(inst, flag)\r\n    : detectIsVirtualNodeFactory(inst)\r\n    ? hasVirtualNodeFactoryFlag(inst, flag)\r\n    : detectIsTagVirtualNode(inst)\r\n    ? hasTagVirtualNodeFlag(inst, flag)\r\n    : false;\r\n}\r\n\r\nfunction getElementType(inst: Instance): string | Function {\r\n  return detectIsComponent(inst)\r\n    ? inst.type\r\n    : detectIsVirtualNodeFactory(inst)\r\n    ? inst[ATTR_TYPE]\r\n    : detectIsTagVirtualNode(inst)\r\n    ? inst.name\r\n    : detectIsVirtualNode(inst)\r\n    ? inst.type\r\n    : null;\r\n}\r\n\r\nfunction hasChildrenProp(inst: Instance): inst is TagVirtualNode | Component {\r\n  return detectIsTagVirtualNode(inst) || detectIsComponent(inst);\r\n}\r\n\r\nfunction detectAreSameInstanceTypes(prevInst: Instance, nextInst: Instance, isComponentFactories = false) {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    if (process.env.NODE_ENV === 'development' && $$scope().getIsHot()) {\r\n      if (detectIsComponent(prevInst) && detectIsComponent(nextInst)) {\r\n        return prevInst.displayName === nextInst.displayName;\r\n      }\r\n    }\r\n  }\r\n\r\n  if (isComponentFactories) {\r\n    const pc = prevInst as Component;\r\n    const nc = nextInst as Component;\r\n\r\n    return pc.type === nc.type;\r\n  }\r\n\r\n  return getElementType(prevInst) === getElementType(nextInst);\r\n}\r\n\r\nfunction detectAreSameComponentTypesWithSameKeys(prevInst: Instance | null, nextInst: Instance | null) {\r\n  if (\r\n    prevInst &&\r\n    nextInst &&\r\n    detectIsComponent(prevInst) &&\r\n    detectIsComponent(nextInst) &&\r\n    detectAreSameInstanceTypes(prevInst, nextInst, true)\r\n  ) {\r\n    return getElementKey(prevInst) === getElementKey(nextInst);\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\ntype TextSource = string | number;\r\n\r\nexport type VirtualNodeFactory = () => VirtualNode;\r\n\r\nexport type TagVirtualNodeFactory = () => TagVirtualNode;\r\n\r\nexport type PlainVirtualNode = TextVirtualNode | CommentVirtualNode;\r\n\r\nexport type ViewOptions = {\r\n  as: string;\r\n  _void?: boolean;\r\n  [prop: string]: any;\r\n} & Partial<SlotProps> &\r\n  RefProps &\r\n  KeyProps &\r\n  FlagProps;\r\n\r\nexport enum NodeType {\r\n  TAG = 'TAG',\r\n  TEXT = 'TEXT',\r\n  COMMENT = 'COMMENT',\r\n}\r\n\r\nexport {\r\n  View,\r\n  Text,\r\n  Comment,\r\n  VirtualNode,\r\n  TagVirtualNode,\r\n  TextVirtualNode,\r\n  CommentVirtualNode,\r\n  createReplacer,\r\n  detectIsReplacer,\r\n  getElementKey,\r\n  hasElementFlag,\r\n  getElementType,\r\n  hasChildrenProp,\r\n  detectIsVirtualNode,\r\n  detectIsTagVirtualNode,\r\n  detectIsCommentVirtualNode,\r\n  detectIsTextVirtualNode,\r\n  detectIsPlainVirtualNode,\r\n  detectIsVirtualNodeFactory,\r\n  detectAreSameInstanceTypes,\r\n  detectAreSameComponentTypesWithSameKeys,\r\n};\r\n","import { type Fiber } from '../fiber';\r\nimport { type VirtualNode } from '../view';\r\nimport { type Callback } from '../shared';\r\n\r\nexport type Platform = {\r\n  createElement: <N>(vNode: VirtualNode) => N;\r\n  insertElement: <N>(node: N, idx: number, parent: N) => void;\r\n  raf: typeof requestAnimationFrame;\r\n  caf: typeof cancelAnimationFrame;\r\n  spawn: (callback: Callback) => void;\r\n  commit: (fiber: Fiber) => void;\r\n  finishCommit: () => void;\r\n  detectIsDynamic: () => boolean;\r\n  detectIsPortal: (instance: unknown) => boolean;\r\n  unmountPortal: (fiber: Fiber) => void;\r\n  chunk: (fiber: Fiber) => void;\r\n};\r\n\r\nconst defaultRealisation = () => {\r\n  throw new Error('Function not installed by renderer!');\r\n};\r\n\r\nconst platform: Platform = {\r\n  createElement: defaultRealisation,\r\n  insertElement: defaultRealisation,\r\n  raf: defaultRealisation,\r\n  caf: defaultRealisation,\r\n  spawn: defaultRealisation,\r\n  commit: defaultRealisation,\r\n  finishCommit: defaultRealisation,\r\n  detectIsDynamic: defaultRealisation,\r\n  detectIsPortal: defaultRealisation,\r\n  unmountPortal: defaultRealisation,\r\n  chunk: defaultRealisation,\r\n};\r\n\r\nconst detectIsServer = () => !platform.detectIsDynamic();\r\n\r\nexport { platform, detectIsServer };\r\n","import { type SubscriberWithValue } from '../shared';\r\n\r\ntype EventName = 'finish' | 'chunk';\r\n\r\nclass EventEmitter<E extends string = EventName, T = unknown> {\r\n  private subscribers: Map<Partial<E>, Set<SubscriberWithValue<unknown>>> = new Map();\r\n\r\n  on<T>(e: E, fn: SubscriberWithValue<T>) {\r\n    !this.subscribers.has(e) && this.subscribers.set(e, new Set());\r\n    this.subscribers.get(e).add(fn);\r\n\r\n    return () => this.subscribers.has(e) && this.subscribers.get(e).delete(fn);\r\n  }\r\n\r\n  emit(e: E, data?: T) {\r\n    this.subscribers.has(e) && this.subscribers.get(e).forEach(x => x(data));\r\n  }\r\n\r\n  kill() {\r\n    this.subscribers = new Map();\r\n  }\r\n\r\n  __getSize() {\r\n    return this.subscribers.size;\r\n  }\r\n}\r\n\r\nexport { EventEmitter };\r\n","import type { Callback, ElementKey, AppResources, AppResource } from '../shared';\r\nimport { type SetPendingStatus } from '../start-transition';\r\nimport { platform, detectIsServer } from '../platform';\r\nimport { EventEmitter } from '../emitter';\r\nimport { type Fiber } from '../fiber';\r\n\r\nclass Scope {\r\n  private root: Fiber = null;\r\n  private wip: Fiber = null;\r\n  private cursor: Fiber = null;\r\n  private unit: Fiber = null;\r\n  private mountDeep = true;\r\n  private mountLevel = 0;\r\n  private mountNav: Record<number, number> = {};\r\n  private events: Map<string, WeakMap<object, Function>> = new Map();\r\n  private unsubs: Set<Callback> = new Set();\r\n  private actions: Actions = {};\r\n  private candidates: Set<Fiber> = new Set();\r\n  private deletions: Set<Fiber> = new Set();\r\n  private cancels: Array<Callback> = [];\r\n  private asyncEffects: Set<Callback> = new Set();\r\n  private layoutEffects: Set<Callback> = new Set();\r\n  private insertionEffects: Set<Callback> = new Set();\r\n  private resourceId = 0;\r\n  private resources: AppResources = new Map();\r\n  private defers: Array<() => Promise<unknown>> = [];\r\n  private setPendingStatus: SetPendingStatus = null;\r\n  private isLayoutEffectsZone = false;\r\n  private isInsertionEffectsZone = false;\r\n  private isUpdateZone = false;\r\n  private isBatchZone = false;\r\n  private isHydrateZone = false;\r\n  private isStreamZone = false;\r\n  private isTransitionZone = false;\r\n  private isEventZone = false;\r\n  private isHot = false;\r\n  private isDynamic = platform.detectIsDynamic();\r\n  private isServer = detectIsServer();\r\n  private emitter = new EventEmitter();\r\n\r\n  private resetActions() {\r\n    this.actions = {};\r\n  }\r\n\r\n  getActionsById(id: number) {\r\n    return this.actions[id];\r\n  }\r\n\r\n  addActionMap(id: number, map: Record<ElementKey, Fiber>) {\r\n    this.actions[id] = {\r\n      map,\r\n      replace: null,\r\n      insert: null,\r\n      remove: null,\r\n      move: null,\r\n      stable: null,\r\n    };\r\n  }\r\n\r\n  addReplaceAction(id: number, nextKey: ElementKey) {\r\n    !this.actions[id].replace && (this.actions[id].replace = {});\r\n    this.actions[id].replace[nextKey] = true;\r\n  }\r\n\r\n  addInsertAction(id: number, nextKey: ElementKey) {\r\n    !this.actions[id].insert && (this.actions[id].insert = {});\r\n    this.actions[id].insert[nextKey] = true;\r\n  }\r\n\r\n  addRemoveAction(id: number, prevKey: ElementKey) {\r\n    !this.actions[id].remove && (this.actions[id].remove = {});\r\n    this.actions[id].remove[prevKey] = true;\r\n  }\r\n\r\n  addMoveAction(id: number, nextKey: ElementKey) {\r\n    !this.actions[id].move && (this.actions[id].move = {});\r\n    this.actions[id].move[nextKey] = true;\r\n  }\r\n\r\n  addStableAction(id: number, nextKey: ElementKey) {\r\n    !this.actions[id].stable && (this.actions[id].stable = {});\r\n    this.actions[id].stable[nextKey] = true;\r\n  }\r\n\r\n  copy() {\r\n    const scope = new Scope();\r\n\r\n    scope.root = null;\r\n    scope.wip = null;\r\n    scope.cursor = null;\r\n    scope.unit = this.unit;\r\n    scope.mountDeep = this.mountDeep;\r\n    scope.mountLevel = this.mountLevel;\r\n    scope.mountNav = { ...this.mountNav };\r\n    scope.events = this.events;\r\n    scope.unsubs = this.unsubs;\r\n    scope.actions = { ...this.actions };\r\n    scope.candidates = new Set([...this.candidates]);\r\n    scope.deletions = new Set([...this.deletions]);\r\n    scope.asyncEffects = new Set([...this.asyncEffects]);\r\n    scope.layoutEffects = new Set([...this.layoutEffects]);\r\n    scope.insertionEffects = new Set([...this.insertionEffects]);\r\n    scope.isUpdateZone = this.isUpdateZone;\r\n    scope.emitter = this.emitter;\r\n\r\n    return scope;\r\n  }\r\n\r\n  getRoot() {\r\n    return this.root;\r\n  }\r\n\r\n  setRoot(fiber: Fiber) {\r\n    this.root = fiber;\r\n  }\r\n\r\n  getWorkInProgress() {\r\n    return this.wip;\r\n  }\r\n\r\n  setWorkInProgress(fiber: Fiber) {\r\n    this.wip = fiber;\r\n  }\r\n\r\n  getNextUnitOfWork() {\r\n    return this.unit;\r\n  }\r\n\r\n  setNextUnitOfWork(fiber: Fiber) {\r\n    this.unit = fiber;\r\n  }\r\n\r\n  getCursorFiber() {\r\n    return this.cursor;\r\n  }\r\n\r\n  setCursorFiber(fiber: Fiber) {\r\n    this.cursor = fiber;\r\n  }\r\n\r\n  navToChild() {\r\n    this.mountLevel = this.mountLevel + 1;\r\n    this.mountNav[this.mountLevel] = 0;\r\n  }\r\n\r\n  navToSibling() {\r\n    this.mountNav[this.mountLevel] = this.mountNav[this.mountLevel] + 1;\r\n  }\r\n\r\n  navToParent() {\r\n    this.mountLevel = this.mountLevel - 1;\r\n  }\r\n\r\n  navToPrev() {\r\n    const idx = this.getMountIndex();\r\n\r\n    if (idx === 0) {\r\n      this.navToParent();\r\n      this.setMountDeep(true);\r\n    } else {\r\n      this.mountNav[this.mountLevel] = this.mountNav[this.mountLevel] - 1;\r\n      this.setMountDeep(false);\r\n    }\r\n  }\r\n\r\n  getMountIndex() {\r\n    return this.mountNav[this.mountLevel];\r\n  }\r\n\r\n  getMountDeep() {\r\n    return this.mountDeep;\r\n  }\r\n\r\n  setMountDeep(value: boolean) {\r\n    this.mountDeep = value;\r\n  }\r\n\r\n  resetMount() {\r\n    this.mountLevel = 0;\r\n    this.mountNav = {};\r\n    this.mountDeep = true;\r\n  }\r\n\r\n  getEvents() {\r\n    return this.events;\r\n  }\r\n\r\n  addEventUnsubscriber(fn: Callback) {\r\n    this.unsubs.add(fn);\r\n  }\r\n\r\n  unsubscribeEvents() {\r\n    this.unsubs.forEach(x => x());\r\n    this.unsubs = new Set();\r\n  }\r\n\r\n  getCandidates() {\r\n    return this.candidates;\r\n  }\r\n\r\n  addCandidate(fiber: Fiber) {\r\n    this.candidates.add(fiber);\r\n  }\r\n\r\n  resetCandidates() {\r\n    this.candidates = new Set();\r\n  }\r\n\r\n  getDeletions() {\r\n    return this.deletions;\r\n  }\r\n\r\n  hasDeletion(fiber: Fiber) {\r\n    let nextFiber = fiber;\r\n\r\n    while (nextFiber) {\r\n      if (this.deletions.has(nextFiber)) return true;\r\n      nextFiber = nextFiber.parent;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  addDeletion(fiber: Fiber) {\r\n    !this.hasDeletion(fiber) && this.deletions.add(fiber);\r\n  }\r\n\r\n  resetDeletions() {\r\n    this.deletions = new Set();\r\n  }\r\n\r\n  addAsyncEffect(fn: Callback) {\r\n    this.asyncEffects.add(fn);\r\n  }\r\n\r\n  resetAsyncEffects() {\r\n    this.asyncEffects = new Set();\r\n  }\r\n\r\n  runAsyncEffects() {\r\n    if (!this.isDynamic) return;\r\n    const effects = this.asyncEffects;\r\n    effects.size > 0 && setTimeout(() => effects.forEach(fn => fn()));\r\n  }\r\n\r\n  addLayoutEffect(fn: Callback) {\r\n    this.layoutEffects.add(fn);\r\n  }\r\n\r\n  resetLayoutEffects() {\r\n    this.layoutEffects = new Set();\r\n  }\r\n\r\n  runLayoutEffects() {\r\n    if (!this.isDynamic) return;\r\n    this.setIsLayoutEffectsZone(true);\r\n    this.layoutEffects.forEach(fn => fn());\r\n    this.setIsLayoutEffectsZone(false);\r\n  }\r\n\r\n  addInsertionEffect(fn: Callback) {\r\n    this.insertionEffects.add(fn);\r\n  }\r\n\r\n  resetInsertionEffects() {\r\n    this.insertionEffects = new Set();\r\n  }\r\n\r\n  runInsertionEffects() {\r\n    if (!this.isDynamic) return;\r\n    this.setIsInsertionEffectsZone(true);\r\n    this.insertionEffects.forEach(fn => fn());\r\n    this.setIsInsertionEffectsZone(false);\r\n  }\r\n\r\n  addCancel(fn: Callback) {\r\n    this.cancels.push(fn);\r\n  }\r\n\r\n  applyCancels() {\r\n    for (let i = this.cancels.length - 1; i >= 0; i--) {\r\n      this.cancels[i]();\r\n    }\r\n  }\r\n\r\n  resetCancels() {\r\n    this.cancels = [];\r\n  }\r\n\r\n  getIsLayoutEffectsZone() {\r\n    return this.isLayoutEffectsZone;\r\n  }\r\n\r\n  setIsLayoutEffectsZone(value: boolean) {\r\n    this.isLayoutEffectsZone = value;\r\n  }\r\n\r\n  getIsInsertionEffectsZone() {\r\n    return this.isInsertionEffectsZone;\r\n  }\r\n\r\n  setIsInsertionEffectsZone(value: boolean) {\r\n    this.isInsertionEffectsZone = value;\r\n  }\r\n\r\n  getIsUpdateZone() {\r\n    return this.isUpdateZone;\r\n  }\r\n\r\n  setIsUpdateZone(value: boolean) {\r\n    this.isUpdateZone = value;\r\n  }\r\n\r\n  getIsBatchZone() {\r\n    return this.isBatchZone;\r\n  }\r\n\r\n  setIsBatchZone(value: boolean) {\r\n    this.isBatchZone = value;\r\n  }\r\n\r\n  getIsHydrateZone() {\r\n    return this.isHydrateZone;\r\n  }\r\n\r\n  setIsHydrateZone(value: boolean) {\r\n    this.isHydrateZone = value;\r\n  }\r\n\r\n  getIsStreamZone() {\r\n    return this.isStreamZone;\r\n  }\r\n\r\n  setIsStreamZone(value: boolean) {\r\n    this.isStreamZone = value;\r\n  }\r\n\r\n  getIsTransitionZone() {\r\n    return this.isTransitionZone;\r\n  }\r\n\r\n  setIsTransitionZone(value: boolean) {\r\n    this.isTransitionZone = value;\r\n  }\r\n\r\n  getIsEventZone() {\r\n    return this.isEventZone;\r\n  }\r\n\r\n  setIsEventZone(value: boolean) {\r\n    this.isEventZone = value;\r\n  }\r\n\r\n  getIsHot() {\r\n    return this.isHot;\r\n  }\r\n\r\n  setIsHot(value: boolean) {\r\n    this.isHot = value;\r\n  }\r\n\r\n  getPendingStatusSetter() {\r\n    return this.setPendingStatus;\r\n  }\r\n\r\n  setPendingStatusSetter(fn: SetPendingStatus) {\r\n    this.setPendingStatus = fn;\r\n  }\r\n\r\n  flush() {\r\n    !this.isUpdateZone && this.setRoot(this.wip); // !\r\n    this.setWorkInProgress(null);\r\n    this.setNextUnitOfWork(null);\r\n    this.setCursorFiber(null);\r\n    this.resetMount();\r\n    this.resetCandidates();\r\n    this.resetDeletions();\r\n    this.resetCancels();\r\n    this.resetInsertionEffects();\r\n    this.resetLayoutEffects();\r\n    this.resetAsyncEffects();\r\n    this.setIsHydrateZone(false);\r\n    this.setIsUpdateZone(false);\r\n    this.resetActions();\r\n  }\r\n\r\n  getEmitter() {\r\n    return this.emitter;\r\n  }\r\n\r\n  defer(fn: () => Promise<unknown>) {\r\n    this.defers.push(fn);\r\n  }\r\n\r\n  getDefers() {\r\n    return this.defers;\r\n  }\r\n\r\n  resetDefers() {\r\n    this.defers = [];\r\n  }\r\n\r\n  getResource(id: number) {\r\n    return this.resources.get(id);\r\n  }\r\n\r\n  setResource(id: number, res: AppResource) {\r\n    this.resources.set(id, res);\r\n  }\r\n\r\n  getResources() {\r\n    return this.resources;\r\n  }\r\n\r\n  getResourceId() {\r\n    return this.resourceId;\r\n  }\r\n\r\n  setResourceId(id: number) {\r\n    this.resourceId = id;\r\n  }\r\n\r\n  getNextResourceId() {\r\n    return ++this.resourceId;\r\n  }\r\n\r\n  runAfterCommit() {\r\n    this.resources = new Map();\r\n    this.isServer && (this.resourceId = 0);\r\n  }\r\n}\r\n\r\ntype Actions = Record<\r\n  number,\r\n  {\r\n    map: Record<ElementKey, Fiber>;\r\n    replace: Record<ElementKey, true>;\r\n    insert: Record<ElementKey, true>;\r\n    remove: Record<ElementKey, true>;\r\n    move: Record<ElementKey, true>;\r\n    stable: Record<ElementKey, true>;\r\n  }\r\n>;\r\n\r\nlet rootId: number = null;\r\nconst scopes = new Map<number, Scope>();\r\n\r\nconst getRootId = () => rootId;\r\n\r\nconst setRootId = (id: number) => {\r\n  rootId = id;\r\n  !scopes.has(rootId) && scopes.set(rootId, new Scope());\r\n};\r\n\r\nconst removeScope = (id: number) => scopes.delete(id);\r\n\r\nconst replaceScope = (scope: Scope, id: number = rootId) => {\r\n  Object.assign(scopes.get(id), scope);\r\n};\r\n\r\nconst $$scope = (id: number = rootId) => scopes.get(id);\r\n\r\nexport { type Scope, getRootId, setRootId, removeScope, replaceScope, $$scope };\r\n","import {\r\n  type ComponentFactory,\r\n  type StandardComponentProps,\r\n  type ShouldUpdate,\r\n  type ComponentInject,\r\n  $$inject,\r\n  detectIsComponent,\r\n} from '../component';\r\nimport type { SlotProps, RefProps } from '../shared';\r\n\r\nconst $$memo = Symbol('memo');\r\n\r\nconst defaultShouldUpdate = (props: {}, nextProps: {}): boolean => {\r\n  const keys = Object.keys(nextProps);\r\n\r\n  for (const key of keys) {\r\n    if (key !== 'slot' && nextProps[key] !== props[key]) return true;\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\nfunction memo<P extends object, R = unknown>(\r\n  factory: ComponentFactory<P, R>,\r\n  shouldUpdate: ShouldUpdate<P & SlotProps> = defaultShouldUpdate,\r\n) {\r\n  type P1 = P & Omit<StandardComponentProps, 'ref'> & RefProps<R>;\r\n\r\n  factory[$$inject] = {\r\n    token: $$memo,\r\n    shouldUpdate,\r\n  } as ComponentInject<P1>;\r\n\r\n  return factory as ComponentFactory<P1, R>;\r\n}\r\n\r\nconst detectIsMemo = (instance: unknown) => detectIsComponent(instance) && instance.token === $$memo;\r\n\r\nexport { memo, detectIsMemo };\r\n","import { type VirtualNodeFactory, detectIsVirtualNodeFactory } from '../view';\r\nimport { type Component, detectIsComponent, component } from '../component';\r\nimport { type Hook, type HookValue } from '../fiber';\r\nimport { detectAreDepsDifferent } from '../utils';\r\nimport { $$scope } from '../scope';\r\nimport { memo } from '../memo';\r\n\r\ntype GetMemoValue = () => Component | VirtualNodeFactory;\r\n\r\ntype MemoProps = {\r\n  deps: Array<any>;\r\n  getValue: GetMemoValue;\r\n};\r\n\r\nconst Memo = memo(\r\n  component<MemoProps>(({ getValue }) => getValue()),\r\n  (p, n) => detectAreDepsDifferent(p.deps, n.deps),\r\n);\r\n\r\nfunction detectIsElement<T>(value: T) {\r\n  return detectIsComponent(value) || detectIsVirtualNodeFactory(value);\r\n}\r\n\r\nfunction useMemo<T>(getValue: () => T, deps: Array<any>): T {\r\n  const fiber = $$scope().getCursorFiber();\r\n  const { hook } = fiber;\r\n  const { idx, values } = hook as Hook<HookValue<T>>;\r\n  const state =\r\n    values[idx] ||\r\n    (values[idx] = {\r\n      deps,\r\n      value: getValue(),\r\n    });\r\n  let value: T = null;\r\n  let $value: T = null;\r\n\r\n  if (detectIsElement(state.value)) {\r\n    value = state.value;\r\n    $value = Memo({ getValue: getValue as GetMemoValue, deps }) as unknown as T;\r\n  } else {\r\n    value = detectAreDepsDifferent(state.deps, deps) ? getValue() : state.value;\r\n    $value = value;\r\n  }\r\n\r\n  state.deps = deps;\r\n  state.value = value;\r\n  hook.idx++;\r\n\r\n  return $value;\r\n}\r\n\r\nexport { useMemo };\r\n","import { detectIsFunction } from '../utils';\r\nimport { INSERTION_EFFECT_HOST_MASK, LAYOUT_EFFECT_HOST_MASK, ASYNC_EFFECT_HOST_MASK } from '../constants';\r\nimport { $$scope } from '../scope';\r\nimport { useMemo } from '../use-memo';\r\nimport { type Hook, type HookValue } from '../fiber';\r\n\r\nconst $$useEffect = Symbol('use-effect');\r\n\r\ntype UseEffectValue = {\r\n  token: Symbol;\r\n  cleanup: DropEffect;\r\n};\r\n\r\nfunction createEffect(token: Symbol, type: EffectType) {\r\n  function useEffect(effect: Effect, deps: Array<any> = [{}]) {\r\n    const $scope = $$scope();\r\n    const fiber = $scope.getCursorFiber();\r\n    const scope = useMemo<UseEffectValue>(() => ({ token, cleanup: undefined }), []);\r\n    const isInsertionEffect = type === EffectType.INSERTION;\r\n    const isLayoutEffect = type === EffectType.LAYOUT;\r\n    const isAsyncEffect = type === EffectType.ASYNC;\r\n\r\n    isInsertionEffect && fiber.markHost(INSERTION_EFFECT_HOST_MASK);\r\n    isLayoutEffect && fiber.markHost(LAYOUT_EFFECT_HOST_MASK);\r\n    isAsyncEffect && fiber.markHost(ASYNC_EFFECT_HOST_MASK);\r\n\r\n    useMemo(() => {\r\n      const runEffect = () => (scope.cleanup = effect());\r\n\r\n      isInsertionEffect && $scope.addInsertionEffect(runEffect);\r\n      isLayoutEffect && $scope.addLayoutEffect(runEffect);\r\n      isAsyncEffect && $scope.addAsyncEffect(runEffect);\r\n\r\n      detectIsFunction(scope.cleanup) && scope.cleanup();\r\n\r\n      return null;\r\n    }, deps);\r\n  }\r\n\r\n  function dropEffects(hook: Hook<HookValue<UseEffectValue>>) {\r\n    for (const { value: effect } of hook.values) {\r\n      effect && effect.token === token && detectIsFunction(effect.cleanup) && effect.cleanup();\r\n    }\r\n  }\r\n\r\n  return {\r\n    useEffect,\r\n    dropEffects,\r\n  };\r\n}\r\n\r\nexport type DropEffect = void | (() => void);\r\n\r\nexport type Effect = () => DropEffect;\r\n\r\nexport enum EffectType {\r\n  ASYNC = 'ASYNC',\r\n  LAYOUT = 'LAYOUT',\r\n  INSERTION = 'INSERTION',\r\n}\r\n\r\nconst { useEffect, dropEffects } = createEffect($$useEffect, EffectType.ASYNC);\r\n\r\nexport { useEffect, dropEffects, createEffect };\r\n","import { createEffect, EffectType } from '../use-effect';\r\n\r\nconst $$useLayoutEffect = Symbol('use-layout-effect');\r\nconst { useEffect: useLayoutEffect, dropEffects: dropLayoutEffects } = createEffect(\r\n  $$useLayoutEffect,\r\n  EffectType.LAYOUT,\r\n);\r\n\r\nexport { useLayoutEffect, dropLayoutEffects };\r\n","import { detectIsString, detectIsFunction } from '../utils';\r\nimport { type TagVirtualNodeFactory, type ViewOptions, View } from '../view';\r\nimport { type ComponentFactory } from '../component';\r\n\r\nfunction createElement(\r\n  element: string | Function,\r\n  props: object,\r\n  ...slot: Array<any>\r\n): ComponentFactory | TagVirtualNodeFactory | null {\r\n  if (detectIsString(element)) {\r\n    const options = (props || {}) as ViewOptions;\r\n\r\n    options.as = element;\r\n    options.slot = slot;\r\n\r\n    return View(options);\r\n  }\r\n\r\n  if (detectIsFunction(element)) {\r\n    const options = (props || {}) as { slot: unknown };\r\n\r\n    options.slot = slot.length === 1 ? slot[0] : slot;\r\n\r\n    return element(options);\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nexport { createElement, createElement as h };\r\n","import { createEffect, EffectType } from '../use-effect';\r\n\r\nconst $$useInsertionEffect = Symbol('use-insertion-effect');\r\nconst { useEffect: useInsertionEffect, dropEffects: dropInsertionEffects } = createEffect(\r\n  $$useInsertionEffect,\r\n  EffectType.INSERTION,\r\n);\r\n\r\nexport { useInsertionEffect, dropInsertionEffects };\r\n","import { detectIsTagVirtualNode, detectIsPlainVirtualNode, detectAreSameComponentTypesWithSameKeys } from '../view';\r\nimport { type Instance, type Callback, type TimerId } from '../shared';\r\nimport { type Context, type ContextProviderValue } from '../context';\r\nimport { detectIsComponent } from '../component';\r\nimport { detectIsFunction } from '../utils';\r\nimport { type Atom } from '../atom';\r\nimport { $$scope } from '../scope';\r\n\r\nclass Fiber<N = NativeElement> {\r\n  id = 0;\r\n  cc = 0; // child fibers count\r\n  cec = 0; // child native elements count\r\n  idx = 0; // idx of fiber in the parent fiber\r\n  eidx = 0; // native element idx\r\n  mask = 0; // bit mask\r\n  element: N = null; // native element\r\n  tag: string = null; // effect tag (CREATE, UPDATE, DELETE, SKIP)\r\n  parent: Fiber<N> = null; // parent fiber\r\n  child: Fiber<N> = null; // child fiber\r\n  next: Fiber<N> = null; // next sibling fiber\r\n  alt: Fiber<N> = null; // alternate fiber (previous)\r\n  inst: Instance = null; // instance of component or virtual node\r\n  hook: Hook | null = null; // hook\r\n  provider: Map<Context, ContextProviderValue> = null; // provider of context\r\n  atoms: Map<Atom, Callback> = null;\r\n  marker: string; // for dev\r\n  batch: Batch;\r\n  catch: (error: Error) => void;\r\n\r\n  constructor(hook: Hook = null, provider: Fiber['provider'] = null, idx = 0) {\r\n    this.id = ++Fiber.nextId;\r\n    this.idx = idx;\r\n    hook && (this.hook = hook);\r\n    provider && (this.provider = provider);\r\n  }\r\n\r\n  mutate(fiber: Partial<Fiber<N>>) {\r\n    const keys = Object.keys(fiber);\r\n\r\n    for (const key of keys) {\r\n      this[key] = fiber[key];\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  markHost(mask: number) {\r\n    this.mask |= mask;\r\n    this.parent && !(this.parent.mask & mask) && this.parent.markHost(mask);\r\n  }\r\n\r\n  increment(count = 1, force = false) {\r\n    if (!this.parent) return;\r\n    const $scope = $$scope();\r\n    const isUpdateZone = $scope.getIsUpdateZone();\r\n    const wipFiber = $scope.getWorkInProgress();\r\n    const stop = isUpdateZone && wipFiber.parent === this.parent;\r\n\r\n    if (\r\n      detectIsPlainVirtualNode(this.inst) ||\r\n      (detectIsTagVirtualNode(this.inst) && this.inst.children?.length === 0)\r\n    ) {\r\n      this.cec = 1;\r\n    }\r\n\r\n    if (isUpdateZone && stop && !force) return;\r\n\r\n    this.parent.cec += count;\r\n\r\n    if (!this.parent.element) {\r\n      this.parent.increment(count);\r\n    }\r\n  }\r\n\r\n  setError(error: Error) {\r\n    if (detectIsFunction(this.catch)) {\r\n      this.catch(error);\r\n    } else if (this.parent) {\r\n      this.parent.setError(error);\r\n    }\r\n  }\r\n\r\n  static setNextId(id: number) {\r\n    Fiber.nextId = id;\r\n  }\r\n\r\n  private static nextId = 0;\r\n}\r\n\r\nclass Hook<T = any> {\r\n  id = 0;\r\n  idx = 0;\r\n  values: Array<T> = [];\r\n  owner: Fiber = null;\r\n  private static nextId = 0;\r\n\r\n  constructor() {\r\n    this.id = ++Hook.nextId;\r\n  }\r\n}\r\n\r\nfunction getHook(alt: Fiber, prevInst: Instance, nextInst: Instance): Hook | null {\r\n  if (alt && detectAreSameComponentTypesWithSameKeys(prevInst, nextInst)) return alt.hook;\r\n  if (detectIsComponent(nextInst)) return new Hook();\r\n\r\n  return null;\r\n}\r\n\r\ntype Batch = {\r\n  timer: TimerId;\r\n  changes: Array<Callback>;\r\n};\r\n\r\nexport type NativeElement = unknown;\r\nexport type HookValue<T = any> = { deps: Array<any>; value: T };\r\n\r\nexport { Fiber, Hook, getHook };\r\n","import {\r\n  DELETE_EFFECT_TAG,\r\n  UPDATE_EFFECT_TAG,\r\n  SKIP_EFFECT_TAG,\r\n  INSERTION_EFFECT_HOST_MASK,\r\n  LAYOUT_EFFECT_HOST_MASK,\r\n  ASYNC_EFFECT_HOST_MASK,\r\n  ATOM_HOST_MASK,\r\n  PORTAL_HOST_MASK,\r\n  MOVE_MASK,\r\n  HOOK_DELIMETER,\r\n} from '../constants';\r\nimport { Fiber } from '../fiber';\r\nimport { platform } from '../platform';\r\nimport { type TagVirtualNode, getElementKey, hasChildrenProp } from '../view';\r\nimport { type Scope } from '../scope';\r\nimport { type Component } from '../component';\r\nimport { detectIsMemo } from '../memo';\r\nimport { type Instance, type ElementKey } from '../shared';\r\nimport { createIndexKey } from '../utils';\r\n\r\nfunction walk<T = unknown>(fiber: Fiber<T>, onWalk: (fiber: Fiber<T>, skip: () => void, stop: () => void) => void) {\r\n  let shouldDeep = true;\r\n  let shouldStop = false;\r\n  const skip = () => (shouldDeep = false);\r\n  const stop = () => (shouldStop = true);\r\n  const stack: Array<Fiber<T>> = [fiber];\r\n\r\n  while (stack.length !== 0) {\r\n    const unit = stack.pop();\r\n\r\n    onWalk(unit, skip, stop);\r\n    if (shouldStop) break;\r\n    unit !== fiber && unit.next && stack.push(unit.next);\r\n    shouldDeep && unit.child && stack.push(unit.child);\r\n    shouldDeep = true;\r\n  }\r\n}\r\n\r\nfunction collectElements<T, P = T>(fiber: Fiber<T>, transform: (fiber: Fiber<T>) => P): Array<P> {\r\n  const elements: Array<P> = [];\r\n\r\n  walk<T>(fiber, (fiber, skip) => {\r\n    if (fiber.element) {\r\n      !platform.detectIsPortal(fiber.inst) && elements.push(transform(fiber));\r\n      return skip();\r\n    }\r\n  });\r\n\r\n  return elements;\r\n}\r\n\r\nfunction getFiberWithElement<T1, T2 = T1>(fiber: Fiber<T1>): Fiber<T2> {\r\n  let $fiber = fiber as unknown as Fiber<T2>;\r\n\r\n  while ($fiber) {\r\n    if ($fiber.element) return $fiber;\r\n    $fiber = $fiber.parent;\r\n  }\r\n\r\n  return $fiber;\r\n}\r\n\r\nfunction detectIsFiberAlive(fiber: Fiber) {\r\n  let $fiber = fiber;\r\n\r\n  while ($fiber) {\r\n    if ($fiber.tag === DELETE_EFFECT_TAG) return false;\r\n    $fiber = $fiber.parent;\r\n  }\r\n\r\n  return Boolean(fiber);\r\n}\r\n\r\nfunction createHookLocation(rootId: number, idx: number, fiber: Fiber) {\r\n  let $fiber = fiber;\r\n  let loc = `${fiber.idx}${HOOK_DELIMETER}${idx}`;\r\n\r\n  while ($fiber) {\r\n    $fiber = $fiber.parent;\r\n    $fiber && (loc = `${$fiber.idx}.${loc}`);\r\n  }\r\n\r\n  loc = `[${rootId}]${loc}`;\r\n\r\n  return loc;\r\n}\r\n\r\nfunction detectIsStableMemoTree(fiber: Fiber, $scope: Scope) {\r\n  if (!hasChildrenProp(fiber.inst)) return;\r\n  const actions = $scope.getActionsById(fiber.id);\r\n  const children = fiber.inst.children;\r\n\r\n  for (let i = 0; i < children.length; i++) {\r\n    const inst = children[i];\r\n    const key = getElementKey(inst);\r\n    if (key === null) return false;\r\n    const alt = actions.map[key];\r\n    if (!alt) return false;\r\n    const pc = alt.inst as Component;\r\n    const nc = inst as Component;\r\n    const isStable =\r\n      detectIsMemo(nc) && detectIsMemo(pc) && nc.type === pc.type && !nc.shouldUpdate(pc.props, nc.props);\r\n\r\n    if (!isStable) return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction tryOptStaticSlot(fiber: Fiber, alt: Fiber, $scope: Scope) {\r\n  const actions = $scope.getActionsById(fiber.id);\r\n  const inst = fiber.inst as Component | TagVirtualNode;\r\n\r\n  alt.element && (fiber.element = alt.element); //!\r\n\r\n  for (let i = 0; i < inst.children.length; i++) {\r\n    buildChildNode(inst.children, fiber, actions.map, i, fiber.eidx);\r\n  }\r\n\r\n  fiber.cc = inst.children.length;\r\n  $scope.setMountDeep(false);\r\n}\r\n\r\nfunction tryOptMemoSlot(fiber: Fiber, alt: Fiber, $scope: Scope) {\r\n  const actions = $scope.getActionsById(fiber.id);\r\n  const hasMove = Boolean(actions.move);\r\n  const hasRemove = Boolean(actions.remove);\r\n  const hasInsert = Boolean(actions.insert);\r\n  const hasReplace = Boolean(actions.insert);\r\n  const canOptimize = ((hasMove && !hasRemove) || (hasRemove && !hasMove)) && !hasInsert && !hasReplace;\r\n\r\n  if (!canOptimize || !detectIsStableMemoTree(fiber, $scope)) return;\r\n\r\n  hasMove && tryOptMov(fiber, alt, $scope);\r\n  hasRemove && tryOptRem(fiber, alt, $scope);\r\n}\r\n\r\nfunction tryOptMov(fiber: Fiber, alt: Fiber, $scope: Scope) {\r\n  const actions = $scope.getActionsById(fiber.id);\r\n\r\n  buildChildNodes(fiber, alt, $scope, (fiber, key) => {\r\n    if (!actions.move[key]) return;\r\n    fiber.alt = new Fiber().mutate(fiber);\r\n    fiber.tag = UPDATE_EFFECT_TAG;\r\n    fiber.mask |= MOVE_MASK;\r\n    $scope.addCandidate(fiber);\r\n  });\r\n}\r\n\r\nfunction tryOptRem(fiber: Fiber, alt: Fiber, $scope: Scope) {\r\n  buildChildNodes(fiber, alt, $scope);\r\n}\r\n\r\nfunction buildChildNodes(fiber: Fiber, alt: Fiber, $scope: Scope, onNode?: (fiber: Fiber, key: ElementKey) => void) {\r\n  const actions = $scope.getActionsById(fiber.id);\r\n  const inst = fiber.inst as Component | TagVirtualNode;\r\n  const children = inst.children;\r\n\r\n  alt.element && (fiber.element = alt.element); //!\r\n\r\n  for (let i = 0; i < children.length; i++) {\r\n    const key = getKey(children[i], i);\r\n    const $fiber = actions.map[key];\r\n\r\n    buildChildNode(children, fiber, actions.map, i, fiber.eidx);\r\n    onNode && onNode($fiber, key);\r\n  }\r\n\r\n  fiber.cc = children.length;\r\n  $scope.setMountDeep(false);\r\n}\r\n\r\nfunction buildChildNode(\r\n  children: Array<Instance>,\r\n  parent: Fiber,\r\n  altMap: Record<string, Fiber>,\r\n  idx: number,\r\n  startEidx: number,\r\n) {\r\n  const prevIdx = idx - 1;\r\n  const nextIdx = idx + 1;\r\n  const key = getKey(children[idx], idx);\r\n  const prevKey = getKey(children[prevIdx], prevIdx);\r\n  const nextKey = getKey(children[nextIdx], nextIdx);\r\n  const fiber = altMap[key];\r\n  const left = altMap[prevKey];\r\n  const right = altMap[nextKey];\r\n  const isFirst = idx === 0;\r\n  const isLast = idx === children.length - 1;\r\n\r\n  isFirst && (parent.child = fiber);\r\n  fiber.alt = null;\r\n  fiber.parent = parent;\r\n  fiber.tag = SKIP_EFFECT_TAG;\r\n  fiber.idx = idx;\r\n  left ? (fiber.eidx = left.eidx + (left.element ? 1 : left.cec)) : (fiber.eidx = startEidx);\r\n  right && (fiber.next = right);\r\n  isLast && (fiber.next = null);\r\n  notifyParents(fiber);\r\n}\r\n\r\nfunction getKey(inst: Instance, idx: number) {\r\n  const key = getElementKey(inst);\r\n  return key !== null ? key : createIndexKey(idx);\r\n}\r\n\r\nfunction notifyParents(fiber: Fiber, alt: Fiber = fiber) {\r\n  fiber.increment(alt.element ? 1 : alt.cec);\r\n  alt.mask & INSERTION_EFFECT_HOST_MASK && fiber.markHost(INSERTION_EFFECT_HOST_MASK);\r\n  alt.mask & LAYOUT_EFFECT_HOST_MASK && fiber.markHost(LAYOUT_EFFECT_HOST_MASK);\r\n  alt.mask & ASYNC_EFFECT_HOST_MASK && fiber.markHost(ASYNC_EFFECT_HOST_MASK);\r\n  alt.mask & ATOM_HOST_MASK && fiber.markHost(ATOM_HOST_MASK);\r\n  alt.mask & PORTAL_HOST_MASK && fiber.markHost(PORTAL_HOST_MASK);\r\n}\r\n\r\nexport {\r\n  walk,\r\n  collectElements,\r\n  getFiberWithElement,\r\n  detectIsFiberAlive,\r\n  createHookLocation,\r\n  tryOptStaticSlot,\r\n  tryOptMemoSlot,\r\n  notifyParents,\r\n};\r\n","import { type Fiber } from '../fiber';\r\nimport { platform } from '../platform';\r\nimport { dropEffects } from '../use-effect';\r\nimport { dropLayoutEffects } from '../use-layout-effect';\r\nimport { dropInsertionEffects } from '../use-insertion-effect';\r\nimport { walk } from '../walk';\r\nimport { detectIsUndefined } from '../utils';\r\nimport { removeScope, $$scope } from '../scope';\r\nimport {\r\n  INSERTION_EFFECT_HOST_MASK,\r\n  LAYOUT_EFFECT_HOST_MASK,\r\n  ASYNC_EFFECT_HOST_MASK,\r\n  ATOM_HOST_MASK,\r\n  PORTAL_HOST_MASK,\r\n} from '../constants';\r\n\r\nconst combinedMask =\r\n  INSERTION_EFFECT_HOST_MASK | LAYOUT_EFFECT_HOST_MASK | ASYNC_EFFECT_HOST_MASK | ATOM_HOST_MASK | PORTAL_HOST_MASK;\r\n\r\nconst shouldUnmountFiber = (fiber: Fiber) => fiber.mask & combinedMask;\r\n\r\nfunction unmountFiber(fiber: Fiber) {\r\n  if (!shouldUnmountFiber(fiber)) return;\r\n  walk(fiber, (fiber, skip) => {\r\n    if (!shouldUnmountFiber(fiber)) return skip();\r\n\r\n    if (fiber.hook && fiber.hook.values.length > 0) {\r\n      fiber.mask & INSERTION_EFFECT_HOST_MASK && dropInsertionEffects(fiber.hook);\r\n      fiber.mask & LAYOUT_EFFECT_HOST_MASK && dropLayoutEffects(fiber.hook);\r\n      fiber.mask & ASYNC_EFFECT_HOST_MASK && dropEffects(fiber.hook);\r\n    }\r\n\r\n    if (fiber.atoms) {\r\n      for (const [_, cleanup] of fiber.atoms) {\r\n        cleanup();\r\n      }\r\n      fiber.atoms = null;\r\n    }\r\n\r\n    fiber.mask & PORTAL_HOST_MASK && platform.unmountPortal(fiber);\r\n  });\r\n}\r\n\r\nfunction unmountRoot(rootId: number, onCompleted: () => void) {\r\n  if (detectIsUndefined(rootId)) return;\r\n  const $scope = $$scope(rootId);\r\n\r\n  unmountFiber($scope.getRoot());\r\n  $scope.unsubscribeEvents();\r\n  removeScope(rootId);\r\n  onCompleted();\r\n}\r\n\r\nexport { unmountFiber, unmountRoot };\r\n","import { component, detectIsComponent } from '../component';\r\nimport type { KeyProps, SlotProps } from '../shared';\r\n\r\ntype FragmentProps = Required<SlotProps> & KeyProps;\r\n\r\nconst $$fragment = Symbol('fragment');\r\n\r\nconst Fragment = component<FragmentProps>(({ slot }) => slot || null, { token: $$fragment });\r\n\r\nconst detectIsFragment = (instance: unknown) => detectIsComponent(instance) && instance.token === $$fragment;\r\n\r\nexport { Fragment, detectIsFragment };\r\n","import { platform } from '../platform';\r\nimport {\r\n  CREATE_EFFECT_TAG,\r\n  UPDATE_EFFECT_TAG,\r\n  DELETE_EFFECT_TAG,\r\n  SKIP_EFFECT_TAG,\r\n  INSERTION_EFFECT_HOST_MASK,\r\n  LAYOUT_EFFECT_HOST_MASK,\r\n  ASYNC_EFFECT_HOST_MASK,\r\n  ATOM_HOST_MASK,\r\n  PORTAL_HOST_MASK,\r\n  MOVE_MASK,\r\n  FLUSH_MASK,\r\n  SHADOW_MASK,\r\n  Flag,\r\n} from '../constants';\r\nimport {\r\n  flatten,\r\n  error,\r\n  detectIsEmpty,\r\n  detectIsFalsy,\r\n  detectIsArray,\r\n  detectIsFunction,\r\n  detectIsTextBased,\r\n  createIndexKey,\r\n  trueFn,\r\n} from '../utils';\r\nimport { type Scope, setRootId, $$scope, replaceScope } from '../scope';\r\nimport { type Component, detectIsComponent } from '../component';\r\nimport { type ElementKey, type Instance } from '../shared';\r\nimport { Fiber, getHook, Hook } from '../fiber';\r\nimport {\r\n  Text,\r\n  detectIsVirtualNode,\r\n  detectIsVirtualNodeFactory,\r\n  getElementKey,\r\n  hasElementFlag,\r\n  hasChildrenProp,\r\n  detectIsReplacer,\r\n  createReplacer,\r\n  detectAreSameInstanceTypes,\r\n} from '../view';\r\nimport { detectIsMemo } from '../memo';\r\nimport {\r\n  walk,\r\n  getFiberWithElement,\r\n  detectIsFiberAlive,\r\n  notifyParents,\r\n  tryOptStaticSlot,\r\n  tryOptMemoSlot,\r\n} from '../walk';\r\nimport { type RestoreOptions, scheduler } from '../scheduler';\r\nimport { Fragment, detectIsFragment } from '../fragment';\r\nimport { unmountFiber } from '../unmount';\r\n\r\nlet hasPendingPromise = false;\r\nlet hasRenderError = false;\r\n\r\nexport type WorkLoop = (isAsync: boolean) => boolean;\r\n\r\nfunction workLoop(isAsync: boolean): boolean | null {\r\n  if (hasPendingPromise) return null;\r\n  if (hasRenderError) return false;\r\n  const $scope = $$scope();\r\n  const wipFiber = $scope.getWorkInProgress();\r\n  let unit = $scope.getNextUnitOfWork();\r\n  let shouldYield = false;\r\n  let hasMoreWork = Boolean(unit);\r\n\r\n  try {\r\n    while (unit && !shouldYield) {\r\n      unit = performUnitOfWork(unit, $scope);\r\n      $scope.setNextUnitOfWork(unit);\r\n      hasMoreWork = Boolean(unit);\r\n      shouldYield = isAsync && scheduler.shouldYield();\r\n      if (shouldYield && scheduler.hasPrimaryTask()) return fork($scope);\r\n    }\r\n\r\n    if (!unit && wipFiber) {\r\n      commit($scope);\r\n    }\r\n  } catch (err) {\r\n    if (err instanceof Promise) {\r\n      hasPendingPromise = true;\r\n      err.finally(() => {\r\n        hasPendingPromise = false;\r\n        !isAsync && workLoop(false);\r\n      });\r\n    } else {\r\n      hasRenderError = true;\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  return hasMoreWork;\r\n}\r\n\r\nfunction performUnitOfWork(fiber: Fiber, $scope: Scope): Fiber | null {\r\n  const wipFiber = $scope.getWorkInProgress();\r\n  const isDeepWalking = $scope.getMountDeep();\r\n  const isStream = $scope.getIsStreamZone();\r\n  const hasChildren = isDeepWalking && hasChildrenProp(fiber.inst) && fiber.inst.children.length > 0;\r\n\r\n  fiber.hook && (fiber.hook.idx = 0);\r\n\r\n  if (hasChildren) {\r\n    const child = mountChild(fiber, $scope);\r\n\r\n    isStream && platform.chunk(child);\r\n\r\n    return child;\r\n  } else {\r\n    while (fiber.parent && fiber !== wipFiber) {\r\n      const next = mountSibling(fiber, $scope);\r\n\r\n      isStream && platform.chunk(fiber);\r\n\r\n      if (next) {\r\n        isStream && platform.chunk(next);\r\n        return next;\r\n      }\r\n\r\n      fiber = fiber.parent;\r\n    }\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nfunction mountChild(parent: Fiber, $scope: Scope) {\r\n  $scope.navToChild();\r\n  const $inst = parent.inst;\r\n  const idx = 0;\r\n  const inst = hasChildrenProp($inst) ? $inst.children[idx] : null;\r\n  const alt = getAlternate(parent, inst, true, $scope);\r\n  const fiber = createFiber(alt, inst, idx);\r\n\r\n  fiber.parent = parent;\r\n  parent.child = fiber;\r\n  fiber.eidx = parent.element ? 0 : parent.eidx;\r\n\r\n  share(fiber, parent, inst, $scope);\r\n\r\n  return fiber;\r\n}\r\n\r\nfunction mountSibling(left: Fiber, $scope: Scope) {\r\n  $scope.navToSibling();\r\n  const $inst = left.parent.inst;\r\n  const idx = $scope.getMountIndex();\r\n  const inst = hasChildrenProp($inst) && $inst.children ? $inst.children[idx] : null;\r\n  const hasSibling = Boolean(inst);\r\n\r\n  if (!hasSibling) {\r\n    $scope.navToParent();\r\n    $scope.setMountDeep(false);\r\n\r\n    return null;\r\n  }\r\n\r\n  $scope.setMountDeep(true);\r\n  const alt = getAlternate(left, inst, false, $scope);\r\n  const fiber = createFiber(alt, inst, idx);\r\n\r\n  fiber.parent = left.parent;\r\n  left.next = fiber;\r\n  fiber.eidx = left.eidx + (left.element ? 1 : left.cec);\r\n\r\n  share(fiber, left, inst, $scope);\r\n\r\n  return fiber;\r\n}\r\n\r\nfunction share(fiber: Fiber, prev: Fiber, inst: Instance, $scope: Scope) {\r\n  const { alt } = fiber;\r\n  const shouldMount = alt && detectIsMemo(inst) ? shouldUpdate(fiber, inst, $scope) : true;\r\n\r\n  $scope.setCursorFiber(fiber);\r\n  fiber.inst = inst;\r\n\r\n  if (alt && alt.mask & MOVE_MASK) {\r\n    fiber.mask |= MOVE_MASK;\r\n    alt.mask &= ~MOVE_MASK;\r\n  }\r\n\r\n  fiber.hook && (fiber.hook.owner = fiber); // !\r\n\r\n  if (shouldMount) {\r\n    fiber.inst = mount(fiber, prev, $scope);\r\n    alt && reconcile(fiber, alt, $scope);\r\n    setup(fiber, alt);\r\n  } else if (fiber.mask & MOVE_MASK) {\r\n    fiber.tag = UPDATE_EFFECT_TAG;\r\n  }\r\n\r\n  $scope.addCandidate(fiber); // !\r\n}\r\n\r\nfunction createFiber(alt: Fiber, inst: Instance, idx: number) {\r\n  const fiber = new Fiber(getHook(alt, alt ? alt.inst : null, inst), alt ? alt.provider : null, idx);\r\n\r\n  fiber.alt = alt || null;\r\n\r\n  return fiber;\r\n}\r\n\r\nfunction getAlternate(fiber: Fiber, inst: Instance, fromChild: boolean, $scope: Scope) {\r\n  const key = getElementKey(inst);\r\n\r\n  if (key !== null) {\r\n    const parentId = fromChild ? fiber.id : fiber.parent.id;\r\n    const actions = $scope.getActionsById(parentId);\r\n\r\n    if (actions) {\r\n      const isMove = actions.move && Boolean(actions.move[key]);\r\n      const isStable = actions.stable && Boolean(actions.stable[key]);\r\n\r\n      if (isMove || isStable) {\r\n        const alt = actions.map[key];\r\n\r\n        isMove && (alt.mask |= MOVE_MASK);\r\n\r\n        return alt;\r\n      }\r\n\r\n      return null;\r\n    }\r\n  }\r\n\r\n  const alt = fiber.alt ? (fromChild ? fiber.alt.child || null : fiber.alt.next || null) : null;\r\n\r\n  return alt;\r\n}\r\n\r\nfunction reconcile(fiber: Fiber, alt: Fiber, $scope: Scope) {\r\n  const { id, inst } = fiber;\r\n  const areSameTypes = detectAreSameInstanceTypes(alt.inst, inst);\r\n\r\n  if (!areSameTypes) {\r\n    $scope.addDeletion(alt);\r\n  } else if (hasChildrenProp(alt.inst) && hasChildrenProp(inst) && alt.cc !== 0) {\r\n    const hasSameCount = alt.cc === inst.children.length;\r\n    const check = hasElementFlag(inst, Flag.SKIP_SCAN_OPT) ? !hasSameCount : true;\r\n\r\n    if (check) {\r\n      const { prevKeys, nextKeys, prevKeysMap, nextKeysMap, keyedFibersMap } = extractKeys(alt.child, inst.children);\r\n      const flush = nextKeys.length === 0;\r\n      let size = Math.max(prevKeys.length, nextKeys.length);\r\n      let p = 0;\r\n      let n = 0;\r\n\r\n      $scope.addActionMap(id, keyedFibersMap);\r\n\r\n      for (let i = 0; i < size; i++) {\r\n        const nextKey = nextKeys[i - n] ?? null;\r\n        const prevKey = prevKeys[i - p] ?? null;\r\n        const prevKeyFiber = keyedFibersMap[prevKey] || null;\r\n\r\n        if (nextKey !== prevKey) {\r\n          if (nextKey !== null && !prevKeysMap[nextKey]) {\r\n            if (prevKey !== null && !nextKeysMap[prevKey]) {\r\n              $scope.addReplaceAction(id, nextKey);\r\n              $scope.addDeletion(prevKeyFiber);\r\n            } else {\r\n              $scope.addInsertAction(id, nextKey);\r\n              p++;\r\n              size++;\r\n            }\r\n          } else if (!nextKeysMap[prevKey]) {\r\n            $scope.addRemoveAction(id, prevKey);\r\n            $scope.addDeletion(prevKeyFiber);\r\n            flush && (prevKeyFiber.mask |= FLUSH_MASK);\r\n            n++;\r\n            size++;\r\n          } else if (nextKeysMap[prevKey] && nextKeysMap[nextKey]) {\r\n            $scope.addMoveAction(id, nextKey);\r\n          }\r\n        } else if (nextKey !== null) {\r\n          $scope.addStableAction(id, nextKey);\r\n        }\r\n      }\r\n\r\n      hasElementFlag(inst, Flag.STATIC_SLOT_OPT) && tryOptStaticSlot(fiber, alt, $scope);\r\n      hasElementFlag(inst, Flag.MEMO_SLOT_OPT) && tryOptMemoSlot(fiber, alt, $scope);\r\n    }\r\n  }\r\n}\r\n\r\nfunction setup(fiber: Fiber, alt: Fiber) {\r\n  const inst = fiber.inst;\r\n  let isUpdate = false;\r\n\r\n  fiber.parent.tag === CREATE_EFFECT_TAG && (fiber.tag = fiber.parent.tag);\r\n  fiber.parent.mask & SHADOW_MASK && !fiber.parent.element && !detectIsReplacer(inst) && (fiber.mask |= SHADOW_MASK);\r\n  isUpdate =\r\n    alt &&\r\n    fiber.tag !== CREATE_EFFECT_TAG &&\r\n    detectAreSameInstanceTypes(alt.inst, inst) &&\r\n    getElementKey(alt.inst) === getElementKey(inst);\r\n  isUpdate && !fiber.element && alt.element && (fiber.element = alt.element);\r\n  fiber.tag = isUpdate ? UPDATE_EFFECT_TAG : CREATE_EFFECT_TAG;\r\n  hasChildrenProp(fiber.inst) && (fiber.cc = fiber.inst.children.length);\r\n  !fiber.element && detectIsVirtualNode(fiber.inst) && (fiber.element = platform.createElement(fiber.inst));\r\n  fiber.element && fiber.increment();\r\n}\r\n\r\nfunction shouldUpdate(fiber: Fiber, inst: Instance, $scope: Scope) {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    if ($scope.getIsHot()) return true;\r\n  }\r\n\r\n  const alt = fiber.alt;\r\n  const pc = alt.inst as Component;\r\n  const nc = inst as Component;\r\n\r\n  if (nc.type !== pc.type || nc.shouldUpdate(pc.props, nc.props)) return true;\r\n\r\n  $scope.setMountDeep(false);\r\n  fiber.tag = SKIP_EFFECT_TAG;\r\n  fiber.child = alt.child;\r\n  fiber.child.parent = fiber;\r\n  fiber.hook = alt.hook;\r\n  fiber.cc = alt.cc;\r\n  fiber.cec = alt.cec;\r\n  alt.element && (fiber.element = alt.element);\r\n  alt.provider && (fiber.provider = alt.provider);\r\n  alt.catch && (fiber.catch = alt.catch);\r\n  alt.atoms && (fiber.atoms = alt.atoms);\r\n\r\n  const diff = fiber.eidx - alt.eidx;\r\n  const deep = diff !== 0;\r\n\r\n  if (deep) {\r\n    walk(fiber.child, ($fiber, skip) => {\r\n      $fiber.eidx += diff;\r\n      if ($fiber.element) return skip();\r\n    });\r\n  }\r\n\r\n  notifyParents(fiber, alt);\r\n\r\n  return false;\r\n}\r\n\r\nfunction mount(fiber: Fiber, prev: Fiber, $scope: Scope) {\r\n  let inst = fiber.inst;\r\n  const isComponent = detectIsComponent(inst);\r\n  const component = inst as Component;\r\n\r\n  if (isComponent) {\r\n    try {\r\n      const id = $scope.getResourceId();\r\n      let result = component.type(component.props, component.ref);\r\n      const defers = $scope.getDefers();\r\n\r\n      if (defers.length > 0) {\r\n        const promise = Promise.all(defers.map(x => x()));\r\n\r\n        $scope.setResourceId(id);\r\n        $scope.resetDefers();\r\n        $scope.navToPrev();\r\n        $scope.setNextUnitOfWork(prev);\r\n        Fiber.setNextId(prev.id);\r\n\r\n        throw promise;\r\n      }\r\n\r\n      if (detectIsArray(result)) {\r\n        !detectIsFragment(component) && (result = Fragment({ slot: result }));\r\n      } else if (detectIsTextBased(result)) {\r\n        result = Text(result);\r\n      }\r\n\r\n      component.children = result as Array<Instance>;\r\n      platform.detectIsPortal(inst) && fiber.markHost(PORTAL_HOST_MASK);\r\n    } catch (err) {\r\n      if (err instanceof Promise) throw err;\r\n      component.children = [];\r\n      fiber.setError(err);\r\n      error(err);\r\n    }\r\n  } else if (detectIsVirtualNodeFactory(inst)) {\r\n    inst = inst();\r\n  }\r\n\r\n  if (hasChildrenProp(inst)) {\r\n    inst.children = flatten(inst.children, x => (detectIsTextBased(x) ? Text(x) : x || supportConditional(x)));\r\n    isComponent && component.children.length === 0 && component.children.push(createReplacer());\r\n  }\r\n\r\n  return inst;\r\n}\r\n\r\nfunction extractKeys(alt: Fiber, children: Array<Instance>) {\r\n  let nextFiber = alt;\r\n  let idx = 0;\r\n  const prevKeys: Array<ElementKey> = [];\r\n  const nextKeys: Array<ElementKey> = [];\r\n  const prevKeysMap: Record<ElementKey, boolean> = {};\r\n  const nextKeysMap: Record<ElementKey, boolean> = {};\r\n  const keyedFibersMap: Record<ElementKey, Fiber> = {};\r\n  const usedKeysMap: Record<ElementKey, boolean> = {};\r\n\r\n  while (nextFiber || idx < children.length) {\r\n    if (nextFiber) {\r\n      const key = getElementKey(nextFiber.inst);\r\n      const prevKey = detectIsEmpty(key) ? createIndexKey(idx) : key;\r\n\r\n      if (!prevKeysMap[prevKey]) {\r\n        prevKeysMap[prevKey] = true; // !\r\n        prevKeys.push(prevKey);\r\n      }\r\n\r\n      keyedFibersMap[prevKey] = nextFiber;\r\n    }\r\n\r\n    if (children[idx]) {\r\n      const inst = children[idx];\r\n      const key = getElementKey(inst);\r\n      const nextKey = detectIsEmpty(key) ? createIndexKey(idx) : key;\r\n\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        if (usedKeysMap[nextKey]) {\r\n          error(`[Dark]: The key of node [${nextKey}] already has been used!`, [inst]);\r\n        }\r\n      }\r\n\r\n      if (!nextKeysMap[nextKey]) {\r\n        nextKeysMap[nextKey] = true; // !\r\n        nextKeys.push(nextKey);\r\n      }\r\n\r\n      usedKeysMap[nextKey] = true;\r\n    }\r\n\r\n    nextFiber = nextFiber ? nextFiber.next : null;\r\n    idx++;\r\n  }\r\n\r\n  return {\r\n    prevKeys,\r\n    nextKeys,\r\n    prevKeysMap,\r\n    nextKeysMap,\r\n    keyedFibersMap,\r\n  };\r\n}\r\n\r\nfunction supportConditional(inst: Instance) {\r\n  return detectIsFalsy(inst) ? createReplacer() : inst;\r\n}\r\n\r\nfunction commit($scope: Scope) {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    process.env.NODE_ENV === 'development' && $scope.setIsHot(false);\r\n  }\r\n\r\n  const wipFiber = $scope.getWorkInProgress();\r\n  const deletions = $scope.getDeletions();\r\n  const candidates = $scope.getCandidates();\r\n  const isUpdateZone = $scope.getIsUpdateZone();\r\n  const unmounts: Array<Fiber> = [];\r\n  const combinedMask = INSERTION_EFFECT_HOST_MASK | LAYOUT_EFFECT_HOST_MASK | ASYNC_EFFECT_HOST_MASK | PORTAL_HOST_MASK;\r\n\r\n  // !\r\n  for (const fiber of deletions) {\r\n    const withNextTick = fiber.mask & ATOM_HOST_MASK && !(fiber.mask & combinedMask);\r\n\r\n    withNextTick ? unmounts.push(fiber) : unmountFiber(fiber);\r\n    fiber.tag = DELETE_EFFECT_TAG;\r\n    platform.commit(fiber);\r\n  }\r\n\r\n  isUpdateZone && sync(wipFiber);\r\n  $scope.runInsertionEffects();\r\n\r\n  for (const fiber of candidates) {\r\n    fiber.tag !== SKIP_EFFECT_TAG && platform.commit(fiber);\r\n    fiber.alt = null;\r\n    hasChildrenProp(fiber.inst) && (fiber.inst.children = null);\r\n  }\r\n\r\n  wipFiber.alt = null;\r\n  platform.finishCommit(); // !\r\n  $scope.runLayoutEffects();\r\n  $scope.runAsyncEffects();\r\n  unmounts.length > 0 && setTimeout(() => unmounts.forEach(x => unmountFiber(x)));\r\n  flush($scope);\r\n}\r\n\r\nfunction flush($scope: Scope, cancel = false) {\r\n  $scope.flush();\r\n  !cancel && $scope.getEmitter().emit('finish');\r\n  $scope.runAfterCommit(); // !\r\n}\r\n\r\nfunction sync(fiber: Fiber) {\r\n  const diff = fiber.cec - fiber.alt.cec;\r\n  if (diff === 0) return;\r\n  const parentFiber = getFiberWithElement(fiber.parent);\r\n  let isRight = false;\r\n\r\n  fiber.increment(diff, true);\r\n\r\n  walk(parentFiber.child, ($fiber, skip) => {\r\n    if ($fiber === fiber) {\r\n      isRight = true;\r\n      return skip();\r\n    }\r\n\r\n    $fiber.element && skip();\r\n    isRight && ($fiber.eidx += diff);\r\n  });\r\n}\r\n\r\nfunction fork($scope: Scope): false {\r\n  const $$scope$ = $scope.copy();\r\n  const wipFiber = $scope.getWorkInProgress();\r\n  const child = wipFiber.child;\r\n  child && (child.parent = null);\r\n  const restore = (options: RestoreOptions) => {\r\n    const { fiber: wipFiber, setValue, resetValue } = options;\r\n    const $scope = $$scope();\r\n\r\n    detectIsFunction(setValue) && setValue();\r\n    detectIsFunction(resetValue) && $$scope$.addCancel(resetValue);\r\n\r\n    wipFiber.alt = new Fiber().mutate(wipFiber);\r\n    wipFiber.tag = UPDATE_EFFECT_TAG;\r\n    wipFiber.child = child;\r\n    child && (child.parent = wipFiber);\r\n\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      wipFiber.marker = '✌️';\r\n    }\r\n\r\n    $$scope$.setRoot($scope.getRoot());\r\n    $$scope$.setWorkInProgress(wipFiber);\r\n    replaceScope($$scope$);\r\n  };\r\n\r\n  wipFiber.child = wipFiber.alt.child;\r\n  wipFiber.alt = null;\r\n  $scope.applyCancels();\r\n  flush($scope, true);\r\n  scheduler.cancelTask(restore);\r\n\r\n  return false;\r\n}\r\n\r\nexport type CreateUpdateOptions = {\r\n  rootId: number;\r\n  isTransition?: boolean;\r\n  hook: Hook;\r\n  createChanger?: () => UpdateChanger;\r\n};\r\n\r\nexport type UpdateChanger = {\r\n  shouldUpdate: () => boolean;\r\n} & Pick<RestoreOptions, 'setValue' | 'resetValue'>;\r\n\r\nfunction createUpdate(options: CreateUpdateOptions) {\r\n  const { rootId, hook, isTransition, createChanger = $createChanger } = options;\r\n  const callback = (restore?: (options: RestoreOptions) => void) => {\r\n    setRootId(rootId); // !\r\n    const fromRestore = detectIsFunction(restore);\r\n    const { shouldUpdate, setValue, resetValue } = createChanger();\r\n    const $scope = $$scope();\r\n    const owner = hook.owner;\r\n    const fiber = owner.alt || owner;\r\n\r\n    if (!shouldUpdate() || !detectIsFiberAlive(fiber) || fromRestore) {\r\n      fromRestore && restore({ fiber, setValue, resetValue });\r\n      return;\r\n    }\r\n\r\n    detectIsFunction(setValue) && setValue();\r\n    detectIsFunction(resetValue) && isTransition && $scope.addCancel(resetValue);\r\n\r\n    fiber.alt = new Fiber().mutate(fiber);\r\n    fiber.tag = UPDATE_EFFECT_TAG;\r\n    fiber.cc = 0;\r\n    fiber.cec = 0;\r\n    fiber.child = null;\r\n\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      fiber.marker = '🔥';\r\n    }\r\n\r\n    $scope.setIsUpdateZone(true);\r\n    $scope.resetMount();\r\n    $scope.setWorkInProgress(fiber);\r\n    $scope.setCursorFiber(fiber);\r\n    fiber.inst = mount(fiber, null, $scope);\r\n    $scope.setNextUnitOfWork(fiber);\r\n  };\r\n\r\n  return callback;\r\n}\r\n\r\nconst $createChanger = (): UpdateChanger => ({\r\n  shouldUpdate: trueFn,\r\n  setValue: null,\r\n  resetValue: null,\r\n});\r\n\r\nconst detectIsBusy = () => Boolean($$scope()?.getWorkInProgress());\r\n\r\nexport { Fiber, workLoop, createUpdate, detectIsBusy };\r\n","import { type WorkLoop, workLoop, detectIsBusy } from '../workloop';\r\nimport { type SetPendingStatus } from '../start-transition';\r\nimport { type Callback } from '../shared';\r\nimport { type Fiber } from '../fiber';\r\nimport { ROOT, HOOK_DELIMETER, YIELD_INTERVAL, TaskPriority } from '../constants';\r\nimport { getTime, detectIsFunction, nextTick } from '../utils';\r\nimport { EventEmitter } from '../emitter';\r\nimport { platform } from '../platform';\r\n\r\nclass MessageChannel extends EventEmitter<PortEvent> {\r\n  port1: MessagePort = null;\r\n  port2: MessagePort = null;\r\n\r\n  constructor() {\r\n    super();\r\n    this.port1 = new MessagePort(this);\r\n    this.port2 = new MessagePort(this);\r\n  }\r\n}\r\n\r\nclass MessagePort {\r\n  channel: MessageChannel;\r\n  offs: Array<Callback> = [];\r\n\r\n  constructor(channel: MessageChannel) {\r\n    this.channel = channel;\r\n  }\r\n\r\n  on(event: PortEvent, callback: PortListener) {\r\n    const off = this.channel.on(event, callback);\r\n\r\n    this.offs.push(off);\r\n  }\r\n\r\n  postMessage(value: unknown) {\r\n    platform.spawn(() => {\r\n      this.channel.emit('message', value);\r\n    });\r\n  }\r\n\r\n  unref() {\r\n    this.offs.forEach(x => x());\r\n  }\r\n}\r\n\r\nclass Scheduler {\r\n  private queue: Record<TaskPriority, Array<Task>> = {\r\n    [TaskPriority.HIGH]: [],\r\n    [TaskPriority.NORMAL]: [],\r\n    [TaskPriority.LOW]: [],\r\n  };\r\n  private deadline = 0;\r\n  private task: Task = null;\r\n  private scheduledCallback: WorkLoop = null;\r\n  private isMessageLoopRunning = false;\r\n  private channel: MessageChannel = null;\r\n  private port: MessagePort = null;\r\n\r\n  constructor() {\r\n    this.channel = new MessageChannel();\r\n    this.port = this.channel.port2;\r\n    this.channel.port1.on('message', this.performWorkUntilDeadline.bind(this));\r\n  }\r\n\r\n  reset() {\r\n    this.deadline = 0;\r\n    this.task = null;\r\n    this.scheduledCallback = null;\r\n    this.isMessageLoopRunning = false;\r\n  }\r\n\r\n  shouldYield() {\r\n    return getTime() >= this.deadline;\r\n  }\r\n\r\n  schedule(callback: Callback, options?: ScheduleCallbackOptions) {\r\n    const {\r\n      priority = TaskPriority.NORMAL,\r\n      forceAsync = false,\r\n      isTransition = false,\r\n      createLocation,\r\n      setPendingStatus,\r\n    } = options || {};\r\n    const task = new Task(callback, priority, forceAsync);\r\n\r\n    task.setIsTransition(isTransition);\r\n    task.setPendingSetter(setPendingStatus);\r\n    task.setLocationCreator(createLocation || createRootLocation);\r\n    this.put(task);\r\n    this.execute();\r\n  }\r\n\r\n  hasPrimaryTask() {\r\n    if (!this.task.getIsTransition()) return false;\r\n    const { high, normal, low } = this.getQueues();\r\n    const hasPrimary = high.length > 0 || normal.length > 0;\r\n    const hasLow = low.length > 0;\r\n\r\n    if (hasPrimary || hasLow) {\r\n      const loc = this.task.createLocation();\r\n\r\n      if (hasPrimary) {\r\n        const has = Task.detectHasRelatedUpdate(loc, high, true) || Task.detectHasRelatedUpdate(loc, normal, true);\r\n\r\n        if (has) {\r\n          this.task.markAsUnnecessary();\r\n        }\r\n\r\n        return true;\r\n      }\r\n\r\n      if (hasLow) {\r\n        const has = Task.detectHasRelatedUpdate(loc, low);\r\n\r\n        if (has) {\r\n          this.task.markAsUnnecessary();\r\n\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  cancelTask(fn: TaskRestorer) {\r\n    if (this.task.getIsUnnecessary()) return this.complete(this.task);\r\n    this.task.setTaskRestorer(fn);\r\n    this.defer(this.task);\r\n  }\r\n\r\n  private complete(task: Task) {\r\n    task.pending(false);\r\n  }\r\n\r\n  private put(task: Task) {\r\n    const queue = this.queue[task.getPriority()];\r\n\r\n    if (task.getIsTransition()) {\r\n      const loc = task.createLocation();\r\n      const tasks = queue.filter(x => x.createLocation() !== loc);\r\n\r\n      queue.splice(0, queue.length, ...tasks);\r\n    }\r\n\r\n    queue.push(task);\r\n  }\r\n\r\n  private pick(queue: Array<Task>) {\r\n    if (queue.length === 0) return false;\r\n    this.task = queue.shift();\r\n\r\n    if (this.task.getIsTransition() && this.task.canPending()) {\r\n      const task = this.task;\r\n\r\n      task.markAsPending();\r\n      this.defer(this.task);\r\n      this.task = null;\r\n\r\n      nextTick(() => task.pending(true));\r\n\r\n      return true;\r\n    }\r\n\r\n    this.task.run();\r\n    this.task.getForceAsync() ? this.requestCallbackAsync(workLoop) : this.requestCallback(workLoop);\r\n\r\n    return true;\r\n  }\r\n\r\n  private execute() {\r\n    const isBusy = detectIsBusy();\r\n    const { high, normal, low } = this.getQueues();\r\n\r\n    if (!isBusy && !this.isMessageLoopRunning) {\r\n      this.pick(high) || this.pick(normal) || this.pick(low);\r\n    }\r\n  }\r\n\r\n  private requestCallbackAsync(callback: WorkLoop) {\r\n    this.scheduledCallback = callback;\r\n\r\n    if (!this.isMessageLoopRunning) {\r\n      this.isMessageLoopRunning = true;\r\n      this.port.postMessage(null);\r\n    }\r\n  }\r\n\r\n  private requestCallback(callback: WorkLoop) {\r\n    callback(false);\r\n    this.task = null;\r\n    this.execute();\r\n  }\r\n\r\n  private performWorkUntilDeadline() {\r\n    if (this.scheduledCallback) {\r\n      this.deadline = getTime() + YIELD_INTERVAL;\r\n      const hasMoreWork = this.scheduledCallback(true);\r\n\r\n      if (hasMoreWork) {\r\n        this.port.postMessage(null);\r\n      } else {\r\n        if (hasMoreWork === null) {\r\n          setTimeout(() => this.port.postMessage(null)); // has promise\r\n        } else {\r\n          this.complete(this.task);\r\n          this.reset();\r\n          this.execute();\r\n        }\r\n      }\r\n    } else {\r\n      this.isMessageLoopRunning = false;\r\n    }\r\n  }\r\n\r\n  private defer(task: Task) {\r\n    const { low } = this.getQueues();\r\n\r\n    low.unshift(task);\r\n  }\r\n\r\n  private getQueues() {\r\n    const high = this.queue[TaskPriority.HIGH];\r\n    const normal = this.queue[TaskPriority.NORMAL];\r\n    const low = this.queue[TaskPriority.LOW];\r\n\r\n    return {\r\n      high,\r\n      normal,\r\n      low,\r\n    };\r\n  }\r\n}\r\n\r\ntype TaskCallback = (fn: TaskRestorer) => void;\r\ntype TaskRestorer = (options: RestoreOptions) => void;\r\ntype LocationCreator = () => string;\r\n\r\nclass Task {\r\n  private id: number;\r\n  private priority: TaskPriority;\r\n  private forceAsync: boolean;\r\n  private isTransition: boolean;\r\n  private isPending: boolean;\r\n  private isUnnecessary: boolean;\r\n  private callback: TaskCallback;\r\n  private taskRestorer?: TaskRestorer = null;\r\n  private locationCreator?: LocationCreator;\r\n  private pendingSetter?: SetPendingStatus = null;\r\n  private static nextTaskId = 0;\r\n\r\n  constructor(callback: TaskCallback, priority: TaskPriority, forceAsync: boolean) {\r\n    this.id = ++Task.nextTaskId;\r\n    this.callback = callback;\r\n    this.priority = priority;\r\n    this.forceAsync = forceAsync;\r\n  }\r\n\r\n  getPriority() {\r\n    return this.priority;\r\n  }\r\n\r\n  getForceAsync() {\r\n    return this.forceAsync;\r\n  }\r\n\r\n  setIsTransition(value: boolean) {\r\n    this.isTransition = value;\r\n  }\r\n\r\n  getIsTransition() {\r\n    return this.isTransition;\r\n  }\r\n\r\n  run() {\r\n    this.callback(this.taskRestorer);\r\n    this.taskRestorer = null;\r\n  }\r\n\r\n  pending(value: boolean) {\r\n    this.isTransition && this.pendingSetter && this.pendingSetter(value);\r\n  }\r\n\r\n  markAsPending() {\r\n    this.isPending = true;\r\n  }\r\n\r\n  canPending() {\r\n    return !this.isPending && detectIsFunction(this.pendingSetter);\r\n  }\r\n\r\n  markAsUnnecessary() {\r\n    this.isUnnecessary = true;\r\n  }\r\n\r\n  getIsUnnecessary() {\r\n    return this.isUnnecessary;\r\n  }\r\n\r\n  setTaskRestorer(fn: TaskRestorer) {\r\n    this.taskRestorer = fn;\r\n  }\r\n\r\n  setLocationCreator(fn: LocationCreator) {\r\n    this.locationCreator = fn;\r\n  }\r\n\r\n  createLocation() {\r\n    return this.locationCreator();\r\n  }\r\n\r\n  setPendingSetter(fn: SetPendingStatus) {\r\n    this.pendingSetter = fn;\r\n  }\r\n\r\n  static detectHasRelatedUpdate(loc: string, tasks: Array<Task>, deep = false) {\r\n    const [$loc] = loc.split(HOOK_DELIMETER);\r\n\r\n    return tasks.some(x => {\r\n      const $$loc = x.createLocation();\r\n      const has = $$loc === loc || (deep && $$loc.length > loc.length && $$loc.indexOf($loc) !== -1);\r\n\r\n      return has;\r\n    });\r\n  }\r\n}\r\n\r\nconst createRootLocation: LocationCreator = () => ROOT;\r\n\r\ntype PortEvent = 'message';\r\ntype PortListener = (value: unknown) => void;\r\n\r\nexport type RestoreOptions = {\r\n  fiber: Fiber;\r\n  setValue?: () => void;\r\n  resetValue?: () => void;\r\n};\r\n\r\nexport type ScheduleCallbackOptions = {\r\n  priority?: TaskPriority;\r\n  forceAsync?: boolean;\r\n  isTransition?: boolean;\r\n  createLocation?: () => string;\r\n  setPendingStatus?: SetPendingStatus;\r\n  onCompleted?: () => void;\r\n};\r\n\r\nconst scheduler = new Scheduler();\r\n\r\nexport { scheduler };\r\n","import { detectIsObject, detectIsNull, detectIsFunction } from '../utils';\r\nimport type { Component, ComponentFactory } from '../component';\r\nimport type { RefProps, KeyProps, FlagProps } from '../shared';\r\nimport { useMemo } from '../use-memo';\r\n\r\nfunction forwardRef<P extends object, R>(\r\n  component: ComponentFactory<P, R>,\r\n): ComponentFactory<P & RefProps<R> & KeyProps & FlagProps, R> {\r\n  type Props = P & RefProps<R>;\r\n\r\n  return (props: Props) => {\r\n    const { ref, ...rest } = (props || {}) as Props;\r\n\r\n    return component(rest as P, ref) as Component<P, R>;\r\n  };\r\n}\r\n\r\nfunction detectIsMutableRef(ref: unknown): ref is MutableRef {\r\n  if (!detectIsObject(ref) || detectIsNull(ref)) return false;\r\n  const mutableRef = ref as MutableRef;\r\n\r\n  for (const key in mutableRef) {\r\n    if (key === 'current' && mutableRef.hasOwnProperty(key)) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nfunction applyRef<T>(ref: Ref<T>, current: T) {\r\n  if (detectIsFunction(ref)) {\r\n    ref(current);\r\n  } else if (detectIsMutableRef(ref)) {\r\n    ref.current = current;\r\n  }\r\n}\r\n\r\nfunction useRef<T>(initialValue: T = null): MutableRef<T> {\r\n  const ref = useMemo(() => ({ current: initialValue }), []) as MutableRef<T>;\r\n\r\n  return ref;\r\n}\r\n\r\nexport type MutableRef<T = unknown> = {\r\n  current: T;\r\n};\r\n\r\nexport type FunctionRef<T = unknown> = (ref: T) => void;\r\n\r\nexport type Ref<T = unknown> = MutableRef<T> | FunctionRef<T>;\r\n\r\nexport { forwardRef, detectIsMutableRef, applyRef, useRef };\r\n","import { type DarkElement, type Fiber, component, useMemo, $$scope, detectIsComponent } from '@dark-engine/core';\r\n\r\nimport type { TagNativeElement } from '../native-element';\r\n\r\nconst $$portal = Symbol('portal');\r\n\r\nfunction createPortal(slot: DarkElement, container: TagNativeElement) {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    if (!(container instanceof Element)) {\r\n      throw new Error(`[Dark]: createPortal receives only Element as container!`);\r\n    }\r\n  }\r\n\r\n  return Portal({ container, slot });\r\n}\r\n\r\ntype PortalProps = {\r\n  container: TagNativeElement;\r\n  slot: DarkElement;\r\n};\r\n\r\nconst Portal = component<PortalProps>(\r\n  props => {\r\n    const element = props.container;\r\n    const fiber = $$scope().getCursorFiber();\r\n\r\n    useMemo(() => (element.innerHTML = ''), []);\r\n\r\n    fiber.element = element;\r\n    props.container = null;\r\n\r\n    return props.slot;\r\n  },\r\n  { token: $$portal },\r\n);\r\n\r\nconst detectIsPortal = (instance: unknown) => detectIsComponent(instance) && instance.token === $$portal;\r\n\r\nconst getPortalContainer = (fiber: Fiber<TagNativeElement>): TagNativeElement | null =>\r\n  detectIsPortal(fiber.inst) ? fiber.element : null;\r\n\r\nfunction unmountPortal(fiber: Fiber<TagNativeElement>) {\r\n  const element = getPortalContainer(fiber);\r\n\r\n  element && (element.innerHTML = '');\r\n}\r\n\r\nexport { createPortal, unmountPortal, detectIsPortal };\r\n","import { detectIsFunction, $$scope, detectIsArray } from '@dark-engine/core';\r\n\r\nimport type { TagNativeElement } from '../native-element';\r\n\r\ntype BrowserEventConstructor = (type: string, event: Event) => void;\r\n\r\nclass SyntheticEvent<E extends Event, T = TagNativeElement> {\r\n  public type = '';\r\n  public sourceEvent: E = null;\r\n  public target: T = null;\r\n  private propagation = true;\r\n\r\n  constructor(options: Pick<SyntheticEvent<E, T>, 'sourceEvent' | 'target'>) {\r\n    this.type = options.sourceEvent.type;\r\n    this.sourceEvent = options.sourceEvent;\r\n    this.target = options.target;\r\n  }\r\n\r\n  public stopPropagation() {\r\n    this.propagation = false;\r\n    this.sourceEvent.stopPropagation();\r\n  }\r\n\r\n  public preventDefault() {\r\n    this.sourceEvent.preventDefault();\r\n  }\r\n\r\n  public getPropagation() {\r\n    return this.propagation;\r\n  }\r\n}\r\n\r\nfunction delegateEvent(\r\n  target: Element,\r\n  eventName: string,\r\n  handler: (e: Event) => void | [fn: () => void, ...args: Array<any>],\r\n) {\r\n  const $scope = $$scope();\r\n  const eventsMap = $scope.getEvents();\r\n  const handlersMap = eventsMap.get(eventName);\r\n  const $handler = detectIsArray(handler) ? (e: Event) => handler[0](...handler.slice(1), e) : handler;\r\n\r\n  if (!handlersMap) {\r\n    const rootHandler = (event: Event) => {\r\n      const handler = eventsMap.get(eventName).get(event.target);\r\n      const target = event.target as TagNativeElement;\r\n      let $event: SyntheticEvent<Event> = null;\r\n\r\n      if (detectIsFunction(handler)) {\r\n        $event = new SyntheticEvent({ sourceEvent: event, target });\r\n\r\n        $scope.setIsEventZone(true);\r\n        handler($event);\r\n        $scope.setIsEventZone(false);\r\n      }\r\n\r\n      if (target.parentElement) {\r\n        const shouldPropagate = $event ? $event.getPropagation() : true;\r\n\r\n        if (shouldPropagate) {\r\n          const constructor = event.constructor as BrowserEventConstructor;\r\n\r\n          target.parentElement.dispatchEvent(new constructor(event.type, event));\r\n        }\r\n      }\r\n    };\r\n\r\n    eventsMap.set(eventName, new WeakMap([[target, $handler]]));\r\n    document.addEventListener(eventName, rootHandler, true);\r\n    $scope.addEventUnsubscriber(() => document.removeEventListener(eventName, rootHandler, true));\r\n  } else {\r\n    handlersMap.set(target, $handler);\r\n  }\r\n}\r\n\r\nconst detectIsEvent = (attrName: string) => attrName.startsWith('on');\r\n\r\nconst getEventName = (attrName: string) => attrName.slice(2, attrName.length).toLowerCase();\r\n\r\nexport { SyntheticEvent, delegateEvent, detectIsEvent, getEventName };\r\n","export const VERSION = '0.25.1';\r\nexport const STYLE_ATTR = 'style';\r\nexport const CLASS_ATTR = 'class';\r\nexport const CLASS_NAME_ATTR = 'className';\r\nexport const EXCLUDE_ATTR_MARK = '$';\r\n","import {\r\n  type Fiber,\r\n  type VirtualNode,\r\n  type TagVirtualNode,\r\n  type TextVirtualNode,\r\n  type CommentVirtualNode,\r\n  type PlainVirtualNode,\r\n  type Callback,\r\n  REF_ATTR,\r\n  ATTR_BLACK_LIST,\r\n  CREATE_EFFECT_TAG,\r\n  UPDATE_EFFECT_TAG,\r\n  DELETE_EFFECT_TAG,\r\n  SKIP_EFFECT_TAG,\r\n  MOVE_MASK,\r\n  FLUSH_MASK,\r\n  SHADOW_MASK,\r\n  detectIsUndefined,\r\n  detectIsBoolean,\r\n  detectIsObject,\r\n  NodeType,\r\n  detectIsTagVirtualNode,\r\n  detectIsTextVirtualNode,\r\n  detectIsPlainVirtualNode,\r\n  getFiberWithElement,\r\n  collectElements,\r\n  walk,\r\n  dummyFn,\r\n  $$scope,\r\n  applyRef,\r\n} from '@dark-engine/core';\r\n\r\nimport { detectIsPortal } from '../portal';\r\nimport { delegateEvent, detectIsEvent, getEventName } from '../events';\r\nimport { STYLE_ATTR, CLASS_ATTR, CLASS_NAME_ATTR, EXCLUDE_ATTR_MARK } from '../constants';\r\nimport type {\r\n  NativeElement,\r\n  TagNativeElement,\r\n  TextNativeElement,\r\n  CommentNativeElement,\r\n  NativeNode,\r\n  AttributeValue,\r\n} from '../native-element';\r\n\r\nlet moves: Array<Callback> = [];\r\nlet patches: Array<Callback> = [];\r\nlet trackUpdate: (nativeElement: NativeElement) => void = null;\r\nconst svgTagNames = new Set([\r\n  'svg',\r\n  'animate',\r\n  'animateMotion',\r\n  'animateTransform',\r\n  'circle',\r\n  'clipPath',\r\n  'defs',\r\n  'desc',\r\n  'ellipse',\r\n  'feBlend',\r\n  'feColorMatrix',\r\n  'feComponentTransfer',\r\n  'feComposite',\r\n  'feConvolveMatrix',\r\n  'feDiffuseLighting',\r\n  'feDisplacementMap',\r\n  'feDistantLight',\r\n  'feDropShadow',\r\n  'feFlood',\r\n  'feFuncA',\r\n  'feFuncB',\r\n  'feFuncG',\r\n  'feFuncR',\r\n  'feGaussianBlur',\r\n  'feImage',\r\n  'feMerge',\r\n  'feMergeNode',\r\n  'feMorphology',\r\n  'feOffset',\r\n  'fePointLight',\r\n  'feSpecularLighting',\r\n  'feSpotLight',\r\n  'feTile',\r\n  'feTurbulence',\r\n  'filter',\r\n  'foreignObject',\r\n  'g',\r\n  'image',\r\n  'line',\r\n  'linearGradient',\r\n  'marker',\r\n  'mask',\r\n  'metadata',\r\n  'mpath',\r\n  'path',\r\n  'pattern',\r\n  'polygon',\r\n  'polyline',\r\n  'radialGradient',\r\n  'rect',\r\n  'stop',\r\n  'switch',\r\n  'symbol',\r\n  'text',\r\n  'textPath',\r\n  'tspan',\r\n  'use',\r\n  'view',\r\n]);\r\nconst voidTagNames = new Set([\r\n  'area',\r\n  'base',\r\n  'br',\r\n  'col',\r\n  'embed',\r\n  'hr',\r\n  'img',\r\n  'input',\r\n  'link',\r\n  'meta',\r\n  'param',\r\n  'source',\r\n  'track',\r\n  'wbr',\r\n]);\r\n\r\nconst createNativeElementMap = {\r\n  [NodeType.TAG]: (vNode: VirtualNode): TagNativeElement => {\r\n    const tagNode = vNode as TagVirtualNode;\r\n    const name = tagNode.name;\r\n\r\n    return detectIsSvgElement(name)\r\n      ? document.createElementNS('http://www.w3.org/2000/svg', name)\r\n      : document.createElement(name);\r\n  },\r\n  [NodeType.TEXT]: (vNode: VirtualNode): TextNativeElement => {\r\n    return document.createTextNode((vNode as TextVirtualNode).value);\r\n  },\r\n  [NodeType.COMMENT]: (vNode: VirtualNode): CommentNativeElement => {\r\n    return document.createComment((vNode as CommentVirtualNode).value);\r\n  },\r\n};\r\n\r\nfunction createNativeElement(node: VirtualNode): NativeElement {\r\n  return createNativeElementMap[node.type](node);\r\n}\r\n\r\nfunction detectIsSvgElement(name: string) {\r\n  return svgTagNames.has(name);\r\n}\r\n\r\nfunction detectIsVoidElement(name: string) {\r\n  return voidTagNames.has(name);\r\n}\r\n\r\nfunction setObjectStyle(element: TagNativeElement, style: object) {\r\n  const keys = Object.keys(style);\r\n\r\n  for (const key of keys) {\r\n    element.style.setProperty(key, String(style[key]));\r\n  }\r\n}\r\n\r\nfunction addAttributes(element: NativeElement, node: TagVirtualNode, isHydrateZone: boolean) {\r\n  const attrNames = Object.keys(node.attrs);\r\n  const tagElement = element as TagNativeElement;\r\n\r\n  for (const attrName of attrNames) {\r\n    const attrValue = node.attrs[attrName];\r\n\r\n    if (attrName[0] === EXCLUDE_ATTR_MARK) continue;\r\n\r\n    if (attrName === REF_ATTR) {\r\n      applyRef(attrValue, element);\r\n      continue;\r\n    }\r\n\r\n    if (attrName === CLASS_ATTR || attrName === CLASS_NAME_ATTR) {\r\n      toggleAttribute(tagElement, CLASS_ATTR, attrValue);\r\n      continue;\r\n    }\r\n\r\n    if (attrName === STYLE_ATTR && attrValue && detectIsObject(attrValue)) {\r\n      setObjectStyle(tagElement, attrValue);\r\n      continue;\r\n    }\r\n\r\n    if (detectIsEvent(attrName)) {\r\n      delegateEvent(tagElement, getEventName(attrName), attrValue);\r\n    } else if (!isHydrateZone && !detectIsUndefined(attrValue) && !ATTR_BLACK_LIST[attrName]) {\r\n      const stop = patchProperties({\r\n        tagName: node.name,\r\n        element: tagElement,\r\n        attrValue,\r\n        attrName,\r\n      });\r\n\r\n      !stop && tagElement.setAttribute(attrName, attrValue);\r\n    }\r\n  }\r\n}\r\n\r\nfunction updateAttributes(element: NativeElement, prevNode: TagVirtualNode, nextNode: TagVirtualNode) {\r\n  const attrNames = getAttributeNames(prevNode, nextNode);\r\n  const tagElement = element as TagNativeElement;\r\n\r\n  for (const attrName of attrNames) {\r\n    const prevAttrValue = prevNode.attrs[attrName];\r\n    const nextAttrValue = nextNode.attrs[attrName];\r\n\r\n    if (attrName[0] === EXCLUDE_ATTR_MARK) continue;\r\n\r\n    if (attrName === REF_ATTR) {\r\n      applyRef(prevAttrValue, element);\r\n      continue;\r\n    }\r\n\r\n    if ((attrName === CLASS_ATTR || attrName === CLASS_NAME_ATTR) && prevAttrValue !== nextAttrValue) {\r\n      toggleAttribute(tagElement, CLASS_ATTR, nextAttrValue);\r\n      continue;\r\n    }\r\n\r\n    if (attrName === STYLE_ATTR && nextAttrValue && prevAttrValue !== nextAttrValue && detectIsObject(nextAttrValue)) {\r\n      setObjectStyle(tagElement, nextAttrValue);\r\n      continue;\r\n    }\r\n\r\n    if (!detectIsUndefined(nextAttrValue)) {\r\n      if (detectIsEvent(attrName)) {\r\n        prevAttrValue !== nextAttrValue && delegateEvent(tagElement, getEventName(attrName), nextAttrValue);\r\n      } else if (!ATTR_BLACK_LIST[attrName] && prevAttrValue !== nextAttrValue) {\r\n        const stop = patchProperties({\r\n          tagName: nextNode.name,\r\n          element: tagElement,\r\n          attrValue: nextAttrValue,\r\n          attrName,\r\n        });\r\n\r\n        !stop && tagElement.setAttribute(attrName, nextAttrValue);\r\n      }\r\n    } else {\r\n      tagElement.removeAttribute(attrName);\r\n    }\r\n  }\r\n}\r\n\r\nfunction toggleAttribute(element: TagNativeElement, name: string, value: string) {\r\n  value ? element.setAttribute(name, value) : element.removeAttribute(name);\r\n}\r\n\r\nfunction getAttributeNames(prevNode: TagVirtualNode, nextNode: TagVirtualNode) {\r\n  const attrNames = new Set<string>();\r\n  const prevAttrs = Object.keys(prevNode.attrs);\r\n  const nextAttrs = Object.keys(nextNode.attrs);\r\n  const size = Math.max(prevAttrs.length, nextAttrs.length);\r\n\r\n  for (let i = 0; i < size; i++) {\r\n    attrNames.add(prevAttrs[i] || nextAttrs[i]);\r\n  }\r\n\r\n  return attrNames;\r\n}\r\n\r\ntype PatchPropertiesOptions = {\r\n  tagName: string;\r\n  element: TagNativeElement;\r\n  attrName: string;\r\n  attrValue: AttributeValue;\r\n};\r\n\r\nfunction patchProperties(options: PatchPropertiesOptions): boolean {\r\n  const { tagName, element, attrName, attrValue } = options;\r\n  const fn = patchPropertiesSpecialCasesMap[tagName];\r\n  let stop = fn ? fn(element, attrName, attrValue) : false;\r\n\r\n  if (canSetProperty(element, attrName)) {\r\n    element[attrName] = attrValue;\r\n  }\r\n\r\n  if (!stop && detectIsBoolean(attrValue)) {\r\n    stop = !attrName.includes('-');\r\n  }\r\n\r\n  return stop;\r\n}\r\n\r\nfunction canSetProperty(element: TagNativeElement, key: string) {\r\n  const prototype = Object.getPrototypeOf(element);\r\n  const descriptor = Object.getOwnPropertyDescriptor(prototype, key);\r\n\r\n  return Boolean(descriptor?.set);\r\n}\r\n\r\nconst patchPropertiesSpecialCasesMap: Record<\r\n  string,\r\n  (element: NativeElement, attrName: string, attrValue: AttributeValue) => boolean\r\n> = {\r\n  input: (element: HTMLInputElement, attrName: string, attrValue: AttributeValue) => {\r\n    if (attrName === 'value') {\r\n      patches.push(() => {\r\n        detectIsBoolean(attrValue) ? (element.checked = attrValue) : (element.value = String(attrValue));\r\n      });\r\n    } else if (attrName === 'autoFocus') {\r\n      patches.push(() => {\r\n        element.autofocus = Boolean(attrValue);\r\n        element.autofocus && element.focus();\r\n      });\r\n    }\r\n\r\n    return false;\r\n  },\r\n  textarea: (element: HTMLTextAreaElement, attrName: string, attrValue: AttributeValue) => {\r\n    if (attrName === 'value') {\r\n      element.innerText = String(attrValue);\r\n\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  },\r\n};\r\n\r\nfunction commitCreation(fiber: Fiber<NativeElement>) {\r\n  const parentFiber = getFiberWithElement<NativeElement, TagNativeElement>(fiber.parent);\r\n  const parentElement = parentFiber.element;\r\n  const childNodes = parentElement.childNodes;\r\n  const isHydrateZone = $$scope().getIsHydrateZone();\r\n\r\n  if (isHydrateZone) {\r\n    const nativeElement = childNodes[fiber.eidx] as NativeElement;\r\n\r\n    if (\r\n      detectIsTextVirtualNode(fiber.inst) &&\r\n      nativeElement instanceof Text &&\r\n      fiber.inst.value.length !== nativeElement.length\r\n    ) {\r\n      nativeElement.splitText(fiber.inst.value.length);\r\n    }\r\n\r\n    fiber.element = nativeElement;\r\n  } else {\r\n    if (!(fiber.mask & SHADOW_MASK)) {\r\n      if (childNodes.length === 0 || fiber.eidx > childNodes.length - 1) {\r\n        !detectIsVoidElement((parentFiber.inst as TagVirtualNode).name) &&\r\n          appendNativeElement(fiber.element, parentElement);\r\n      } else {\r\n        insertNativeElement(fiber.element, parentElement.childNodes[fiber.eidx], parentElement);\r\n      }\r\n    }\r\n  }\r\n\r\n  detectIsTagVirtualNode(fiber.inst) && addAttributes(fiber.element, fiber.inst, isHydrateZone);\r\n}\r\n\r\nfunction commitUpdate(fiber: Fiber<NativeElement>) {\r\n  const element = fiber.element;\r\n  const prevInstance = fiber.alt.inst as VirtualNode;\r\n  const nextInstance = fiber.inst as VirtualNode;\r\n\r\n  detectIsPlainVirtualNode(nextInstance)\r\n    ? (prevInstance as PlainVirtualNode).value !== nextInstance.value && (element.textContent = nextInstance.value)\r\n    : updateAttributes(element, prevInstance as TagVirtualNode, nextInstance as TagVirtualNode);\r\n}\r\n\r\nfunction commitDeletion(fiber: Fiber<NativeElement>) {\r\n  const parentFiber = getFiberWithElement<NativeElement, TagNativeElement>(fiber.parent);\r\n\r\n  if (fiber.mask & FLUSH_MASK) {\r\n    parentFiber.element.innerHTML && (parentFiber.element.innerHTML = '');\r\n    return;\r\n  }\r\n\r\n  walk<NativeElement>(fiber, (fiber, skip) => {\r\n    if (fiber.element) {\r\n      !detectIsPortal(fiber.inst) &&\r\n        canRemoveNativeElement(fiber.element, parentFiber.element) &&\r\n        removeNativeElement(fiber.element, parentFiber.element);\r\n      return skip();\r\n    }\r\n  });\r\n}\r\n\r\nfunction move(fiber: Fiber<NativeElement>) {\r\n  const sourceNodes = collectElements(fiber, x => x.element);\r\n  const sourceNode = sourceNodes[0];\r\n  const parentElement = sourceNode.parentElement;\r\n  const sourceFragment = new DocumentFragment();\r\n  const elementIdx = fiber.eidx;\r\n  let idx = 0;\r\n  const move = () => {\r\n    for (let i = 1; i < sourceNodes.length; i++) {\r\n      removeNativeElement(parentElement.childNodes[elementIdx + 1], parentElement);\r\n    }\r\n\r\n    replaceNativeElement(sourceFragment, parentElement.childNodes[elementIdx], parentElement);\r\n  };\r\n\r\n  for (const node of sourceNodes) {\r\n    insertNativeElement(document.createComment(`${elementIdx}:${idx}`), node, parentElement);\r\n    appendNativeElement(node, sourceFragment);\r\n    idx++;\r\n  }\r\n\r\n  moves.push(move);\r\n}\r\n\r\nconst commitMap: Record<string, (fiber: Fiber<NativeElement>) => void> = {\r\n  [CREATE_EFFECT_TAG]: (fiber: Fiber<NativeElement>) => {\r\n    if (!fiber.element || detectIsPortal(fiber.inst)) return;\r\n    trackUpdate && trackUpdate(fiber.element);\r\n    commitCreation(fiber);\r\n  },\r\n  [UPDATE_EFFECT_TAG]: (fiber: Fiber<NativeElement>) => {\r\n    fiber.mask & MOVE_MASK && (move(fiber), (fiber.mask &= ~MOVE_MASK));\r\n    if (!fiber.element || detectIsPortal(fiber.inst)) return;\r\n    trackUpdate && trackUpdate(fiber.element);\r\n    commitUpdate(fiber);\r\n  },\r\n  [DELETE_EFFECT_TAG]: commitDeletion,\r\n  [SKIP_EFFECT_TAG]: dummyFn,\r\n};\r\n\r\nfunction finishCommit() {\r\n  moves.forEach(x => x());\r\n  patches.forEach(x => x());\r\n  moves = [];\r\n  patches = [];\r\n}\r\n\r\nconst commit = (fiber: Fiber<NativeElement>) => commitMap[fiber.tag](fiber);\r\n\r\nconst setTrackUpdate = (fn: typeof trackUpdate) => (trackUpdate = fn);\r\n\r\nconst appendNativeElement = (element: NativeNode, parent: NativeNode) => parent.appendChild(element);\r\n\r\nconst insertNativeElement = (element: NativeNode, sibling: NativeNode, parent: TagNativeElement) =>\r\n  parent.insertBefore(element, sibling);\r\n\r\nconst insertNativeElementByIndex = (element: NativeNode, idx: number, parent: TagNativeElement) =>\r\n  parent.insertBefore(element, parent.childNodes[idx]);\r\n\r\nconst replaceNativeElement = (element: NativeNode, candidate: NativeNode, parent: TagNativeElement) =>\r\n  parent.replaceChild(element, candidate);\r\n\r\nconst canRemoveNativeElement = (element: NativeNode, parent: NativeNode) => element.parentElement === parent;\r\n\r\nconst removeNativeElement = (element: NativeNode, parent: TagNativeElement) => parent.removeChild(element);\r\n\r\nexport { createNativeElement, commit, finishCommit, setTrackUpdate, insertNativeElementByIndex };\r\n","import {\r\n  type DarkElement,\r\n  type Callback,\r\n  ROOT,\r\n  Fiber,\r\n  CREATE_EFFECT_TAG,\r\n  UPDATE_EFFECT_TAG,\r\n  platform,\r\n  flatten,\r\n  detectIsUndefined,\r\n  detectIsFunction,\r\n  trueFn,\r\n  TagVirtualNode,\r\n  TaskPriority,\r\n  createReplacer,\r\n  setRootId,\r\n  $$scope,\r\n  dummyFn,\r\n  scheduler,\r\n} from '@dark-engine/core';\r\n\r\nimport { createNativeElement, insertNativeElementByIndex, commit, finishCommit } from '../dom';\r\nimport { detectIsPortal, unmountPortal } from '../portal';\r\nimport type { TagNativeElement } from '../native-element';\r\n\r\nconst roots = new Map<Element, number>();\r\nconst raf = requestAnimationFrame.bind(window);\r\nconst caf = cancelAnimationFrame.bind(window);\r\nconst spawn = raf;\r\nlet isInjected = false;\r\n\r\nfunction inject() {\r\n  platform.createElement = createNativeElement as typeof platform.createElement;\r\n  platform.insertElement = insertNativeElementByIndex as typeof platform.insertElement;\r\n  platform.raf = raf;\r\n  platform.caf = caf;\r\n  platform.spawn = spawn;\r\n  platform.commit = commit;\r\n  platform.finishCommit = finishCommit;\r\n  platform.detectIsDynamic = trueFn;\r\n  platform.detectIsPortal = detectIsPortal;\r\n  platform.unmountPortal = unmountPortal;\r\n  platform.chunk = dummyFn;\r\n  isInjected = true;\r\n}\r\n\r\nfunction render(element: DarkElement, container: TagNativeElement, hydrate?: Callback) {\r\n  !isInjected && inject();\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    if (!(container instanceof Element)) {\r\n      throw new Error(`[Dark]: render receives only Element as container!`);\r\n    }\r\n  }\r\n\r\n  const isMounted = !detectIsUndefined(roots.get(container));\r\n  const isHydrate = detectIsFunction(hydrate);\r\n  let rootId: number = null;\r\n\r\n  if (!isMounted) {\r\n    rootId = roots.size;\r\n    roots.set(container, rootId);\r\n    !isHydrate && (container.innerHTML = '');\r\n  } else {\r\n    rootId = roots.get(container);\r\n  }\r\n\r\n  const $scope = $$scope(rootId);\r\n\r\n  // insertion effect can't schedule renders\r\n  if ($scope?.getIsInsertionEffectsZone()) return;\r\n\r\n  const callback = () => {\r\n    setRootId(rootId); // !\r\n    const $scope = $$scope();\r\n    const rootFiber = $scope.getRoot();\r\n    const isUpdate = Boolean(rootFiber);\r\n    const fiber = new Fiber().mutate({\r\n      element: container,\r\n      inst: new TagVirtualNode(ROOT, {}, flatten([element || createReplacer()]) as TagVirtualNode['children']),\r\n      alt: rootFiber,\r\n      tag: isUpdate ? UPDATE_EFFECT_TAG : CREATE_EFFECT_TAG,\r\n    });\r\n\r\n    $scope.resetMount();\r\n    $scope.setWorkInProgress(fiber);\r\n    $scope.setIsHydrateZone(isHydrate);\r\n    $scope.setNextUnitOfWork(fiber);\r\n    isHydrate && hydrate();\r\n  };\r\n\r\n  scheduler.schedule(callback, { priority: TaskPriority.NORMAL });\r\n}\r\n\r\nexport { render, roots, inject };\r\n","const time = () => performance.now();\r\n\r\nconst fix = (x: number, precision = 4) => Number(x.toFixed(precision));\r\n\r\nconst illegal = (value: string) => {\r\n  throw new Error(value);\r\n};\r\n\r\nconst range = (x: number) =>\r\n  Array(x)\r\n    .fill(null)\r\n    .map((_, idx) => idx);\r\n\r\nconst uniq = <T>(items: Array<T>, selector: (x: T) => unknown) => {\r\n  const arr: Array<T> = [];\r\n  const set = new Set();\r\n\r\n  for (const item of items) {\r\n    const key = selector(item);\r\n\r\n    !set.has(key) && arr.push(item);\r\n    set.add(key);\r\n  }\r\n\r\n  return arr;\r\n};\r\n\r\nexport { time, fix, illegal, range, uniq };\r\n","import { type ElementKey, type TimerId, detectIsEmpty } from '@dark-engine/core';\r\n\r\nimport { type Controller, type StartFn } from '../controller';\r\nimport { type SpringValue } from '../shared';\r\n\r\nclass SharedState<T extends string = string> {\r\n  private ctrls: Array<Controller<T>> = [];\r\n  private stack = new Set<ElementKey>();\r\n  private flow = Flow.RIGHT;\r\n  private isTrail = false;\r\n  private isPaused = false;\r\n  private isCanceled = false;\r\n  private timeout = 0;\r\n  private timerId: TimerId = null;\r\n  private events = new Map<AnimationEventName, Set<AnimationEventHandler<T>>>();\r\n\r\n  getCtrls() {\r\n    return this.ctrls;\r\n  }\r\n\r\n  setCtrls(ctrls: Array<Controller<T>>) {\r\n    this.ctrls = ctrls;\r\n  }\r\n\r\n  setIsTrail(x: boolean) {\r\n    this.isTrail = x;\r\n  }\r\n\r\n  getIsTrail() {\r\n    return this.isTrail;\r\n  }\r\n\r\n  setFlow(x: Flow) {\r\n    this.flow = x;\r\n  }\r\n\r\n  getIsPaused() {\r\n    return this.isPaused;\r\n  }\r\n\r\n  getIsCanceled() {\r\n    return this.isCanceled;\r\n  }\r\n\r\n  detectIsRightFlow() {\r\n    return this.flow === Flow.RIGHT;\r\n  }\r\n\r\n  setIsPlaying(x: boolean, key: ElementKey) {\r\n    if (x) {\r\n      this.stack.add(key);\r\n    } else {\r\n      this.stack.delete(key);\r\n    }\r\n  }\r\n\r\n  detectIsPlaying(key?: ElementKey) {\r\n    return detectIsEmpty(key) ? this.stack.size > 0 : this.stack.has(key);\r\n  }\r\n\r\n  start(fn?: StartFn<T>) {\r\n    this.defer(() => {\r\n      if (this.ctrls.length === 0) return;\r\n      this.event('series-start');\r\n\r\n      if (this.isTrail) {\r\n        const ctrl = this.flow === Flow.RIGHT ? this.ctrls[0] : this.ctrls[this.ctrls.length - 1];\r\n\r\n        ctrl.start(fn);\r\n      } else {\r\n        this.ctrls.forEach(x => x.start(fn));\r\n      }\r\n    });\r\n  }\r\n\r\n  pause() {\r\n    this.isPaused = true;\r\n  }\r\n\r\n  resume() {\r\n    this.isPaused = false;\r\n  }\r\n\r\n  delay(timeout: number) {\r\n    this.timeout = timeout;\r\n  }\r\n\r\n  reset() {\r\n    this.ctrls.forEach(x => x.reset());\r\n  }\r\n\r\n  cancel() {\r\n    this.ctrls.forEach(x => x.cancel());\r\n    this.resetTimer();\r\n    this.isCanceled = true;\r\n  }\r\n\r\n  on(event: AnimationEventName, handler: AnimationEventHandler<T>) {\r\n    if (!this.events.has(event)) {\r\n      this.events.set(event, new Set());\r\n    }\r\n\r\n    const subs = this.events.get(event);\r\n\r\n    subs.add(handler);\r\n\r\n    return () => subs.delete(handler);\r\n  }\r\n\r\n  event(name: AnimationEventName, value: AnimationEventValue<T> = null) {\r\n    this.events.has(name) && this.events.get(name).forEach(x => x(value));\r\n  }\r\n\r\n  completeSeries() {\r\n    const isCompleted = !this.detectIsPlaying();\r\n\r\n    isCompleted && this.event('series-end');\r\n  }\r\n\r\n  defer(fn: () => void) {\r\n    this.resetTimer();\r\n\r\n    if (this.timeout > 0) {\r\n      this.timerId = setTimeout(() => {\r\n        this.timerId = null;\r\n        fn();\r\n      }, this.timeout);\r\n    } else {\r\n      fn();\r\n    }\r\n  }\r\n\r\n  private resetTimer() {\r\n    this.timerId && clearTimeout(this.timerId);\r\n    this.timerId = null;\r\n  }\r\n}\r\n\r\nexport enum Flow {\r\n  RIGHT = 'RIGHT',\r\n  LEFT = 'LEFT',\r\n}\r\n\r\nlet sharedState: SharedState = null;\r\n\r\nfunction setSharedState(state: SharedState) {\r\n  sharedState = state;\r\n}\r\n\r\nfunction getSharedState() {\r\n  const state = sharedState;\r\n\r\n  sharedState = null;\r\n\r\n  return state;\r\n}\r\n\r\nexport type AnimationEventName = 'series-start' | 'item-start' | 'item-change' | 'item-end' | 'series-end';\r\n\r\nexport type AnimationEventValue<T extends string = string> = {\r\n  value: SpringValue<T>;\r\n  idx: number;\r\n  key: ElementKey;\r\n};\r\n\r\nexport type AnimationEventHandler<T extends string = string> = (value?: AnimationEventValue<T>) => void;\r\n\r\nexport { SharedState, setSharedState, getSharedState };\r\n","import { preset } from '../preset';\r\n\r\nexport type SpringValue<T extends string = string> = Record<T, number>;\r\n\r\nexport type SpringConfig = {\r\n  mass: number;\r\n  tension: number;\r\n  friction: number;\r\n  precision: number;\r\n  fix: number;\r\n};\r\n\r\nconst defaultSpringConfig: SpringConfig = {\r\n  ...preset('no-wobble'),\r\n  mass: 1,\r\n  precision: 3,\r\n  fix: 4,\r\n};\r\n\r\nexport { defaultSpringConfig };\r\n","import { type SpringConfig } from '../shared';\r\n\r\ntype Preset = Pick<SpringConfig, 'tension' | 'friction'>;\r\ntype PresetName = 'no-wobble' | 'gentle' | 'wobbly' | 'stiff';\r\n\r\nconst presets: Record<PresetName, Preset> = {\r\n  'no-wobble': { tension: 170, friction: 26 },\r\n  gentle: { tension: 120, friction: 14 },\r\n  wobbly: { tension: 180, friction: 12 },\r\n  stiff: { tension: 210, friction: 20 },\r\n};\r\n\r\nfunction preset(name: PresetName): Preset {\r\n  return presets[name] || ({} as Preset);\r\n}\r\n\r\nexport { preset };\r\n","import { detectIsFunction, detectIsEmpty, detectAreDepsDifferent, trueFn, error } from '../utils';\r\nimport { useLayoutEffect } from '../use-layout-effect';\r\nimport { type SubscriberWithValue } from '../shared';\r\nimport { ATOM_HOST_MASK } from '../constants';\r\nimport { $$scope, getRootId } from '../scope';\r\nimport { createUpdate } from '../workloop';\r\nimport { useUpdate } from '../use-update';\r\nimport { EventEmitter } from '../emitter';\r\nimport { scheduler } from '../scheduler';\r\nimport { useMemo } from '../use-memo';\r\nimport { type Hook } from '../fiber';\r\nimport { batch } from '../batch';\r\n\r\nclass Atom<T = unknown> {\r\n  private value: T;\r\n  private connections1: Map<Hook, Tuple<T>>;\r\n  private connections2: Map<T, Tuple<T>>;\r\n  private subjects: Set<ReadableAtom>;\r\n  private emitter: EventEmitter<'data', EmitterValue<T>>;\r\n\r\n  constructor(value: T) {\r\n    this.value = value;\r\n  }\r\n\r\n  val(fn?: ShouldUpdate<T>, key?: T) {\r\n    try {\r\n      this.__connect(fn, key);\r\n    } catch (err) {\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        error('[Dark]: Illegal invocation atom.val() outside render process!');\r\n      }\r\n    }\r\n\r\n    return this.value;\r\n  }\r\n\r\n  get() {\r\n    return this.value;\r\n  }\r\n\r\n  on(fn: SubscriberWithValue<EmitterValue<T>>) {\r\n    !this.emitter && (this.emitter = new EventEmitter());\r\n\r\n    return this.emitter.on('data', fn);\r\n  }\r\n\r\n  kill() {\r\n    if (this.connections1) {\r\n      for (const [hook, [_, __, ___, key]] of this.connections1) {\r\n        this.off(hook, key);\r\n      }\r\n    }\r\n\r\n    if (this.connections2) {\r\n      for (const [key, [_, hook]] of this.connections2) {\r\n        this.off(hook, key);\r\n      }\r\n    }\r\n\r\n    this.connections1 = null;\r\n    this.connections2 = null;\r\n    this.emitter = null;\r\n    this.subjects = null;\r\n  }\r\n\r\n  toString() {\r\n    return String(this.value);\r\n  }\r\n\r\n  toJSON() {\r\n    return this.value;\r\n  }\r\n\r\n  valueOf() {\r\n    return this.value;\r\n  }\r\n\r\n  __connect(fn: ShouldUpdate<T>, key: T) {\r\n    const rootId = getRootId();\r\n    const fiber = $$scope().getCursorFiber();\r\n    const { hook } = fiber;\r\n    const disconnect = () => this.off(hook, key);\r\n\r\n    !fiber.atoms && (fiber.atoms = new Map());\r\n    fiber.atoms.set(this, disconnect);\r\n    fiber.markHost(ATOM_HOST_MASK);\r\n\r\n    if (detectIsEmpty(key)) {\r\n      !this.connections1 && (this.connections1 = new Map());\r\n      this.connections1.set(hook, [rootId, hook, fn, key]);\r\n    } else {\r\n      !this.connections2 && (this.connections2 = new Map());\r\n      this.connections2.set(key, [rootId, hook, fn, key]);\r\n    }\r\n\r\n    return disconnect;\r\n  }\r\n\r\n  __addSubject(atom$: ReadableAtom) {\r\n    !this.subjects && (this.subjects = new Set());\r\n    this.subjects.add(atom$);\r\n  }\r\n\r\n  __removeSubject(atom$: ReadableAtom) {\r\n    return this.subjects && this.subjects.delete(atom$);\r\n  }\r\n\r\n  __getSize() {\r\n    const size1 = this.connections1 ? this.connections1.size : 0;\r\n    const size2 = this.connections2 ? this.connections2.size : 0;\r\n    const size3 = this.subjects ? this.subjects.size : 0;\r\n    const size4 = this.emitter ? this.emitter.__getSize() : 0;\r\n\r\n    return size1 + size2 + size3 + size4;\r\n  }\r\n\r\n  protected setValue(value: T | ((prevValue: T) => T)) {\r\n    const prev = this.value;\r\n    const next = detectIsFunction(value) ? value(this.value) : value;\r\n    const data: EmitterValue<T> = { prev, next };\r\n    const make = (tuple: Tuple<T>, prev: T, next: T) => {\r\n      const [rootId, hook, shouldUpdate, key] = tuple;\r\n      const fn = shouldUpdate || trueFn;\r\n\r\n      fn(prev, next, key) && scheduler.schedule(createUpdate({ rootId, hook }));\r\n    };\r\n\r\n    this.value = next;\r\n\r\n    if (this.connections1) {\r\n      for (const [_, tuple] of this.connections1) {\r\n        make(tuple, prev, next);\r\n      }\r\n    }\r\n\r\n    if (this.connections2) {\r\n      if (this.connections2.has(next)) {\r\n        make(this.connections2.get(next), prev, next);\r\n        this.connections2.has(prev) && make(this.connections2.get(prev), prev, next);\r\n      }\r\n    }\r\n\r\n    this.emitter && this.emitter.emit('data', data);\r\n    this.subjects && this.subjects.forEach(x => x.__notify());\r\n  }\r\n\r\n  private off(hook: Hook, key: T) {\r\n    hook.owner.atoms.delete(this);\r\n    this.connections1 && this.connections1.delete(hook);\r\n    this.connections2 && this.connections2.delete(key);\r\n  }\r\n}\r\n\r\nclass WritableAtom<T = unknown> extends Atom<T> {\r\n  set(value: T | ((prevValue: T) => T)) {\r\n    super.setValue(value);\r\n  }\r\n}\r\n\r\nclass ReadableAtom<T = unknown> extends Atom<T> {\r\n  private deps$: Array<Atom> = [];\r\n  private fn: ComputedFn<T> = null;\r\n  private values: Array<unknown> = [];\r\n\r\n  constructor(deps$: Array<Atom>, fn: ComputedFn<T>) {\r\n    const values = ReadableAtom.values(deps$);\r\n\r\n    super(ReadableAtom.compute(fn, values));\r\n    this.deps$ = deps$;\r\n    this.fn = fn;\r\n    this.values = values;\r\n    deps$.forEach(x => x.__addSubject(this));\r\n  }\r\n\r\n  __notify() {\r\n    const values = ReadableAtom.values(this.deps$);\r\n\r\n    if (detectAreDepsDifferent(this.values, values)) {\r\n      super.setValue(ReadableAtom.compute(this.fn, values));\r\n    }\r\n\r\n    this.values = values;\r\n  }\r\n\r\n  override kill() {\r\n    super.kill();\r\n    this.deps$.forEach(x => x.__removeSubject(this));\r\n    this.deps$ = [];\r\n    this.fn = null;\r\n  }\r\n\r\n  private static compute(fn: Function, values: Array<unknown>) {\r\n    return fn(...values);\r\n  }\r\n\r\n  private static values(deps$: Array<Atom>) {\r\n    return deps$.map(x => x.get());\r\n  }\r\n}\r\n\r\nconst detectIsAtom = (x: unknown): x is Atom => x instanceof Atom;\r\n\r\nconst detectIsWritableAtom = (x: unknown): x is WritableAtom => x instanceof WritableAtom;\r\n\r\nconst detectIsReadableAtom = (x: unknown): x is ReadableAtom => x instanceof ReadableAtom;\r\n\r\nconst atom = <T>(value?: T) => new WritableAtom(value);\r\n\r\nconst computed = <T, A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\r\n  deps$: [\r\n    Atom<A>,\r\n    Atom<B>?,\r\n    Atom<C>?,\r\n    Atom<D>?,\r\n    Atom<E>?,\r\n    Atom<F>?,\r\n    Atom<G>?,\r\n    Atom<H>?,\r\n    Atom<I>?,\r\n    Atom<J>?,\r\n    Atom<K>?,\r\n    Atom<L>?,\r\n    Atom<M>?,\r\n    Atom<N>?,\r\n  ],\r\n  fn: ComputedFn<T, A, B, C, D, E, F, G, H, I, J, K, L, M, N>,\r\n) => new ReadableAtom(deps$, fn) as ReadableAtom<ReturnType<typeof fn>>;\r\n\r\nfunction useAtom<T>(value?: T): WritableAtom<T> {\r\n  const atom$ = useMemo(() => atom<T>(value), []);\r\n\r\n  useLayoutEffect(() => () => atom$.kill(), []);\r\n\r\n  return atom$;\r\n}\r\n\r\nfunction useComputed<T, A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\r\n  deps$: [\r\n    Atom<A>,\r\n    Atom<B>?,\r\n    Atom<C>?,\r\n    Atom<D>?,\r\n    Atom<E>?,\r\n    Atom<F>?,\r\n    Atom<G>?,\r\n    Atom<H>?,\r\n    Atom<I>?,\r\n    Atom<J>?,\r\n    Atom<K>?,\r\n    Atom<L>?,\r\n    Atom<M>?,\r\n    Atom<N>?,\r\n  ],\r\n  fn: ComputedFn<T, A, B, C, D, E, F, G, H, I, J, K, L, M, N>,\r\n) {\r\n  const atom$ = useMemo(() => computed(deps$, fn), []);\r\n\r\n  useLayoutEffect(() => () => atom$.kill(), []);\r\n\r\n  return atom$;\r\n}\r\n\r\nfunction useStore<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\r\n  atoms$: [\r\n    Atom<A>,\r\n    Atom<B>?,\r\n    Atom<C>?,\r\n    Atom<D>?,\r\n    Atom<E>?,\r\n    Atom<F>?,\r\n    Atom<G>?,\r\n    Atom<H>?,\r\n    Atom<I>?,\r\n    Atom<J>?,\r\n    Atom<K>?,\r\n    Atom<L>?,\r\n    Atom<M>?,\r\n    Atom<N>?,\r\n  ],\r\n) {\r\n  const forceUpdate = useUpdate();\r\n  const update = () => batch(forceUpdate);\r\n\r\n  useLayoutEffect(() => {\r\n    const offs = atoms$.map(x => x.on(update));\r\n\r\n    return () => offs.forEach(x => x());\r\n  }, [...atoms$]);\r\n\r\n  return atoms$.map(x => x.get()) as [A, B, C, D, E, F, G, H, I, J, K, L, M, N];\r\n}\r\n\r\ntype ShouldUpdate<T> = (p: T, n: T, key?: T) => boolean;\r\ntype EmitterValue<T> = { prev: T; next: T };\r\ntype Tuple<T> = [number, Hook, ShouldUpdate<T>, T];\r\ntype ComputedFn<\r\n  T,\r\n  A = unknown,\r\n  B = unknown,\r\n  C = unknown,\r\n  D = unknown,\r\n  E = unknown,\r\n  F = unknown,\r\n  G = unknown,\r\n  H = unknown,\r\n  I = unknown,\r\n  J = unknown,\r\n  K = unknown,\r\n  L = unknown,\r\n  M = unknown,\r\n  N = unknown,\r\n> = (a: A, b?: B, c?: C, d?: D, e?: E, f?: F, g?: G, h?: H, i?: I, j?: J, k?: K, l?: L, m?: M, n?: N) => T;\r\n\r\nexport {\r\n  type Atom,\r\n  WritableAtom,\r\n  ReadableAtom,\r\n  detectIsAtom,\r\n  detectIsWritableAtom,\r\n  detectIsReadableAtom,\r\n  atom,\r\n  computed,\r\n  useAtom,\r\n  useComputed,\r\n  useStore,\r\n};\r\n","import { type WritableAtom, type SubscriberWithValue, atom } from '@dark-engine/core';\r\n\r\nimport { type SpringValue } from '../shared';\r\n\r\nclass Spring<T extends string = string> {\r\n  private props: Record<T, WritableAtom<number>> = {} as Record<T, WritableAtom<number>>;\r\n  private subscribers = new Set<SubscriberWithValue<SpringValue<T>>>();\r\n\r\n  prop(key: T) {\r\n    return this.props[key] ? this.props[key].get() : null;\r\n  }\r\n\r\n  prop$(key: T) {\r\n    return this.props[key] || null;\r\n  }\r\n\r\n  setProp(key: T, value: number) {\r\n    !this.props[key] && (this.props[key] = atom(value));\r\n    this.props[key].set(value);\r\n  }\r\n\r\n  value(): SpringValue<T> {\r\n    const value = Object.keys(this.props).reduce((acc, x) => ((acc[x] = this.props[x].get()), acc), {});\r\n\r\n    return value as SpringValue<T>;\r\n  }\r\n\r\n  on(fn: SubscriberWithValue<SpringValue<T>>) {\r\n    this.subscribers.add(fn);\r\n\r\n    return () => this.subscribers.delete(fn);\r\n  }\r\n\r\n  notify() {\r\n    this.subscribers.forEach(x => x(this.value()));\r\n  }\r\n}\r\n\r\nexport { Spring };\r\n","import { type SpringConfig } from '../shared';\r\n\r\nfunction stepper(pos: number, vel: number, dest: number, step: number, config: Omit<SpringConfig, 'fix'>) {\r\n  const { tension, friction, mass, precision } = config;\r\n  const [nPos, nVel] = spring(pos, vel, dest, step, tension, friction, mass);\r\n\r\n  if (Math.abs(nPos - dest) < 10 ** (-1 * precision)) return [dest, 0];\r\n\r\n  return [nPos, nVel];\r\n}\r\n\r\nfunction spring(pos: number, vel: number, dest: number, step: number, tension: number, friction: number, mass: number) {\r\n  const disp = pos - dest;\r\n  const sf = -1 * tension * disp;\r\n  const df = -1 * friction * vel;\r\n  const a = (sf + df) / mass;\r\n  const nVel = vel + a * step;\r\n  const nPos = pos + nVel * step;\r\n\r\n  return [nPos, nVel];\r\n}\r\n\r\nexport { stepper };\r\n","import { type ElementKey, platform, falseFn, detectIsUndefined } from '@dark-engine/core';\r\n\r\nimport { type SpringValue, type SpringConfig, defaultSpringConfig } from '../shared';\r\nimport { type AnimationEventName, SharedState } from '../state';\r\nimport { Spring } from '../spring';\r\nimport { time, fix } from '../utils';\r\nimport { stepper } from '../stepper';\r\n\r\nconst BASE_FRAME_TIME_IN_MS = 1000 / 60;\r\nconst MAX_SKIPPED_FRAMES = 10;\r\nconst MAX_DELTA_TIME_IN_SEC = MAX_SKIPPED_FRAMES * (BASE_FRAME_TIME_IN_MS / 1000);\r\nconst MIN_STEP = 0.01;\r\n\r\nclass Controller<T extends string, I = unknown> {\r\n  private key: ElementKey;\r\n  private idx: number;\r\n  private from: SpringValue<T>;\r\n  private to: SpringValue<T>;\r\n  private value: SpringValue<T>;\r\n  private dest: SpringValue<T>;\r\n  private state: SharedState = null;\r\n  private frameTime: number;\r\n  private frameId: number;\r\n  private results: Record<string, [number, number]> = {};\r\n  private completed: Record<string, boolean> = {};\r\n  private queue: Array<SpringValue<T>> = [];\r\n  private left: Controller<T> = null;\r\n  private right: Controller<T> = null;\r\n  private springConfigFn: SpringConfigFn<T>;\r\n  private configurator: ConfiguratorFn<T>;\r\n  private immediate: ImmediateFn<T> = falseFn;\r\n  private immediates: Array<() => void> = [];\r\n  private primaryKey: ElementKey;\r\n  private isReplaced = false;\r\n  private item: I = null;\r\n  private spring = new Spring<T>();\r\n\r\n  constructor(state: SharedState) {\r\n    this.state = state;\r\n    this.key = String(++Controller.key);\r\n  }\r\n\r\n  getKey() {\r\n    return this.key;\r\n  }\r\n\r\n  setKey(x: ElementKey) {\r\n    this.key = x;\r\n  }\r\n\r\n  getIdx() {\r\n    return this.idx;\r\n  }\r\n\r\n  setIdx(x: number) {\r\n    this.idx = x;\r\n  }\r\n\r\n  setFrom(x: SpringValue<T>) {\r\n    this.from = x;\r\n    this.value = this.value || { ...x };\r\n  }\r\n\r\n  setTo(x: SpringValue<T>) {\r\n    this.to = x || { ...this.from };\r\n    this.dest = this.dest || { ...(x || this.from) };\r\n  }\r\n\r\n  setSpringConfigFn(fn?: PatialConfigFn<T>) {\r\n    this.springConfigFn = fn ? (key: T) => ({ ...defaultSpringConfig, ...fn(key) }) : () => defaultSpringConfig;\r\n  }\r\n\r\n  setLeft(x: Controller<T>) {\r\n    this.left = x;\r\n  }\r\n\r\n  setRight(x: Controller<T>) {\r\n    this.right = x;\r\n  }\r\n\r\n  notify() {\r\n    this.sync();\r\n    this.event('item-change');\r\n  }\r\n\r\n  setConfigurator(fn: ConfiguratorFn<T>) {\r\n    this.configurator = fn;\r\n  }\r\n\r\n  setImmediate(fn: ImmediateFn<T>) {\r\n    this.immediate = fn || this.immediate;\r\n  }\r\n\r\n  replaceValue(x: SpringValue<T>) {\r\n    this.value = x;\r\n    this.sync();\r\n  }\r\n\r\n  markAsFake(x: ElementKey) {\r\n    this.primaryKey = x;\r\n\r\n    return Controller.generateFakeKey(x);\r\n  }\r\n\r\n  detectIsFake() {\r\n    return !detectIsUndefined(this.primaryKey);\r\n  }\r\n\r\n  getIsReplaced() {\r\n    return this.isReplaced;\r\n  }\r\n\r\n  setIsReplaced(x: boolean) {\r\n    this.isReplaced = x;\r\n  }\r\n\r\n  getItem() {\r\n    return this.item;\r\n  }\r\n\r\n  setItem(x: I) {\r\n    this.item = x;\r\n  }\r\n\r\n  getState() {\r\n    return this.state;\r\n  }\r\n\r\n  getSpring() {\r\n    this.sync();\r\n\r\n    return this.spring;\r\n  }\r\n\r\n  start(fn?: StartFn<T>) {\r\n    if (this.state.getIsCanceled()) return; // !\r\n    const config1 = this.configurator(this.idx);\r\n    const config2 = fn ? fn(this.idx) : this.configurator(this.idx);\r\n    const from = { ...config1.from, ...config2.from };\r\n    const to = { ...config1.to, ...config2.to };\r\n    const config = config2.config || config1.config;\r\n    const immediate = config2.immediate || config1.immediate;\r\n\r\n    this.setFrom(config1.from || from);\r\n    this.setTo(config1.to || to);\r\n    this.setSpringConfigFn(config);\r\n    this.setImmediate(immediate);\r\n    Object.assign(this.dest, to);\r\n\r\n    this.play(this.dest);\r\n  }\r\n\r\n  reset() {\r\n    this.value = { ...this.from };\r\n    this.dest = { ...(this.to || this.from) };\r\n    this.sync();\r\n  }\r\n\r\n  cancel() {\r\n    this.frameId && platform.caf(this.frameId);\r\n    this.frameId = null;\r\n  }\r\n\r\n  setIsPlaying(x: boolean) {\r\n    this.state.setIsPlaying(x, this.key);\r\n  }\r\n\r\n  private play(to: SpringValue<T>) {\r\n    this.queue.push(to);\r\n    if (this.frameId) return false;\r\n    this.setIsPlaying(true);\r\n    this.event('item-start');\r\n    this.motion(to);\r\n  }\r\n\r\n  private motion(to: SpringValue<T>) {\r\n    const { value, results, completed, springConfigFn } = this;\r\n    const keys = Object.keys(value) as Array<T>;\r\n    const make = () => this.motion(to);\r\n\r\n    this.frameTime = time();\r\n    this.frameId = platform.raf(() => {\r\n      if (this.state.getIsPaused()) return make();\r\n      let step = (time() - this.frameTime) / 1000;\r\n\r\n      if (step > MAX_DELTA_TIME_IN_SEC) {\r\n        step = MIN_STEP;\r\n      }\r\n\r\n      if (this.queue.length === 0) {\r\n        this.queue.push(this.dest);\r\n      }\r\n\r\n      for (const key of keys) {\r\n        if (this.immediate(key)) {\r\n          completed[key] = true;\r\n\r\n          const complete = () => {\r\n            value[key] = to[key];\r\n            results[key] = [to[key], 0];\r\n          };\r\n\r\n          if (to[key] === this.from[key]) {\r\n            this.immediates.push(complete);\r\n          } else {\r\n            complete();\r\n          }\r\n        } else {\r\n          if (!results[key]) {\r\n            results[key] = [value[key], 0];\r\n          }\r\n\r\n          const config = springConfigFn(key);\r\n          let pos = results[key][0];\r\n          let vel = results[key][1];\r\n\r\n          for (const update of this.queue) {\r\n            const dest = update[key] as number;\r\n\r\n            [pos, vel] = stepper(pos, vel, dest, step, config);\r\n            results[key] = [pos, vel];\r\n            completed[key] = pos === dest;\r\n          }\r\n\r\n          value[key] = pos;\r\n        }\r\n      }\r\n\r\n      this.queue = [];\r\n      this.change();\r\n\r\n      if (this.checkCompleted(keys)) {\r\n        this.complete();\r\n      } else {\r\n        make();\r\n      }\r\n    });\r\n  }\r\n\r\n  private event(name: AnimationEventName) {\r\n    this.state.event(name, { value: this.value, idx: this.idx, key: this.key });\r\n  }\r\n\r\n  private change() {\r\n    this.notify();\r\n\r\n    if (this.state.getIsTrail()) {\r\n      if (this.state.detectIsRightFlow()) {\r\n        this.right && this.right.start(() => ({ to: this.value }));\r\n      } else {\r\n        this.left && this.left.start(() => ({ to: this.value }));\r\n      }\r\n    }\r\n  }\r\n\r\n  private complete() {\r\n    this.setIsPlaying(false);\r\n    this.frameTime = null;\r\n    this.frameId = null;\r\n    this.results = {};\r\n    this.completed = {};\r\n    this.immediates.forEach(x => x());\r\n    this.immediates.length > 0 && this.notify();\r\n    this.immediates = [];\r\n    this.event('item-end');\r\n    this.state.completeSeries();\r\n  }\r\n\r\n  private checkCompleted(keys: Array<string>) {\r\n    for (const key of keys) {\r\n      if (!this.completed[key]) return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  private sync() {\r\n    const keys = Object.keys(this.value) as Array<T>;\r\n\r\n    for (const key of keys) {\r\n      const config = this.springConfigFn(key);\r\n      const value = fix(this.value[key], config.fix);\r\n\r\n      this.spring.setProp(key, value);\r\n    }\r\n\r\n    this.spring.notify();\r\n  }\r\n\r\n  private static generateFakeKey(x: ElementKey) {\r\n    return `__${x}:${++Controller.fakeKey}__`;\r\n  }\r\n\r\n  private static key = -1;\r\n  private static fakeKey = -1;\r\n}\r\n\r\nexport type BaseItemConfig<T extends string> = {\r\n  from: SpringValue<T>;\r\n  to?: SpringValue<T>;\r\n  config?: PatialConfigFn<T>;\r\n  immediate?: ImmediateFn<T>;\r\n};\r\n\r\nexport type StartFnConfig<T extends string> = {\r\n  from?: SpringValue<T>;\r\n  to: Partial<SpringValue<T>>;\r\n} & Omit<BaseItemConfig<T>, 'from' | 'to'>;\r\n\r\nexport type ConfiguratorFn<T extends string> = (idx: number) => BaseItemConfig<T>;\r\n\r\nexport type StartFn<T extends string> = (idx: number) => StartFnConfig<T>;\r\n\r\nexport type SpringConfigFn<T extends string> = (key: T) => SpringConfig;\r\n\r\nexport type PatialConfigFn<T extends string> = (key: T) => Partial<SpringConfig>;\r\n\r\nexport type ImmediateFn<T extends string> = (key: T) => boolean;\r\n\r\nexport type NotifierFn<T extends string> = (x: SpringValue<T>) => void;\r\n\r\nexport { Controller };\r\n","import {\r\n  type Component,\r\n  type TagVirtualNodeFactory,\r\n  type Callback,\r\n  component,\r\n  useMemo,\r\n  useInsertionEffect,\r\n  $$scope,\r\n  walk,\r\n  nextTick,\r\n} from '@dark-engine/core';\r\n\r\nimport { type SpringValue } from '../shared';\r\nimport { type Spring } from '../spring';\r\n\r\ntype AnimatedProps<E = unknown, T extends string = string> = {\r\n  spring: Spring<T>;\r\n  fn: StyleFn<E, T>;\r\n  slot: Component | TagVirtualNodeFactory;\r\n};\r\n\r\nconst Animated = component<AnimatedProps>(({ spring, fn, slot }) => {\r\n  const cursor = $$scope().getCursorFiber();\r\n  const scope = useMemo<Scope>(() => ({ element: null, notify: null }), []);\r\n  const notify = () => scope.element && fn(scope.element, spring.value());\r\n\r\n  scope.notify = notify;\r\n\r\n  useInsertionEffect(() => {\r\n    const make = () => {\r\n      const fiber = cursor.hook.owner;\r\n\r\n      walk(fiber.child, (fiber, _, stop) => {\r\n        if (fiber.element) {\r\n          scope.element = fiber.element;\r\n          return stop();\r\n        }\r\n      });\r\n\r\n      notify();\r\n    };\r\n\r\n    if ($$scope().getIsHydrateZone()) {\r\n      nextTick(make);\r\n    } else {\r\n      make();\r\n    }\r\n\r\n    return spring.on(() => scope.notify());\r\n  }, [spring]);\r\n\r\n  notify();\r\n\r\n  return slot;\r\n});\r\n\r\ntype Scope = { element: unknown; notify: Callback };\r\ntype StyleFn<E = unknown, T extends string = string> = (element: E, value: SpringValue<T>) => void;\r\n\r\nexport { Animated };\r\n","import { h, component, useMemo, useLayoutEffect } from '@dark-engine/core';\r\nimport { createRoot, type SyntheticEvent } from '@dark-engine/platform-browser';\r\nimport {\r\n  type SpringValue,\r\n  type SpringItemConfig,\r\n  type StartFn,\r\n  Animated,\r\n  useSprings,\r\n  range,\r\n} from '@dark-engine/animations';\r\n\r\nfunction reorder(arr: Array<any>, from: number, to: number) {\r\n  const buffer = arr.slice(0);\r\n  const val = buffer[from];\r\n  buffer.splice(from, 1);\r\n  buffer.splice(to, 0, val);\r\n  return buffer;\r\n}\r\n\r\nfunction clamp(n: number, min: number, max: number) {\r\n  return Math.max(Math.min(n, max), min);\r\n}\r\n\r\nconst HEIGHT = 90;\r\nconst MARGINS = 10;\r\nconst FULL_HEIGHT = HEIGHT + MARGINS;\r\nconst height = HEIGHT;\r\ntype SpringProps = 'y' | 'scale' | 'shadow';\r\n\r\nconst createConfig =\r\n  (order: Array<number>, isMove: boolean, activeIdx = -1, y = 0) =>\r\n  (idx: number) => {\r\n    const isActive = idx === activeIdx;\r\n    const y1 = order.indexOf(idx) * FULL_HEIGHT;\r\n    const y2 = isActive && isMove ? y : y1;\r\n    const scale = isActive ? 1.1 : 1;\r\n    const shadow = isActive ? 16 : 1;\r\n    const config: SpringItemConfig<SpringProps> = {\r\n      from: { y: y1, scale: 1, shadow: 1 },\r\n      to: { y: y2, scale, shadow },\r\n      immediate: key => isActive && key === 'y',\r\n      config: () => ({ tension: 300, friction: 50, precision: 4 }),\r\n    };\r\n\r\n    return config;\r\n  };\r\n\r\nconst App = component(() => {\r\n  const size = 4;\r\n  const scope = useMemo(\r\n    () => ({ isActive: false, activeIdx: -1, order: range(size), originalOrder: null, initialY: null }),\r\n    [],\r\n  );\r\n  const [items, api] = useSprings(size, idx => createConfig(scope.order, false)(idx));\r\n\r\n  useLayoutEffect(() => {\r\n    const handleDrag = (e: PointerEvent) => {\r\n      e.preventDefault();\r\n      if (!scope.isActive) return;\r\n      const pageY = e.pageY;\r\n      const { activeIdx, originalOrder, initialY } = scope;\r\n      const movement = Number((pageY - initialY).toFixed(0));\r\n      const idx = originalOrder.indexOf(activeIdx);\r\n      const y = idx * FULL_HEIGHT + movement;\r\n      const nextIdx = clamp(Math.round(y / FULL_HEIGHT), 0, size - 1);\r\n\r\n      scope.order = reorder(scope.originalOrder, idx, nextIdx);\r\n      api.start(createConfig(scope.order, true, activeIdx, y) as StartFn<SpringProps>);\r\n    };\r\n    document.addEventListener('pointermove', handleDrag);\r\n    return () => document.removeEventListener('pointermove', handleDrag);\r\n  }, []);\r\n\r\n  useLayoutEffect(() => {\r\n    const handleDragEnd = () => {\r\n      scope.isActive = false;\r\n      api.start(createConfig(scope.order, false) as StartFn<SpringProps>);\r\n    };\r\n    document.addEventListener('pointerup', handleDragEnd);\r\n    return () => document.removeEventListener('pointerup', handleDragEnd);\r\n  });\r\n\r\n  useLayoutEffect(() => {\r\n    const off = api.on('series-end', () => {\r\n      if (scope.isActive) return;\r\n      scope.activeIdx = -1;\r\n      scope.initialY = null;\r\n    });\r\n    return off;\r\n  }, []);\r\n\r\n  const handleDragStart = (idx: number) => (e: SyntheticEvent<PointerEvent>) => {\r\n    e.stopPropagation();\r\n    const { sourceEvent } = e;\r\n    const pageY = sourceEvent.pageY;\r\n\r\n    scope.isActive = true;\r\n    scope.activeIdx = idx;\r\n    scope.originalOrder = scope.order;\r\n    scope.initialY = pageY;\r\n    api.start(createConfig(scope.order, false, idx) as StartFn<SpringProps>);\r\n  };\r\n\r\n  return (\r\n    <div class='container'>\r\n      <div class='content'>\r\n        {items.map((item, idx) => {\r\n          return (\r\n            <Animated key={idx} spring={item} fn={styleFn(idx, height, scope)}>\r\n              <div class='item' onPointerDown={handleDragStart(idx)}>\r\n                {idx + 1}\r\n              </div>\r\n            </Animated>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nconst styleFn =\r\n  (idx: number, height: number, scope: { activeIdx: number }) =>\r\n  (element: HTMLDivElement, value: SpringValue<SpringProps>) => {\r\n    const { y, scale, shadow } = value;\r\n    const setProp = setPropOf(element);\r\n\r\n    setProp('height', `${height}px`);\r\n    setProp('z-index', `${idx === scope.activeIdx ? 1 : 0}`);\r\n    setProp('transform', `translate3d(0, ${y}px, 0) scale(${scale})`);\r\n    setProp('box-shadow', `rgba(0, 0, 0, 0.2) 0px ${shadow}px ${2 * shadow}px 0px`);\r\n  };\r\n\r\nconst setPropOf = (element: HTMLDivElement) => (k: string, v: string) => element.style.setProperty(k, v);\r\n\r\ncreateRoot(document.getElementById('root')).render(<App />);\r\n","import { type Callback, useMemo, useLayoutEffect, useEffect } from '@dark-engine/core';\r\n\r\nimport { type AnimationEventName, type AnimationEventHandler, SharedState, getSharedState } from '../state';\r\nimport { type BaseItemConfig, type StartFn, Controller } from '../controller';\r\nimport { type Spring } from '../spring';\r\nimport { range } from '../utils';\r\n\r\nexport type SpringItemConfig<T extends string> = BaseItemConfig<T>;\r\n\r\nfunction useSprings<T extends string>(\r\n  count: number,\r\n  configurator: SpringConfiguratorFn<T>,\r\n  deps?: Array<any>,\r\n): [Array<Spring<T>>, SpringApi<T>] {\r\n  const state = useMemo(() => getSharedState() || new SharedState(), []);\r\n  const scope = useMemo<Scope<T>>(() => {\r\n    return {\r\n      configurator,\r\n      prevCount: count,\r\n      ctrls: range(count).map(() => new Controller<T>(state)),\r\n      inChain: false,\r\n      pending: null,\r\n    };\r\n  }, []);\r\n\r\n  scope.configurator = configurator;\r\n\r\n  const springs = useMemo(() => {\r\n    const configurator = (idx: number) => scope.configurator(idx);\r\n    const { ctrls, prevCount } = scope;\r\n\r\n    if (count > prevCount) {\r\n      ctrls.push(...range(count - prevCount).map(() => new Controller<T>(state)));\r\n    } else if (count < prevCount) {\r\n      const deleted = ctrls.splice(count, ctrls.length);\r\n\r\n      deleted.forEach(ctrl => ctrl.setIsPlaying(false));\r\n    }\r\n\r\n    state.setCtrls(ctrls);\r\n    scope.prevCount = count;\r\n    prepare(ctrls, configurator);\r\n\r\n    return ctrls.map(ctrl => ctrl.getSpring());\r\n  }, [count]);\r\n\r\n  const api = useMemo<SpringApi<T>>(() => {\r\n    return {\r\n      start: fn => {\r\n        if (scope.inChain) {\r\n          scope.pending && scope.pending();\r\n          scope.pending = null;\r\n        } else {\r\n          state.start(fn);\r\n        }\r\n      },\r\n      chain: (value: boolean) => (scope.inChain = value),\r\n      delay: state.delay.bind(state),\r\n      pause: state.pause.bind(state),\r\n      resume: state.resume.bind(state),\r\n      reset: state.reset.bind(state),\r\n      cancel: state.cancel.bind(state),\r\n      on: state.on.bind(state),\r\n      isCanceled: state.getIsCanceled.bind(state),\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!deps) return;\r\n    const { inChain } = scope;\r\n\r\n    if (inChain) {\r\n      scope.pending = () => state.start();\r\n    } else {\r\n      state.start();\r\n    }\r\n  }, deps || []);\r\n\r\n  useLayoutEffect(() => () => api.cancel(), []);\r\n\r\n  return [springs, api];\r\n}\r\n\r\nfunction prepare<T extends string>(ctrls: Array<Controller<T>>, configurator: (idx: number) => SpringItemConfig<T>) {\r\n  ctrls.forEach((ctrl, idx) => {\r\n    const { from, to, config } = configurator(idx);\r\n    const left = ctrls[idx - 1] || null;\r\n    const right = ctrls[idx + 1] || null;\r\n\r\n    ctrl.setIdx(idx);\r\n    ctrl.setFrom(from);\r\n    ctrl.setTo(to);\r\n    ctrl.setSpringConfigFn(config);\r\n    ctrl.setConfigurator(configurator);\r\n    ctrl.setLeft(left);\r\n    ctrl.setRight(right);\r\n  });\r\n}\r\n\r\ntype SpringConfiguratorFn<T extends string> = (idx: number) => SpringItemConfig<T>;\r\n\r\ntype Scope<T extends string> = {\r\n  prevCount: number;\r\n  configurator: SpringConfiguratorFn<T>;\r\n  ctrls: Array<Controller<T>>;\r\n  inChain: boolean;\r\n  pending: Callback;\r\n};\r\n\r\nexport type SpringApi<T extends string = string> = {\r\n  start: (fn?: StartFn<T>) => void;\r\n  chain: (value: boolean) => void;\r\n  delay: (timeout: number) => void;\r\n  pause: () => void;\r\n  resume: () => void;\r\n  reset: () => void;\r\n  cancel: () => void;\r\n  on: (event: AnimationEventName, handler: AnimationEventHandler<T>) => () => void;\r\n  isCanceled: () => void;\r\n};\r\n\r\nexport { useSprings };\r\n","import { type DarkElement, unmountRoot } from '@dark-engine/core';\r\n\r\nimport { render, roots } from '../render';\r\nimport type { TagNativeElement } from '../native-element';\r\n\r\nfunction createRoot(container: TagNativeElement) {\r\n  return {\r\n    render: (element: DarkElement) => render(element, container),\r\n    unmount: () => unmount(container),\r\n  };\r\n}\r\n\r\nfunction unmount(container: TagNativeElement) {\r\n  const rootId = roots.get(container);\r\n\r\n  unmountRoot(rootId, () => {\r\n    roots.delete(container);\r\n    container.innerHTML = '';\r\n  });\r\n}\r\n\r\nexport { createRoot, unmount };\r\n"],"names":["ROOT","REPLACER","KEY_ATTR","REF_ATTR","CREATE_EFFECT_TAG","UPDATE_EFFECT_TAG","SKIP_EFFECT_TAG","MOVE_MASK","TaskPriority","Flag","ATTR_BLACK_LIST","SKIP_SCAN_OPT","MEMO_SLOT_OPT","STATIC_SLOT_OPT","$$inject","Symbol","Component","constructor","type","token","props","ref","shouldUpdate","displayName","children","this","component","options","$token","factory","defaultInject","detectIsComponent","x","detectIsFunction","o","detectIsUndefined","detectIsTextBased","detectIsObject","detectIsBoolean","detectIsArray","Array","isArray","detectIsNull","detectIsEmpty","getTime","Date","now","dummyFn","trueFn","falseFn","sameFn","flatten","source","transform","length","list","stack","idx","pop","i","push","prevDeps","nextDeps","max","Math","Object","is","nextTick","callback","Promise","resolve","then","createIndexKey","$$vNode","ATTR_TYPE","VirtualNode","TagVirtualNode","name","attrs","super","NodeType","TAG","TextVirtualNode","TEXT","value","String","CommentVirtualNode","text","COMMENT","from","detectIsTextVirtualNode","detectIsVirtualNode","vNode","detectIsTagVirtualNode","detectIsCommentVirtualNode","detectIsVirtualNodeFactory","detectIsPlainVirtualNode","createReplacer","getElementKey","inst","hasElementFlag","flag","Boolean","hasComponentFlag","hasVirtualNodeFactoryFlag","hasTagVirtualNodeFlag","getElementType","hasChildrenProp","detectAreSameInstanceTypes","prevInst","nextInst","isComponentFactories","nc","defaultRealisation","Error","platform","createElement","insertElement","raf","caf","spawn","commit","finishCommit","detectIsDynamic","detectIsPortal","unmountPortal","chunk","EventEmitter","subscribers","Map","on","e","fn","has","set","Set","get","add","delete","emit","data","forEach","kill","__getSize","size","Scope","root","wip","cursor","unit","mountDeep","mountLevel","mountNav","events","unsubs","actions","candidates","deletions","cancels","asyncEffects","layoutEffects","insertionEffects","resourceId","resources","defers","setPendingStatus","isLayoutEffectsZone","isInsertionEffectsZone","isUpdateZone","isBatchZone","isHydrateZone","isStreamZone","isTransitionZone","isEventZone","isHot","isDynamic","isServer","emitter","resetActions","getActionsById","id","addActionMap","map","replace","insert","remove","move","stable","addReplaceAction","nextKey","addInsertAction","addRemoveAction","prevKey","addMoveAction","addStableAction","copy","scope","getRoot","setRoot","fiber","getWorkInProgress","setWorkInProgress","getNextUnitOfWork","setNextUnitOfWork","getCursorFiber","setCursorFiber","navToChild","navToSibling","navToParent","navToPrev","getMountIndex","setMountDeep","getMountDeep","resetMount","getEvents","addEventUnsubscriber","unsubscribeEvents","getCandidates","addCandidate","resetCandidates","getDeletions","hasDeletion","nextFiber","parent","addDeletion","resetDeletions","addAsyncEffect","resetAsyncEffects","runAsyncEffects","effects","setTimeout","addLayoutEffect","resetLayoutEffects","runLayoutEffects","setIsLayoutEffectsZone","addInsertionEffect","resetInsertionEffects","runInsertionEffects","setIsInsertionEffectsZone","addCancel","applyCancels","resetCancels","getIsLayoutEffectsZone","getIsInsertionEffectsZone","getIsUpdateZone","setIsUpdateZone","getIsBatchZone","setIsBatchZone","getIsHydrateZone","setIsHydrateZone","getIsStreamZone","setIsStreamZone","getIsTransitionZone","setIsTransitionZone","getIsEventZone","setIsEventZone","getIsHot","setIsHot","getPendingStatusSetter","setPendingStatusSetter","flush","getEmitter","defer","getDefers","resetDefers","getResource","setResource","res","getResources","getResourceId","setResourceId","getNextResourceId","runAfterCommit","rootId","scopes","getRootId","setRootId","$$scope","$$memo","defaultShouldUpdate","nextProps","keys","key","detectIsMemo","instance","Memo","memo","getValue","p","n","deps","hook","values","state","$value","detectIsElement","$$useEffect","createEffect","useEffect","effect","$scope","cleanup","undefined","isInsertionEffect","EffectType","INSERTION","isLayoutEffect","LAYOUT","isAsyncEffect","ASYNC","markHost","runEffect","dropEffects","$$useLayoutEffect","dropLayoutEffects","element","slot","as","_void","View","$$useInsertionEffect","useInsertionEffect","dropInsertionEffects","Fiber","provider","cc","cec","eidx","mask","tag","child","next","alt","atoms","nextId","mutate","increment","count","force","wipFiber","stop","setError","error","catch","static","Hook","owner","walk","onWalk","shouldDeep","shouldStop","skip","getFiberWithElement","$fiber","buildChildNodes","onNode","getKey","buildChildNode","altMap","startEidx","prevIdx","nextIdx","left","right","isFirst","isLast","notifyParents","shouldUnmountFiber","INSERTION_EFFECT_HOST_MASK","unmountFiber","_","$$fragment","Fragment","hasPendingPromise","hasRenderError","workLoop","isAsync","shouldYield","hasMoreWork","performUnitOfWork","scheduler","hasPrimaryTask","fork","unmounts","diff","parentFiber","isRight","sync","err","finally","isDeepWalking","isStream","hasChildren","$inst","createFiber","getAlternate","share","mountChild","mountSibling","prev","shouldMount","pc","mount","hasSameCount","prevKeys","nextKeys","prevKeysMap","nextKeysMap","keyedFibersMap","usedKeysMap","extractKeys","prevKeyFiber","tryOptStaticSlot","hasMove","hasRemove","hasInsert","hasReplace","detectIsStableMemoTree","tryOptMov","tryOptRem","tryOptMemoSlot","reconcile","isUpdate","setup","detectAreSameComponentTypesWithSameKeys","getHook","fromChild","parentId","isMove","isStable","isComponent","result","promise","all","setNextId","args","console","supportConditional","cancel","$$scope$","cancelTask","setValue","resetValue","assign","replaceScope","$createChanger","MessageChannel","port1","port2","MessagePort","channel","offs","event","off","postMessage","unref","Task","priority","forceAsync","taskRestorer","pendingSetter","nextTaskId","getPriority","getForceAsync","setIsTransition","isTransition","getIsTransition","run","pending","markAsPending","isPending","canPending","markAsUnnecessary","isUnnecessary","getIsUnnecessary","setTaskRestorer","setLocationCreator","locationCreator","createLocation","setPendingSetter","loc","tasks","deep","$loc","split","some","$$loc","indexOf","createRootLocation","queue","HIGH","NORMAL","LOW","deadline","task","scheduledCallback","isMessageLoopRunning","port","performWorkUntilDeadline","bind","reset","schedule","put","execute","high","normal","low","getQueues","hasPrimary","hasLow","detectHasRelatedUpdate","complete","filter","splice","pick","shift","requestCallbackAsync","requestCallback","isBusy","unshift","applyRef","current","mutableRef","hasOwnProperty","detectIsMutableRef","$$portal","container","innerHTML","getPortalContainer","SyntheticEvent","sourceEvent","target","propagation","stopPropagation","preventDefault","getPropagation","delegateEvent","eventName","handler","eventsMap","handlersMap","$handler","slice","rootHandler","$event","parentElement","dispatchEvent","WeakMap","document","addEventListener","removeEventListener","detectIsEvent","attrName","startsWith","getEventName","toLowerCase","STYLE_ATTR","CLASS_ATTR","CLASS_NAME_ATTR","moves","patches","svgTagNames","voidTagNames","createNativeElementMap","detectIsSvgElement","createElementNS","createTextNode","createComment","createNativeElement","node","setObjectStyle","style","setProperty","toggleAttribute","setAttribute","removeAttribute","patchProperties","tagName","attrValue","patchPropertiesSpecialCasesMap","prototype","getPrototypeOf","descriptor","getOwnPropertyDescriptor","canSetProperty","includes","input","checked","autofocus","focus","textarea","innerText","commitMap","childNodes","nativeElement","Text","splitText","appendNativeElement","insertNativeElement","attrNames","tagElement","addAttributes","commitCreation","sourceNodes","elements","collectElements","sourceFragment","DocumentFragment","elementIdx","removeNativeElement","replaceNativeElement","prevInstance","nextInstance","textContent","prevNode","nextNode","prevAttrs","nextAttrs","getAttributeNames","prevAttrValue","nextAttrValue","updateAttributes","commitUpdate","canRemoveNativeElement","appendChild","sibling","insertBefore","insertNativeElementByIndex","candidate","replaceChild","removeChild","roots","requestAnimationFrame","window","cancelAnimationFrame","isInjected","time","performance","fix","precision","Number","toFixed","range","fill","SharedState","ctrls","flow","Flow","RIGHT","isTrail","isPaused","isCanceled","timeout","timerId","getCtrls","setCtrls","setIsTrail","getIsTrail","setFlow","getIsPaused","getIsCanceled","detectIsRightFlow","setIsPlaying","detectIsPlaying","start","pause","resume","delay","resetTimer","subs","completeSeries","clearTimeout","sharedState","defaultSpringConfig","tension","friction","mass","Atom","val","__connect","connections1","__","___","connections2","subjects","toString","toJSON","valueOf","disconnect","__addSubject","atom$","__removeSubject","make","tuple","createChanger","restore","fromRestore","detectIsFiberAlive","createUpdate","__notify","WritableAtom","Spring","prop","prop$","setProp","atom","reduce","acc","notify","stepper","pos","vel","dest","step","config","nPos","nVel","spring","abs","Controller","results","completed","immediate","immediates","isReplaced","item","setKey","getIdx","setIdx","setFrom","setTo","to","setSpringConfigFn","springConfigFn","setLeft","setRight","setConfigurator","configurator","setImmediate","replaceValue","markAsFake","primaryKey","generateFakeKey","detectIsFake","getIsReplaced","setIsReplaced","getItem","setItem","getState","getSpring","config1","config2","play","frameId","motion","frameTime","MAX_SKIPPED_FRAMES","update","change","checkCompleted","fakeKey","Animated","createConfig","order","activeIdx","y","isActive","y1","HEIGHT","scale","shadow","App","originalOrder","initialY","items","api","getSharedState","prevCount","inChain","springs","ctrl","prepare","chain","useSprings","handleDrag","pageY","movement","round","min","arr","buffer","reorder","handleDragEnd","handleDragStart","class","styleFn","onPointerDown","height","setPropOf","k","v","getElementById","render","hydrate","isMounted","isHydrate","rootFiber","unmount","onCompleted","unmountRoot"],"sourceRoot":""}