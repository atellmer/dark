{"version":3,"file":"build.js","mappings":"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","sources":["webpack://dark-10k-rows/./node_modules/@dark-engine/core/dist/esm/constants.js","webpack://dark-10k-rows/./node_modules/@dark-engine/core/dist/esm/helpers/index.js","webpack://dark-10k-rows/./node_modules/@dark-engine/core/dist/esm/view/types.js","webpack://dark-10k-rows/./node_modules/@dark-engine/core/dist/esm/view/view.js","webpack://dark-10k-rows/./node_modules/@dark-engine/core/dist/esm/component/component.js","webpack://dark-10k-rows/./node_modules/@dark-engine/core/dist/esm/memo/memo.js","webpack://dark-10k-rows/./node_modules/@dark-engine/core/dist/esm/ref/ref.js","webpack://dark-10k-rows/./node_modules/@dark-engine/core/dist/esm/scope/scope.js","webpack://dark-10k-rows/./node_modules/@dark-engine/core/dist/esm/use-effect/use-effect.js","webpack://dark-10k-rows/./node_modules/@dark-engine/core/dist/esm/fragment/fragment.js","webpack://dark-10k-rows/./node_modules/@dark-engine/core/dist/esm/use-memo/use-memo.js","webpack://dark-10k-rows/./node_modules/@dark-engine/core/dist/esm/platform/platform.js","webpack://dark-10k-rows/./node_modules/@dark-engine/core/dist/esm/fiber/types.js","webpack://dark-10k-rows/./node_modules/@dark-engine/core/dist/esm/use-layout-effect/use-layout-effect.js","webpack://dark-10k-rows/./node_modules/@dark-engine/core/dist/esm/use-insertion-effect/use-insertion-effect.js","webpack://dark-10k-rows/./node_modules/@dark-engine/core/dist/esm/walk/walk.js","webpack://dark-10k-rows/./node_modules/@dark-engine/core/dist/esm/unmount/unmount.js","webpack://dark-10k-rows/./node_modules/@dark-engine/core/dist/esm/fiber/fiber.js","webpack://dark-10k-rows/./node_modules/@dark-engine/core/dist/esm/use-update/use-update.js","webpack://dark-10k-rows/./node_modules/@dark-engine/core/dist/esm/batch/batch.js","webpack://dark-10k-rows/./node_modules/@dark-engine/core/dist/esm/context/context.js","webpack://dark-10k-rows/./node_modules/@dark-engine/core/dist/esm/use-callback/use-callback.js","webpack://dark-10k-rows/./node_modules/@dark-engine/core/dist/esm/split-update/split-update.js","webpack://dark-10k-rows/./node_modules/@dark-engine/core/dist/esm/element/element.js","webpack://dark-10k-rows/./node_modules/@dark-engine/platform-browser/dist/esm/portal/portal.js","webpack://dark-10k-rows/./node_modules/@dark-engine/platform-browser/dist/esm/events/events.js","webpack://dark-10k-rows/./node_modules/@dark-engine/platform-browser/dist/esm/dom/dom.js","webpack://dark-10k-rows/./node_modules/@dark-engine/platform-browser/dist/esm/constants.js","webpack://dark-10k-rows/./node_modules/@dark-engine/platform-browser/dist/esm/scheduler/scheduler.js","webpack://dark-10k-rows/./node_modules/@dark-engine/platform-browser/dist/esm/render/render.js","webpack://dark-10k-rows/./index.tsx","webpack://dark-10k-rows/./node_modules/@dark-engine/platform-browser/dist/esm/create-root/create-root.js"],"sourcesContent":["export const ROOT = 'root';\r\nexport const REPLACER = 'dark:matter';\r\nexport const INDEX_KEY = 'dark:idx';\r\nexport const TYPE = 'type';\r\nexport const ATTR_KEY = 'key';\r\nexport const ATTR_REF = 'ref';\r\nexport const ATTR_FLAG = 'flag';\r\nexport var TaskPriority;\r\n(function (TaskPriority) {\r\n  TaskPriority[(TaskPriority['ANIMATION'] = 3)] = 'ANIMATION';\r\n  TaskPriority[(TaskPriority['HIGH'] = 2)] = 'HIGH';\r\n  TaskPriority[(TaskPriority['NORMAL'] = 1)] = 'NORMAL';\r\n  TaskPriority[(TaskPriority['LOW'] = 0)] = 'LOW';\r\n})(TaskPriority || (TaskPriority = {}));\r\nexport var Flag;\r\n(function (Flag) {\r\n  Flag['HAS_NO_MOVES'] = 'HAS_NO_MOVES';\r\n})(Flag || (Flag = {}));\r\n//# sourceMappingURL=constants.js.map\r\n","const detectIsFunction = o => typeof o === 'function';\r\nconst detectIsUndefined = o => typeof o === 'undefined';\r\nconst detectIsNumber = o => typeof o === 'number';\r\nconst detectIsString = o => typeof o === 'string';\r\nconst detectIsObject = o => typeof o === 'object';\r\nconst detectIsBoolean = o => typeof o === 'boolean';\r\nconst detectIsArray = o => Array.isArray(o);\r\nconst detectIsNull = o => o === null;\r\nconst detectIsEmpty = o => detectIsNull(o) || detectIsUndefined(o);\r\nconst detectIsFalsy = o => detectIsNull(o) || detectIsUndefined(o) || o === false;\r\nconst getTime = () => Date.now();\r\nconst dummyFn = () => {};\r\nfunction error(...args) {\r\n  !detectIsUndefined(console) && console.error(...args);\r\n}\r\nfunction flatten(source) {\r\n  const list = [];\r\n  const levelMap = { 0: { idx: 0, source } };\r\n  let level = 0;\r\n  do {\r\n    const { source, idx } = levelMap[level];\r\n    const item = source[idx];\r\n    if (idx >= source.length) {\r\n      level--;\r\n      levelMap[level].idx++;\r\n      continue;\r\n    }\r\n    if (detectIsArray(item)) {\r\n      level++;\r\n      levelMap[level] = {\r\n        idx: 0,\r\n        source: item,\r\n      };\r\n    } else {\r\n      list.push(item);\r\n      levelMap[level].idx++;\r\n    }\r\n  } while (level > 0 || levelMap[level].idx < levelMap[level].source.length);\r\n  return list;\r\n}\r\nfunction keyBy(list, fn, value = false) {\r\n  return list.reduce((acc, x) => ((acc[fn(x)] = value ? x : true), acc), {});\r\n}\r\nfunction detectIsDepsDifferent(deps, prevDeps) {\r\n  if (!detectIsUndefined(deps) && !detectIsUndefined(prevDeps) && deps.length > 0 && prevDeps.length > 0) {\r\n    for (let i = 0; i < prevDeps.length; i++) {\r\n      if (prevDeps[i] !== deps[i]) {\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n  return false;\r\n}\r\nexport {\r\n  detectIsFunction,\r\n  detectIsUndefined,\r\n  detectIsNumber,\r\n  detectIsString,\r\n  detectIsObject,\r\n  detectIsBoolean,\r\n  detectIsArray,\r\n  detectIsNull,\r\n  detectIsEmpty,\r\n  detectIsFalsy,\r\n  getTime,\r\n  dummyFn,\r\n  error,\r\n  flatten,\r\n  keyBy,\r\n  detectIsDepsDifferent,\r\n};\r\n//# sourceMappingURL=index.js.map\r\n","export var NodeType;\r\n(function (NodeType) {\r\n  NodeType['TAG'] = 'TAG';\r\n  NodeType['TEXT'] = 'TEXT';\r\n  NodeType['COMMENT'] = 'COMMENT';\r\n})(NodeType || (NodeType = {}));\r\n//# sourceMappingURL=types.js.map\r\n","import { REPLACER, ATTR_KEY, ATTR_FLAG, TYPE } from '../constants';\r\nimport { detectIsArray, detectIsEmpty, detectIsFunction } from '../helpers';\r\nimport { NodeType } from './types';\r\nconst $$virtualNode = Symbol('virtual-node');\r\nclass VirtualNode {\r\n  type = null;\r\n  constructor(options) {\r\n    this.type = options.type;\r\n  }\r\n}\r\nclass TagVirtualNode extends VirtualNode {\r\n  type = NodeType.TAG;\r\n  name = null;\r\n  isVoid = false;\r\n  attrs = {};\r\n  children = [];\r\n  constructor(options) {\r\n    super(options);\r\n    this.name = options.name || this.name;\r\n    this.isVoid = options.isVoid || this.isVoid;\r\n    this.attrs = options.attrs || this.attrs;\r\n    this.children = options.children || this.children;\r\n  }\r\n}\r\nclass TextVirtualNode extends VirtualNode {\r\n  type = NodeType.TEXT;\r\n  value = '';\r\n  constructor(text) {\r\n    super({});\r\n    this.value = text;\r\n  }\r\n}\r\nclass CommentVirtualNode extends VirtualNode {\r\n  type = NodeType.COMMENT;\r\n  value = '';\r\n  constructor(text) {\r\n    super({});\r\n    this.value = text;\r\n  }\r\n}\r\nconst detectIsVirtualNode = vNode => vNode instanceof VirtualNode;\r\nconst detectIsTagVirtualNode = vNode => vNode instanceof TagVirtualNode;\r\nconst detectIsCommentVirtualNode = vNode => vNode instanceof CommentVirtualNode;\r\nconst detectIsTextVirtualNode = vNode => vNode instanceof TextVirtualNode;\r\nconst detectIsVirtualNodeFactory = factory => detectIsFunction(factory) && factory[$$virtualNode] === true;\r\nconst getTagVirtualNodeKey = vNode => (!detectIsEmpty(vNode.attrs[ATTR_KEY]) ? vNode.attrs[ATTR_KEY] : null);\r\nconst getTagVirtualNodeFlag = vNode => vNode.attrs[ATTR_FLAG] || null;\r\nconst getVirtualNodeFactoryKey = factory => (!detectIsEmpty(factory[ATTR_KEY]) ? factory[ATTR_KEY] : null);\r\nconst getVirtualNodeFactoryFlag = factory => factory[ATTR_FLAG] || null;\r\nconst createReplacer = () => new CommentVirtualNode(REPLACER);\r\nfunction View(def) {\r\n  const factory = () => {\r\n    const { as, slot, isVoid = false, ...rest } = def;\r\n    const children = isVoid ? [] : detectIsArray(slot) ? slot : slot ? [slot] : [];\r\n    return new TagVirtualNode({\r\n      name: as,\r\n      isVoid,\r\n      attrs: { ...rest },\r\n      children: children,\r\n    });\r\n  };\r\n  factory[$$virtualNode] = true;\r\n  factory[ATTR_KEY] = def.key;\r\n  factory[ATTR_FLAG] = def.flag;\r\n  factory[TYPE] = def.as;\r\n  return factory;\r\n}\r\nfunction Text(source) {\r\n  return new TextVirtualNode(source + '');\r\n}\r\nText.from = source => (detectIsTextVirtualNode(source) ? source.value : source + '');\r\nfunction Comment(text) {\r\n  const factory = () => new CommentVirtualNode(text);\r\n  factory[$$virtualNode] = true;\r\n  return factory;\r\n}\r\nexport {\r\n  VirtualNode,\r\n  TagVirtualNode,\r\n  TextVirtualNode,\r\n  CommentVirtualNode,\r\n  detectIsVirtualNode,\r\n  detectIsTagVirtualNode,\r\n  detectIsCommentVirtualNode,\r\n  detectIsTextVirtualNode,\r\n  getTagVirtualNodeKey,\r\n  getTagVirtualNodeFlag,\r\n  getVirtualNodeFactoryKey,\r\n  getVirtualNodeFactoryFlag,\r\n  createReplacer,\r\n  detectIsVirtualNodeFactory,\r\n  View,\r\n  Text,\r\n  Comment,\r\n};\r\n//# sourceMappingURL=view.js.map\r\n","import { ATTR_KEY, ATTR_FLAG } from '../constants';\r\nimport { error, detectIsEmpty } from '../helpers';\r\nconst $$component = Symbol('component');\r\nconst defaultOptions = {\r\n  displayName: '',\r\n  defaultProps: {},\r\n  token: $$component,\r\n};\r\nclass ComponentFactory {\r\n  type;\r\n  token;\r\n  props;\r\n  ref;\r\n  displayName;\r\n  children = [];\r\n  shouldUpdate;\r\n  constructor(type, token, props, ref, shouldUpdate, displayName) {\r\n    this.type = type || null;\r\n    this.token = token || null;\r\n    this.props = props || null;\r\n    this.ref = ref || null;\r\n    this.shouldUpdate = shouldUpdate || null;\r\n    this.displayName = displayName || '';\r\n  }\r\n}\r\nfunction createComponent(type, options = {}) {\r\n  const computedOptions = { ...defaultOptions, ...options };\r\n  const { token, defaultProps, displayName, shouldUpdate } = computedOptions;\r\n  const component = (props = {}, ref) => {\r\n    const mprops = { ...defaultProps, ...props };\r\n    if (mprops.ref) {\r\n      delete mprops.ref;\r\n      if (process.env.NODE_ENV === 'development') {\r\n        error(`[Dark]: To use ref you need to wrap the createComponent with forwardRef!`);\r\n      }\r\n    }\r\n    return new ComponentFactory(type, token, mprops, ref, shouldUpdate, displayName);\r\n  };\r\n  return component;\r\n}\r\nconst detectIsComponentFactory = factory => factory instanceof ComponentFactory;\r\nconst getComponentFactoryKey = factory => (!detectIsEmpty(factory.props[ATTR_KEY]) ? factory.props[ATTR_KEY] : null);\r\nconst getComponentFactoryFlag = factory => factory.props[ATTR_FLAG] || null;\r\nexport { ComponentFactory, createComponent, detectIsComponentFactory, getComponentFactoryKey, getComponentFactoryFlag };\r\n//# sourceMappingURL=component.js.map\r\n","import { createComponent, detectIsComponentFactory } from '../component';\r\nimport { forwardRef } from '../ref';\r\nconst $$memo = Symbol('memo');\r\nconst defaultShouldUpdate = (props, nextProps) => {\r\n  const keys = Object.keys(nextProps);\r\n  for (const key of keys) {\r\n    if (key !== 'slot' && nextProps[key] !== props[key]) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n};\r\nconst detectIsMemo = factory => detectIsComponentFactory(factory) && factory.token === $$memo;\r\nfunction memo(component, shouldUpdate = defaultShouldUpdate) {\r\n  return forwardRef(\r\n    createComponent(\r\n      (props, ref) => {\r\n        ref && (props.ref = ref);\r\n        return component(props);\r\n      },\r\n      { token: $$memo, shouldUpdate },\r\n    ),\r\n  );\r\n}\r\nexport { $$memo, memo, detectIsMemo };\r\n//# sourceMappingURL=memo.js.map\r\n","import { detectIsObject, detectIsNull } from '../helpers';\r\nfunction forwardRef(component) {\r\n  return props => {\r\n    const { ref, ...rest } = props || {};\r\n    return component(rest, ref);\r\n  };\r\n}\r\nconst detectIsMutableRef = ref => {\r\n  if (!detectIsObject(ref) || detectIsNull(ref)) return false;\r\n  const mutableRef = ref;\r\n  for (const key in mutableRef) {\r\n    if (key === 'current' && mutableRef.hasOwnProperty(key)) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n};\r\nexport { forwardRef, detectIsMutableRef };\r\n//# sourceMappingURL=ref.js.map\r\n","let rootId = null;\r\nconst stores = new Map();\r\nclass Store {\r\n  wipRoot = null;\r\n  currentRoot = null;\r\n  nextUnitOfWork = null;\r\n  events = new Map();\r\n  unsubscribers = [];\r\n  deletions = new Set();\r\n  fiberMount = {\r\n    level: 0,\r\n    navigation: {},\r\n    isDeepWalking: true,\r\n  };\r\n  componentFiber = null;\r\n  effects = [];\r\n  layoutEffects = [];\r\n  insertionEffects = [];\r\n  isLayoutEffectsZone = false;\r\n  isInserionEffectsZone = false;\r\n  isUpdateHookZone = false;\r\n  isBatchZone = false;\r\n  trackUpdate;\r\n}\r\nconst rootStore = {\r\n  set: id => {\r\n    rootId = id;\r\n    !stores.get(rootId) && stores.set(rootId, new Store());\r\n  },\r\n  remove: id => stores.delete(id),\r\n};\r\nconst getRootId = () => rootId;\r\nconst store = {\r\n  get: (id = rootId) => stores.get(id),\r\n};\r\nconst wipRootStore = {\r\n  get: () => store.get()?.wipRoot || null,\r\n  set: fiber => (store.get().wipRoot = fiber),\r\n};\r\nconst currentRootStore = {\r\n  get: id => store.get(id)?.currentRoot || null,\r\n  set: fiber => (store.get().currentRoot = fiber),\r\n};\r\nconst nextUnitOfWorkStore = {\r\n  get: () => store.get()?.nextUnitOfWork || null,\r\n  set: fiber => (store.get().nextUnitOfWork = fiber),\r\n};\r\nconst currentFiberStore = {\r\n  get: () => store.get()?.componentFiber,\r\n  set: fiber => (store.get().componentFiber = fiber),\r\n};\r\nconst eventsStore = {\r\n  get: () => store.get().events,\r\n  addUnsubscriber: fn => store.get().unsubscribers.push(fn),\r\n  unsubscribe: id => store.get(id).unsubscribers.forEach(fn => fn()),\r\n};\r\nconst deletionsStore = {\r\n  get: () => store.get().deletions,\r\n  add: fiber => store.get().deletions.add(fiber),\r\n  has: fiber => store.get().deletions.has(fiber),\r\n  set: deletions => (store.get().deletions = deletions),\r\n  reset: () => (store.get().deletions = new Set()),\r\n};\r\nconst fiberMountStore = {\r\n  reset: () => {\r\n    store.get().fiberMount = {\r\n      level: 0,\r\n      navigation: {},\r\n      isDeepWalking: true,\r\n    };\r\n  },\r\n  getIndex: () => store.get().fiberMount.navigation[store.get().fiberMount.level],\r\n  jumpToChild: () => {\r\n    const { fiberMount } = store.get();\r\n    const level = fiberMount.level;\r\n    const nextLevel = level + 1;\r\n    fiberMount.level = nextLevel;\r\n    fiberMount.navigation[nextLevel] = 0;\r\n  },\r\n  jumpToParent: () => {\r\n    const { fiberMount } = store.get();\r\n    const level = fiberMount.level;\r\n    const nextLevel = level - 1;\r\n    fiberMount.navigation[level] = 0;\r\n    fiberMount.level = nextLevel;\r\n  },\r\n  jumpToSibling: () => {\r\n    const { fiberMount } = store.get();\r\n    const level = fiberMount.level;\r\n    const idx = fiberMount.navigation[level] + 1;\r\n    fiberMount.navigation[level] = idx;\r\n  },\r\n  deepWalking: {\r\n    get: () => store.get().fiberMount.isDeepWalking,\r\n    set: value => (store.get().fiberMount.isDeepWalking = value),\r\n  },\r\n};\r\nconst effectsStore = {\r\n  get: () => store.get().effects,\r\n  reset: () => (store.get().effects = []),\r\n  add: effect => store.get().effects.push(effect),\r\n};\r\nconst layoutEffectsStore = {\r\n  get: () => store.get().layoutEffects,\r\n  reset: () => (store.get().layoutEffects = []),\r\n  add: effect => store.get().layoutEffects.push(effect),\r\n};\r\nconst insertionEffectsStore = {\r\n  get: () => store.get().insertionEffects,\r\n  reset: () => (store.get().insertionEffects = []),\r\n  add: effect => store.get().insertionEffects.push(effect),\r\n};\r\nconst isLayoutEffectsZone = {\r\n  get: () => store.get()?.isLayoutEffectsZone || false,\r\n  set: value => (store.get().isLayoutEffectsZone = value),\r\n};\r\nconst isInsertionEffectsZone = {\r\n  get: id => store.get(id)?.isInserionEffectsZone || false,\r\n  set: value => (store.get().isInserionEffectsZone = value),\r\n};\r\nconst isUpdateHookZone = {\r\n  get: () => store.get()?.isUpdateHookZone || false,\r\n  set: value => (store.get().isUpdateHookZone = value),\r\n};\r\nconst isBatchZone = {\r\n  get: () => store.get()?.isBatchZone || false,\r\n  set: value => (store.get().isBatchZone = value),\r\n};\r\nexport {\r\n  getRootId,\r\n  rootStore,\r\n  wipRootStore,\r\n  currentRootStore,\r\n  nextUnitOfWorkStore,\r\n  currentFiberStore,\r\n  eventsStore,\r\n  deletionsStore,\r\n  fiberMountStore,\r\n  effectsStore,\r\n  layoutEffectsStore,\r\n  insertionEffectsStore,\r\n  isLayoutEffectsZone,\r\n  isInsertionEffectsZone,\r\n  isUpdateHookZone,\r\n  isBatchZone,\r\n};\r\n//# sourceMappingURL=scope.js.map\r\n","import { detectIsUndefined, detectIsFunction, detectIsDepsDifferent } from '../helpers';\r\nimport { currentFiberStore, effectsStore } from '../scope';\r\nconst $$useEffect = Symbol('use-effect');\r\nconst { useEffect, hasEffects, dropEffects } = createEffect($$useEffect, effectsStore);\r\nfunction createEffect(token, store) {\r\n  function useEffect(effect, deps) {\r\n    const fiber = currentFiberStore.get();\r\n    const hook = fiber.hook;\r\n    const { idx, values } = hook;\r\n    const runEffect = () => {\r\n      values[idx] = {\r\n        deps,\r\n        token,\r\n        value: undefined,\r\n      };\r\n      store.add(() => {\r\n        values[idx].value = effect();\r\n      });\r\n    };\r\n    if (detectIsUndefined(values[idx])) {\r\n      runEffect();\r\n    } else {\r\n      const { deps: prevDeps, value: cleanup } = values[idx];\r\n      const isDepsDifferent = deps ? detectIsDepsDifferent(deps, prevDeps) : true;\r\n      if (isDepsDifferent) {\r\n        detectIsFunction(cleanup) && cleanup();\r\n        runEffect();\r\n      }\r\n    }\r\n    hook.idx++;\r\n  }\r\n  function hasEffects(fiber) {\r\n    const { values } = fiber.hook;\r\n    const hasEffect = values.some(x => x?.token === token);\r\n    return hasEffect;\r\n  }\r\n  function dropEffects(hook) {\r\n    const { values } = hook;\r\n    for (const value of values) {\r\n      if (value.token === token) {\r\n        const cleanup = value.value;\r\n        detectIsFunction(cleanup) && cleanup();\r\n      }\r\n    }\r\n  }\r\n  return {\r\n    useEffect,\r\n    hasEffects,\r\n    dropEffects,\r\n  };\r\n}\r\nexport { useEffect, hasEffects, dropEffects, createEffect };\r\n//# sourceMappingURL=use-effect.js.map\r\n","import { createComponent, detectIsComponentFactory } from '../component';\r\nconst $$fragment = Symbol('fragment');\r\nconst Fragment = createComponent(({ slot }) => slot || null, {\r\n  token: $$fragment,\r\n});\r\nconst detectIsFragment = factory => detectIsComponentFactory(factory) && factory.token === $$fragment;\r\nexport { Fragment, detectIsFragment };\r\n//# sourceMappingURL=fragment.js.map\r\n","import { detectIsUndefined, detectIsArray, detectIsDepsDifferent } from '../helpers';\r\nimport { detectIsComponentFactory, createComponent } from '../component';\r\nimport { detectIsVirtualNodeFactory } from '../view';\r\nimport { currentFiberStore } from '../scope';\r\nimport { Fragment } from '../fragment';\r\nimport { $$memo } from '../memo';\r\nconst Memo = createComponent(({ slot }) => slot, { token: $$memo });\r\nfunction wrap(value, isDepsDifferent) {\r\n  const check = value => detectIsVirtualNodeFactory(value) || detectIsComponentFactory(value);\r\n  if (detectIsArray(value) ? check(value[0]) : check(value)) {\r\n    const slot = value;\r\n    const factory = Memo({\r\n      slot: Fragment({ slot }),\r\n    });\r\n    factory.shouldUpdate = () => isDepsDifferent;\r\n    return factory;\r\n  }\r\n  return value;\r\n}\r\nfunction processValue(getValue, isDepsDifferent = false) {\r\n  return wrap(getValue(), isDepsDifferent);\r\n}\r\nfunction useMemo(getValue, deps) {\r\n  const fiber = currentFiberStore.get();\r\n  const { hook } = fiber;\r\n  const { idx, values } = hook;\r\n  if (detectIsUndefined(values[idx])) {\r\n    const value = processValue(getValue);\r\n    values[idx] = {\r\n      deps,\r\n      value,\r\n    };\r\n    hook.idx++;\r\n    return value;\r\n  }\r\n  const hookValue = values[idx];\r\n  const prevDeps = hookValue.deps;\r\n  const isDepsDifferent = detectIsDepsDifferent(deps, prevDeps);\r\n  const computedGetValue = isDepsDifferent ? getValue : () => hookValue.value;\r\n  hookValue.deps = deps;\r\n  hookValue.value = processValue(computedGetValue, isDepsDifferent);\r\n  hook.idx++;\r\n  return hookValue.value;\r\n}\r\nexport { useMemo };\r\n//# sourceMappingURL=use-memo.js.map\r\n","export const platform = {\r\n  createNativeElement: () => {\r\n    throw new Error('createNativeElement not installed by renderer');\r\n  },\r\n  requestAnimationFrame: () => {\r\n    throw new Error('requestAnimationFrame not installed by renderer');\r\n  },\r\n  cancelAnimationFrame: () => {\r\n    throw new Error('cancelAnimationFrame not installed by renderer');\r\n  },\r\n  scheduleCallback: () => {\r\n    throw new Error('scheduleCallback not installed by renderer');\r\n  },\r\n  shouldYeildToHost: () => {\r\n    throw new Error('shouldYeildToHost not installed by renderer');\r\n  },\r\n  applyCommit: () => {\r\n    throw new Error('applyCommit not installed by renderer');\r\n  },\r\n  finishCommitWork: () => {\r\n    throw new Error('finishCommitWork not installed by renderer');\r\n  },\r\n  detectIsPortal: () => {\r\n    throw new Error('detectIsPortal not installed by renderer');\r\n  },\r\n  unmountPortal: () => {\r\n    throw new Error('unmountPortal not installed by renderer');\r\n  },\r\n};\r\n//# sourceMappingURL=platform.js.map\r\n","export var EffectTag;\r\n(function (EffectTag) {\r\n  EffectTag['CREATE'] = 'CREATE';\r\n  EffectTag['UPDATE'] = 'UPDATE';\r\n  EffectTag['DELETE'] = 'DELETE';\r\n  EffectTag['SKIP'] = 'SKIP';\r\n})(EffectTag || (EffectTag = {}));\r\nexport const cloneTagMap = {\r\n  [EffectTag.CREATE]: true,\r\n  [EffectTag.SKIP]: true,\r\n};\r\n//# sourceMappingURL=types.js.map\r\n","import { layoutEffectsStore } from '../scope';\r\nimport { createEffect } from '../use-effect';\r\nconst $$useLayoutEffect = Symbol('use-layout-effect');\r\nconst {\r\n  useEffect: useLayoutEffect,\r\n  hasEffects: hasLayoutEffects,\r\n  dropEffects: dropLayoutEffects,\r\n} = createEffect($$useLayoutEffect, layoutEffectsStore);\r\nexport { useLayoutEffect, hasLayoutEffects, dropLayoutEffects };\r\n//# sourceMappingURL=use-layout-effect.js.map\r\n","import { insertionEffectsStore } from '../scope';\r\nimport { createEffect } from '../use-effect';\r\nconst $$useInsertionEffect = Symbol('use-insertion-effect');\r\nconst {\r\n  useEffect: useInsertionEffect,\r\n  hasEffects: hasInsertionEffects,\r\n  dropEffects: dropInsertionEffects,\r\n} = createEffect($$useInsertionEffect, insertionEffectsStore);\r\nexport { useInsertionEffect, hasInsertionEffects, dropInsertionEffects };\r\n//# sourceMappingURL=use-insertion-effect.js.map\r\n","function walkFiber(fiber, onLoop) {\r\n  let nextFiber = fiber;\r\n  let isDeepWalking = true;\r\n  let isReturn = false;\r\n  let isStopped = false;\r\n  const visitedMap = {};\r\n  const detectCanVisit = id => !visitedMap[id];\r\n  const resetIsDeepWalking = () => (isDeepWalking = false);\r\n  const stop = () => (isStopped = true);\r\n  while (nextFiber) {\r\n    onLoop({\r\n      nextFiber: nextFiber,\r\n      isReturn,\r\n      resetIsDeepWalking,\r\n      stop,\r\n    });\r\n    if (isStopped) {\r\n      break;\r\n    }\r\n    if (nextFiber.child && isDeepWalking && detectCanVisit(nextFiber.child.id)) {\r\n      const newFiber = nextFiber.child;\r\n      isReturn = false;\r\n      nextFiber = newFiber;\r\n      visitedMap[newFiber.id] = true;\r\n    } else if (nextFiber.nextSibling && detectCanVisit(nextFiber.nextSibling.id)) {\r\n      const newFiber = nextFiber.nextSibling;\r\n      isDeepWalking = true;\r\n      isReturn = false;\r\n      nextFiber = newFiber;\r\n      visitedMap[newFiber.id] = true;\r\n    } else if (\r\n      nextFiber.parent &&\r\n      nextFiber.parent === fiber &&\r\n      nextFiber.parent.nextSibling &&\r\n      detectCanVisit(nextFiber.parent.nextSibling.id)\r\n    ) {\r\n      const newFiber = nextFiber.parent.nextSibling;\r\n      isDeepWalking = true;\r\n      isReturn = false;\r\n      nextFiber = newFiber;\r\n      visitedMap[newFiber.id] = true;\r\n    } else if (nextFiber.parent && nextFiber.parent !== fiber) {\r\n      isDeepWalking = false;\r\n      isReturn = true;\r\n      nextFiber = nextFiber.parent;\r\n    } else {\r\n      nextFiber = null;\r\n    }\r\n  }\r\n}\r\nexport { walkFiber };\r\n//# sourceMappingURL=walk.js.map\r\n","import { platform } from '../platform';\r\nimport { detectIsComponentFactory } from '../component';\r\nimport { dropEffects } from '../use-effect';\r\nimport { dropLayoutEffects } from '../use-layout-effect';\r\nimport { dropInsertionEffects } from '../use-insertion-effect';\r\nimport { walkFiber } from '../walk';\r\nimport { detectIsUndefined } from '../helpers';\r\nimport { currentRootStore, eventsStore, rootStore } from '../scope';\r\nfunction unmountFiber(fiber) {\r\n  if (!fiber.insertionEffectHost && !fiber.layoutEffectHost && !fiber.effectHost && !fiber.portalHost) return;\r\n  walkFiber(fiber, ({ nextFiber, isReturn, stop }) => {\r\n    if (nextFiber === fiber.nextSibling) return stop();\r\n    if (!isReturn && detectIsComponentFactory(nextFiber.instance)) {\r\n      nextFiber.insertionEffectHost && dropInsertionEffects(nextFiber.hook);\r\n      nextFiber.layoutEffectHost && dropLayoutEffects(nextFiber.hook);\r\n      nextFiber.effectHost && dropEffects(nextFiber.hook);\r\n      nextFiber.portalHost && platform.unmountPortal(nextFiber);\r\n    }\r\n  });\r\n}\r\nfunction unmountRoot(rootId, onComplete) {\r\n  if (detectIsUndefined(rootId)) return;\r\n  unmountFiber(currentRootStore.get(rootId));\r\n  eventsStore.unsubscribe(rootId);\r\n  rootStore.remove(rootId);\r\n  onComplete();\r\n}\r\nexport { unmountFiber, unmountRoot };\r\n//# sourceMappingURL=unmount.js.map\r\n","import {\r\n  flatten,\r\n  error,\r\n  detectIsEmpty,\r\n  detectIsFalsy,\r\n  detectIsArray,\r\n  detectIsString,\r\n  detectIsNumber,\r\n  detectIsFunction,\r\n} from '../helpers';\r\nimport { platform } from '../platform';\r\nimport {\r\n  wipRootStore,\r\n  currentRootStore,\r\n  nextUnitOfWorkStore,\r\n  deletionsStore,\r\n  fiberMountStore,\r\n  currentFiberStore,\r\n  isUpdateHookZone,\r\n  rootStore,\r\n  effectsStore,\r\n  layoutEffectsStore,\r\n  insertionEffectsStore,\r\n  isLayoutEffectsZone,\r\n  isInsertionEffectsZone,\r\n} from '../scope';\r\nimport { detectIsComponentFactory, getComponentFactoryKey, getComponentFactoryFlag } from '../component';\r\nimport {\r\n  detectIsVirtualNode,\r\n  detectIsTagVirtualNode,\r\n  detectIsVirtualNodeFactory,\r\n  getTagVirtualNodeKey,\r\n  getVirtualNodeFactoryKey,\r\n  getTagVirtualNodeFlag,\r\n  getVirtualNodeFactoryFlag,\r\n  detectIsTextVirtualNode,\r\n  detectIsCommentVirtualNode,\r\n  createReplacer,\r\n} from '../view';\r\nimport { detectIsMemo } from '../memo';\r\nimport { INDEX_KEY, TYPE, Flag } from '../constants';\r\nimport { EffectTag, cloneTagMap } from './types';\r\nimport { hasEffects } from '../use-effect';\r\nimport { hasLayoutEffects } from '../use-layout-effect';\r\nimport { hasInsertionEffects } from '../use-insertion-effect';\r\nimport { walkFiber } from '../walk';\r\nimport { unmountFiber } from '../unmount';\r\nimport { Text } from '../view';\r\nimport { Fragment, detectIsFragment } from '../fragment';\r\nclass Fiber {\r\n  id = 0;\r\n  nativeElement = null;\r\n  parent = null;\r\n  child = null;\r\n  nextSibling = null;\r\n  alternate = null;\r\n  move = false;\r\n  effectTag = null;\r\n  instance = null;\r\n  hook = null;\r\n  provider = null;\r\n  effectHost = false;\r\n  layoutEffectHost = false;\r\n  insertionEffectHost = false;\r\n  portalHost = false;\r\n  childrenCount = 0;\r\n  childrenElementsCount = 0;\r\n  marker = '';\r\n  isUsed = false;\r\n  idx = 0;\r\n  elementIdx = 0;\r\n  batched = null;\r\n  catchException;\r\n  static nextId = 0;\r\n  constructor(hook = null, provider = null, idx = 0) {\r\n    this.id = ++Fiber.nextId;\r\n    this.hook = hook;\r\n    this.provider = provider;\r\n    this.idx = idx;\r\n  }\r\n  mutate(options) {\r\n    const keys = Object.keys(options);\r\n    for (const key of keys) {\r\n      this[key] = options[key];\r\n    }\r\n    return this;\r\n  }\r\n  markEffectHost() {\r\n    this.effectHost = true;\r\n    this.parent && !this.parent.effectHost && this.parent.markEffectHost();\r\n  }\r\n  markLayoutEffectHost() {\r\n    this.layoutEffectHost = true;\r\n    this.parent && !this.parent.layoutEffectHost && this.parent.markLayoutEffectHost();\r\n  }\r\n  markInsertionEffectHost() {\r\n    this.insertionEffectHost = true;\r\n    this.parent && !this.parent.insertionEffectHost && this.parent.markInsertionEffectHost();\r\n  }\r\n  markPortalHost() {\r\n    this.portalHost = true;\r\n    this.parent && !this.parent.portalHost && this.parent.markPortalHost();\r\n  }\r\n  incrementChildrenElementsCount(count = 1, force = false) {\r\n    incrementChildrenElementsCount(this, count, force);\r\n  }\r\n  setError(error) {\r\n    if (detectIsFunction(this.catchException)) {\r\n      this.catchException(error);\r\n    } else if (this.parent) {\r\n      this.parent.setError(error);\r\n    }\r\n  }\r\n}\r\nfunction workLoop() {\r\n  const wipFiber = wipRootStore.get();\r\n  let nextUnitOfWork = nextUnitOfWorkStore.get();\r\n  let shouldYield = false;\r\n  let hasMoreWork = Boolean(nextUnitOfWork);\r\n  while (nextUnitOfWork && !shouldYield) {\r\n    nextUnitOfWork = performUnitOfWork(nextUnitOfWork);\r\n    nextUnitOfWorkStore.set(nextUnitOfWork);\r\n    hasMoreWork = Boolean(nextUnitOfWork);\r\n    shouldYield = platform.shouldYeildToHost();\r\n  }\r\n  if (!nextUnitOfWork && wipFiber) {\r\n    commitChanges();\r\n  }\r\n  return hasMoreWork;\r\n}\r\nfunction performUnitOfWork(fiber) {\r\n  let isDeepWalking = true;\r\n  let nextFiber = fiber;\r\n  let instance = fiber.instance;\r\n  while (true) {\r\n    isDeepWalking = fiberMountStore.deepWalking.get();\r\n    nextFiber.hook && (nextFiber.hook.idx = 0);\r\n    if (isDeepWalking) {\r\n      const hasChildren = hasChildrenProp(instance) && instance.children.length > 0;\r\n      if (hasChildren) {\r\n        const { fiber$, instance$ } = performChild(nextFiber, instance);\r\n        nextFiber = fiber$;\r\n        instance = instance$;\r\n        if (fiber$) return fiber$;\r\n      } else {\r\n        const { fiber$$, fiber$, instance$ } = performSibling(nextFiber, instance);\r\n        nextFiber = fiber$;\r\n        instance = instance$;\r\n        if (fiber$$) return fiber$$;\r\n      }\r\n    } else {\r\n      const { fiber$$, fiber$, instance$ } = performSibling(nextFiber, instance);\r\n      nextFiber = fiber$;\r\n      instance = instance$;\r\n      if (fiber$$) return fiber$$;\r\n    }\r\n    if (nextFiber.parent === null) return null;\r\n  }\r\n}\r\nfunction performChild(nextFiber, instance) {\r\n  fiberMountStore.jumpToChild();\r\n  const childrenIdx = 0;\r\n  const alternate = nextFiber.alternate ? nextFiber.alternate.child : null;\r\n  const prevInstance = alternate ? alternate.instance : null;\r\n  const nextInstance = hasChildrenProp(instance) ? instance.children[childrenIdx] || null : null;\r\n  const hook = getHook(alternate, prevInstance, nextInstance);\r\n  const provider = alternate ? alternate.provider : null;\r\n  const fiber = new Fiber(hook, provider, childrenIdx);\r\n  currentFiberStore.set(fiber);\r\n  fiber.parent = nextFiber;\r\n  nextFiber.child = fiber;\r\n  fiber.elementIdx = nextFiber.nativeElement ? 0 : nextFiber.elementIdx;\r\n  instance = pertformInstance(instance, childrenIdx, fiber) || instance;\r\n  alternate && performAlternate(alternate, instance);\r\n  performFiber(fiber, alternate, instance);\r\n  alternate && detectIsMemo(fiber.instance) && performMemo(fiber, alternate, instance);\r\n  cloneTagMap[fiber.parent.effectTag] && (fiber.effectTag = fiber.parent.effectTag);\r\n  return {\r\n    fiber$: fiber,\r\n    instance$: instance,\r\n  };\r\n}\r\nfunction performSibling(nextFiber, instance) {\r\n  fiberMountStore.jumpToSibling();\r\n  const parentInstance = nextFiber.parent.instance;\r\n  const childrenIdx = fiberMountStore.getIndex();\r\n  const hasSibling = hasChildrenProp(parentInstance) && parentInstance.children[childrenIdx];\r\n  if (hasSibling) {\r\n    fiberMountStore.deepWalking.set(true);\r\n    const alternate = nextFiber.alternate ? nextFiber.alternate.nextSibling : null;\r\n    const prevInstance = alternate ? alternate.instance : null;\r\n    const nextInstance = hasChildrenProp(parentInstance) ? parentInstance.children[childrenIdx] || null : null;\r\n    const hook = getHook(alternate, prevInstance, nextInstance);\r\n    const provider = alternate ? alternate.provider : null;\r\n    const fiber = new Fiber(hook, provider, childrenIdx);\r\n    currentFiberStore.set(fiber);\r\n    fiber.parent = nextFiber.parent;\r\n    nextFiber.nextSibling = fiber;\r\n    fiber.elementIdx = nextFiber.elementIdx + nextFiber.childrenElementsCount;\r\n    instance = pertformInstance(parentInstance, childrenIdx, fiber) || instance;\r\n    alternate && performAlternate(alternate, instance);\r\n    performFiber(fiber, alternate, instance);\r\n    alternate && detectIsMemo(fiber.instance) && performMemo(fiber, alternate, instance);\r\n    cloneTagMap[fiber.parent.effectTag] && (fiber.effectTag = fiber.parent.effectTag);\r\n    return {\r\n      fiber$$: fiber,\r\n      fiber$: fiber,\r\n      instance$: instance,\r\n    };\r\n  } else {\r\n    fiberMountStore.jumpToParent();\r\n    fiberMountStore.deepWalking.set(false);\r\n    nextFiber = nextFiber.parent;\r\n    instance = nextFiber.instance;\r\n    if (hasChildrenProp(nextFiber.instance)) {\r\n      nextFiber.instance.children = [];\r\n    }\r\n  }\r\n  return {\r\n    fiber$$: null,\r\n    fiber$: nextFiber,\r\n    instance$: instance,\r\n  };\r\n}\r\nfunction incrementChildrenElementsCount(fiber, count = 1, force = false) {\r\n  if (!fiber.parent) return;\r\n  const fromUpdate = isUpdateHookZone.get();\r\n  const wipFiber = wipRootStore.get();\r\n  const stop = fromUpdate && wipFiber.parent === fiber.parent;\r\n  if (\r\n    detectIsTextVirtualNode(fiber.instance) ||\r\n    detectIsCommentVirtualNode(fiber.instance) ||\r\n    (detectIsTagVirtualNode(fiber.instance) && fiber.instance.children.length === 0)\r\n  ) {\r\n    fiber.childrenElementsCount = 1;\r\n  }\r\n  if (fromUpdate && stop && !force) return;\r\n  fiber.parent.childrenElementsCount += count;\r\n  if (!fiber.parent.nativeElement) {\r\n    fiber.parent.incrementChildrenElementsCount(count);\r\n  }\r\n}\r\nfunction performFiber(fiber, alternate, instance) {\r\n  const hasAlternate = Boolean(alternate);\r\n  const prevKey = hasAlternate ? getElementKey(alternate.instance) : null;\r\n  const nextKey = hasAlternate ? getElementKey(instance) : null;\r\n  const isSameKeys = prevKey === nextKey;\r\n  const isSameTypes = hasAlternate && getInstanceType(alternate.instance) === getInstanceType(instance);\r\n  const isUpdate = isSameTypes && isSameKeys;\r\n  fiber.instance = instance;\r\n  fiber.alternate = alternate || null;\r\n  fiber.nativeElement = isUpdate ? alternate.nativeElement : null;\r\n  fiber.effectTag = isUpdate ? EffectTag.UPDATE : EffectTag.CREATE;\r\n  if (alternate && alternate.move) {\r\n    fiber.move = alternate.move;\r\n    alternate.move = false;\r\n  }\r\n  if (hasChildrenProp(fiber.instance)) {\r\n    fiber.childrenCount = fiber.instance.children.length;\r\n  }\r\n  if (!fiber.nativeElement && detectIsVirtualNode(fiber.instance)) {\r\n    fiber.nativeElement = platform.createNativeElement(fiber.instance);\r\n    fiber.effectTag = EffectTag.CREATE;\r\n  }\r\n  if (fiber.nativeElement) {\r\n    fiber.incrementChildrenElementsCount();\r\n  }\r\n}\r\nfunction insertToFiber(idx, fiber, child) {\r\n  if (idx === 0 || (fiber.child && fiber.child.effectTag === EffectTag.DELETE)) {\r\n    fiber.child = child;\r\n    child.parent = fiber;\r\n  } else {\r\n    fiber.nextSibling = child;\r\n    child.parent = fiber.parent;\r\n  }\r\n  return child;\r\n}\r\nfunction createConditionalFiber(alternate, marker) {\r\n  const vNode = createReplacer();\r\n  return new Fiber().mutate({\r\n    instance: vNode,\r\n    parent: alternate,\r\n    marker: marker + '',\r\n    effectTag: EffectTag.CREATE,\r\n  });\r\n}\r\nfunction performAlternate(alternate, instance) {\r\n  const alternateType = getInstanceType(alternate.instance);\r\n  const elementType = getInstanceType(instance);\r\n  const isSameType = elementType === alternateType;\r\n  const flag = getElementFlag(instance);\r\n  const hasNoMovesFlag = flag && flag[Flag.HAS_NO_MOVES];\r\n  alternate.isUsed = true;\r\n  if (!isSameType) {\r\n    alternate.effectTag = EffectTag.DELETE;\r\n    if (!deletionsStore.has(alternate.parent)) {\r\n      deletionsStore.add(alternate);\r\n    }\r\n  } else if (\r\n    hasChildrenProp(alternate.instance) &&\r\n    hasChildrenProp(instance) &&\r\n    (hasNoMovesFlag ? alternate.childrenCount !== instance.children.length : true)\r\n  ) {\r\n    const { prevKeys, nextKeys, prevKeysMap, nextKeysMap, keyedFibersMap } = extractKeys(\r\n      alternate.child,\r\n      instance.children,\r\n    );\r\n    let result = [];\r\n    let size = Math.max(prevKeys.length, nextKeys.length);\r\n    let nextFiber = alternate;\r\n    let idx = 0;\r\n    let p = 0;\r\n    let n = 0;\r\n    for (let i = 0; i < size; i++) {\r\n      const nextKey = nextKeys[i - n] ?? null;\r\n      const prevKey = prevKeys[i - p] ?? null;\r\n      const prevKeyFiber = keyedFibersMap[prevKey] || null;\r\n      const nextKeyFiber = keyedFibersMap[nextKey] || createConditionalFiber(alternate, nextKey);\r\n      if (nextKey !== prevKey) {\r\n        if (nextKey !== null && !prevKeysMap[nextKey]) {\r\n          if (prevKey !== null && !nextKeysMap[prevKey]) {\r\n            result.push([[nextKey, prevKey], 'replace']);\r\n            nextKeyFiber.effectTag = EffectTag.CREATE;\r\n            prevKeyFiber.effectTag = EffectTag.DELETE;\r\n            deletionsStore.add(prevKeyFiber);\r\n          } else {\r\n            result.push([nextKey, 'insert']);\r\n            nextKeyFiber.effectTag = EffectTag.CREATE;\r\n            p++;\r\n            size++;\r\n          }\r\n          nextFiber = insertToFiber(i, nextFiber, nextKeyFiber);\r\n        } else if (!nextKeysMap[prevKey]) {\r\n          result.push([prevKey, 'remove']);\r\n          prevKeyFiber.effectTag = EffectTag.DELETE;\r\n          deletionsStore.add(prevKeyFiber);\r\n          n++;\r\n          idx--;\r\n          size++;\r\n        } else if (nextKeysMap[prevKey] && nextKeysMap[nextKey]) {\r\n          result.push([[nextKey, prevKey], 'move']);\r\n          nextKeyFiber.effectTag = EffectTag.UPDATE;\r\n          prevKeyFiber.effectTag = EffectTag.UPDATE;\r\n          nextKeyFiber.move = true;\r\n          nextFiber = insertToFiber(i, nextFiber, nextKeyFiber);\r\n        }\r\n      } else if (nextKey !== null) {\r\n        result.push([nextKey, 'stable']);\r\n        nextKeyFiber.effectTag = EffectTag.UPDATE;\r\n        nextFiber = insertToFiber(i, nextFiber, nextKeyFiber);\r\n      }\r\n      nextKeyFiber.idx = idx;\r\n      idx++;\r\n    }\r\n    result = [];\r\n  }\r\n}\r\nfunction performMemo(fiber, alternate, instance) {\r\n  const prevFactory = alternate.instance;\r\n  const nextFactory = instance;\r\n  if (fiber.move || nextFactory.type !== prevFactory.type) return;\r\n  const prevProps = prevFactory.props;\r\n  const nextProps = nextFactory.props;\r\n  const skip = !nextFactory.shouldUpdate(prevProps, nextProps);\r\n  if (skip) {\r\n    fiberMountStore.deepWalking.set(false);\r\n    const diff = fiber.elementIdx - alternate.elementIdx;\r\n    const deep = diff !== 0;\r\n    fiber.mutate({\r\n      ...alternate,\r\n      alternate,\r\n      id: fiber.id,\r\n      idx: fiber.idx,\r\n      parent: fiber.parent,\r\n      nextSibling: fiber.nextSibling,\r\n      elementIdx: fiber.elementIdx,\r\n      effectTag: EffectTag.SKIP,\r\n    });\r\n    walkFiber(fiber.child, ({ nextFiber, stop }) => {\r\n      if (nextFiber === fiber.nextSibling || nextFiber === fiber.parent) {\r\n        return stop();\r\n      }\r\n      if (nextFiber.parent === alternate) {\r\n        nextFiber.parent = fiber;\r\n      }\r\n      if (deep) {\r\n        nextFiber.elementIdx += diff;\r\n        if (nextFiber.parent !== fiber && nextFiber.nativeElement) return stop();\r\n      } else if (nextFiber === alternate.child.child) return stop();\r\n    });\r\n    fiber.incrementChildrenElementsCount(alternate.childrenElementsCount);\r\n    if (alternate.effectHost) {\r\n      fiber.markEffectHost();\r\n    }\r\n    if (alternate.layoutEffectHost) {\r\n      fiber.markLayoutEffectHost();\r\n    }\r\n    if (alternate.insertionEffectHost) {\r\n      fiber.markInsertionEffectHost();\r\n    }\r\n    if (alternate.portalHost) {\r\n      fiber.markPortalHost();\r\n    }\r\n  }\r\n}\r\nfunction pertformInstance(instance, idx, fiber) {\r\n  let performedInstance = null;\r\n  if (hasChildrenProp(instance)) {\r\n    const elements = detectIsArray(instance.children[idx])\r\n      ? flatten([instance.children[idx]])\r\n      : [instance.children[idx]];\r\n    instance.children.splice(idx, 1, ...elements);\r\n    performedInstance = instance.children[idx];\r\n    performedInstance = mountInstance(fiber, performedInstance);\r\n  }\r\n  if (detectIsComponentFactory(performedInstance)) {\r\n    if (hasEffects(fiber)) {\r\n      fiber.markEffectHost();\r\n    }\r\n    if (hasLayoutEffects(fiber)) {\r\n      fiber.markLayoutEffectHost();\r\n    }\r\n    if (hasInsertionEffects(fiber)) {\r\n      fiber.markInsertionEffectHost();\r\n    }\r\n    if (platform.detectIsPortal(performedInstance)) {\r\n      fiber.markPortalHost();\r\n    }\r\n  }\r\n  return performedInstance;\r\n}\r\nfunction mountInstance(fiber, instance) {\r\n  const isComponentFactory = detectIsComponentFactory(instance);\r\n  const factory = instance;\r\n  if (isComponentFactory) {\r\n    try {\r\n      let result = factory.type(factory.props, factory.ref);\r\n      if (detectIsArray(result) && !detectIsFragment(factory)) {\r\n        result = Fragment({ slot: result });\r\n      } else if (detectIsString(result) || detectIsNumber(result)) {\r\n        result = Text(result);\r\n      }\r\n      factory.children = detectIsArray(result) ? flatten([result]) : [result];\r\n    } catch (err) {\r\n      factory.children = [];\r\n      fiber.setError(err);\r\n      error(err);\r\n    }\r\n  } else if (detectIsVirtualNodeFactory(instance)) {\r\n    instance = instance();\r\n  }\r\n  if (hasChildrenProp(instance)) {\r\n    for (let i = 0; i < instance.children.length; i++) {\r\n      if (!instance.children[i]) {\r\n        instance.children[i] = supportConditional(instance.children[i]);\r\n      }\r\n    }\r\n    instance.children = isComponentFactory\r\n      ? instance.children\r\n      : detectIsArray(instance.children)\r\n      ? flatten([instance.children])\r\n      : [instance.children];\r\n    if (isComponentFactory && factory.children.length === 0) {\r\n      factory.children.push(createReplacer());\r\n    }\r\n  }\r\n  return instance;\r\n}\r\nfunction extractKeys(alternate, children) {\r\n  let nextFiber = alternate;\r\n  let idx = 0;\r\n  let hasNoPrevKeys = false;\r\n  let hasNoNextKeys = false;\r\n  const prevKeys = [];\r\n  const nextKeys = [];\r\n  const prevKeysMap = {};\r\n  const nextKeysMap = {};\r\n  const keyedFibersMap = {};\r\n  const usedKeysMap = {};\r\n  while (nextFiber || idx < children.length) {\r\n    if (nextFiber) {\r\n      const key = getElementKey(nextFiber.instance);\r\n      const prevKey = detectIsEmpty(key) ? createIndexKey(idx) : key;\r\n      if (process.env.NODE_ENV === 'development') {\r\n        if (detectIsEmpty(key)) {\r\n          hasNoPrevKeys = true;\r\n        }\r\n      }\r\n      prevKeys.push(prevKey);\r\n      prevKeysMap[prevKey] = true;\r\n      keyedFibersMap[prevKey] = nextFiber;\r\n    }\r\n    if (children[idx]) {\r\n      const key = getElementKey(children[idx]);\r\n      const nextKey = detectIsEmpty(key) ? createIndexKey(idx) : key;\r\n      if (process.env.NODE_ENV === 'development') {\r\n        if (detectIsEmpty(key)) {\r\n          hasNoNextKeys = true;\r\n        }\r\n        if (usedKeysMap[nextKey]) {\r\n          error(`[Dark]: The key of node [${nextKey}] already has been used!`, [children[idx]]);\r\n        }\r\n        usedKeysMap[nextKey] = true;\r\n      }\r\n      nextKeys.push(nextKey);\r\n      nextKeysMap[nextKey] = true;\r\n    }\r\n    nextFiber = nextFiber ? nextFiber.nextSibling : null;\r\n    idx++;\r\n  }\r\n  if (process.env.NODE_ENV === 'development') {\r\n    if (prevKeys.length !== nextKeys.length && hasNoNextKeys && hasNoPrevKeys) {\r\n      error(\r\n        `[Dark]: Operation of inserting, adding, replacing elements into list requires to have a unique key for every node (string or number, but not array index)!`,\r\n        children,\r\n      );\r\n    }\r\n  }\r\n  return {\r\n    prevKeys,\r\n    nextKeys,\r\n    prevKeysMap,\r\n    nextKeysMap,\r\n    keyedFibersMap,\r\n  };\r\n}\r\nfunction createIndexKey(idx) {\r\n  return `${INDEX_KEY}:${idx}`;\r\n}\r\nfunction getElementKey(instance) {\r\n  const key = detectIsComponentFactory(instance)\r\n    ? getComponentFactoryKey(instance)\r\n    : detectIsVirtualNodeFactory(instance)\r\n    ? getVirtualNodeFactoryKey(instance)\r\n    : detectIsTagVirtualNode(instance)\r\n    ? getTagVirtualNodeKey(instance)\r\n    : null;\r\n  return key;\r\n}\r\nfunction getElementFlag(instance) {\r\n  const flag = detectIsComponentFactory(instance)\r\n    ? getComponentFactoryFlag(instance)\r\n    : detectIsVirtualNodeFactory(instance)\r\n    ? getVirtualNodeFactoryFlag(instance)\r\n    : detectIsTagVirtualNode(instance)\r\n    ? getTagVirtualNodeFlag(instance)\r\n    : null;\r\n  return flag;\r\n}\r\nfunction supportConditional(instance) {\r\n  return detectIsFalsy(instance) ? createReplacer() : instance;\r\n}\r\nfunction getInstanceType(instance) {\r\n  return detectIsVirtualNodeFactory(instance)\r\n    ? instance[TYPE]\r\n    : detectIsTagVirtualNode(instance)\r\n    ? instance.name\r\n    : detectIsVirtualNode(instance)\r\n    ? instance.type\r\n    : detectIsComponentFactory(instance)\r\n    ? instance.type\r\n    : null;\r\n}\r\nfunction hasChildrenProp(element) {\r\n  return detectIsTagVirtualNode(element) || detectIsComponentFactory(element);\r\n}\r\nfunction detectIsSameComponentFactoryTypesWithSameKeys(prevInstance, nextInstance) {\r\n  if (\r\n    prevInstance &&\r\n    nextInstance &&\r\n    detectIsComponentFactory(prevInstance) &&\r\n    detectIsComponentFactory(nextInstance) &&\r\n    prevInstance.type === nextInstance.type\r\n  ) {\r\n    const prevKey = prevInstance ? getElementKey(prevInstance) : null;\r\n    const nextKey = nextInstance ? getElementKey(nextInstance) : null;\r\n    return prevKey === nextKey;\r\n  }\r\n  return false;\r\n}\r\nfunction getHook(alternate, prevInstance, nextInstance) {\r\n  if (alternate && detectIsSameComponentFactoryTypesWithSameKeys(prevInstance, nextInstance)) {\r\n    return alternate.hook;\r\n  }\r\n  if (detectIsComponentFactory(nextInstance)) {\r\n    return createHook();\r\n  }\r\n  return null;\r\n}\r\nfunction createHook() {\r\n  return {\r\n    idx: 0,\r\n    values: [],\r\n  };\r\n}\r\nfunction commitChanges() {\r\n  const wipFiber = wipRootStore.get();\r\n  const insertionEffects = insertionEffectsStore.get();\r\n  const deletions = deletionsStore.get();\r\n  const fromUpdate = isUpdateHookZone.get();\r\n  for (const fiber of deletions) {\r\n    unmountFiber(fiber);\r\n    platform.applyCommit(fiber);\r\n  }\r\n  isInsertionEffectsZone.set(true);\r\n  insertionEffects.forEach(fn => fn());\r\n  isInsertionEffectsZone.set(false);\r\n  fromUpdate && syncElementIndices(wipFiber);\r\n  commitWork(wipFiber, () => {\r\n    const layoutEffects = layoutEffectsStore.get();\r\n    const effects = effectsStore.get();\r\n    isLayoutEffectsZone.set(true);\r\n    layoutEffects.forEach(fn => fn());\r\n    isLayoutEffectsZone.set(false);\r\n    setTimeout(() => {\r\n      effects.forEach(fn => fn());\r\n    });\r\n    wipRootStore.set(null);\r\n    deletionsStore.reset();\r\n    insertionEffectsStore.reset();\r\n    layoutEffectsStore.reset();\r\n    effectsStore.reset();\r\n    if (fromUpdate) {\r\n      isUpdateHookZone.set(false);\r\n    } else {\r\n      currentRootStore.set(wipFiber);\r\n    }\r\n  });\r\n}\r\nfunction getParentFiberWithNativeElement(fiber) {\r\n  let parentFiber = fiber;\r\n  while (parentFiber) {\r\n    parentFiber = parentFiber.parent;\r\n    if (parentFiber && parentFiber.nativeElement) {\r\n      break;\r\n    }\r\n  }\r\n  return parentFiber;\r\n}\r\nfunction syncElementIndices(fiber) {\r\n  const diff = fiber.childrenElementsCount - fiber.alternate.childrenElementsCount;\r\n  if (diff === 0) return;\r\n  const parentFiber = getParentFiberWithNativeElement(fiber);\r\n  let isRight = false;\r\n  fiber.incrementChildrenElementsCount(diff, true);\r\n  walkFiber(parentFiber.child, ({ nextFiber, resetIsDeepWalking, isReturn, stop }) => {\r\n    if (nextFiber === parentFiber) return stop();\r\n    if (nextFiber === fiber) {\r\n      isRight = true;\r\n      return resetIsDeepWalking();\r\n    }\r\n    if (nextFiber.nativeElement) {\r\n      resetIsDeepWalking();\r\n    }\r\n    if (isRight && !isReturn) {\r\n      nextFiber.elementIdx += diff;\r\n    }\r\n  });\r\n}\r\nfunction commitWork(fiber, onComplete) {\r\n  walkFiber(fiber.child, ({ nextFiber, isReturn, resetIsDeepWalking, stop }) => {\r\n    const skip = nextFiber.effectTag === EffectTag.SKIP;\r\n    if (nextFiber === fiber) return stop();\r\n    if (skip) {\r\n      resetIsDeepWalking();\r\n    } else if (!isReturn) {\r\n      platform.applyCommit(nextFiber);\r\n    }\r\n    nextFiber.alternate = null;\r\n  });\r\n  fiber.alternate = null;\r\n  platform.finishCommitWork();\r\n  onComplete();\r\n}\r\nfunction createUpdateCallback(options) {\r\n  const { rootId, fiber, forceStart = false, onStart } = options;\r\n  const callback = () => {\r\n    if (fiber.effectTag === EffectTag.DELETE) return;\r\n    forceStart && onStart();\r\n    if (fiber.isUsed) return;\r\n    !forceStart && onStart();\r\n    rootStore.set(rootId);\r\n    isUpdateHookZone.set(true);\r\n    fiberMountStore.reset();\r\n    fiber.alternate = new Fiber().mutate({ ...fiber });\r\n    fiber.marker = '🍒';\r\n    fiber.effectTag = EffectTag.UPDATE;\r\n    fiber.childrenElementsCount = 0;\r\n    fiber.child = null;\r\n    wipRootStore.set(fiber);\r\n    currentFiberStore.set(fiber);\r\n    fiber.instance = mountInstance(fiber, fiber.instance);\r\n    nextUnitOfWorkStore.set(fiber);\r\n  };\r\n  return callback;\r\n}\r\nexport { Fiber, workLoop, createUpdateCallback };\r\n//# sourceMappingURL=fiber.js.map\r\n","import { platform } from '../platform';\r\nimport { getRootId, currentFiberStore, isInsertionEffectsZone, isLayoutEffectsZone, isBatchZone } from '../scope';\r\nimport { createUpdateCallback } from '../fiber';\r\nimport { useMemo } from '../use-memo';\r\nimport { dummyFn } from '../helpers';\r\nimport { runBatch as batch } from '../batch';\r\nfunction useUpdate(options) {\r\n  const rootId = getRootId();\r\n  const scope = useMemo(() => ({ fiber: null }), []);\r\n  scope.fiber = currentFiberStore.get();\r\n  const update = onStart => {\r\n    if (isInsertionEffectsZone.get()) return;\r\n    const callback = createUpdateCallback({\r\n      rootId,\r\n      fiber: scope.fiber,\r\n      forceStart: Boolean(options?.timeoutMs),\r\n      onStart: onStart || dummyFn,\r\n    });\r\n    if (isLayoutEffectsZone.get()) {\r\n      options = {\r\n        ...(options || {}),\r\n        forceSync: true,\r\n      };\r\n    }\r\n    if (isBatchZone.get()) {\r\n      batch(scope.fiber, () => platform.scheduleCallback(callback, options));\r\n    } else {\r\n      platform.scheduleCallback(callback, options);\r\n    }\r\n  };\r\n  return update;\r\n}\r\nexport { useUpdate };\r\n//# sourceMappingURL=use-update.js.map\r\n","import { isBatchZone } from '../scope';\r\nfunction batch(callback) {\r\n  isBatchZone.set(true);\r\n  callback();\r\n}\r\nfunction runBatch(fiber, callback) {\r\n  fiber.batched && window.clearTimeout(fiber.batched);\r\n  fiber.batched = window.setTimeout(() => {\r\n    isBatchZone.set(false);\r\n    fiber.batched = null;\r\n    callback();\r\n  });\r\n}\r\nexport { batch, runBatch };\r\n//# sourceMappingURL=batch.js.map\r\n","import { detectIsFunction } from '../helpers';\r\nimport { currentFiberStore } from '../scope';\r\nimport { createComponent } from '../component';\r\nimport { useEffect } from '../use-effect';\r\nimport { useMemo } from '../use-memo';\r\nimport { useUpdate } from '../use-update';\r\nfunction createContext(defaultValue, options) {\r\n  const { displayName = 'Context' } = options || {};\r\n  const context = {\r\n    displayName,\r\n    defaultValue,\r\n    Provider: null,\r\n    Consumer: null,\r\n  };\r\n  context.Provider = createProvider(context, defaultValue, displayName);\r\n  context.Consumer = createConsumer(context, displayName);\r\n  return context;\r\n}\r\nfunction createProvider(context, defaultValue, displayName) {\r\n  return createComponent(\r\n    ({ value = defaultValue, slot }) => {\r\n      const fiber = currentFiberStore.get();\r\n      if (!fiber.provider) {\r\n        const providerValue = {\r\n          value,\r\n          subscribers: new Set(),\r\n          subscribe: subscriber => {\r\n            providerValue.subscribers.add(subscriber);\r\n            return () => providerValue.subscribers.delete(subscriber);\r\n          },\r\n        };\r\n        fiber.provider = new Map();\r\n        fiber.provider.set(context, providerValue);\r\n      }\r\n      const provider = fiber.provider.get(context);\r\n      useEffect(() => {\r\n        provider.subscribers.forEach(fn => fn(value));\r\n      }, [value]);\r\n      provider.value = value;\r\n      return slot;\r\n    },\r\n    { displayName: `${displayName}.Provider` },\r\n  );\r\n}\r\nfunction createConsumer(context, displayName) {\r\n  return createComponent(\r\n    ({ slot }) => {\r\n      const value = useContext(context);\r\n      return detectIsFunction(slot) ? slot(value) : null;\r\n    },\r\n    { displayName: `${displayName}.Consumer` },\r\n  );\r\n}\r\nfunction useContext(context) {\r\n  const { defaultValue } = context;\r\n  const fiber = currentFiberStore.get();\r\n  const provider = useMemo(() => getProvider(context, fiber), []);\r\n  const value = provider ? provider.value : defaultValue;\r\n  const update = useUpdate();\r\n  const scope = useMemo(() => ({ value }), []);\r\n  const hasProvider = Boolean(provider);\r\n  useEffect(() => {\r\n    if (!hasProvider) return;\r\n    const unsubscribe = provider.subscribe(value => {\r\n      if (!Object.is(scope.value, value)) {\r\n        update();\r\n      }\r\n    });\r\n    return () => unsubscribe();\r\n  }, [hasProvider]);\r\n  scope.value = value;\r\n  return value;\r\n}\r\nfunction getProvider(context, fiber) {\r\n  let nextFiber = fiber;\r\n  while (nextFiber) {\r\n    if (nextFiber.provider && nextFiber.provider.get(context)) {\r\n      return nextFiber.provider.get(context);\r\n    }\r\n    nextFiber = nextFiber.parent;\r\n  }\r\n  return null;\r\n}\r\nexport { createContext, useContext };\r\n//# sourceMappingURL=context.js.map\r\n","import { useMemo } from '../use-memo';\r\nfunction useCallback(callback, deps) {\r\n  const value = useMemo(() => callback, deps);\r\n  return value;\r\n}\r\nexport { useCallback };\r\n//# sourceMappingURL=use-callback.js.map\r\n","import { createComponent } from '../component';\r\nimport { createContext, useContext } from '../context';\r\nimport { useUpdate } from '../use-update';\r\nimport { useMemo } from '../use-memo';\r\nimport { useEffect } from '../use-effect';\r\nimport { useCallback } from '../use-callback';\r\nimport { memo } from '../memo';\r\nimport { keyBy } from '../helpers';\r\nconst SplitUpdate = createComponent(props => {\r\n  const { list, getKey, slot } = props;\r\n  const scope = useMemo(() => ({ list, subscribers: new Set() }), []);\r\n  const map = useMemo(() => ({ value: keyBy(list, x => getKey(x), true) }), [list, getKey]);\r\n  const canSplit = useMemo(() => {\r\n    if (scope.list.length !== list.length) return false;\r\n    let idx = 0;\r\n    for (const item of list) {\r\n      if (getKey(item) !== getKey(scope.list[idx])) {\r\n        return false;\r\n      }\r\n      idx++;\r\n    }\r\n    return true;\r\n  }, [list]);\r\n  useMemo(() => {\r\n    scope.list = [...list];\r\n  }, [list]);\r\n  useEffect(() => {\r\n    if (!canSplit) return;\r\n    scope.subscribers.forEach(fn => fn(map.value));\r\n  }, [list]);\r\n  const subscribe = useCallback(subscriber => {\r\n    scope.subscribers.add(subscriber);\r\n    return () => scope.subscribers.delete(subscriber);\r\n  }, []);\r\n  const contextValue = useMemo(() => ({ subscribe, map: map.value }), []);\r\n  contextValue.map = map.value;\r\n  return SplitUpdateContext.Provider({\r\n    value: contextValue,\r\n    slot: SplitUpdateGuard({ canSplit, slot }),\r\n  });\r\n});\r\nconst SplitUpdateGuard = memo(\r\n  createComponent(({ slot }) => slot),\r\n  (_, nextProps) => nextProps.canSplit === false,\r\n);\r\nconst SplitUpdateContext = createContext(null);\r\nfunction useSplitUpdate(selector, detectChange) {\r\n  const { subscribe, map } = useContext(SplitUpdateContext);\r\n  const update = useUpdate({ forceSync: true });\r\n  const value = selector(map);\r\n  const detectedChange = detectChange(value);\r\n  const scope = useMemo(() => ({ detectedChange }), []);\r\n  useEffect(() => {\r\n    const unsubscribe = subscribe(map => {\r\n      const detectedChange = detectChange(selector(map));\r\n      if (!Object.is(scope.detectedChange, detectedChange)) {\r\n        update();\r\n      }\r\n      scope.detectedChange = detectedChange;\r\n    });\r\n    return () => unsubscribe();\r\n  }, []);\r\n  scope.detectedChange = detectedChange;\r\n  return value;\r\n}\r\nexport { SplitUpdate, useSplitUpdate };\r\n//# sourceMappingURL=split-update.js.map\r\n","import { detectIsNumber, detectIsString, detectIsFunction } from '../helpers';\r\nimport { View, Text } from '../view';\r\nfunction getChildren(children) {\r\n  children = children.map(x => (detectIsString(x) || detectIsNumber(x) ? Text(x.toString()) : x));\r\n  return children ? (Array.isArray(children) ? [...children] : [children]) : [];\r\n}\r\nfunction createElement(tag, props, ...children) {\r\n  if (detectIsString(tag)) {\r\n    return View({\r\n      ...props,\r\n      as: tag,\r\n      slot: getChildren(children),\r\n    });\r\n  }\r\n  if (detectIsFunction(tag)) {\r\n    let slot = getChildren(children);\r\n    slot = slot.length === 1 ? slot[0] : slot;\r\n    return tag({ ...props, slot });\r\n  }\r\n  return null;\r\n}\r\nexport { createElement, createElement as h };\r\n//# sourceMappingURL=element.js.map\r\n","import { createComponent, detectIsComponentFactory, useMemo } from '@dark-engine/core';\r\nconst $$portal = Symbol('portal');\r\nfunction createPortal(slot, container) {\r\n  if (!(container instanceof Element)) {\r\n    throw new Error(`[Dark]: createPortal receives only Element as container!`);\r\n  }\r\n  return Portal({ [$$portal]: container, slot });\r\n}\r\nconst Portal = createComponent(\r\n  ({ slot, ...rest }) => {\r\n    useMemo(() => (rest[$$portal].innerHTML = ''), []);\r\n    return slot;\r\n  },\r\n  { token: $$portal },\r\n);\r\nconst detectIsPortal = factory => detectIsComponentFactory(factory) && factory.token === $$portal;\r\nconst getPortalContainer = factory => (detectIsPortal(factory) ? factory.props[$$portal] : null);\r\nfunction unmountPortal(fiber) {\r\n  const container = getPortalContainer(fiber.instance);\r\n  if (container) {\r\n    container.innerHTML = '';\r\n  }\r\n}\r\nexport { createPortal, detectIsPortal, getPortalContainer, unmountPortal };\r\n//# sourceMappingURL=portal.js.map\r\n","import { detectIsFunction, eventsStore } from '@dark-engine/core';\r\nclass SyntheticEvent {\r\n  type = '';\r\n  sourceEvent = null;\r\n  target = null;\r\n  propagation = true;\r\n  constructor(options) {\r\n    this.type = options.sourceEvent.type;\r\n    this.sourceEvent = options.sourceEvent;\r\n    this.target = options.target;\r\n  }\r\n  stopPropagation() {\r\n    this.propagation = false;\r\n    this.sourceEvent.stopPropagation();\r\n  }\r\n  preventDefault() {\r\n    this.sourceEvent.preventDefault();\r\n  }\r\n  getPropagation() {\r\n    return this.propagation;\r\n  }\r\n}\r\nfunction delegateEvent(options) {\r\n  const { target, eventName, handler } = options;\r\n  const eventsMap = eventsStore.get();\r\n  const handlerMap = eventsMap.get(eventName);\r\n  if (!handlerMap) {\r\n    const rootHandler = event => {\r\n      const fireEvent = eventsMap.get(eventName).get(event.target);\r\n      const target = event.target;\r\n      let syntheticEvent = null;\r\n      if (detectIsFunction(fireEvent)) {\r\n        syntheticEvent = new SyntheticEvent({\r\n          sourceEvent: event,\r\n          target,\r\n        });\r\n        fireEvent(syntheticEvent);\r\n      }\r\n      if (syntheticEvent ? syntheticEvent.getPropagation() : target.parentElement) {\r\n        target.parentElement.dispatchEvent(new event.constructor(event.type, event));\r\n      }\r\n    };\r\n    eventsMap.set(eventName, new WeakMap([[target, handler]]));\r\n    document.addEventListener(eventName, rootHandler, true);\r\n    eventsStore.addUnsubscriber(() => document.removeEventListener(eventName, rootHandler, true));\r\n  } else {\r\n    handlerMap.set(target, handler);\r\n  }\r\n}\r\nconst detectIsEvent = attrName => attrName.startsWith('on');\r\nconst getEventName = attrName => attrName.slice(2, attrName.length).toLowerCase();\r\nexport { SyntheticEvent, delegateEvent, detectIsEvent, getEventName };\r\n//# sourceMappingURL=events.js.map\r\n","import {\r\n  ATTR_KEY,\r\n  ATTR_REF,\r\n  ATTR_FLAG,\r\n  EffectTag,\r\n  detectIsFunction,\r\n  detectIsUndefined,\r\n  detectIsBoolean,\r\n  keyBy,\r\n  NodeType,\r\n  detectIsVirtualNode,\r\n  detectIsTagVirtualNode,\r\n  detectIsTextVirtualNode,\r\n  detectIsMutableRef,\r\n  walkFiber,\r\n} from '@dark-engine/core';\r\nimport { detectIsPortal, getPortalContainer } from '../portal';\r\nimport { delegateEvent, detectIsEvent, getEventName } from '../events';\r\nimport { SVG_TAG_NAMES, VOID_TAG_NAMES } from '../constants';\r\nconst attrBlackListMap = {\r\n  [ATTR_KEY]: true,\r\n  [ATTR_REF]: true,\r\n  [ATTR_FLAG]: true,\r\n};\r\nlet fragmentsMap = new Map();\r\nlet moves = [];\r\nlet trackUpdate = null;\r\nconst svgTagNamesMap = keyBy(SVG_TAG_NAMES.split(','), x => x);\r\nconst voidTagNamesMap = keyBy(VOID_TAG_NAMES.split(','), x => x);\r\nconst createNativeElementMap = {\r\n  [NodeType.TAG]: vNode => {\r\n    const tagNode = vNode;\r\n    const node = detectIsSvgElement(tagNode.name)\r\n      ? document.createElementNS('http://www.w3.org/2000/svg', tagNode.name)\r\n      : document.createElement(tagNode.name);\r\n    return node;\r\n  },\r\n  [NodeType.TEXT]: vNode => {\r\n    const textNode = vNode;\r\n    const node = document.createTextNode(textNode.value);\r\n    return node;\r\n  },\r\n  [NodeType.COMMENT]: vNode => {\r\n    const commentNode = vNode;\r\n    const node = document.createComment(commentNode.value);\r\n    return node;\r\n  },\r\n};\r\nfunction createNativeElement(vNode) {\r\n  return createNativeElementMap[vNode.type](vNode);\r\n}\r\nfunction detectIsSvgElement(tagName) {\r\n  return Boolean(svgTagNamesMap[tagName]);\r\n}\r\nfunction detectIsVoidElement(tagName) {\r\n  return Boolean(voidTagNamesMap[tagName]);\r\n}\r\nfunction applyRef(ref, element) {\r\n  if (detectIsFunction(ref)) {\r\n    ref(element);\r\n  } else if (detectIsMutableRef(ref)) {\r\n    ref.current = element;\r\n  }\r\n}\r\nfunction addAttributes(element, vNode) {\r\n  if (!detectIsTagVirtualNode(vNode)) return;\r\n  const attrNames = Object.keys(vNode.attrs);\r\n  for (const attrName of attrNames) {\r\n    const attrValue = vNode.attrs[attrName];\r\n    if (attrName === ATTR_REF) {\r\n      applyRef(attrValue, element);\r\n      continue;\r\n    }\r\n    if (detectIsFunction(attrValue)) {\r\n      if (detectIsEvent(attrName)) {\r\n        delegateEvent({\r\n          target: element,\r\n          handler: attrValue,\r\n          eventName: getEventName(attrName),\r\n        });\r\n      }\r\n    } else if (!detectIsUndefined(attrValue) && !attrBlackListMap[attrName]) {\r\n      const stop = patchProperties({\r\n        tagName: vNode.name,\r\n        attrValue,\r\n        attrName,\r\n        element,\r\n      });\r\n      !stop && element.setAttribute(attrName, attrValue);\r\n    }\r\n  }\r\n}\r\nfunction updateAttributes(element, vNode, nextVNode) {\r\n  const attrNames = new Set([...Object.keys(vNode.attrs), ...Object.keys(nextVNode.attrs)]);\r\n  for (const attrName of attrNames) {\r\n    const prevAttrValue = vNode.attrs[attrName];\r\n    const nextAttrValue = nextVNode.attrs[attrName];\r\n    if (attrName === ATTR_REF) {\r\n      applyRef(prevAttrValue, element);\r\n      continue;\r\n    }\r\n    if (!detectIsUndefined(nextAttrValue)) {\r\n      if (detectIsFunction(prevAttrValue)) {\r\n        if (detectIsEvent(attrName) && prevAttrValue !== nextAttrValue) {\r\n          delegateEvent({\r\n            target: element,\r\n            handler: nextAttrValue,\r\n            eventName: getEventName(attrName),\r\n          });\r\n        }\r\n      } else if (!attrBlackListMap[attrName] && prevAttrValue !== nextAttrValue) {\r\n        const stop = patchProperties({\r\n          tagName: nextVNode.name,\r\n          attrValue: nextAttrValue,\r\n          attrName,\r\n          element,\r\n        });\r\n        !stop && element.setAttribute(attrName, nextAttrValue);\r\n      }\r\n    } else {\r\n      element.removeAttribute(attrName);\r\n    }\r\n  }\r\n}\r\nfunction patchProperties(options) {\r\n  const { tagName, element, attrName, attrValue } = options;\r\n  const fn = patchPropertiesSpecialCasesMap[tagName];\r\n  let stop = fn ? fn(element, attrName, attrValue) : false;\r\n  if (canSetProperty(Object.getPrototypeOf(element), attrName)) {\r\n    element[attrName] = attrValue;\r\n  }\r\n  if (!stop && detectIsBoolean(attrValue)) {\r\n    stop = !attrName.includes('-');\r\n  }\r\n  return stop;\r\n}\r\nfunction canSetProperty(prototype, key) {\r\n  return prototype.hasOwnProperty(key) && Boolean(Object.getOwnPropertyDescriptor(prototype, key)?.set);\r\n}\r\nconst patchPropertiesSpecialCasesMap = {\r\n  input: (element, attrName, attrValue) => {\r\n    if (attrName === 'value' && detectIsBoolean(attrValue)) {\r\n      element.checked = attrValue;\r\n    } else if (attrName === 'autoFocus') {\r\n      element.autofocus = Boolean(attrValue);\r\n    }\r\n    return false;\r\n  },\r\n  textarea: (element, attrName, attrValue) => {\r\n    if (attrName === 'value') {\r\n      element.innerHTML = String(attrValue);\r\n      return true;\r\n    }\r\n    return false;\r\n  },\r\n};\r\nfunction getParentFiberWithNativeElement(fiber) {\r\n  let nextFiber = fiber;\r\n  while (nextFiber) {\r\n    nextFiber = nextFiber.parent;\r\n    if (detectIsPortal(nextFiber.instance)) {\r\n      nextFiber.nativeElement = getPortalContainer(nextFiber.instance);\r\n    }\r\n    if (nextFiber.nativeElement) return nextFiber;\r\n  }\r\n  return nextFiber;\r\n}\r\nfunction append(fiber, parentElement) {\r\n  const { fragment } = fragmentsMap.get(parentElement) || {\r\n    fragment: document.createDocumentFragment(),\r\n    callback: () => {},\r\n  };\r\n  fragmentsMap.set(parentElement, {\r\n    fragment,\r\n    callback: () => {\r\n      parentElement.appendChild(fragment);\r\n    },\r\n  });\r\n  fragment.appendChild(fiber.nativeElement);\r\n}\r\nfunction insert(fiber, parentElement, idx) {\r\n  parentElement.insertBefore(fiber.nativeElement, parentElement.childNodes[idx]);\r\n}\r\nfunction commitCreation(fiber) {\r\n  const parentFiber = getParentFiberWithNativeElement(fiber);\r\n  const parentElement = parentFiber.nativeElement;\r\n  const childNodes = parentElement.childNodes;\r\n  const hasNoChildNodes = childNodes.length === 0;\r\n  const idx = hasNoChildNodes ? 0 : fiber.elementIdx;\r\n  if (hasNoChildNodes || idx > childNodes.length - 1) {\r\n    const vNode = parentFiber.instance;\r\n    !detectIsVoidElement(vNode.name) && append(fiber, parentElement);\r\n  } else {\r\n    insert(fiber, parentElement, idx);\r\n  }\r\n  addAttributes(fiber.nativeElement, fiber.instance);\r\n}\r\nfunction commitUpdate(fiber) {\r\n  const element = fiber.nativeElement;\r\n  const prevInstance = fiber.alternate.instance;\r\n  const nextInstance = fiber.instance;\r\n  if (\r\n    detectIsTextVirtualNode(prevInstance) &&\r\n    detectIsTextVirtualNode(nextInstance) &&\r\n    prevInstance.value !== nextInstance.value\r\n  ) {\r\n    return (element.textContent = nextInstance.value);\r\n  }\r\n  if (detectIsTagVirtualNode(prevInstance) && detectIsTagVirtualNode(nextInstance)) {\r\n    return updateAttributes(element, prevInstance, nextInstance);\r\n  }\r\n}\r\nfunction commitDeletion(fiber) {\r\n  const parentFiber = getParentFiberWithNativeElement(fiber);\r\n  walkFiber(fiber, ({ nextFiber, isReturn, resetIsDeepWalking, stop }) => {\r\n    if (nextFiber === fiber.nextSibling || nextFiber === fiber.parent) {\r\n      return stop();\r\n    }\r\n    if (!isReturn && nextFiber.nativeElement) {\r\n      !detectIsPortal(nextFiber.instance) && parentFiber.nativeElement.removeChild(nextFiber.nativeElement);\r\n      return resetIsDeepWalking();\r\n    }\r\n  });\r\n}\r\nfunction move(fiber) {\r\n  const sourceNodes = collectElements(fiber);\r\n  const sourceNode = sourceNodes[0];\r\n  const parentElement = sourceNode.parentElement;\r\n  const sourceFragment = new DocumentFragment();\r\n  const elementIdx = fiber.elementIdx;\r\n  let idx = 0;\r\n  const move = () => {\r\n    for (let i = 1; i < sourceNodes.length; i++) {\r\n      parentElement.removeChild(parentElement.childNodes[elementIdx + 1]);\r\n    }\r\n    parentElement.replaceChild(sourceFragment, parentElement.childNodes[elementIdx]);\r\n  };\r\n  for (const node of sourceNodes) {\r\n    parentElement.insertBefore(document.createComment(`${elementIdx}:${idx}`), node);\r\n    sourceFragment.appendChild(node);\r\n    idx++;\r\n  }\r\n  moves.push(move);\r\n}\r\nfunction collectElements(fiber) {\r\n  const store = [];\r\n  walkFiber(fiber, ({ nextFiber, isReturn, resetIsDeepWalking, stop }) => {\r\n    if (nextFiber === fiber.nextSibling || nextFiber === fiber.parent) {\r\n      return stop();\r\n    }\r\n    if (!isReturn && nextFiber.nativeElement) {\r\n      !detectIsPortal(nextFiber.instance) && store.push(nextFiber.nativeElement);\r\n      return resetIsDeepWalking();\r\n    }\r\n  });\r\n  return store;\r\n}\r\nconst applyCommitMap = {\r\n  [EffectTag.CREATE]: fiber => {\r\n    if (fiber.nativeElement === null) return;\r\n    trackUpdate && trackUpdate(fiber.nativeElement);\r\n    commitCreation(fiber);\r\n  },\r\n  [EffectTag.UPDATE]: fiber => {\r\n    if (fiber.move) {\r\n      move(fiber);\r\n      fiber.move = false;\r\n    }\r\n    if (\r\n      fiber.nativeElement === null ||\r\n      !detectIsVirtualNode(fiber.alternate.instance) ||\r\n      !detectIsVirtualNode(fiber.instance)\r\n    ) {\r\n      return;\r\n    }\r\n    trackUpdate && trackUpdate(fiber.nativeElement);\r\n    commitUpdate(fiber);\r\n  },\r\n  [EffectTag.DELETE]: fiber => commitDeletion(fiber),\r\n  [EffectTag.SKIP]: () => {},\r\n};\r\nfunction applyCommit(fiber) {\r\n  applyCommitMap[fiber.effectTag](fiber);\r\n}\r\nfunction finishCommitWork() {\r\n  for (const { callback } of fragmentsMap.values()) {\r\n    callback();\r\n  }\r\n  for (const move of moves) {\r\n    move();\r\n  }\r\n  fragmentsMap = new Map();\r\n  moves = [];\r\n}\r\nfunction setTrackUpdate(fn) {\r\n  trackUpdate = fn;\r\n}\r\nexport { createNativeElement, applyCommit, finishCommitWork, setTrackUpdate };\r\n//# sourceMappingURL=dom.js.map\r\n","export const SVG_TAG_NAMES =\r\n  'svg,animate,animateMotion,animateTransform,circle,clipPath,defs,desc,ellipse,feBlend,feColorMatrix,feComponentTransfer,feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,feDistantLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,foreignObject,g,image,line,linearGradient,marker,mask,metadata,mpath,path,pattern,polygon,polyline,radialGradient,rect,stop,switch,symbol,text,textPath,tspan,use,view';\r\nexport const VOID_TAG_NAMES = 'area,base,br,col,embed,hr,img,input,link,meta,param,source,track,wbr';\r\n//# sourceMappingURL=constants.js.map\r\n","import { getTime, workLoop, wipRootStore, TaskPriority } from '@dark-engine/core';\r\nconst queueByPriority = {\r\n  animations: [],\r\n  hight: [],\r\n  normal: [],\r\n  low1: [],\r\n  low2: [],\r\n};\r\nconst YEILD_INTERVAL = 4;\r\nconst MAX_LOW_PRIORITY_TASKS_LIMIT = 100000;\r\nlet scheduledCallback = null;\r\nlet deadline = 0;\r\nlet isMessageLoopRunning = false;\r\nlet currentTask = null;\r\nclass Task {\r\n  static nextTaskId = 0;\r\n  id;\r\n  time;\r\n  timeoutMs;\r\n  priority;\r\n  forceSync;\r\n  callback;\r\n  constructor(options) {\r\n    this.id = ++Task.nextTaskId;\r\n    this.time = options.time;\r\n    this.timeoutMs = options.timeoutMs;\r\n    this.priority = options.priority;\r\n    this.forceSync = options.forceSync;\r\n    this.callback = options.callback;\r\n  }\r\n}\r\nconst shouldYeildToHost = () => getTime() >= deadline;\r\nfunction scheduleCallback(callback, options) {\r\n  const { priority = TaskPriority.NORMAL, timeoutMs = 0, forceSync = false } = options || {};\r\n  const task = new Task({ time: getTime(), timeoutMs, priority, forceSync, callback });\r\n  const map = {\r\n    [TaskPriority.ANIMATION]: () => queueByPriority.animations.push(task),\r\n    [TaskPriority.HIGH]: () => queueByPriority.hight.push(task),\r\n    [TaskPriority.NORMAL]: () => queueByPriority.normal.push(task),\r\n    [TaskPriority.LOW]: () => (task.timeoutMs > 0 ? queueByPriority.low2.push(task) : queueByPriority.low1.push(task)),\r\n  };\r\n  map[task.priority]();\r\n  executeTasks();\r\n}\r\nfunction pick(queue) {\r\n  if (!queue.length) return false;\r\n  currentTask = queue.shift();\r\n  const isAnimation = currentTask.priority === TaskPriority.ANIMATION;\r\n  currentTask.callback();\r\n  if (currentTask.forceSync || isAnimation) {\r\n    requestCallbackSync(workLoop);\r\n  } else {\r\n    requestCallback(workLoop);\r\n  }\r\n  return true;\r\n}\r\nfunction executeTasks() {\r\n  const isBusy = Boolean(wipRootStore.get());\r\n  if (!isBusy) {\r\n    checkOverdueTasks() ||\r\n      gc() ||\r\n      pick(queueByPriority.animations) ||\r\n      pick(queueByPriority.hight) ||\r\n      pick(queueByPriority.normal) ||\r\n      requestIdleCallback(() => pick(queueByPriority.low1) || pick(queueByPriority.low2));\r\n  }\r\n}\r\nfunction gc() {\r\n  if (queueByPriority.low1.length > MAX_LOW_PRIORITY_TASKS_LIMIT) {\r\n    queueByPriority.low1 = [];\r\n  }\r\n  return false;\r\n}\r\nfunction checkOverdueTasks() {\r\n  const [task] = queueByPriority.low2;\r\n  if (task && getTime() - task.time > task.timeoutMs) {\r\n    pick(queueByPriority.low2);\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\nfunction performWorkUntilDeadline() {\r\n  if (scheduledCallback) {\r\n    deadline = getTime() + YEILD_INTERVAL;\r\n    try {\r\n      const hasMoreWork = scheduledCallback();\r\n      if (!hasMoreWork) {\r\n        currentTask = null;\r\n        isMessageLoopRunning = false;\r\n        scheduledCallback = null;\r\n        executeTasks();\r\n      } else {\r\n        port.postMessage(null);\r\n      }\r\n    } catch (error) {\r\n      port.postMessage(null);\r\n      throw error;\r\n    }\r\n  } else {\r\n    isMessageLoopRunning = false;\r\n  }\r\n}\r\nfunction requestCallback(callback) {\r\n  if (process.env.NODE_ENV === 'test') {\r\n    return requestCallbackSync(callback);\r\n  }\r\n  scheduledCallback = callback;\r\n  if (!isMessageLoopRunning) {\r\n    isMessageLoopRunning = true;\r\n    port.postMessage(null);\r\n  }\r\n}\r\nfunction requestCallbackSync(callback) {\r\n  while (callback()) {}\r\n  executeTasks();\r\n  currentTask = null;\r\n}\r\nlet channel = null;\r\nlet port = null;\r\nfunction setup() {\r\n  if (process.env.NODE_ENV === 'test') {\r\n    return;\r\n  }\r\n  channel = new MessageChannel();\r\n  port = channel.port2;\r\n  channel.port1.onmessage = performWorkUntilDeadline;\r\n}\r\nsetup();\r\nexport { shouldYeildToHost, scheduleCallback };\r\n//# sourceMappingURL=scheduler.js.map\r\n","import {\r\n  ROOT,\r\n  Fiber,\r\n  EffectTag,\r\n  platform,\r\n  flatten,\r\n  detectIsUndefined,\r\n  TagVirtualNode,\r\n  rootStore,\r\n  wipRootStore,\r\n  currentRootStore,\r\n  nextUnitOfWorkStore,\r\n  fiberMountStore,\r\n  TaskPriority,\r\n  createReplacer,\r\n  isInsertionEffectsZone,\r\n  isLayoutEffectsZone,\r\n} from '@dark-engine/core';\r\nimport { createNativeElement, applyCommit, finishCommitWork } from '../dom';\r\nimport { detectIsPortal, unmountPortal } from '../portal';\r\nimport { scheduleCallback, shouldYeildToHost } from '../scheduler';\r\nplatform.createNativeElement = createNativeElement;\r\nplatform.requestAnimationFrame = requestAnimationFrame.bind(this);\r\nplatform.cancelAnimationFrame = cancelAnimationFrame.bind(this);\r\nplatform.scheduleCallback = scheduleCallback;\r\nplatform.shouldYeildToHost = shouldYeildToHost;\r\nplatform.applyCommit = applyCommit;\r\nplatform.finishCommitWork = finishCommitWork;\r\nplatform.detectIsPortal = detectIsPortal;\r\nplatform.unmountPortal = unmountPortal;\r\nconst roots = new Map();\r\nfunction render(element, container) {\r\n  if (!(container instanceof Element)) {\r\n    throw new Error(`[Dark]: render receives only Element as container!`);\r\n  }\r\n  const isMounted = !detectIsUndefined(roots.get(container));\r\n  let rootId = null;\r\n  if (!isMounted) {\r\n    rootId = roots.size;\r\n    roots.set(container, rootId);\r\n    container.innerHTML = '';\r\n  } else {\r\n    rootId = roots.get(container);\r\n  }\r\n  if (isInsertionEffectsZone.get(rootId)) return;\r\n  const callback = () => {\r\n    rootStore.set(rootId);\r\n    const currentRoot = currentRootStore.get();\r\n    const fiber = new Fiber().mutate({\r\n      nativeElement: container,\r\n      instance: new TagVirtualNode({\r\n        name: ROOT,\r\n        children: flatten([element || createReplacer()]),\r\n      }),\r\n      alternate: currentRoot,\r\n      effectTag: isMounted ? EffectTag.UPDATE : EffectTag.CREATE,\r\n    });\r\n    currentRoot && (currentRoot.alternate = null);\r\n    fiberMountStore.reset();\r\n    wipRootStore.set(fiber);\r\n    nextUnitOfWorkStore.set(fiber);\r\n  };\r\n  platform.scheduleCallback(callback, {\r\n    priority: TaskPriority.NORMAL,\r\n    forceSync: isLayoutEffectsZone.get(),\r\n  });\r\n}\r\nexport { render, roots };\r\n//# sourceMappingURL=render.js.map\r\n","import {\r\n  h,\r\n  View,\r\n  Text,\r\n  Fragment,\r\n  createComponent,\r\n  memo,\r\n  useCallback,\r\n  SplitUpdate,\r\n  useSplitUpdate,\r\n} from '@dark-engine/core';\r\nimport { createRoot } from '@dark-engine/platform-browser';\r\n\r\nconst div = (props = {}) => View({ ...props, as: 'div' });\r\nconst button = (props = {}) => View({ ...props, as: 'button' });\r\n\r\nconst createMeasurer = () => {\r\n  let startTime;\r\n  let lastMeasureName: string;\r\n  const start = (name: string) => {\r\n    startTime = performance.now();\r\n    lastMeasureName = name;\r\n  };\r\n  const stop = () => {\r\n    const last = lastMeasureName;\r\n\r\n    if (lastMeasureName) {\r\n      setTimeout(() => {\r\n        lastMeasureName = null;\r\n        const stopTime = performance.now();\r\n        const diff = stopTime - startTime;\r\n\r\n        console.log(`${last}: ${diff}`);\r\n      });\r\n    }\r\n  };\r\n\r\n  return {\r\n    start,\r\n    stop,\r\n  };\r\n};\r\n\r\nconst measurer = createMeasurer();\r\n\r\nlet nextId = 0;\r\nconst buildData = (count, prefix = '') => {\r\n  return Array(count)\r\n    .fill(0)\r\n    .map(() => ({\r\n      id: ++nextId,\r\n      name: `item: ${nextId} ${prefix}`,\r\n      selected: false,\r\n    }));\r\n};\r\n\r\ntype ListItem = { id: number; name: string; selected: boolean };\r\n\r\ntype List = Array<ListItem>;\r\n\r\ntype State = {\r\n  list: List;\r\n};\r\n\r\nconst state: State = {\r\n  list: [],\r\n};\r\n\r\ntype HeaderProps = {\r\n  onCreate: () => void;\r\n  onPrepend: () => void;\r\n  onAppend: () => void;\r\n  onInsertDifferent: () => void;\r\n  onUpdateAll: () => void;\r\n  onSwap: () => void;\r\n  onClear: () => void;\r\n};\r\n\r\nconst Header = createComponent<HeaderProps>(\r\n  ({ onCreate, onPrepend, onAppend, onInsertDifferent, onUpdateAll, onSwap, onClear }) => {\r\n    return div({\r\n      style:\r\n        'width: 100%; height: 64px; background-color: blueviolet; display: flex; align-items: center; padding: 16px;',\r\n      slot: [\r\n        button({\r\n          slot: Text('create 10000 rows'),\r\n          onClick: onCreate,\r\n        }),\r\n        button({\r\n          slot: Text('Prepend 1000 rows'),\r\n          onClick: onPrepend,\r\n        }),\r\n        button({\r\n          slot: Text('Append 1000 rows'),\r\n          onClick: onAppend,\r\n        }),\r\n        button({\r\n          slot: Text('insert different'),\r\n          onClick: onInsertDifferent,\r\n        }),\r\n        button({\r\n          slot: Text('update every 10th row'),\r\n          onClick: onUpdateAll,\r\n        }),\r\n        button({\r\n          slot: Text('swap rows'),\r\n          onClick: onSwap,\r\n        }),\r\n        button({\r\n          slot: Text('clear rows'),\r\n          onClick: onClear,\r\n        }),\r\n        button({\r\n          slot: Text('unmount app'),\r\n          onClick: () => {\r\n            root.unmount();\r\n          },\r\n        }),\r\n      ],\r\n    });\r\n  },\r\n);\r\n\r\nconst MemoHeader = memo<HeaderProps>(Header);\r\n\r\ntype RowProps = {\r\n  id: number;\r\n  onRemove: (id: number) => void;\r\n  onHighlight: (id: number) => void;\r\n};\r\n\r\nconst Row = createComponent<RowProps>(({ id, onRemove, onHighlight }) => {\r\n  const { name, selected } = useSplitUpdate<ListItem>(\r\n    map => map[id],\r\n    x => `${x.name}:${x.selected}`,\r\n  );\r\n  const handleRemove = useCallback(() => onRemove(id), []);\r\n  const handleHighlight = useCallback(() => onHighlight(id), []);\r\n\r\n  return (\r\n    <tr class={selected ? 'selected' : undefined}>\r\n      <td class='cell'>{name}</td>\r\n      <td class='cell'>qqq</td>\r\n      <td class='cell'>xxx</td>\r\n      <td class='cell'>\r\n        <button onClick={handleRemove}>remove</button>\r\n        <button onClick={handleHighlight}>highlight</button>\r\n      </td>\r\n    </tr>\r\n  );\r\n});\r\n\r\nconst MemoRow = memo<RowProps>(Row);\r\n\r\ntype ListProps = {\r\n  items: List;\r\n  onRemove: (id: number) => void;\r\n  onHighlight: (id: number) => void;\r\n};\r\n\r\nconst List = createComponent<ListProps>(({ items, onRemove, onHighlight }) => {\r\n  return (\r\n    <table class='table'>\r\n      <tbody>\r\n        {items.map(item => {\r\n          return (\r\n            <MemoRow\r\n              key={item.id}\r\n              id={item.id}\r\n              onRemove={onRemove}\r\n              onHighlight={onHighlight}\r\n            />\r\n          );\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n});\r\n\r\nconst MemoList = memo(List);\r\n\r\nconst Bench = createComponent(() => {\r\n  const handleCreate = useCallback(() => {\r\n    state.list = buildData(10000);\r\n    measurer.start('create');\r\n    forceUpdate();\r\n    measurer.stop();\r\n  }, []);\r\n  const handlePrepend = useCallback(() => {\r\n    state.list.unshift(...buildData(1000, '!!!'));\r\n    state.list = [...state.list];\r\n    measurer.start('prepend');\r\n    forceUpdate();\r\n    measurer.stop();\r\n  }, []);\r\n  const handleAppend = useCallback(() => {\r\n    state.list.push(...buildData(1000, '!!!'));\r\n    state.list = [...state.list];\r\n    measurer.start('append');\r\n    forceUpdate();\r\n    measurer.stop();\r\n  }, []);\r\n  const handleInsertDifferent = useCallback(() => {\r\n    const [item1, item2, item3, ...rest] = state.list;\r\n\r\n    state.list = [...buildData(5, '***'), item1, item2, item3, ...buildData(2, '***'), ...rest].filter(Boolean);\r\n    measurer.start('insert different');\r\n    forceUpdate();\r\n    measurer.stop();\r\n  }, []);\r\n  const handleUpdateAll = useCallback(() => {\r\n    state.list = state.list.map((x, idx) => ({ ...x, name: (idx + 1) % 10 === 0 ? x.name + '!!!' : x.name }));\r\n    measurer.start('update every 10th');\r\n    forceUpdate();\r\n    measurer.stop();\r\n  }, []);\r\n  const handleRemove = useCallback(id => {\r\n    state.list = state.list.filter(x => x.id !== id);\r\n    measurer.start('remove');\r\n    forceUpdate();\r\n    measurer.stop();\r\n  }, []);\r\n  const handleHightlight = useCallback(id => {\r\n    const idx = state.list.findIndex(x => x.id === id);\r\n    state.list[idx].selected = !state.list[idx].selected;\r\n    state.list = [...state.list];\r\n    measurer.start('highlight');\r\n    forceUpdate();\r\n    measurer.stop();\r\n  }, []);\r\n  const handleSwap = useCallback(() => {\r\n    if (state.list.length === 0) return;\r\n    const temp = state.list[1];\r\n    state.list[1] = state.list[state.list.length - 2];\r\n    state.list[state.list.length - 2] = temp;\r\n    state.list = [...state.list];\r\n    measurer.start('swap');\r\n    forceUpdate();\r\n    measurer.stop();\r\n  }, []);\r\n  const handleClear = useCallback(() => {\r\n    state.list = [];\r\n    measurer.start('clear');\r\n    forceUpdate();\r\n    measurer.stop();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <MemoHeader\r\n        onCreate={handleCreate}\r\n        onPrepend={handlePrepend}\r\n        onAppend={handleAppend}\r\n        onInsertDifferent={handleInsertDifferent}\r\n        onUpdateAll={handleUpdateAll}\r\n        onSwap={handleSwap}\r\n        onClear={handleClear}\r\n      />\r\n      <SplitUpdate list={state.list} getKey={getKey}>\r\n        <MemoList items={state.list} onRemove={handleRemove} onHighlight={handleHightlight} />\r\n      </SplitUpdate>\r\n    </>\r\n  );\r\n});\r\n\r\nconst getKey = (x: ListItem) => x.id;\r\n\r\nconst root = createRoot(document.getElementById('root'));\r\n\r\nfunction forceUpdate() {\r\n  root.render(<Bench />);\r\n}\r\n\r\nforceUpdate();\r\n","import { unmountRoot } from '@dark-engine/core';\r\nimport { render, roots } from '../render';\r\nfunction createRoot(container) {\r\n  return {\r\n    render: element => render(element, container),\r\n    unmount: () => {\r\n      const rootId = roots.get(container);\r\n      unmountRoot(rootId, () => {\r\n        roots.delete(container);\r\n        container.innerHTML = '';\r\n      });\r\n    },\r\n  };\r\n}\r\nexport { createRoot };\r\n//# sourceMappingURL=create-root.js.map\r\n"],"names":["TYPE","ATTR_KEY","ATTR_REF","ATTR_FLAG","TaskPriority","Flag","detectIsFunction","o","detectIsUndefined","detectIsNumber","detectIsString","detectIsBoolean","detectIsArray","Array","isArray","detectIsNull","detectIsEmpty","getTime","Date","now","dummyFn","flatten","source","list","levelMap","idx","level","item","length","push","keyBy","fn","value","reduce","acc","x","detectIsDepsDifferent","deps","prevDeps","i","NodeType","$$virtualNode","Symbol","VirtualNode","type","constructor","options","this","TagVirtualNode","TAG","name","isVoid","attrs","children","super","TextVirtualNode","TEXT","text","CommentVirtualNode","COMMENT","detectIsVirtualNode","vNode","detectIsTagVirtualNode","detectIsTextVirtualNode","detectIsVirtualNodeFactory","factory","createReplacer","View","def","as","slot","rest","key","flag","Text","from","defaultOptions","displayName","defaultProps","token","ComponentFactory","props","ref","shouldUpdate","createComponent","computedOptions","mprops","detectIsComponentFactory","$$memo","defaultShouldUpdate","nextProps","keys","Object","detectIsMemo","memo","component","forwardRef","rootId","stores","Map","Store","wipRoot","currentRoot","nextUnitOfWork","events","unsubscribers","deletions","Set","fiberMount","navigation","isDeepWalking","componentFiber","effects","layoutEffects","insertionEffects","isLayoutEffectsZone","isInserionEffectsZone","isUpdateHookZone","isBatchZone","trackUpdate","rootStore","id","get","set","getRootId","store","wipRootStore","fiber","currentRootStore","nextUnitOfWorkStore","currentFiberStore","deletionsStore","add","fiberMountStore","effectsStore","reset","effect","layoutEffectsStore","insertionEffectsStore","isInsertionEffectsZone","$$useEffect","useEffect","hasEffects","dropEffects","createEffect","hook","values","runEffect","undefined","cleanup","some","$$fragment","Fragment","Memo","processValue","getValue","isDepsDifferent","check","wrap","useMemo","hookValue","computedGetValue","platform","createNativeElement","Error","requestAnimationFrame","cancelAnimationFrame","scheduleCallback","shouldYeildToHost","applyCommit","finishCommitWork","detectIsPortal","unmountPortal","EffectTag","cloneTagMap","CREATE","SKIP","$$useLayoutEffect","useLayoutEffect","hasLayoutEffects","dropLayoutEffects","$$useInsertionEffect","useInsertionEffect","hasInsertionEffects","dropInsertionEffects","walkFiber","onLoop","nextFiber","isReturn","isStopped","visitedMap","detectCanVisit","resetIsDeepWalking","stop","child","newFiber","nextSibling","parent","unmountFiber","insertionEffectHost","layoutEffectHost","effectHost","portalHost","instance","Fiber","nativeElement","alternate","move","effectTag","provider","childrenCount","childrenElementsCount","marker","isUsed","elementIdx","batched","catchException","static","nextId","mutate","markEffectHost","markLayoutEffectHost","markInsertionEffectHost","markPortalHost","incrementChildrenElementsCount","count","force","fromUpdate","wipFiber","setError","error","workLoop","shouldYield","hasMoreWork","Boolean","performUnitOfWork","onComplete","forEach","diff","parentFiber","getParentFiberWithNativeElement","isRight","syncElementIndices","setTimeout","skip","commitChanges","hasChildrenProp","fiber$","instance$","performChild","fiber$$","performSibling","nextLevel","getHook","pertformInstance","performAlternate","performFiber","performMemo","parentInstance","childrenIdx","hasAlternate","isSameKeys","getElementKey","isUpdate","getInstanceType","UPDATE","insertToFiber","DELETE","createConditionalFiber","alternateType","isSameType","getVirtualNodeFactoryFlag","getElementFlag","hasNoMovesFlag","HAS_NO_MOVES","prevKeys","nextKeys","prevKeysMap","nextKeysMap","keyedFibersMap","prevKey","createIndexKey","nextKey","extractKeys","result","size","Math","max","p","n","prevKeyFiber","nextKeyFiber","has","prevFactory","nextFactory","prevProps","deep","performedInstance","elements","splice","mountInstance","isComponentFactory","detectIsFragment","err","args","console","supportConditional","getVirtualNodeFactoryKey","element","prevInstance","nextInstance","detectIsSameComponentFactoryTypesWithSameKeys","useUpdate","scope","onStart","callback","forceStart","createUpdateCallback","timeoutMs","forceSync","window","clearTimeout","useContext","context","defaultValue","getProvider","update","hasProvider","unsubscribe","subscribe","is","useCallback","SplitUpdate","getKey","subscribers","map","canSplit","subscriber","delete","contextValue","SplitUpdateContext","Provider","SplitUpdateGuard","_","Consumer","providerValue","createProvider","createConsumer","createContext","getChildren","toString","createElement","tag","$$portal","innerHTML","getPortalContainer","SyntheticEvent","sourceEvent","target","propagation","stopPropagation","preventDefault","getPropagation","delegateEvent","eventName","handler","eventsMap","handlerMap","rootHandler","event","fireEvent","syntheticEvent","parentElement","dispatchEvent","WeakMap","document","addEventListener","removeEventListener","detectIsEvent","attrName","startsWith","getEventName","slice","toLowerCase","attrBlackListMap","fragmentsMap","moves","svgTagNamesMap","split","voidTagNamesMap","createNativeElementMap","tagNode","tagName","createElementNS","textNode","createTextNode","commentNode","createComment","applyRef","mutableRef","hasOwnProperty","detectIsMutableRef","current","patchProperties","attrValue","patchPropertiesSpecialCasesMap","prototype","getPrototypeOf","getOwnPropertyDescriptor","includes","input","checked","autofocus","textarea","String","applyCommitMap","childNodes","hasNoChildNodes","fragment","createDocumentFragment","appendChild","append","insertBefore","insert","attrNames","setAttribute","addAttributes","commitCreation","sourceNodes","collectElements","sourceFragment","DocumentFragment","node","removeChild","replaceChild","textContent","nextVNode","prevAttrValue","nextAttrValue","removeAttribute","updateAttributes","commitUpdate","commitDeletion","queueByPriority","animations","hight","normal","low1","low2","scheduledCallback","deadline","isMessageLoopRunning","currentTask","Task","time","priority","nextTaskId","pick","queue","shift","isAnimation","ANIMATION","executeTasks","requestCallbackSync","port","postMessage","task","checkOverdueTasks","requestIdleCallback","channel","MessageChannel","port2","port1","onmessage","bind","NORMAL","HIGH","LOW","container","roots","measurer","startTime","lastMeasureName","start","performance","last","log","createMeasurer","buildData","prefix","fill","selected","state","MemoHeader","onCreate","onPrepend","onAppend","onInsertDifferent","onUpdateAll","onSwap","onClear","div","style","onClick","root","unmount","MemoRow","onRemove","onHighlight","selector","detectChange","detectedChange","useSplitUpdate","handleRemove","handleHighlight","class","MemoList","items","Bench","handleCreate","forceUpdate","handlePrepend","unshift","handleAppend","handleInsertDifferent","item1","item2","item3","filter","handleUpdateAll","handleHightlight","findIndex","handleSwap","temp","handleClear","getElementById","render","Element","isMounted","unmountRoot"],"sourceRoot":""}