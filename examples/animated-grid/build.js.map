{"version":3,"file":"build.js","mappings":"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","sources":["webpack://dark-animated-grid/./node_modules/@dark-engine/core/dist/esm/constants.js","webpack://dark-animated-grid/./node_modules/@dark-engine/core/dist/esm/helpers/index.js","webpack://dark-animated-grid/./node_modules/@dark-engine/core/dist/esm/component/component.js","webpack://dark-animated-grid/./node_modules/@dark-engine/core/dist/esm/platform/platform.js","webpack://dark-animated-grid/./node_modules/@dark-engine/core/dist/esm/scope/scope.js","webpack://dark-animated-grid/./node_modules/@dark-engine/core/dist/esm/view/types.js","webpack://dark-animated-grid/./node_modules/@dark-engine/core/dist/esm/view/view.js","webpack://dark-animated-grid/./node_modules/@dark-engine/core/dist/esm/memo/memo.js","webpack://dark-animated-grid/./node_modules/@dark-engine/core/dist/esm/fiber/types.js","webpack://dark-animated-grid/./node_modules/@dark-engine/core/dist/esm/use-effect/use-effect.js","webpack://dark-animated-grid/./node_modules/@dark-engine/core/dist/esm/use-layout-effect/use-layout-effect.js","webpack://dark-animated-grid/./node_modules/@dark-engine/core/dist/esm/use-insertion-effect/use-insertion-effect.js","webpack://dark-animated-grid/./node_modules/@dark-engine/core/dist/esm/walk/walk.js","webpack://dark-animated-grid/./node_modules/@dark-engine/core/dist/esm/unmount/unmount.js","webpack://dark-animated-grid/./node_modules/@dark-engine/core/dist/esm/fragment/fragment.js","webpack://dark-animated-grid/./node_modules/@dark-engine/core/dist/esm/fiber/fiber.js","webpack://dark-animated-grid/./node_modules/@dark-engine/core/dist/esm/use-memo/use-memo.js","webpack://dark-animated-grid/./node_modules/@dark-engine/core/dist/esm/use-update/use-update.js","webpack://dark-animated-grid/./node_modules/@dark-engine/core/dist/esm/batch/batch.js","webpack://dark-animated-grid/./node_modules/@dark-engine/core/dist/esm/use-reactive-state/use-reactive-state.js","webpack://dark-animated-grid/./node_modules/@dark-engine/core/dist/esm/element/element.js","webpack://dark-animated-grid/./node_modules/@dark-engine/platform-browser/dist/esm/portal/portal.js","webpack://dark-animated-grid/./node_modules/@dark-engine/platform-browser/dist/esm/events/events.js","webpack://dark-animated-grid/./node_modules/@dark-engine/platform-browser/dist/esm/dom/dom.js","webpack://dark-animated-grid/./node_modules/@dark-engine/platform-browser/dist/esm/constants.js","webpack://dark-animated-grid/./node_modules/@dark-engine/core/dist/esm/ref/ref.js","webpack://dark-animated-grid/./node_modules/@dark-engine/platform-browser/dist/esm/scheduler/scheduler.js","webpack://dark-animated-grid/./node_modules/@dark-engine/platform-browser/dist/esm/render/render.js","webpack://dark-animated-grid/./index.tsx","webpack://dark-animated-grid/./node_modules/@dark-engine/core/dist/esm/use-state/use-state.js","webpack://dark-animated-grid/./node_modules/@dark-engine/core/dist/esm/use-callback/use-callback.js","webpack://dark-animated-grid/./node_modules/@dark-engine/core/dist/esm/use-ref/use-ref.js","webpack://dark-animated-grid/./node_modules/@dark-engine/platform-browser/dist/esm/create-root/create-root.js"],"sourcesContent":["export const ROOT = 'root';\r\nexport const REPLACER = 'dark:matter';\r\nexport const INDEX_KEY = 'dark:idx';\r\nexport const TYPE = 'type';\r\nexport const ATTR_KEY = 'key';\r\nexport const ATTR_REF = 'ref';\r\nexport const ATTR_FLAG = 'flag';\r\nexport var TaskPriority;\r\n(function (TaskPriority) {\r\n  TaskPriority[(TaskPriority['ANIMATION'] = 3)] = 'ANIMATION';\r\n  TaskPriority[(TaskPriority['HIGH'] = 2)] = 'HIGH';\r\n  TaskPriority[(TaskPriority['NORMAL'] = 1)] = 'NORMAL';\r\n  TaskPriority[(TaskPriority['LOW'] = 0)] = 'LOW';\r\n})(TaskPriority || (TaskPriority = {}));\r\nexport var Flag;\r\n(function (Flag) {\r\n  Flag['HAS_NO_MOVES'] = 'HAS_NO_MOVES';\r\n})(Flag || (Flag = {}));\r\n//# sourceMappingURL=constants.js.map\r\n","const detectIsFunction = o => typeof o === 'function';\r\nconst detectIsUndefined = o => typeof o === 'undefined';\r\nconst detectIsNumber = o => typeof o === 'number';\r\nconst detectIsString = o => typeof o === 'string';\r\nconst detectIsObject = o => typeof o === 'object';\r\nconst detectIsBoolean = o => typeof o === 'boolean';\r\nconst detectIsArray = o => Array.isArray(o);\r\nconst detectIsNull = o => o === null;\r\nconst detectIsEmpty = o => detectIsNull(o) || detectIsUndefined(o);\r\nconst detectIsFalsy = o => detectIsNull(o) || detectIsUndefined(o) || o === false;\r\nconst getTime = () => Date.now();\r\nconst dummyFn = () => {};\r\nfunction error(...args) {\r\n  !detectIsUndefined(console) && console.error(...args);\r\n}\r\nfunction flatten(source) {\r\n  const list = [];\r\n  const levelMap = { 0: { idx: 0, source } };\r\n  let level = 0;\r\n  do {\r\n    const { source, idx } = levelMap[level];\r\n    const item = source[idx];\r\n    if (idx >= source.length) {\r\n      level--;\r\n      levelMap[level].idx++;\r\n      continue;\r\n    }\r\n    if (detectIsArray(item)) {\r\n      level++;\r\n      levelMap[level] = {\r\n        idx: 0,\r\n        source: item,\r\n      };\r\n    } else {\r\n      list.push(item);\r\n      levelMap[level].idx++;\r\n    }\r\n  } while (level > 0 || levelMap[level].idx < levelMap[level].source.length);\r\n  return list;\r\n}\r\nfunction keyBy(list, fn, value = false) {\r\n  return list.reduce((acc, x) => ((acc[fn(x)] = value ? x : true), acc), {});\r\n}\r\nfunction detectIsDepsDifferent(deps, prevDeps) {\r\n  if (!detectIsUndefined(deps) && !detectIsUndefined(prevDeps) && deps.length > 0 && prevDeps.length > 0) {\r\n    for (let i = 0; i < prevDeps.length; i++) {\r\n      if (prevDeps[i] !== deps[i]) {\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n  return false;\r\n}\r\nexport {\r\n  detectIsFunction,\r\n  detectIsUndefined,\r\n  detectIsNumber,\r\n  detectIsString,\r\n  detectIsObject,\r\n  detectIsBoolean,\r\n  detectIsArray,\r\n  detectIsNull,\r\n  detectIsEmpty,\r\n  detectIsFalsy,\r\n  getTime,\r\n  dummyFn,\r\n  error,\r\n  flatten,\r\n  keyBy,\r\n  detectIsDepsDifferent,\r\n};\r\n//# sourceMappingURL=index.js.map\r\n","import { ATTR_KEY, ATTR_FLAG } from '../constants';\r\nimport { error, detectIsEmpty } from '../helpers';\r\nconst $$component = Symbol('component');\r\nconst defaultOptions = {\r\n  displayName: '',\r\n  defaultProps: {},\r\n  token: $$component,\r\n};\r\nclass ComponentFactory {\r\n  type;\r\n  token;\r\n  props;\r\n  ref;\r\n  displayName;\r\n  children = [];\r\n  shouldUpdate;\r\n  constructor(type, token, props, ref, shouldUpdate, displayName) {\r\n    this.type = type || null;\r\n    this.token = token || null;\r\n    this.props = props || null;\r\n    this.ref = ref || null;\r\n    this.shouldUpdate = shouldUpdate || null;\r\n    this.displayName = displayName || '';\r\n  }\r\n}\r\nfunction createComponent(type, options = {}) {\r\n  const computedOptions = { ...defaultOptions, ...options };\r\n  const { token, defaultProps, displayName, shouldUpdate } = computedOptions;\r\n  const component = (props = {}, ref) => {\r\n    const mprops = { ...defaultProps, ...props };\r\n    if (mprops.ref) {\r\n      delete mprops.ref;\r\n      if (process.env.NODE_ENV === 'development') {\r\n        error(`[Dark]: To use ref you need to wrap the createComponent with forwardRef!`);\r\n      }\r\n    }\r\n    return new ComponentFactory(type, token, mprops, ref, shouldUpdate, displayName);\r\n  };\r\n  return component;\r\n}\r\nconst detectIsComponentFactory = factory => factory instanceof ComponentFactory;\r\nconst getComponentFactoryKey = factory => (!detectIsEmpty(factory.props[ATTR_KEY]) ? factory.props[ATTR_KEY] : null);\r\nconst getComponentFactoryFlag = factory => factory.props[ATTR_FLAG] || null;\r\nexport { ComponentFactory, createComponent, detectIsComponentFactory, getComponentFactoryKey, getComponentFactoryFlag };\r\n//# sourceMappingURL=component.js.map\r\n","const platform = {\r\n  createNativeElement: () => {\r\n    throw new Error(msg('createNativeElement'));\r\n  },\r\n  requestAnimationFrame: () => {\r\n    throw new Error(msg('requestAnimationFrame'));\r\n  },\r\n  cancelAnimationFrame: () => {\r\n    throw new Error(msg('cancelAnimationFrame'));\r\n  },\r\n  scheduleCallback: () => {\r\n    throw new Error(msg('scheduleCallback'));\r\n  },\r\n  shouldYeildToHost: () => {\r\n    throw new Error(msg('shouldYeildToHost'));\r\n  },\r\n  applyCommit: () => {\r\n    throw new Error(msg('applyCommit'));\r\n  },\r\n  finishCommitWork: () => {\r\n    throw new Error(msg('finishCommitWork'));\r\n  },\r\n  detectIsDynamic: () => {\r\n    throw new Error(msg('detectIsDynamic'));\r\n  },\r\n  detectIsPortal: () => {\r\n    throw new Error(msg('detectIsPortal'));\r\n  },\r\n  unmountPortal: () => {\r\n    throw new Error(msg('unmountPortal'));\r\n  },\r\n  restart: () => {\r\n    throw new Error(msg('restart'));\r\n  },\r\n};\r\nconst msg = x => `${x} not installed by renderer`;\r\nconst detectIsServer = () => !platform.detectIsDynamic();\r\nexport { platform, detectIsServer };\r\n//# sourceMappingURL=platform.js.map\r\n","let rootId = null;\r\nconst stores = new Map();\r\nclass Store {\r\n  wipRoot = null;\r\n  currentRoot = null;\r\n  nextUnitOfWork = null;\r\n  events = new Map();\r\n  unsubscribers = [];\r\n  deletions = new Set();\r\n  fiberMount = {\r\n    level: 0,\r\n    navigation: {},\r\n    isDeepWalking: true,\r\n  };\r\n  componentFiber = null;\r\n  effects = [];\r\n  layoutEffects = [];\r\n  insertionEffects = [];\r\n  isLayoutEffectsZone = false;\r\n  isInserionEffectsZone = false;\r\n  isUpdateHookZone = false;\r\n  isBatchZone = false;\r\n  isHydrateZone = false;\r\n  lazy = new Set();\r\n}\r\nconst rootStore = {\r\n  set: id => {\r\n    rootId = id;\r\n    !stores.get(rootId) && stores.set(rootId, new Store());\r\n  },\r\n  remove: id => stores.delete(id),\r\n};\r\nconst getRootId = () => rootId;\r\nconst store = {\r\n  get: (id = rootId) => stores.get(id),\r\n};\r\nconst wipRootStore = {\r\n  get: () => store.get()?.wipRoot || null,\r\n  set: fiber => (store.get().wipRoot = fiber),\r\n};\r\nconst currentRootStore = {\r\n  get: id => store.get(id)?.currentRoot || null,\r\n  set: fiber => (store.get().currentRoot = fiber),\r\n};\r\nconst nextUnitOfWorkStore = {\r\n  get: () => store.get()?.nextUnitOfWork || null,\r\n  set: fiber => (store.get().nextUnitOfWork = fiber),\r\n};\r\nconst currentFiberStore = {\r\n  get: () => store.get()?.componentFiber,\r\n  set: fiber => (store.get().componentFiber = fiber),\r\n};\r\nconst eventsStore = {\r\n  get: () => store.get().events,\r\n  addUnsubscriber: fn => store.get().unsubscribers.push(fn),\r\n  unsubscribe: id => store.get(id).unsubscribers.forEach(fn => fn()),\r\n};\r\nconst deletionsStore = {\r\n  get: () => store.get().deletions,\r\n  add: fiber => store.get().deletions.add(fiber),\r\n  has: fiber => store.get().deletions.has(fiber),\r\n  set: deletions => (store.get().deletions = deletions),\r\n  reset: () => (store.get().deletions = new Set()),\r\n};\r\nconst fiberMountStore = {\r\n  reset: () => {\r\n    store.get().fiberMount = {\r\n      level: 0,\r\n      navigation: {},\r\n      isDeepWalking: true,\r\n    };\r\n  },\r\n  getIndex: () => store.get().fiberMount.navigation[store.get().fiberMount.level],\r\n  jumpToChild: () => {\r\n    const { fiberMount } = store.get();\r\n    const level = fiberMount.level;\r\n    const nextLevel = level + 1;\r\n    fiberMount.level = nextLevel;\r\n    fiberMount.navigation[nextLevel] = 0;\r\n  },\r\n  jumpToParent: () => {\r\n    const { fiberMount } = store.get();\r\n    const level = fiberMount.level;\r\n    const nextLevel = level - 1;\r\n    fiberMount.navigation[level] = 0;\r\n    fiberMount.level = nextLevel;\r\n  },\r\n  jumpToSibling: () => {\r\n    const { fiberMount } = store.get();\r\n    const level = fiberMount.level;\r\n    const idx = fiberMount.navigation[level] + 1;\r\n    fiberMount.navigation[level] = idx;\r\n  },\r\n  deepWalking: {\r\n    get: () => store.get().fiberMount.isDeepWalking,\r\n    set: value => (store.get().fiberMount.isDeepWalking = value),\r\n  },\r\n};\r\nconst effectsStore = {\r\n  get: () => store.get().effects,\r\n  reset: () => (store.get().effects = []),\r\n  add: effect => store.get().effects.push(effect),\r\n};\r\nconst layoutEffectsStore = {\r\n  get: () => store.get().layoutEffects,\r\n  reset: () => (store.get().layoutEffects = []),\r\n  add: effect => store.get().layoutEffects.push(effect),\r\n};\r\nconst insertionEffectsStore = {\r\n  get: () => store.get().insertionEffects,\r\n  reset: () => (store.get().insertionEffects = []),\r\n  add: effect => store.get().insertionEffects.push(effect),\r\n};\r\nconst isLayoutEffectsZone = {\r\n  get: () => store.get()?.isLayoutEffectsZone || false,\r\n  set: value => (store.get().isLayoutEffectsZone = value),\r\n};\r\nconst isInsertionEffectsZone = {\r\n  get: id => store.get(id)?.isInserionEffectsZone || false,\r\n  set: value => (store.get().isInserionEffectsZone = value),\r\n};\r\nconst isUpdateHookZone = {\r\n  get: () => store.get()?.isUpdateHookZone || false,\r\n  set: value => (store.get().isUpdateHookZone = value),\r\n};\r\nconst isBatchZone = {\r\n  get: () => store.get()?.isBatchZone || false,\r\n  set: value => (store.get().isBatchZone = value),\r\n};\r\nconst isHydrateZone = {\r\n  get: () => store.get()?.isHydrateZone || false,\r\n  set: value => (store.get().isHydrateZone = value),\r\n};\r\nconst registerLazy = () => {\r\n  const { id } = currentFiberStore.get();\r\n  store.get().lazy.add(id);\r\n  return id;\r\n};\r\nconst unregisterLazy = id => store.get().lazy.delete(id);\r\nconst detectHasRegisteredLazy = () => store.get().lazy.size > 0;\r\nexport {\r\n  getRootId,\r\n  rootStore,\r\n  wipRootStore,\r\n  currentRootStore,\r\n  nextUnitOfWorkStore,\r\n  currentFiberStore,\r\n  eventsStore,\r\n  deletionsStore,\r\n  fiberMountStore,\r\n  effectsStore,\r\n  layoutEffectsStore,\r\n  insertionEffectsStore,\r\n  isLayoutEffectsZone,\r\n  isInsertionEffectsZone,\r\n  isUpdateHookZone,\r\n  isBatchZone,\r\n  isHydrateZone,\r\n  registerLazy,\r\n  unregisterLazy,\r\n  detectHasRegisteredLazy,\r\n};\r\n//# sourceMappingURL=scope.js.map\r\n","export var NodeType;\r\n(function (NodeType) {\r\n  NodeType['TAG'] = 'TAG';\r\n  NodeType['TEXT'] = 'TEXT';\r\n  NodeType['COMMENT'] = 'COMMENT';\r\n})(NodeType || (NodeType = {}));\r\n//# sourceMappingURL=types.js.map\r\n","import { REPLACER, ATTR_KEY, ATTR_FLAG, TYPE } from '../constants';\r\nimport { detectIsArray, detectIsEmpty, detectIsFunction } from '../helpers';\r\nimport { NodeType } from './types';\r\nconst $$virtualNode = Symbol('virtual-node');\r\nclass VirtualNode {\r\n  type = null;\r\n  constructor(type) {\r\n    this.type = type;\r\n  }\r\n}\r\nclass TagVirtualNode extends VirtualNode {\r\n  name = null;\r\n  attrs = {};\r\n  children = [];\r\n  constructor(name, attrs, children) {\r\n    super(NodeType.TAG);\r\n    this.name = name || this.name;\r\n    this.attrs = attrs || this.attrs;\r\n    this.children = children || this.children;\r\n  }\r\n}\r\nclass TextVirtualNode extends VirtualNode {\r\n  value = '';\r\n  constructor(text) {\r\n    super(NodeType.TEXT);\r\n    this.value = text;\r\n  }\r\n}\r\nclass CommentVirtualNode extends VirtualNode {\r\n  value = '';\r\n  constructor(text) {\r\n    super(NodeType.COMMENT);\r\n    this.value = text;\r\n  }\r\n}\r\nconst detectIsVirtualNode = vNode => vNode instanceof VirtualNode;\r\nconst detectIsTagVirtualNode = vNode => vNode instanceof TagVirtualNode;\r\nconst detectIsCommentVirtualNode = vNode => vNode instanceof CommentVirtualNode;\r\nconst detectIsTextVirtualNode = vNode => vNode instanceof TextVirtualNode;\r\nconst detectIsVirtualNodeFactory = factory => detectIsFunction(factory) && factory[$$virtualNode] === true;\r\nconst getTagVirtualNodeKey = vNode => (!detectIsEmpty(vNode.attrs[ATTR_KEY]) ? vNode.attrs[ATTR_KEY] : null);\r\nconst getTagVirtualNodeFlag = vNode => vNode.attrs[ATTR_FLAG] || null;\r\nconst getVirtualNodeFactoryKey = factory => (!detectIsEmpty(factory[ATTR_KEY]) ? factory[ATTR_KEY] : null);\r\nconst getVirtualNodeFactoryFlag = factory => factory[ATTR_FLAG] || null;\r\nconst createReplacer = () => new CommentVirtualNode(REPLACER);\r\nconst detectIsPlainVirtualNode = vNode => detectIsTextVirtualNode(vNode) || detectIsCommentVirtualNode(vNode);\r\nfunction View(def) {\r\n  const factory = () => {\r\n    const { as: name, slot, _void = false, ...attrs } = def;\r\n    const children = _void ? [] : detectIsArray(slot) ? slot : slot ? [slot] : [];\r\n    return new TagVirtualNode(name, attrs, children);\r\n  };\r\n  factory[$$virtualNode] = true;\r\n  factory[ATTR_KEY] = def.key;\r\n  factory[ATTR_FLAG] = def.flag;\r\n  factory[TYPE] = def.as;\r\n  return factory;\r\n}\r\nfunction Text(source) {\r\n  return new TextVirtualNode(source + '');\r\n}\r\nText.from = source => (detectIsTextVirtualNode(source) ? source.value : source + '');\r\nfunction Comment(text) {\r\n  const factory = () => new CommentVirtualNode(text);\r\n  factory[$$virtualNode] = true;\r\n  return factory;\r\n}\r\nexport {\r\n  VirtualNode,\r\n  TagVirtualNode,\r\n  TextVirtualNode,\r\n  CommentVirtualNode,\r\n  detectIsVirtualNode,\r\n  detectIsTagVirtualNode,\r\n  detectIsCommentVirtualNode,\r\n  detectIsTextVirtualNode,\r\n  detectIsPlainVirtualNode,\r\n  getTagVirtualNodeKey,\r\n  getTagVirtualNodeFlag,\r\n  getVirtualNodeFactoryKey,\r\n  getVirtualNodeFactoryFlag,\r\n  createReplacer,\r\n  detectIsVirtualNodeFactory,\r\n  View,\r\n  Text,\r\n  Comment,\r\n};\r\n//# sourceMappingURL=view.js.map\r\n","import { createComponent, detectIsComponentFactory } from '../component';\r\nimport { forwardRef } from '../ref';\r\nconst $$memo = Symbol('memo');\r\nconst defaultShouldUpdate = (props, nextProps) => {\r\n  const keys = Object.keys(nextProps);\r\n  for (const key of keys) {\r\n    if (key !== 'slot' && nextProps[key] !== props[key]) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n};\r\nconst detectIsMemo = factory => detectIsComponentFactory(factory) && factory.token === $$memo;\r\nfunction memo(component, shouldUpdate = defaultShouldUpdate) {\r\n  return forwardRef(\r\n    createComponent(\r\n      (props, ref) => {\r\n        ref && (props.ref = ref);\r\n        return component(props);\r\n      },\r\n      { token: $$memo, shouldUpdate },\r\n    ),\r\n  );\r\n}\r\nexport { $$memo, memo, detectIsMemo };\r\n//# sourceMappingURL=memo.js.map\r\n","export var EffectTag;\r\n(function (EffectTag) {\r\n  EffectTag['CREATE'] = 'CREATE';\r\n  EffectTag['UPDATE'] = 'UPDATE';\r\n  EffectTag['DELETE'] = 'DELETE';\r\n  EffectTag['SKIP'] = 'SKIP';\r\n})(EffectTag || (EffectTag = {}));\r\n//# sourceMappingURL=types.js.map\r\n","import { detectIsUndefined, detectIsFunction, detectIsDepsDifferent } from '../helpers';\r\nimport { currentFiberStore, effectsStore } from '../scope';\r\nconst $$useEffect = Symbol('use-effect');\r\nconst { useEffect, hasEffects, dropEffects } = createEffect($$useEffect, effectsStore);\r\nfunction createEffect(token, store) {\r\n  function useEffect(effect, deps) {\r\n    const fiber = currentFiberStore.get();\r\n    const hook = fiber.hook;\r\n    const { idx, values } = hook;\r\n    const runEffect = () => {\r\n      values[idx] = {\r\n        deps,\r\n        token,\r\n        value: undefined,\r\n      };\r\n      store.add(() => {\r\n        values[idx].value = effect();\r\n      });\r\n    };\r\n    if (detectIsUndefined(values[idx])) {\r\n      runEffect();\r\n    } else {\r\n      const { deps: prevDeps, value: cleanup } = values[idx];\r\n      const isDepsDifferent = deps ? detectIsDepsDifferent(deps, prevDeps) : true;\r\n      if (isDepsDifferent) {\r\n        detectIsFunction(cleanup) && cleanup();\r\n        runEffect();\r\n      }\r\n    }\r\n    hook.idx++;\r\n  }\r\n  function hasEffects(fiber) {\r\n    const { values } = fiber.hook;\r\n    const hasEffect = values.some(x => x?.token === token);\r\n    return hasEffect;\r\n  }\r\n  function dropEffects(hook) {\r\n    const { values } = hook;\r\n    for (const value of values) {\r\n      if (value.token === token) {\r\n        const cleanup = value.value;\r\n        detectIsFunction(cleanup) && cleanup();\r\n      }\r\n    }\r\n  }\r\n  return {\r\n    useEffect,\r\n    hasEffects,\r\n    dropEffects,\r\n  };\r\n}\r\nexport { useEffect, hasEffects, dropEffects, createEffect };\r\n//# sourceMappingURL=use-effect.js.map\r\n","import { layoutEffectsStore } from '../scope';\r\nimport { createEffect } from '../use-effect';\r\nconst $$useLayoutEffect = Symbol('use-layout-effect');\r\nconst {\r\n  useEffect: useLayoutEffect,\r\n  hasEffects: hasLayoutEffects,\r\n  dropEffects: dropLayoutEffects,\r\n} = createEffect($$useLayoutEffect, layoutEffectsStore);\r\nexport { useLayoutEffect, hasLayoutEffects, dropLayoutEffects };\r\n//# sourceMappingURL=use-layout-effect.js.map\r\n","import { insertionEffectsStore } from '../scope';\r\nimport { createEffect } from '../use-effect';\r\nconst $$useInsertionEffect = Symbol('use-insertion-effect');\r\nconst {\r\n  useEffect: useInsertionEffect,\r\n  hasEffects: hasInsertionEffects,\r\n  dropEffects: dropInsertionEffects,\r\n} = createEffect($$useInsertionEffect, insertionEffectsStore);\r\nexport { useInsertionEffect, hasInsertionEffects, dropInsertionEffects };\r\n//# sourceMappingURL=use-insertion-effect.js.map\r\n","function walkFiber(fiber, onLoop) {\r\n  let nextFiber = fiber;\r\n  let isDeepWalking = true;\r\n  let isReturn = false;\r\n  let isStopped = false;\r\n  const visitedMap = {};\r\n  const detectCanVisit = id => !visitedMap[id];\r\n  const resetIsDeepWalking = () => (isDeepWalking = false);\r\n  const stop = () => (isStopped = true);\r\n  while (nextFiber) {\r\n    onLoop({\r\n      nextFiber: nextFiber,\r\n      isReturn,\r\n      resetIsDeepWalking,\r\n      stop,\r\n    });\r\n    if (isStopped) {\r\n      break;\r\n    }\r\n    if (nextFiber.child && isDeepWalking && detectCanVisit(nextFiber.child.id)) {\r\n      const newFiber = nextFiber.child;\r\n      isReturn = false;\r\n      nextFiber = newFiber;\r\n      visitedMap[newFiber.id] = true;\r\n    } else if (nextFiber.nextSibling && detectCanVisit(nextFiber.nextSibling.id)) {\r\n      const newFiber = nextFiber.nextSibling;\r\n      isDeepWalking = true;\r\n      isReturn = false;\r\n      nextFiber = newFiber;\r\n      visitedMap[newFiber.id] = true;\r\n    } else if (\r\n      nextFiber.parent &&\r\n      nextFiber.parent === fiber &&\r\n      nextFiber.parent.nextSibling &&\r\n      detectCanVisit(nextFiber.parent.nextSibling.id)\r\n    ) {\r\n      const newFiber = nextFiber.parent.nextSibling;\r\n      isDeepWalking = true;\r\n      isReturn = false;\r\n      nextFiber = newFiber;\r\n      visitedMap[newFiber.id] = true;\r\n    } else if (nextFiber.parent && nextFiber.parent !== fiber) {\r\n      isDeepWalking = false;\r\n      isReturn = true;\r\n      nextFiber = nextFiber.parent;\r\n    } else {\r\n      nextFiber = null;\r\n    }\r\n  }\r\n}\r\nexport { walkFiber };\r\n//# sourceMappingURL=walk.js.map\r\n","import { platform } from '../platform';\r\nimport { detectIsComponentFactory } from '../component';\r\nimport { dropEffects } from '../use-effect';\r\nimport { dropLayoutEffects } from '../use-layout-effect';\r\nimport { dropInsertionEffects } from '../use-insertion-effect';\r\nimport { walkFiber } from '../walk';\r\nimport { detectIsUndefined } from '../helpers';\r\nimport { currentRootStore, eventsStore, rootStore } from '../scope';\r\nfunction unmountFiber(fiber) {\r\n  if (!fiber.insertionEffectHost && !fiber.layoutEffectHost && !fiber.effectHost && !fiber.portalHost) return;\r\n  walkFiber(fiber, ({ nextFiber, isReturn, stop }) => {\r\n    if (nextFiber === fiber.nextSibling) return stop();\r\n    if (!isReturn && detectIsComponentFactory(nextFiber.instance)) {\r\n      nextFiber.insertionEffectHost && dropInsertionEffects(nextFiber.hook);\r\n      nextFiber.layoutEffectHost && dropLayoutEffects(nextFiber.hook);\r\n      nextFiber.effectHost && dropEffects(nextFiber.hook);\r\n      nextFiber.portalHost && platform.unmountPortal(nextFiber);\r\n    }\r\n  });\r\n}\r\nfunction unmountRoot(rootId, onComplete) {\r\n  if (detectIsUndefined(rootId)) return;\r\n  unmountFiber(currentRootStore.get(rootId));\r\n  eventsStore.unsubscribe(rootId);\r\n  rootStore.remove(rootId);\r\n  onComplete();\r\n}\r\nexport { unmountFiber, unmountRoot };\r\n//# sourceMappingURL=unmount.js.map\r\n","import { createComponent, detectIsComponentFactory } from '../component';\r\nconst $$fragment = Symbol('fragment');\r\nconst Fragment = createComponent(({ slot }) => slot || null, {\r\n  token: $$fragment,\r\n});\r\nconst detectIsFragment = factory => detectIsComponentFactory(factory) && factory.token === $$fragment;\r\nexport { Fragment, detectIsFragment };\r\n//# sourceMappingURL=fragment.js.map\r\n","import {\r\n  flatten,\r\n  error,\r\n  detectIsEmpty,\r\n  detectIsFalsy,\r\n  detectIsArray,\r\n  detectIsString,\r\n  detectIsNumber,\r\n  detectIsFunction,\r\n} from '../helpers';\r\nimport { platform } from '../platform';\r\nimport {\r\n  wipRootStore,\r\n  currentRootStore,\r\n  nextUnitOfWorkStore,\r\n  deletionsStore,\r\n  fiberMountStore,\r\n  currentFiberStore,\r\n  isUpdateHookZone,\r\n  rootStore,\r\n  effectsStore,\r\n  layoutEffectsStore,\r\n  insertionEffectsStore,\r\n  isLayoutEffectsZone,\r\n  isInsertionEffectsZone,\r\n  detectHasRegisteredLazy,\r\n  isHydrateZone,\r\n} from '../scope';\r\nimport { detectIsComponentFactory, getComponentFactoryKey, getComponentFactoryFlag } from '../component';\r\nimport {\r\n  detectIsVirtualNode,\r\n  detectIsTagVirtualNode,\r\n  detectIsVirtualNodeFactory,\r\n  getTagVirtualNodeKey,\r\n  getVirtualNodeFactoryKey,\r\n  getTagVirtualNodeFlag,\r\n  getVirtualNodeFactoryFlag,\r\n  detectIsTextVirtualNode,\r\n  detectIsCommentVirtualNode,\r\n  createReplacer,\r\n} from '../view';\r\nimport { detectIsMemo } from '../memo';\r\nimport { INDEX_KEY, TYPE, Flag } from '../constants';\r\nimport { EffectTag } from './types';\r\nimport { hasEffects } from '../use-effect';\r\nimport { hasLayoutEffects } from '../use-layout-effect';\r\nimport { hasInsertionEffects } from '../use-insertion-effect';\r\nimport { walkFiber } from '../walk';\r\nimport { unmountFiber } from '../unmount';\r\nimport { Text } from '../view';\r\nimport { Fragment, detectIsFragment } from '../fragment';\r\nconst cloneTagMap = {\r\n  [EffectTag.CREATE]: true,\r\n};\r\nclass Fiber {\r\n  id = 0;\r\n  nativeElement = null;\r\n  parent = null;\r\n  child = null;\r\n  nextSibling = null;\r\n  alternate = null;\r\n  move = false;\r\n  effectTag = null;\r\n  instance = null;\r\n  hook = null;\r\n  provider = null;\r\n  effectHost = false;\r\n  layoutEffectHost = false;\r\n  insertionEffectHost = false;\r\n  portalHost = false;\r\n  childrenCount = 0;\r\n  childrenElementsCount = 0;\r\n  marker = '';\r\n  isUsed = false;\r\n  idx = 0;\r\n  elementIdx = 0;\r\n  batched = null;\r\n  catchException;\r\n  static nextId = 0;\r\n  constructor(hook = null, provider = null, idx = 0) {\r\n    this.id = ++Fiber.nextId;\r\n    this.hook = hook;\r\n    this.provider = provider;\r\n    this.idx = idx;\r\n  }\r\n  mutate(options) {\r\n    const keys = Object.keys(options);\r\n    for (const key of keys) {\r\n      this[key] = options[key];\r\n    }\r\n    return this;\r\n  }\r\n  markEffectHost() {\r\n    this.effectHost = true;\r\n    this.parent && !this.parent.effectHost && this.parent.markEffectHost();\r\n  }\r\n  markLayoutEffectHost() {\r\n    this.layoutEffectHost = true;\r\n    this.parent && !this.parent.layoutEffectHost && this.parent.markLayoutEffectHost();\r\n  }\r\n  markInsertionEffectHost() {\r\n    this.insertionEffectHost = true;\r\n    this.parent && !this.parent.insertionEffectHost && this.parent.markInsertionEffectHost();\r\n  }\r\n  markPortalHost() {\r\n    this.portalHost = true;\r\n    this.parent && !this.parent.portalHost && this.parent.markPortalHost();\r\n  }\r\n  incrementChildrenElementsCount(count = 1, force = false) {\r\n    incrementChildrenElementsCount(this, count, force);\r\n  }\r\n  setError(error) {\r\n    if (detectIsFunction(this.catchException)) {\r\n      this.catchException(error);\r\n    } else if (this.parent) {\r\n      this.parent.setError(error);\r\n    }\r\n  }\r\n}\r\nfunction workLoop() {\r\n  const wipFiber = wipRootStore.get();\r\n  let nextUnitOfWork = nextUnitOfWorkStore.get();\r\n  let shouldYield = false;\r\n  let hasMoreWork = Boolean(nextUnitOfWork);\r\n  while (nextUnitOfWork && !shouldYield) {\r\n    nextUnitOfWork = performUnitOfWork(nextUnitOfWork);\r\n    nextUnitOfWorkStore.set(nextUnitOfWork);\r\n    hasMoreWork = Boolean(nextUnitOfWork);\r\n    shouldYield = platform.shouldYeildToHost();\r\n  }\r\n  if (!nextUnitOfWork && wipFiber) {\r\n    commitChanges();\r\n  }\r\n  return hasMoreWork;\r\n}\r\nfunction performUnitOfWork(fiber) {\r\n  let isDeepWalking = true;\r\n  let nextFiber = fiber;\r\n  let instance = fiber.instance;\r\n  while (true) {\r\n    isDeepWalking = fiberMountStore.deepWalking.get();\r\n    nextFiber.hook && (nextFiber.hook.idx = 0);\r\n    if (isDeepWalking) {\r\n      const hasChildren = hasChildrenProp(instance) && instance.children.length > 0;\r\n      if (hasChildren) {\r\n        const { fiber$, instance$ } = performChild(nextFiber, instance);\r\n        nextFiber = fiber$;\r\n        instance = instance$;\r\n        if (fiber$) return fiber$;\r\n      } else {\r\n        const { fiber$$, fiber$, instance$ } = performSibling(nextFiber, instance);\r\n        nextFiber = fiber$;\r\n        instance = instance$;\r\n        if (fiber$$) return fiber$$;\r\n      }\r\n    } else {\r\n      const { fiber$$, fiber$, instance$ } = performSibling(nextFiber, instance);\r\n      nextFiber = fiber$;\r\n      instance = instance$;\r\n      if (fiber$$) return fiber$$;\r\n    }\r\n    if (nextFiber.parent === null) return null;\r\n  }\r\n}\r\nfunction performChild(nextFiber, instance) {\r\n  fiberMountStore.jumpToChild();\r\n  const childrenIdx = 0;\r\n  const alternate = nextFiber.alternate ? nextFiber.alternate.child : null;\r\n  const prevInstance = alternate ? alternate.instance : null;\r\n  const nextInstance = hasChildrenProp(instance) ? instance.children[childrenIdx] : null;\r\n  const hook = getHook(alternate, prevInstance, nextInstance);\r\n  const provider = alternate ? alternate.provider : null;\r\n  const fiber = new Fiber(hook, provider, childrenIdx);\r\n  currentFiberStore.set(fiber);\r\n  fiber.parent = nextFiber;\r\n  nextFiber.child = fiber;\r\n  fiber.elementIdx = nextFiber.nativeElement ? 0 : nextFiber.elementIdx;\r\n  instance = pertformInstance(instance, childrenIdx, fiber);\r\n  alternate && performAlternate(alternate, instance);\r\n  performFiber(fiber, alternate, instance);\r\n  alternate && detectIsMemo(fiber.instance) && performMemo(fiber, alternate, instance);\r\n  return {\r\n    fiber$: fiber,\r\n    instance$: instance,\r\n  };\r\n}\r\nfunction performSibling(nextFiber, instance) {\r\n  fiberMountStore.jumpToSibling();\r\n  const parentInstance = nextFiber.parent.instance;\r\n  const childrenIdx = fiberMountStore.getIndex();\r\n  const hasSibling = hasChildrenProp(parentInstance) && parentInstance.children[childrenIdx];\r\n  if (hasSibling) {\r\n    fiberMountStore.deepWalking.set(true);\r\n    const alternate = nextFiber.alternate ? nextFiber.alternate.nextSibling : null;\r\n    const prevInstance = alternate ? alternate.instance : null;\r\n    const nextInstance = hasChildrenProp(parentInstance) ? parentInstance.children[childrenIdx] : null;\r\n    const hook = getHook(alternate, prevInstance, nextInstance);\r\n    const provider = alternate ? alternate.provider : null;\r\n    const fiber = new Fiber(hook, provider, childrenIdx);\r\n    currentFiberStore.set(fiber);\r\n    fiber.parent = nextFiber.parent;\r\n    nextFiber.nextSibling = fiber;\r\n    fiber.elementIdx = nextFiber.elementIdx + (nextFiber.nativeElement ? 1 : nextFiber.childrenElementsCount);\r\n    instance = pertformInstance(parentInstance, childrenIdx, fiber);\r\n    alternate && performAlternate(alternate, instance);\r\n    performFiber(fiber, alternate, instance);\r\n    alternate && detectIsMemo(fiber.instance) && performMemo(fiber, alternate, instance);\r\n    return {\r\n      fiber$$: fiber,\r\n      fiber$: fiber,\r\n      instance$: instance,\r\n    };\r\n  } else {\r\n    fiberMountStore.jumpToParent();\r\n    fiberMountStore.deepWalking.set(false);\r\n    nextFiber = nextFiber.parent;\r\n    instance = nextFiber.instance;\r\n    if (hasChildrenProp(nextFiber.instance)) {\r\n      nextFiber.instance.children = [];\r\n    }\r\n  }\r\n  return {\r\n    fiber$$: null,\r\n    fiber$: nextFiber,\r\n    instance$: instance,\r\n  };\r\n}\r\nfunction incrementChildrenElementsCount(fiber, count = 1, force = false) {\r\n  if (!fiber.parent) return;\r\n  const fromUpdate = isUpdateHookZone.get();\r\n  const wipFiber = wipRootStore.get();\r\n  const stop = fromUpdate && wipFiber.parent === fiber.parent;\r\n  if (\r\n    detectIsTextVirtualNode(fiber.instance) ||\r\n    detectIsCommentVirtualNode(fiber.instance) ||\r\n    (detectIsTagVirtualNode(fiber.instance) && fiber.instance.children.length === 0)\r\n  ) {\r\n    fiber.childrenElementsCount = 1;\r\n  }\r\n  if (fromUpdate && stop && !force) return;\r\n  fiber.parent.childrenElementsCount += count;\r\n  if (!fiber.parent.nativeElement) {\r\n    fiber.parent.incrementChildrenElementsCount(count);\r\n  }\r\n}\r\nfunction performFiber(fiber, alternate, instance) {\r\n  let isUpdate = false;\r\n  cloneTagMap[fiber.parent.effectTag] && (fiber.effectTag = fiber.parent.effectTag);\r\n  if (fiber.effectTag !== EffectTag.CREATE) {\r\n    const hasAlternate = Boolean(alternate);\r\n    const prevKey = hasAlternate ? getElementKey(alternate.instance) : null;\r\n    const nextKey = hasAlternate ? getElementKey(instance) : null;\r\n    const isSameKeys = prevKey === nextKey;\r\n    const isSameTypes = hasAlternate && getInstanceType(alternate.instance) === getInstanceType(instance);\r\n    isUpdate = isSameTypes && isSameKeys;\r\n  }\r\n  fiber.instance = instance;\r\n  fiber.alternate = alternate || null;\r\n  fiber.nativeElement = isUpdate ? alternate.nativeElement : null;\r\n  fiber.effectTag = isUpdate ? EffectTag.UPDATE : EffectTag.CREATE;\r\n  if (alternate && alternate.move) {\r\n    fiber.move = alternate.move;\r\n    alternate.move = false;\r\n  }\r\n  if (hasChildrenProp(fiber.instance)) {\r\n    fiber.childrenCount = fiber.instance.children.length;\r\n  }\r\n  if (!fiber.nativeElement && detectIsVirtualNode(fiber.instance)) {\r\n    fiber.nativeElement = platform.createNativeElement(fiber.instance);\r\n    fiber.effectTag = EffectTag.CREATE;\r\n  }\r\n  if (fiber.nativeElement) {\r\n    fiber.incrementChildrenElementsCount();\r\n  }\r\n}\r\nfunction insertToFiber(idx, fiber, child) {\r\n  if (idx === 0 || (fiber.child && fiber.child.effectTag === EffectTag.DELETE)) {\r\n    fiber.child = child;\r\n    child.parent = fiber;\r\n  } else {\r\n    fiber.nextSibling = child;\r\n    child.parent = fiber.parent;\r\n  }\r\n  return child;\r\n}\r\nfunction createConditionalFiber(alternate, marker) {\r\n  const vNode = createReplacer();\r\n  return new Fiber().mutate({\r\n    instance: vNode,\r\n    parent: alternate,\r\n    marker: marker + '',\r\n    effectTag: EffectTag.CREATE,\r\n  });\r\n}\r\nfunction canAddToDeletions(fiber) {\r\n  let nextFiber = fiber.parent;\r\n  while (nextFiber) {\r\n    if (nextFiber.effectTag === EffectTag.DELETE) return false;\r\n    nextFiber = nextFiber.parent;\r\n  }\r\n  return true;\r\n}\r\nfunction performAlternate(alternate, instance) {\r\n  const alternateType = getInstanceType(alternate.instance);\r\n  const elementType = getInstanceType(instance);\r\n  const isSameType = elementType === alternateType;\r\n  const flag = getElementFlag(instance);\r\n  const hasNoMovesFlag = flag && flag[Flag.HAS_NO_MOVES];\r\n  alternate.isUsed = true;\r\n  if (!isSameType) {\r\n    if (canAddToDeletions(alternate)) {\r\n      alternate.effectTag = EffectTag.DELETE;\r\n      deletionsStore.add(alternate);\r\n    }\r\n  } else if (\r\n    hasChildrenProp(alternate.instance) &&\r\n    hasChildrenProp(instance) &&\r\n    (hasNoMovesFlag ? alternate.childrenCount !== instance.children.length : true)\r\n  ) {\r\n    const { prevKeys, nextKeys, prevKeysMap, nextKeysMap, keyedFibersMap } = extractKeys(\r\n      alternate.child,\r\n      instance.children,\r\n    );\r\n    let result = [];\r\n    let size = Math.max(prevKeys.length, nextKeys.length);\r\n    let nextFiber = alternate;\r\n    let idx = 0;\r\n    let p = 0;\r\n    let n = 0;\r\n    for (let i = 0; i < size; i++) {\r\n      const nextKey = nextKeys[i - n] ?? null;\r\n      const prevKey = prevKeys[i - p] ?? null;\r\n      const prevKeyFiber = keyedFibersMap[prevKey] || null;\r\n      const nextKeyFiber = keyedFibersMap[nextKey] || createConditionalFiber(alternate, nextKey);\r\n      if (nextKey !== prevKey) {\r\n        if (nextKey !== null && !prevKeysMap[nextKey]) {\r\n          if (prevKey !== null && !nextKeysMap[prevKey]) {\r\n            result.push([[nextKey, prevKey], 'replace']);\r\n            nextKeyFiber.effectTag = EffectTag.CREATE;\r\n            prevKeyFiber.effectTag = EffectTag.DELETE;\r\n            deletionsStore.add(prevKeyFiber);\r\n          } else {\r\n            result.push([nextKey, 'insert']);\r\n            nextKeyFiber.effectTag = EffectTag.CREATE;\r\n            p++;\r\n            size++;\r\n          }\r\n          nextFiber = insertToFiber(i, nextFiber, nextKeyFiber);\r\n        } else if (!nextKeysMap[prevKey]) {\r\n          result.push([prevKey, 'remove']);\r\n          prevKeyFiber.effectTag = EffectTag.DELETE;\r\n          deletionsStore.add(prevKeyFiber);\r\n          n++;\r\n          idx--;\r\n          size++;\r\n        } else if (nextKeysMap[prevKey] && nextKeysMap[nextKey]) {\r\n          result.push([[nextKey, prevKey], 'move']);\r\n          nextKeyFiber.effectTag = EffectTag.UPDATE;\r\n          prevKeyFiber.effectTag = EffectTag.UPDATE;\r\n          nextKeyFiber.move = true;\r\n          nextFiber = insertToFiber(i, nextFiber, nextKeyFiber);\r\n        }\r\n      } else if (nextKey !== null) {\r\n        result.push([nextKey, 'stable']);\r\n        nextKeyFiber.effectTag = EffectTag.UPDATE;\r\n        nextFiber = insertToFiber(i, nextFiber, nextKeyFiber);\r\n      }\r\n      nextKeyFiber.idx = idx;\r\n      idx++;\r\n    }\r\n    result = [];\r\n  }\r\n}\r\nfunction performMemo(fiber, alternate, instance) {\r\n  const prevFactory = alternate.instance;\r\n  const nextFactory = instance;\r\n  if (fiber.move || nextFactory.type !== prevFactory.type) return;\r\n  const prevProps = prevFactory.props;\r\n  const nextProps = nextFactory.props;\r\n  const skip = !nextFactory.shouldUpdate(prevProps, nextProps);\r\n  if (skip) {\r\n    fiberMountStore.deepWalking.set(false);\r\n    const diff = fiber.elementIdx - alternate.elementIdx;\r\n    const deep = diff !== 0;\r\n    fiber.mutate({\r\n      ...alternate,\r\n      alternate,\r\n      id: fiber.id,\r\n      idx: fiber.idx,\r\n      parent: fiber.parent,\r\n      nextSibling: fiber.nextSibling,\r\n      elementIdx: fiber.elementIdx,\r\n      effectTag: EffectTag.SKIP,\r\n    });\r\n    walkFiber(fiber.child, ({ nextFiber, stop }) => {\r\n      if (nextFiber === fiber.nextSibling || nextFiber === fiber.parent) {\r\n        return stop();\r\n      }\r\n      if (nextFiber.parent === alternate) {\r\n        nextFiber.parent = fiber;\r\n      }\r\n      if (deep) {\r\n        nextFiber.elementIdx += diff;\r\n        if (nextFiber.parent !== fiber && nextFiber.nativeElement) return stop();\r\n      } else if (nextFiber === alternate.child.child) return stop();\r\n    });\r\n    fiber.incrementChildrenElementsCount(alternate.childrenElementsCount);\r\n    if (alternate.effectHost) {\r\n      fiber.markEffectHost();\r\n    }\r\n    if (alternate.layoutEffectHost) {\r\n      fiber.markLayoutEffectHost();\r\n    }\r\n    if (alternate.insertionEffectHost) {\r\n      fiber.markInsertionEffectHost();\r\n    }\r\n    if (alternate.portalHost) {\r\n      fiber.markPortalHost();\r\n    }\r\n  }\r\n}\r\nfunction pertformInstance(parentInstance, idx, fiber) {\r\n  let instance = null;\r\n  if (hasChildrenProp(parentInstance)) {\r\n    const elements = detectIsArray(parentInstance.children[idx])\r\n      ? flatten([parentInstance.children[idx]])\r\n      : [parentInstance.children[idx]];\r\n    parentInstance.children.splice(idx, 1, ...elements);\r\n    instance = parentInstance.children[idx];\r\n    instance = mountInstance(fiber, instance);\r\n  }\r\n  if (detectIsComponentFactory(instance)) {\r\n    if (hasEffects(fiber)) {\r\n      fiber.markEffectHost();\r\n    }\r\n    if (hasLayoutEffects(fiber)) {\r\n      fiber.markLayoutEffectHost();\r\n    }\r\n    if (hasInsertionEffects(fiber)) {\r\n      fiber.markInsertionEffectHost();\r\n    }\r\n    if (platform.detectIsPortal(instance)) {\r\n      fiber.markPortalHost();\r\n    }\r\n  }\r\n  return instance;\r\n}\r\nfunction mountInstance(fiber, instance) {\r\n  const isComponentFactory = detectIsComponentFactory(instance);\r\n  const factory = instance;\r\n  if (isComponentFactory) {\r\n    try {\r\n      let result = factory.type(factory.props, factory.ref);\r\n      if (detectIsArray(result) && !detectIsFragment(factory)) {\r\n        result = Fragment({ slot: result });\r\n      } else if (detectIsString(result) || detectIsNumber(result)) {\r\n        result = Text(result);\r\n      }\r\n      factory.children = detectIsArray(result) ? flatten([result]) : [result];\r\n    } catch (err) {\r\n      factory.children = [];\r\n      fiber.setError(err);\r\n      error(err);\r\n    }\r\n  } else if (detectIsVirtualNodeFactory(instance)) {\r\n    instance = instance();\r\n  }\r\n  if (hasChildrenProp(instance)) {\r\n    instance.children = isComponentFactory\r\n      ? instance.children\r\n      : detectIsArray(instance.children)\r\n      ? flatten([instance.children])\r\n      : [instance.children];\r\n    for (let i = 0; i < instance.children.length; i++) {\r\n      if (instance.children[i]) continue;\r\n      instance.children[i] = supportConditional(instance.children[i]);\r\n    }\r\n    if (isComponentFactory && factory.children.length === 0) {\r\n      factory.children.push(createReplacer());\r\n    }\r\n  }\r\n  return instance;\r\n}\r\nfunction extractKeys(alternate, children) {\r\n  let nextFiber = alternate;\r\n  let idx = 0;\r\n  const prevKeys = [];\r\n  const nextKeys = [];\r\n  const prevKeysMap = {};\r\n  const nextKeysMap = {};\r\n  const keyedFibersMap = {};\r\n  const usedKeysMap = {};\r\n  while (nextFiber || idx < children.length) {\r\n    if (nextFiber) {\r\n      const key = getElementKey(nextFiber.instance);\r\n      const prevKey = detectIsEmpty(key) ? createIndexKey(idx) : key;\r\n      prevKeys.push(prevKey);\r\n      prevKeysMap[prevKey] = true;\r\n      keyedFibersMap[prevKey] = nextFiber;\r\n    }\r\n    if (children[idx]) {\r\n      const instance = children[idx];\r\n      const key = getElementKey(instance);\r\n      const nextKey = detectIsEmpty(key) ? createIndexKey(idx) : key;\r\n      if (process.env.NODE_ENV === 'development') {\r\n        if (usedKeysMap[nextKey]) {\r\n          error(`[Dark]: The key of node [${nextKey}] already has been used!`, [instance]);\r\n        }\r\n        usedKeysMap[nextKey] = true;\r\n      }\r\n      nextKeys.push(nextKey);\r\n      nextKeysMap[nextKey] = true;\r\n    }\r\n    nextFiber = nextFiber ? nextFiber.nextSibling : null;\r\n    idx++;\r\n  }\r\n  return {\r\n    prevKeys,\r\n    nextKeys,\r\n    prevKeysMap,\r\n    nextKeysMap,\r\n    keyedFibersMap,\r\n  };\r\n}\r\nfunction createIndexKey(idx) {\r\n  return `${INDEX_KEY}:${idx}`;\r\n}\r\nfunction getElementKey(instance) {\r\n  const key = detectIsComponentFactory(instance)\r\n    ? getComponentFactoryKey(instance)\r\n    : detectIsVirtualNodeFactory(instance)\r\n    ? getVirtualNodeFactoryKey(instance)\r\n    : detectIsTagVirtualNode(instance)\r\n    ? getTagVirtualNodeKey(instance)\r\n    : null;\r\n  return key;\r\n}\r\nfunction getElementFlag(instance) {\r\n  const flag = detectIsComponentFactory(instance)\r\n    ? getComponentFactoryFlag(instance)\r\n    : detectIsVirtualNodeFactory(instance)\r\n    ? getVirtualNodeFactoryFlag(instance)\r\n    : detectIsTagVirtualNode(instance)\r\n    ? getTagVirtualNodeFlag(instance)\r\n    : null;\r\n  return flag;\r\n}\r\nfunction supportConditional(instance) {\r\n  return detectIsFalsy(instance) ? createReplacer() : instance;\r\n}\r\nfunction getInstanceType(instance) {\r\n  return detectIsVirtualNodeFactory(instance)\r\n    ? instance[TYPE]\r\n    : detectIsTagVirtualNode(instance)\r\n    ? instance.name\r\n    : detectIsVirtualNode(instance)\r\n    ? instance.type\r\n    : detectIsComponentFactory(instance)\r\n    ? instance.type\r\n    : null;\r\n}\r\nfunction hasChildrenProp(element) {\r\n  return detectIsTagVirtualNode(element) || detectIsComponentFactory(element);\r\n}\r\nfunction detectIsSameComponentFactoryTypesWithSameKeys(prevInstance, nextInstance) {\r\n  if (\r\n    prevInstance &&\r\n    nextInstance &&\r\n    detectIsComponentFactory(prevInstance) &&\r\n    detectIsComponentFactory(nextInstance) &&\r\n    prevInstance.type === nextInstance.type\r\n  ) {\r\n    const prevKey = prevInstance ? getElementKey(prevInstance) : null;\r\n    const nextKey = nextInstance ? getElementKey(nextInstance) : null;\r\n    return prevKey === nextKey;\r\n  }\r\n  return false;\r\n}\r\nfunction getHook(alternate, prevInstance, nextInstance) {\r\n  if (alternate && detectIsSameComponentFactoryTypesWithSameKeys(prevInstance, nextInstance)) {\r\n    return alternate.hook;\r\n  }\r\n  if (detectIsComponentFactory(nextInstance)) {\r\n    return createHook();\r\n  }\r\n  return null;\r\n}\r\nfunction createHook() {\r\n  return {\r\n    idx: 0,\r\n    values: [],\r\n  };\r\n}\r\nfunction commitChanges() {\r\n  if (isHydrateZone.get() && detectHasRegisteredLazy()) return flush(null);\r\n  const wipFiber = wipRootStore.get();\r\n  const isDynamic = platform.detectIsDynamic();\r\n  const insertionEffects = insertionEffectsStore.get();\r\n  const deletions = deletionsStore.get();\r\n  const fromUpdate = isUpdateHookZone.get();\r\n  for (const fiber of deletions) {\r\n    unmountFiber(fiber);\r\n    platform.applyCommit(fiber);\r\n  }\r\n  isInsertionEffectsZone.set(true);\r\n  isDynamic && insertionEffects.forEach(fn => fn());\r\n  isInsertionEffectsZone.set(false);\r\n  fromUpdate && syncElementIndices(wipFiber);\r\n  commitWork(wipFiber, () => {\r\n    const layoutEffects = layoutEffectsStore.get();\r\n    const effects = effectsStore.get();\r\n    isLayoutEffectsZone.set(true);\r\n    isDynamic && layoutEffects.forEach(fn => fn());\r\n    isLayoutEffectsZone.set(false);\r\n    setTimeout(() => {\r\n      isDynamic && effects.forEach(fn => fn());\r\n    });\r\n    flush(wipFiber);\r\n  });\r\n}\r\nfunction flush(wipFiber) {\r\n  const fromUpdate = isUpdateHookZone.get();\r\n  wipRootStore.set(null);\r\n  deletionsStore.reset();\r\n  insertionEffectsStore.reset();\r\n  layoutEffectsStore.reset();\r\n  effectsStore.reset();\r\n  if (fromUpdate) {\r\n    isUpdateHookZone.set(false);\r\n  } else {\r\n    currentRootStore.set(wipFiber);\r\n  }\r\n}\r\nfunction commitWork(fiber, onComplete) {\r\n  walkFiber(fiber.child, ({ nextFiber, isReturn, resetIsDeepWalking, stop }) => {\r\n    const skip = nextFiber.effectTag === EffectTag.SKIP;\r\n    if (nextFiber === fiber) return stop();\r\n    if (skip) {\r\n      resetIsDeepWalking();\r\n    } else if (!isReturn) {\r\n      platform.applyCommit(nextFiber);\r\n    }\r\n    nextFiber.alternate = null;\r\n  });\r\n  fiber.alternate = null;\r\n  platform.finishCommitWork();\r\n  onComplete();\r\n}\r\nfunction getParentFiberWithNativeElement(fiber) {\r\n  let parentFiber = fiber;\r\n  while (parentFiber) {\r\n    parentFiber = parentFiber.parent;\r\n    if (parentFiber && parentFiber.nativeElement) {\r\n      break;\r\n    }\r\n  }\r\n  return parentFiber;\r\n}\r\nfunction syncElementIndices(fiber) {\r\n  const diff = fiber.childrenElementsCount - fiber.alternate.childrenElementsCount;\r\n  if (diff === 0) return;\r\n  const parentFiber = getParentFiberWithNativeElement(fiber);\r\n  let isRight = false;\r\n  fiber.incrementChildrenElementsCount(diff, true);\r\n  walkFiber(parentFiber.child, ({ nextFiber, resetIsDeepWalking, isReturn, stop }) => {\r\n    if (nextFiber === parentFiber) return stop();\r\n    if (nextFiber === fiber) {\r\n      isRight = true;\r\n      return resetIsDeepWalking();\r\n    }\r\n    if (nextFiber.nativeElement) {\r\n      resetIsDeepWalking();\r\n    }\r\n    if (isRight && !isReturn) {\r\n      nextFiber.elementIdx += diff;\r\n    }\r\n  });\r\n}\r\nfunction createUpdateCallback(options) {\r\n  const { rootId, fiber, forceStart = false, onStart } = options;\r\n  const callback = () => {\r\n    if (fiber.effectTag === EffectTag.DELETE) return;\r\n    forceStart && onStart();\r\n    if (fiber.isUsed) return;\r\n    !forceStart && onStart();\r\n    rootStore.set(rootId);\r\n    isUpdateHookZone.set(true);\r\n    fiberMountStore.reset();\r\n    fiber.alternate = new Fiber().mutate({ ...fiber });\r\n    fiber.marker = '🍒';\r\n    fiber.effectTag = EffectTag.UPDATE;\r\n    fiber.childrenElementsCount = 0;\r\n    fiber.child = null;\r\n    wipRootStore.set(fiber);\r\n    currentFiberStore.set(fiber);\r\n    fiber.instance = mountInstance(fiber, fiber.instance);\r\n    nextUnitOfWorkStore.set(fiber);\r\n  };\r\n  return callback;\r\n}\r\nconst detectIsBusy = () => Boolean(wipRootStore.get());\r\nexport { Fiber, workLoop, createUpdateCallback, detectIsBusy };\r\n//# sourceMappingURL=fiber.js.map\r\n","import { detectIsUndefined, detectIsArray, detectIsDepsDifferent } from '../helpers';\r\nimport { detectIsComponentFactory, createComponent } from '../component';\r\nimport { detectIsVirtualNodeFactory } from '../view';\r\nimport { currentFiberStore } from '../scope';\r\nimport { Fragment } from '../fragment';\r\nimport { $$memo } from '../memo';\r\nconst Memo = createComponent(({ slot }) => slot, { token: $$memo });\r\nfunction wrap(value, isDepsDifferent) {\r\n  const check = value => detectIsVirtualNodeFactory(value) || detectIsComponentFactory(value);\r\n  if (detectIsArray(value) ? check(value[0]) : check(value)) {\r\n    const slot = value;\r\n    const factory = Memo({\r\n      slot: Fragment({ slot }),\r\n    });\r\n    factory.shouldUpdate = () => isDepsDifferent;\r\n    return factory;\r\n  }\r\n  return value;\r\n}\r\nfunction processValue(getValue, isDepsDifferent = false) {\r\n  return wrap(getValue(), isDepsDifferent);\r\n}\r\nfunction useMemo(getValue, deps) {\r\n  const fiber = currentFiberStore.get();\r\n  const { hook } = fiber;\r\n  const { idx, values } = hook;\r\n  if (detectIsUndefined(values[idx])) {\r\n    const value = processValue(getValue);\r\n    values[idx] = {\r\n      deps,\r\n      value,\r\n    };\r\n    hook.idx++;\r\n    return value;\r\n  }\r\n  const hookValue = values[idx];\r\n  const prevDeps = hookValue.deps;\r\n  const isDepsDifferent = detectIsDepsDifferent(deps, prevDeps);\r\n  const computedGetValue = isDepsDifferent ? getValue : () => hookValue.value;\r\n  hookValue.deps = deps;\r\n  hookValue.value = processValue(computedGetValue, isDepsDifferent);\r\n  hook.idx++;\r\n  return hookValue.value;\r\n}\r\nexport { useMemo };\r\n//# sourceMappingURL=use-memo.js.map\r\n","import { platform } from '../platform';\r\nimport { getRootId, currentFiberStore, isInsertionEffectsZone, isLayoutEffectsZone, isBatchZone } from '../scope';\r\nimport { createUpdateCallback } from '../fiber';\r\nimport { useMemo } from '../use-memo';\r\nimport { dummyFn } from '../helpers';\r\nimport { runBatch as batch } from '../batch';\r\nfunction useUpdate(options) {\r\n  const rootId = getRootId();\r\n  const scope = useMemo(() => ({ fiber: null }), []);\r\n  scope.fiber = currentFiberStore.get();\r\n  const update = onStart => {\r\n    if (isInsertionEffectsZone.get()) return;\r\n    const callback = createUpdateCallback({\r\n      rootId,\r\n      fiber: scope.fiber,\r\n      forceStart: Boolean(options?.timeoutMs),\r\n      onStart: onStart || dummyFn,\r\n    });\r\n    if (isLayoutEffectsZone.get()) {\r\n      options = {\r\n        ...(options || {}),\r\n        forceSync: true,\r\n      };\r\n    }\r\n    if (isBatchZone.get()) {\r\n      batch(scope.fiber, () => platform.scheduleCallback(callback, options));\r\n    } else {\r\n      platform.scheduleCallback(callback, options);\r\n    }\r\n  };\r\n  return update;\r\n}\r\nexport { useUpdate };\r\n//# sourceMappingURL=use-update.js.map\r\n","import { isBatchZone } from '../scope';\r\nfunction batch(callback) {\r\n  isBatchZone.set(true);\r\n  callback();\r\n}\r\nfunction runBatch(fiber, callback) {\r\n  fiber.batched && clearTimeout(fiber.batched);\r\n  fiber.batched = setTimeout(() => {\r\n    isBatchZone.set(false);\r\n    fiber.batched = null;\r\n    callback();\r\n  });\r\n}\r\nexport { batch, runBatch };\r\n//# sourceMappingURL=batch.js.map\r\n","import { detectIsObject, detectIsNull, detectIsFunction } from '../helpers';\r\nimport { useUpdate } from '../use-update';\r\nimport { useMemo } from '../use-memo';\r\nimport { batch } from '../batch';\r\nfunction useReactiveState(value) {\r\n  if (!value) {\r\n    throw new Error('[Dark]: initial value is not object or array');\r\n  }\r\n  const update = useUpdate();\r\n  const reactiveValue = useMemo(() => reactive(detectIsFunction(value) ? value() : value, update), []);\r\n  return reactiveValue;\r\n}\r\nfunction reactive(value, update) {\r\n  let patched = value;\r\n  if (detectIsObject(value) && !detectIsNull(value)) {\r\n    patched = new Proxy(value, {\r\n      set: function (target, prop, value) {\r\n        if (target[prop] === value) return true;\r\n        target[prop] = reactive(value, update);\r\n        batch(() => {\r\n          update();\r\n        });\r\n        return true;\r\n      },\r\n    });\r\n    for (const key of Object.keys(value)) {\r\n      value[key] = reactive(value[key], update);\r\n    }\r\n  }\r\n  return patched;\r\n}\r\nexport { useReactiveState };\r\n//# sourceMappingURL=use-reactive-state.js.map\r\n","import { detectIsNumber, detectIsString, detectIsFunction } from '../helpers';\r\nimport { View, Text } from '../view';\r\nfunction getChildren(children) {\r\n  children = children.map(x => (detectIsString(x) || detectIsNumber(x) ? Text(x.toString()) : x));\r\n  return children ? (Array.isArray(children) ? [...children] : [children]) : [];\r\n}\r\nfunction createElement(tag, props, ...children) {\r\n  if (detectIsString(tag)) {\r\n    return View({\r\n      ...props,\r\n      as: tag,\r\n      slot: getChildren(children),\r\n    });\r\n  }\r\n  if (detectIsFunction(tag)) {\r\n    let slot = getChildren(children);\r\n    slot = slot.length === 1 ? slot[0] : slot;\r\n    return tag({ ...props, slot });\r\n  }\r\n  return null;\r\n}\r\nexport { createElement, createElement as h };\r\n//# sourceMappingURL=element.js.map\r\n","import { createComponent, detectIsComponentFactory, useMemo } from '@dark-engine/core';\r\nconst $$portal = Symbol('portal');\r\nfunction createPortal(slot, container) {\r\n  if (!(container instanceof Element)) {\r\n    throw new Error(`[Dark]: createPortal receives only Element as container!`);\r\n  }\r\n  return Portal({ [$$portal]: container, slot });\r\n}\r\nconst Portal = createComponent(\r\n  ({ slot, ...rest }) => {\r\n    useMemo(() => (rest[$$portal].innerHTML = ''), []);\r\n    return slot;\r\n  },\r\n  { token: $$portal },\r\n);\r\nconst detectIsPortal = factory => detectIsComponentFactory(factory) && factory.token === $$portal;\r\nconst getPortalContainer = factory => (detectIsPortal(factory) ? factory.props[$$portal] : null);\r\nfunction unmountPortal(fiber) {\r\n  const container = getPortalContainer(fiber.instance);\r\n  if (container) {\r\n    container.innerHTML = '';\r\n  }\r\n}\r\nexport { createPortal, detectIsPortal, getPortalContainer, unmountPortal };\r\n//# sourceMappingURL=portal.js.map\r\n","import { detectIsFunction, eventsStore } from '@dark-engine/core';\r\nclass SyntheticEvent {\r\n  type = '';\r\n  sourceEvent = null;\r\n  target = null;\r\n  propagation = true;\r\n  constructor(options) {\r\n    this.type = options.sourceEvent.type;\r\n    this.sourceEvent = options.sourceEvent;\r\n    this.target = options.target;\r\n  }\r\n  stopPropagation() {\r\n    this.propagation = false;\r\n    this.sourceEvent.stopPropagation();\r\n  }\r\n  preventDefault() {\r\n    this.sourceEvent.preventDefault();\r\n  }\r\n  getPropagation() {\r\n    return this.propagation;\r\n  }\r\n}\r\nfunction delegateEvent(options) {\r\n  const { target, eventName, handler } = options;\r\n  const eventsMap = eventsStore.get();\r\n  const handlerMap = eventsMap.get(eventName);\r\n  if (!handlerMap) {\r\n    const rootHandler = event => {\r\n      const fireEvent = eventsMap.get(eventName).get(event.target);\r\n      const target = event.target;\r\n      let syntheticEvent = null;\r\n      if (detectIsFunction(fireEvent)) {\r\n        syntheticEvent = new SyntheticEvent({\r\n          sourceEvent: event,\r\n          target,\r\n        });\r\n        fireEvent(syntheticEvent);\r\n      }\r\n      if (syntheticEvent ? syntheticEvent.getPropagation() : target.parentElement) {\r\n        target.parentElement.dispatchEvent(new event.constructor(event.type, event));\r\n      }\r\n    };\r\n    eventsMap.set(eventName, new WeakMap([[target, handler]]));\r\n    document.addEventListener(eventName, rootHandler, true);\r\n    eventsStore.addUnsubscriber(() => document.removeEventListener(eventName, rootHandler, true));\r\n  } else {\r\n    handlerMap.set(target, handler);\r\n  }\r\n}\r\nconst detectIsEvent = attrName => attrName.startsWith('on');\r\nconst getEventName = attrName => attrName.slice(2, attrName.length).toLowerCase();\r\nexport { SyntheticEvent, delegateEvent, detectIsEvent, getEventName };\r\n//# sourceMappingURL=events.js.map\r\n","import {\r\n  ATTR_KEY,\r\n  ATTR_REF,\r\n  ATTR_FLAG,\r\n  EffectTag,\r\n  detectIsFunction,\r\n  detectIsUndefined,\r\n  detectIsBoolean,\r\n  keyBy,\r\n  NodeType,\r\n  detectIsVirtualNode,\r\n  detectIsTagVirtualNode,\r\n  detectIsTextVirtualNode,\r\n  walkFiber,\r\n  isHydrateZone,\r\n  applyRef as applyRef$,\r\n} from '@dark-engine/core';\r\nimport { detectIsPortal, getPortalContainer } from '../portal';\r\nimport { delegateEvent, detectIsEvent, getEventName } from '../events';\r\nimport { SVG_TAG_NAMES, VOID_TAG_NAMES } from '../constants';\r\nconst attrBlackListMap = {\r\n  [ATTR_KEY]: true,\r\n  [ATTR_REF]: true,\r\n  [ATTR_FLAG]: true,\r\n};\r\nlet fragmentsMap = new Map();\r\nlet moves = [];\r\nlet trackUpdate = null;\r\nconst svgTagNamesMap = keyBy(SVG_TAG_NAMES.split(','), x => x);\r\nconst voidTagNamesMap = keyBy(VOID_TAG_NAMES.split(','), x => x);\r\nconst createNativeElementMap = {\r\n  [NodeType.TAG]: vNode => {\r\n    const tagNode = vNode;\r\n    const node = detectIsSvgElement(tagNode.name)\r\n      ? document.createElementNS('http://www.w3.org/2000/svg', tagNode.name)\r\n      : document.createElement(tagNode.name);\r\n    return node;\r\n  },\r\n  [NodeType.TEXT]: vNode => {\r\n    const textNode = vNode;\r\n    const node = document.createTextNode(textNode.value);\r\n    return node;\r\n  },\r\n  [NodeType.COMMENT]: vNode => {\r\n    const commentNode = vNode;\r\n    const node = document.createComment(commentNode.value);\r\n    return node;\r\n  },\r\n};\r\nfunction createNativeElement(vNode) {\r\n  return createNativeElementMap[vNode.type](vNode);\r\n}\r\nfunction detectIsSvgElement(tagName) {\r\n  return Boolean(svgTagNamesMap[tagName]);\r\n}\r\nfunction detectIsVoidElement(tagName) {\r\n  return Boolean(voidTagNamesMap[tagName]);\r\n}\r\nfunction applyRef(ref, element) {\r\n  applyRef$(ref, element);\r\n}\r\nfunction addAttributes(element, vNode) {\r\n  if (!detectIsTagVirtualNode(vNode)) return;\r\n  const attrNames = Object.keys(vNode.attrs);\r\n  const tagElement = element;\r\n  for (const attrName of attrNames) {\r\n    const attrValue = vNode.attrs[attrName];\r\n    if (attrName === ATTR_REF) {\r\n      applyRef(attrValue, element);\r\n      continue;\r\n    }\r\n    if (detectIsFunction(attrValue)) {\r\n      if (detectIsEvent(attrName)) {\r\n        delegateEvent({\r\n          target: tagElement,\r\n          handler: attrValue,\r\n          eventName: getEventName(attrName),\r\n        });\r\n      }\r\n    } else if (!detectIsUndefined(attrValue) && !attrBlackListMap[attrName]) {\r\n      const stop = patchProperties({\r\n        tagName: vNode.name,\r\n        element: tagElement,\r\n        attrValue,\r\n        attrName,\r\n      });\r\n      !stop && tagElement.setAttribute(attrName, attrValue);\r\n    }\r\n  }\r\n}\r\nfunction updateAttributes(element, vNode, nextVNode) {\r\n  const attrNames = new Set([...Object.keys(vNode.attrs), ...Object.keys(nextVNode.attrs)]);\r\n  const tagElement = element;\r\n  for (const attrName of attrNames) {\r\n    const prevAttrValue = vNode.attrs[attrName];\r\n    const nextAttrValue = nextVNode.attrs[attrName];\r\n    if (attrName === ATTR_REF) {\r\n      applyRef(prevAttrValue, element);\r\n      continue;\r\n    }\r\n    if (!detectIsUndefined(nextAttrValue)) {\r\n      if (detectIsFunction(prevAttrValue)) {\r\n        if (detectIsEvent(attrName) && prevAttrValue !== nextAttrValue) {\r\n          delegateEvent({\r\n            target: tagElement,\r\n            handler: nextAttrValue,\r\n            eventName: getEventName(attrName),\r\n          });\r\n        }\r\n      } else if (!attrBlackListMap[attrName] && prevAttrValue !== nextAttrValue) {\r\n        const stop = patchProperties({\r\n          tagName: nextVNode.name,\r\n          element: tagElement,\r\n          attrValue: nextAttrValue,\r\n          attrName,\r\n        });\r\n        !stop && tagElement.setAttribute(attrName, nextAttrValue);\r\n      }\r\n    } else {\r\n      tagElement.removeAttribute(attrName);\r\n    }\r\n  }\r\n}\r\nfunction patchProperties(options) {\r\n  const { tagName, element, attrName, attrValue } = options;\r\n  const fn = patchPropertiesSpecialCasesMap[tagName];\r\n  let stop = fn ? fn(element, attrName, attrValue) : false;\r\n  if (canSetProperty(Object.getPrototypeOf(element), attrName)) {\r\n    element[attrName] = attrValue;\r\n  }\r\n  if (!stop && detectIsBoolean(attrValue)) {\r\n    stop = !attrName.includes('-');\r\n  }\r\n  return stop;\r\n}\r\nfunction canSetProperty(prototype, key) {\r\n  return prototype.hasOwnProperty(key) && Boolean(Object.getOwnPropertyDescriptor(prototype, key)?.set);\r\n}\r\nconst patchPropertiesSpecialCasesMap = {\r\n  input: (element, attrName, attrValue) => {\r\n    if (attrName === 'value' && detectIsBoolean(attrValue)) {\r\n      element.checked = attrValue;\r\n    } else if (attrName === 'autoFocus') {\r\n      element.autofocus = Boolean(attrValue);\r\n    }\r\n    return false;\r\n  },\r\n  textarea: (element, attrName, attrValue) => {\r\n    if (attrName === 'value') {\r\n      element.innerHTML = String(attrValue);\r\n      return true;\r\n    }\r\n    return false;\r\n  },\r\n};\r\nfunction getParentFiberWithNativeElement(fiber) {\r\n  let nextFiber = fiber;\r\n  while (nextFiber) {\r\n    nextFiber = nextFiber.parent;\r\n    if (detectIsPortal(nextFiber.instance)) {\r\n      nextFiber.nativeElement = getPortalContainer(nextFiber.instance);\r\n    }\r\n    if (nextFiber.nativeElement) return nextFiber;\r\n  }\r\n  return nextFiber;\r\n}\r\nfunction append(fiber, parentElement) {\r\n  const { fragment } = fragmentsMap.get(parentElement) || {\r\n    fragment: document.createDocumentFragment(),\r\n    callback: () => {},\r\n  };\r\n  fragmentsMap.set(parentElement, {\r\n    fragment,\r\n    callback: () => {\r\n      parentElement.appendChild(fragment);\r\n    },\r\n  });\r\n  fragment.appendChild(fiber.nativeElement);\r\n}\r\nfunction insert(fiber, parentElement) {\r\n  parentElement.insertBefore(fiber.nativeElement, parentElement.childNodes[fiber.elementIdx]);\r\n}\r\nfunction commitCreation(fiber) {\r\n  const parentFiber = getParentFiberWithNativeElement(fiber);\r\n  const parentElement = parentFiber.nativeElement;\r\n  const childNodes = parentElement.childNodes;\r\n  if (isHydrateZone.get()) {\r\n    const nativeElement = childNodes[fiber.elementIdx];\r\n    if (\r\n      detectIsTextVirtualNode(fiber.instance) &&\r\n      nativeElement instanceof Text &&\r\n      fiber.instance.value.length !== nativeElement.length\r\n    ) {\r\n      nativeElement.splitText(fiber.instance.value.length);\r\n    }\r\n    fiber.nativeElement = nativeElement;\r\n  } else {\r\n    if (childNodes.length === 0 || fiber.elementIdx > childNodes.length - 1) {\r\n      const vNode = parentFiber.instance;\r\n      !detectIsVoidElement(vNode.name) && append(fiber, parentElement);\r\n    } else {\r\n      insert(fiber, parentElement);\r\n    }\r\n  }\r\n  addAttributes(fiber.nativeElement, fiber.instance);\r\n}\r\nfunction commitUpdate(fiber) {\r\n  const element = fiber.nativeElement;\r\n  const prevInstance = fiber.alternate.instance;\r\n  const nextInstance = fiber.instance;\r\n  if (\r\n    detectIsTextVirtualNode(prevInstance) &&\r\n    detectIsTextVirtualNode(nextInstance) &&\r\n    prevInstance.value !== nextInstance.value\r\n  ) {\r\n    return (element.textContent = nextInstance.value);\r\n  }\r\n  if (detectIsTagVirtualNode(prevInstance) && detectIsTagVirtualNode(nextInstance)) {\r\n    return updateAttributes(element, prevInstance, nextInstance);\r\n  }\r\n}\r\nfunction commitDeletion(fiber) {\r\n  const parentFiber = getParentFiberWithNativeElement(fiber);\r\n  walkFiber(fiber, ({ nextFiber, isReturn, resetIsDeepWalking, stop }) => {\r\n    if (nextFiber === fiber.nextSibling || nextFiber === fiber.parent) {\r\n      return stop();\r\n    }\r\n    if (!isReturn && nextFiber.nativeElement) {\r\n      !detectIsPortal(nextFiber.instance) && parentFiber.nativeElement.removeChild(nextFiber.nativeElement);\r\n      return resetIsDeepWalking();\r\n    }\r\n  });\r\n}\r\nfunction move(fiber) {\r\n  const sourceNodes = collectElements(fiber);\r\n  const sourceNode = sourceNodes[0];\r\n  const parentElement = sourceNode.parentElement;\r\n  const sourceFragment = new DocumentFragment();\r\n  const elementIdx = fiber.elementIdx;\r\n  let idx = 0;\r\n  const move = () => {\r\n    for (let i = 1; i < sourceNodes.length; i++) {\r\n      parentElement.removeChild(parentElement.childNodes[elementIdx + 1]);\r\n    }\r\n    parentElement.replaceChild(sourceFragment, parentElement.childNodes[elementIdx]);\r\n  };\r\n  for (const node of sourceNodes) {\r\n    parentElement.insertBefore(document.createComment(`${elementIdx}:${idx}`), node);\r\n    sourceFragment.appendChild(node);\r\n    idx++;\r\n  }\r\n  moves.push(move);\r\n}\r\nfunction collectElements(fiber) {\r\n  const store = [];\r\n  walkFiber(fiber, ({ nextFiber, isReturn, resetIsDeepWalking, stop }) => {\r\n    if (nextFiber === fiber.nextSibling || nextFiber === fiber.parent) {\r\n      return stop();\r\n    }\r\n    if (!isReturn && nextFiber.nativeElement) {\r\n      !detectIsPortal(nextFiber.instance) && store.push(nextFiber.nativeElement);\r\n      return resetIsDeepWalking();\r\n    }\r\n  });\r\n  return store;\r\n}\r\nconst applyCommitMap = {\r\n  [EffectTag.CREATE]: fiber => {\r\n    if (fiber.nativeElement === null) return;\r\n    trackUpdate && trackUpdate(fiber.nativeElement);\r\n    commitCreation(fiber);\r\n  },\r\n  [EffectTag.UPDATE]: fiber => {\r\n    if (fiber.move) {\r\n      move(fiber);\r\n      fiber.move = false;\r\n    }\r\n    if (\r\n      fiber.nativeElement === null ||\r\n      !detectIsVirtualNode(fiber.alternate.instance) ||\r\n      !detectIsVirtualNode(fiber.instance)\r\n    ) {\r\n      return;\r\n    }\r\n    trackUpdate && trackUpdate(fiber.nativeElement);\r\n    commitUpdate(fiber);\r\n  },\r\n  [EffectTag.DELETE]: fiber => commitDeletion(fiber),\r\n  [EffectTag.SKIP]: () => {},\r\n};\r\nfunction applyCommit(fiber) {\r\n  applyCommitMap[fiber.effectTag](fiber);\r\n}\r\nfunction finishCommitWork() {\r\n  for (const { callback } of fragmentsMap.values()) {\r\n    callback();\r\n  }\r\n  for (const move of moves) {\r\n    move();\r\n  }\r\n  fragmentsMap = new Map();\r\n  moves = [];\r\n  isHydrateZone.set(false);\r\n}\r\nfunction setTrackUpdate(fn) {\r\n  trackUpdate = fn;\r\n}\r\nexport { createNativeElement, applyCommit, finishCommitWork, setTrackUpdate };\r\n//# sourceMappingURL=dom.js.map\r\n","export const SVG_TAG_NAMES =\r\n  'svg,animate,animateMotion,animateTransform,circle,clipPath,defs,desc,ellipse,feBlend,feColorMatrix,feComponentTransfer,feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,feDistantLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,foreignObject,g,image,line,linearGradient,marker,mask,metadata,mpath,path,pattern,polygon,polyline,radialGradient,rect,stop,switch,symbol,text,textPath,tspan,use,view';\r\nexport const VOID_TAG_NAMES = 'area,base,br,col,embed,hr,img,input,link,meta,param,source,track,wbr';\r\n//# sourceMappingURL=constants.js.map\r\n","import { detectIsObject, detectIsNull, detectIsFunction } from '../helpers';\r\nfunction forwardRef(component) {\r\n  return props => {\r\n    const { ref, ...rest } = props || {};\r\n    return component(rest, ref);\r\n  };\r\n}\r\nfunction detectIsMutableRef(ref) {\r\n  if (!detectIsObject(ref) || detectIsNull(ref)) return false;\r\n  const mutableRef = ref;\r\n  for (const key in mutableRef) {\r\n    if (key === 'current' && mutableRef.hasOwnProperty(key)) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\nfunction applyRef(ref, current) {\r\n  if (detectIsFunction(ref)) {\r\n    ref(current);\r\n  } else if (detectIsMutableRef(ref)) {\r\n    ref.current = current;\r\n  }\r\n}\r\nexport { forwardRef, detectIsMutableRef, applyRef };\r\n//# sourceMappingURL=ref.js.map\r\n","import { getTime, workLoop, TaskPriority, detectIsBusy } from '@dark-engine/core';\r\nconst queueByPriority = {\r\n  animations: [],\r\n  hight: [],\r\n  normal: [],\r\n  low1: [],\r\n  low2: [],\r\n};\r\nconst YEILD_INTERVAL = 4;\r\nconst MAX_LOW_PRIORITY_TASKS_LIMIT = 100000;\r\nlet scheduledCallback = null;\r\nlet deadline = 0;\r\nlet isMessageLoopRunning = false;\r\nlet currentTask = null;\r\nclass Task {\r\n  static nextTaskId = 0;\r\n  id;\r\n  time;\r\n  timeoutMs;\r\n  priority;\r\n  forceSync;\r\n  callback;\r\n  constructor(options) {\r\n    this.id = ++Task.nextTaskId;\r\n    this.time = options.time;\r\n    this.timeoutMs = options.timeoutMs;\r\n    this.priority = options.priority;\r\n    this.forceSync = options.forceSync;\r\n    this.callback = options.callback;\r\n  }\r\n}\r\nconst shouldYeildToHost = () => getTime() >= deadline;\r\nfunction scheduleCallback(callback, options) {\r\n  const { priority = TaskPriority.NORMAL, timeoutMs = 0, forceSync = false } = options || {};\r\n  const task = new Task({ time: getTime(), timeoutMs, priority, forceSync, callback });\r\n  const map = {\r\n    [TaskPriority.ANIMATION]: () => queueByPriority.animations.push(task),\r\n    [TaskPriority.HIGH]: () => queueByPriority.hight.push(task),\r\n    [TaskPriority.NORMAL]: () => queueByPriority.normal.push(task),\r\n    [TaskPriority.LOW]: () => (task.timeoutMs > 0 ? queueByPriority.low2.push(task) : queueByPriority.low1.push(task)),\r\n  };\r\n  map[task.priority]();\r\n  executeTasks();\r\n}\r\nfunction pick(queue) {\r\n  if (!queue.length) return false;\r\n  currentTask = queue.shift();\r\n  const isAnimation = currentTask.priority === TaskPriority.ANIMATION;\r\n  currentTask.callback();\r\n  if (currentTask.forceSync || isAnimation) {\r\n    requestCallbackSync(workLoop);\r\n  } else {\r\n    requestCallback(workLoop);\r\n  }\r\n  return true;\r\n}\r\nfunction executeTasks() {\r\n  const isBusy = detectIsBusy();\r\n  if (!isBusy) {\r\n    checkOverdueTasks() ||\r\n      gc() ||\r\n      pick(queueByPriority.animations) ||\r\n      pick(queueByPriority.hight) ||\r\n      pick(queueByPriority.normal) ||\r\n      requestIdleCallback(() => pick(queueByPriority.low1) || pick(queueByPriority.low2));\r\n  }\r\n}\r\nfunction gc() {\r\n  if (queueByPriority.low1.length > MAX_LOW_PRIORITY_TASKS_LIMIT) {\r\n    queueByPriority.low1 = [];\r\n  }\r\n  return false;\r\n}\r\nfunction checkOverdueTasks() {\r\n  const [task] = queueByPriority.low2;\r\n  if (task && getTime() - task.time > task.timeoutMs) {\r\n    pick(queueByPriority.low2);\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\nfunction performWorkUntilDeadline() {\r\n  if (scheduledCallback) {\r\n    deadline = getTime() + YEILD_INTERVAL;\r\n    try {\r\n      const hasMoreWork = scheduledCallback();\r\n      if (!hasMoreWork) {\r\n        currentTask = null;\r\n        isMessageLoopRunning = false;\r\n        scheduledCallback = null;\r\n        executeTasks();\r\n      } else {\r\n        port.postMessage(null);\r\n      }\r\n    } catch (error) {\r\n      port.postMessage(null);\r\n      throw error;\r\n    }\r\n  } else {\r\n    isMessageLoopRunning = false;\r\n  }\r\n}\r\nfunction requestCallback(callback) {\r\n  if (process.env.NODE_ENV === 'test') {\r\n    return requestCallbackSync(callback);\r\n  }\r\n  scheduledCallback = callback;\r\n  if (!isMessageLoopRunning) {\r\n    isMessageLoopRunning = true;\r\n    port.postMessage(null);\r\n  }\r\n}\r\nfunction requestCallbackSync(callback) {\r\n  while (callback()) {}\r\n  executeTasks();\r\n  currentTask = null;\r\n}\r\nlet channel = null;\r\nlet port = null;\r\nfunction setup() {\r\n  if (process.env.NODE_ENV === 'test') {\r\n    return;\r\n  }\r\n  channel = new MessageChannel();\r\n  port = channel.port2;\r\n  channel.port1.onmessage = performWorkUntilDeadline;\r\n}\r\nsetup();\r\nexport { shouldYeildToHost, scheduleCallback };\r\n//# sourceMappingURL=scheduler.js.map\r\n","import {\r\n  ROOT,\r\n  Fiber,\r\n  EffectTag,\r\n  platform,\r\n  flatten,\r\n  detectIsUndefined,\r\n  TagVirtualNode,\r\n  rootStore,\r\n  wipRootStore,\r\n  currentRootStore,\r\n  nextUnitOfWorkStore,\r\n  fiberMountStore,\r\n  TaskPriority,\r\n  createReplacer,\r\n  isInsertionEffectsZone,\r\n  isLayoutEffectsZone,\r\n  isHydrateZone,\r\n} from '@dark-engine/core';\r\nimport { createNativeElement, applyCommit, finishCommitWork } from '../dom';\r\nimport { detectIsPortal, unmountPortal } from '../portal';\r\nimport { scheduleCallback, shouldYeildToHost } from '../scheduler';\r\nlet isInjected = false;\r\nconst roots = new Map();\r\nfunction inject() {\r\n  platform.createNativeElement = createNativeElement;\r\n  platform.requestAnimationFrame = requestAnimationFrame.bind(this);\r\n  platform.cancelAnimationFrame = cancelAnimationFrame.bind(this);\r\n  platform.scheduleCallback = scheduleCallback;\r\n  platform.shouldYeildToHost = shouldYeildToHost;\r\n  platform.applyCommit = applyCommit;\r\n  platform.finishCommitWork = finishCommitWork;\r\n  platform.detectIsDynamic = () => true;\r\n  platform.detectIsPortal = detectIsPortal;\r\n  platform.unmountPortal = unmountPortal;\r\n  platform.restart = () => {};\r\n  isInjected = true;\r\n}\r\nfunction render(element, container, hydrate = false) {\r\n  !isInjected && inject();\r\n  if (!(container instanceof Element)) {\r\n    throw new Error(`[Dark]: render receives only Element as container!`);\r\n  }\r\n  const isMounted = !detectIsUndefined(roots.get(container));\r\n  let rootId = null;\r\n  if (!isMounted) {\r\n    rootId = roots.size;\r\n    roots.set(container, rootId);\r\n    if (!hydrate) {\r\n      container.innerHTML = '';\r\n    }\r\n  } else {\r\n    rootId = roots.get(container);\r\n  }\r\n  if (isInsertionEffectsZone.get(rootId)) return;\r\n  const callback = () => {\r\n    rootStore.set(rootId);\r\n    const currentRoot = currentRootStore.get();\r\n    const isUpdate = Boolean(currentRoot);\r\n    const fiber = new Fiber().mutate({\r\n      nativeElement: container,\r\n      instance: new TagVirtualNode(ROOT, {}, flatten([element || createReplacer()])),\r\n      alternate: currentRoot,\r\n      effectTag: isUpdate ? EffectTag.UPDATE : EffectTag.CREATE,\r\n    });\r\n    fiberMountStore.reset();\r\n    wipRootStore.set(fiber);\r\n    isHydrateZone.set(hydrate);\r\n    nextUnitOfWorkStore.set(fiber);\r\n  };\r\n  platform.scheduleCallback(callback, {\r\n    priority: TaskPriority.NORMAL,\r\n    forceSync: hydrate || isLayoutEffectsZone.get(),\r\n  });\r\n}\r\nexport { render, roots };\r\n//# sourceMappingURL=render.js.map\r\n","import {\r\n  h,\r\n  Fragment,\r\n  createComponent,\r\n  useEffect,\r\n  useLayoutEffect,\r\n  useMemo,\r\n  useState,\r\n  useReactiveState,\r\n  useRef,\r\n  type DarkElement,\r\n  type MutableRef,\r\n  type Ref,\r\n  type ComponentFactory,\r\n  type StandardComponentProps,\r\n} from '@dark-engine/core';\r\nimport { createRoot } from '@dark-engine/platform-browser';\r\n\r\ntype Item = {\r\n  id: number;\r\n  name: string;\r\n};\r\n\r\nfunction randomize(list: Array<Item>) {\r\n  let currentIndex = list.length;\r\n  let randomIndex: number;\r\n\r\n  while (currentIndex != 0) {\r\n    randomIndex = Math.floor(Math.random() * currentIndex);\r\n    currentIndex--;\r\n\r\n    [list[currentIndex], list[randomIndex]] = [list[randomIndex], list[currentIndex]];\r\n  }\r\n\r\n  return list;\r\n}\r\n\r\nconst shuffle = (count: number) => {\r\n  let nextId = 0;\r\n  const items = Array(count)\r\n    .fill(0)\r\n    .map(() => ({\r\n      id: ++nextId,\r\n      name: `${nextId}`,\r\n    }));\r\n  const list = randomize(items);\r\n\r\n  return list;\r\n};\r\n\r\nconst forceBrowserReflow = () => document.body.clientHeight;\r\n\r\ntype AnimatedListProps<T = unknown> = {\r\n  items: Array<T>;\r\n  getKey: (x: T) => Key;\r\n  duration?: number;\r\n  slot: (options: AnimatedListSlotOptions<T>) => DarkElement;\r\n};\r\n\r\ntype Key = string | number;\r\n\r\ntype AnimatedListSlotOptions<T> = {\r\n  items: Array<T>;\r\n  containerRef: MutableRef<HTMLElement>;\r\n  itemRef: (idx: number, key: Key) => (ref: HTMLElement) => void;\r\n};\r\n\r\nconst XAnimatedList = createComponent<AnimatedListProps>(({ items: xItems, getKey, duration = 1000, slot }) => {\r\n  const [items, setItems] = useState(xItems);\r\n  const containerRef = useRef<HTMLElement>(null);\r\n  const scope = useMemo<Scope>(\r\n    () => ({\r\n      refs: { indexed: {}, keyed: {} },\r\n      rects: {},\r\n      items,\r\n      timerId: null,\r\n      timerId2: null,\r\n      firstRender: true,\r\n      isTransition: false,\r\n    }),\r\n    [],\r\n  );\r\n\r\n  useEffect(() => {\r\n    const setRects = () => {\r\n      let idx = 0;\r\n\r\n      for (const node of Array.from(containerRef.current.children)) {\r\n        scope.rects[idx] = node.getBoundingClientRect();\r\n        idx++;\r\n      }\r\n    };\r\n\r\n    setRects();\r\n    window.addEventListener('resize', setRects);\r\n\r\n    return () => window.removeEventListener('resize', setRects);\r\n  }, []);\r\n\r\n  useLayoutEffect(() => {\r\n    if (scope.firstRender) return;\r\n    scope.isTransition = true;\r\n    !scope.timerId && addStyles(items, true);\r\n    scope.items = xItems;\r\n    requestAnimationFrame(() => {\r\n      forceBrowserReflow();\r\n      addStyles(xItems, false);\r\n    });\r\n  }, [xItems]);\r\n\r\n  useEffect(() => {\r\n    if (scope.firstRender) return;\r\n    removeStyles(items);\r\n  }, [items]);\r\n\r\n  useEffect(() => {\r\n    scope.firstRender = false;\r\n  }, [items]);\r\n\r\n  const addStyles = (items: Array<unknown>, mount: boolean) => {\r\n    let idx = 0;\r\n\r\n    for (const item of items) {\r\n      const rect = scope.rects[idx];\r\n      const key = getKey(item);\r\n      const ref = scope.refs.keyed[key];\r\n\r\n      ref.style.setProperty('position', 'absolute');\r\n      ref.style.setProperty('width', `${rect.width}px`);\r\n      ref.style.setProperty('height', `${rect.height}px`);\r\n      ref.style.setProperty('transform', `translate(${rect.left}px, ${rect.top}px)`);\r\n\r\n      if (!mount) {\r\n        ref.style.setProperty(\r\n          'transition',\r\n          `transform ${duration}ms ease-in-out, opacity ${duration / 2}ms ease-in-out`,\r\n        );\r\n        ref.style.setProperty('opacity', `0.5`);\r\n      }\r\n\r\n      idx++;\r\n    }\r\n\r\n    !mount && scope.timerId && window.clearTimeout(scope.timerId);\r\n    scope.timerId = window.setTimeout(() => {\r\n      scope.timerId = null;\r\n      setItems(scope.items);\r\n    }, duration);\r\n  };\r\n\r\n  const removeStyles = (items: Array<unknown>) => {\r\n    for (const item of items) {\r\n      const key = getKey(item);\r\n      const ref = scope.refs.keyed[key];\r\n\r\n      ref.style.setProperty('transition', `opacity ${duration / 2}ms ease-in-out`);\r\n      ref.style.setProperty('opacity', `1`);\r\n      ref.style.removeProperty('position');\r\n      ref.style.removeProperty('width');\r\n      ref.style.removeProperty('height');\r\n      ref.style.removeProperty('transform');\r\n    }\r\n\r\n    scope.isTransition = false;\r\n\r\n    scope.timerId2 && window.clearTimeout(scope.timerId2);\r\n    scope.timerId2 = window.setTimeout(() => {\r\n      scope.timerId2 = null;\r\n      if (scope.isTransition) return;\r\n      for (const item of items) {\r\n        const key = getKey(item);\r\n        const ref = scope.refs.keyed[key];\r\n\r\n        ref.removeAttribute('style');\r\n      }\r\n    }, duration / 2);\r\n  };\r\n\r\n  const itemRef = (idx: number, key: Key) => (ref: HTMLElement) => {\r\n    scope.refs.indexed[idx] = ref;\r\n    scope.refs.keyed[key] = ref;\r\n  };\r\n\r\n  return slot({ items, containerRef, itemRef });\r\n});\r\n\r\ntype Scope<T = unknown> = {\r\n  refs: {\r\n    indexed: Record<number, HTMLElement>;\r\n    keyed: Record<number, HTMLElement>;\r\n  };\r\n  rects: Record<number, DOMRect>;\r\n  items: Array<T>;\r\n  timerId: number;\r\n  timerId2: number;\r\n  firstRender: boolean;\r\n  isTransition: boolean;\r\n};\r\n\r\ntype MergedProps<T> = AnimatedListProps<T> & StandardComponentProps;\r\n\r\nconst AnimatedList = XAnimatedList as <T>(props?: MergedProps<T>, ref?: Ref) => ComponentFactory<MergedProps<T>>;\r\n\r\n// usage\r\n\r\nconst App = createComponent(() => {\r\n  const state = useReactiveState({ items: shuffle(100) });\r\n\r\n  const handleShuffle = () => {\r\n    state.items = shuffle(state.items.length);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div class='content'>\r\n        <AnimatedList items={state.items} getKey={x => x.id} duration={1000}>\r\n          {({ items, containerRef, itemRef }) => {\r\n            return (\r\n              <div ref={containerRef} class='grid'>\r\n                {items.map((x, idx) => {\r\n                  const key = x.id;\r\n\r\n                  return (\r\n                    <div ref={itemRef(idx, key)} key={key} class='grid-item'>\r\n                      <span>{x.name}</span>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            );\r\n          }}\r\n        </AnimatedList>\r\n        <div class='button-layout'>\r\n          <button class='button' onClick={handleShuffle}>\r\n            shuffle\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n});\r\n\r\ncreateRoot(document.getElementById('root')).render(<App />);\r\n","import { detectIsFunction } from '../helpers';\r\nimport { useUpdate } from '../use-update';\r\nimport { useMemo } from '../use-memo';\r\nimport { useCallback } from '../use-callback';\r\nimport { TaskPriority } from '../constants';\r\nfunction useState(initialValue, options) {\r\n  const update = useUpdate(options);\r\n  const store = useMemo(\r\n    () => ({\r\n      value: detectIsFunction(initialValue) ? initialValue() : initialValue,\r\n    }),\r\n    [],\r\n  );\r\n  const setState = useCallback(sourceValue => {\r\n    const prevValue = store.value;\r\n    const newValue = detectIsFunction(sourceValue) ? sourceValue(prevValue) : sourceValue;\r\n    if (!Object.is(prevValue, newValue)) {\r\n      const setValue = () => (store.value = newValue);\r\n      if (options?.priority === TaskPriority.LOW) {\r\n        update(() => setValue());\r\n      } else {\r\n        setValue();\r\n        update();\r\n      }\r\n    }\r\n  }, []);\r\n  return [store.value, setState];\r\n}\r\nexport { useState };\r\n//# sourceMappingURL=use-state.js.map\r\n","import { useMemo } from '../use-memo';\r\nfunction useCallback(callback, deps) {\r\n  const value = useMemo(() => callback, deps);\r\n  return value;\r\n}\r\nexport { useCallback };\r\n//# sourceMappingURL=use-callback.js.map\r\n","import { useMemo } from '../use-memo';\r\nfunction useRef(initialValue = null) {\r\n  const ref = useMemo(() => ({ current: initialValue }), []);\r\n  return ref;\r\n}\r\nexport { useRef };\r\n//# sourceMappingURL=use-ref.js.map\r\n","import { unmountRoot } from '@dark-engine/core';\r\nimport { render, roots } from '../render';\r\nfunction createRoot(container) {\r\n  return {\r\n    render: element => render(element, container),\r\n    unmount: () => unmount(container),\r\n  };\r\n}\r\nfunction unmount(container) {\r\n  const rootId = roots.get(container);\r\n  unmountRoot(rootId, () => {\r\n    roots.delete(container);\r\n    container.innerHTML = '';\r\n  });\r\n}\r\nexport { createRoot, unmount };\r\n//# sourceMappingURL=create-root.js.map\r\n"],"names":["TYPE","ATTR_KEY","ATTR_REF","ATTR_FLAG","TaskPriority","Flag","detectIsFunction","o","detectIsUndefined","detectIsNumber","detectIsString","detectIsObject","detectIsBoolean","detectIsArray","Array","isArray","detectIsNull","detectIsEmpty","getTime","Date","now","dummyFn","flatten","source","list","levelMap","idx","level","item","length","push","keyBy","fn","value","reduce","acc","x","detectIsDepsDifferent","deps","prevDeps","i","defaultOptions","displayName","defaultProps","token","Symbol","ComponentFactory","type","props","ref","children","shouldUpdate","constructor","this","options","computedOptions","mprops","detectIsComponentFactory","factory","platform","createNativeElement","Error","msg","requestAnimationFrame","cancelAnimationFrame","scheduleCallback","shouldYeildToHost","applyCommit","finishCommitWork","detectIsDynamic","detectIsPortal","unmountPortal","restart","rootId","stores","Map","Store","wipRoot","currentRoot","nextUnitOfWork","events","unsubscribers","deletions","Set","fiberMount","navigation","isDeepWalking","componentFiber","effects","layoutEffects","insertionEffects","isLayoutEffectsZone","isInserionEffectsZone","isUpdateHookZone","isBatchZone","isHydrateZone","lazy","rootStore","id","get","set","getRootId","store","wipRootStore","fiber","currentRootStore","nextUnitOfWorkStore","currentFiberStore","deletionsStore","add","fiberMountStore","effectsStore","reset","effect","layoutEffectsStore","insertionEffectsStore","isInsertionEffectsZone","NodeType","$$virtualNode","VirtualNode","TagVirtualNode","name","attrs","super","TAG","TextVirtualNode","text","TEXT","CommentVirtualNode","COMMENT","detectIsVirtualNode","vNode","detectIsTagVirtualNode","detectIsTextVirtualNode","detectIsVirtualNodeFactory","createReplacer","from","$$memo","detectIsMemo","EffectTag","$$useEffect","useEffect","hasEffects","dropEffects","createEffect","hook","values","runEffect","undefined","cleanup","some","$$useLayoutEffect","useLayoutEffect","hasLayoutEffects","dropLayoutEffects","$$useInsertionEffect","useInsertionEffect","hasInsertionEffects","dropInsertionEffects","walkFiber","onLoop","nextFiber","isReturn","isStopped","visitedMap","detectCanVisit","resetIsDeepWalking","stop","child","newFiber","nextSibling","parent","unmountFiber","insertionEffectHost","layoutEffectHost","effectHost","portalHost","instance","$$fragment","Fragment","slot","cloneTagMap","CREATE","Fiber","nativeElement","alternate","move","effectTag","provider","childrenCount","childrenElementsCount","marker","isUsed","elementIdx","batched","catchException","static","nextId","mutate","keys","Object","key","markEffectHost","markLayoutEffectHost","markInsertionEffectHost","markPortalHost","incrementChildrenElementsCount","count","force","fromUpdate","wipFiber","setError","error","workLoop","shouldYield","hasMoreWork","Boolean","performUnitOfWork","size","flush","isDynamic","onComplete","forEach","diff","parentFiber","getParentFiberWithNativeElement","isRight","syncElementIndices","setTimeout","skip","SKIP","commitChanges","hasChildrenProp","fiber$","instance$","performChild","fiber$$","performSibling","nextLevel","getHook","pertformInstance","performAlternate","performFiber","performMemo","parentInstance","childrenIdx","isUpdate","hasAlternate","isSameKeys","getElementKey","getInstanceType","UPDATE","insertToFiber","DELETE","createConditionalFiber","alternateType","isSameType","flag","getVirtualNodeFactoryFlag","getElementFlag","hasNoMovesFlag","HAS_NO_MOVES","prevKeys","nextKeys","prevKeysMap","nextKeysMap","keyedFibersMap","prevKey","createIndexKey","nextKey","extractKeys","result","Math","max","p","n","prevKeyFiber","nextKeyFiber","canAddToDeletions","prevFactory","nextFactory","prevProps","nextProps","deep","elements","splice","mountInstance","isComponentFactory","detectIsFragment","err","args","console","supportConditional","getVirtualNodeFactoryKey","element","prevInstance","nextInstance","detectIsSameComponentFactoryTypesWithSameKeys","Memo","processValue","getValue","isDepsDifferent","check","wrap","useMemo","hookValue","computedGetValue","useUpdate","scope","onStart","callback","forceStart","createUpdateCallback","timeoutMs","forceSync","clearTimeout","useReactiveState","update","reactive","patched","Proxy","target","prop","getChildren","map","toString","createElement","tag","def","as","_void","View","$$portal","rest","innerHTML","getPortalContainer","container","SyntheticEvent","sourceEvent","propagation","stopPropagation","preventDefault","getPropagation","delegateEvent","eventName","handler","eventsMap","handlerMap","rootHandler","event","fireEvent","syntheticEvent","parentElement","dispatchEvent","WeakMap","document","addEventListener","removeEventListener","detectIsEvent","attrName","startsWith","getEventName","slice","toLowerCase","attrBlackListMap","fragmentsMap","moves","svgTagNamesMap","split","voidTagNamesMap","createNativeElementMap","tagNode","tagName","createElementNS","textNode","createTextNode","commentNode","createComment","current","mutableRef","hasOwnProperty","detectIsMutableRef","applyRef","patchProperties","attrValue","patchPropertiesSpecialCasesMap","prototype","getPrototypeOf","getOwnPropertyDescriptor","includes","input","checked","autofocus","textarea","String","applyCommitMap","childNodes","Text","splitText","fragment","createDocumentFragment","appendChild","append","insertBefore","insert","attrNames","tagElement","setAttribute","addAttributes","commitCreation","sourceNodes","collectElements","sourceFragment","DocumentFragment","node","removeChild","replaceChild","textContent","nextVNode","prevAttrValue","nextAttrValue","removeAttribute","updateAttributes","commitUpdate","commitDeletion","queueByPriority","animations","hight","normal","low1","low2","scheduledCallback","deadline","isMessageLoopRunning","currentTask","Task","time","priority","nextTaskId","NORMAL","task","ANIMATION","HIGH","LOW","executeTasks","pick","queue","shift","isAnimation","requestCallbackSync","port","postMessage","checkOverdueTasks","requestIdleCallback","channel","MessageChannel","port2","port1","onmessage","isInjected","roots","shuffle","randomIndex","currentIndex","floor","random","randomize","fill","AnimatedList","items","xItems","getKey","duration","setItems","initialValue","setState","sourceValue","prevValue","newValue","is","setValue","useState","containerRef","useRef","refs","indexed","keyed","rects","timerId","timerId2","firstRender","isTransition","setRects","getBoundingClientRect","window","addStyles","body","clientHeight","removeStyles","mount","rect","style","setProperty","width","height","left","top","removeProperty","itemRef","App","state","class","onClick","getElementById","render","hydrate","bind","inject","Element","isMounted","unmount","delete","unmountRoot"],"sourceRoot":""}