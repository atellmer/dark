{"version":3,"file":"build.js","mappings":"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","sources":["webpack://dark-track-updates/./node_modules/@dark-engine/core/dist/esm/constants.js","webpack://dark-track-updates/./node_modules/@dark-engine/core/dist/esm/helpers/index.js","webpack://dark-track-updates/./node_modules/@dark-engine/core/dist/esm/view/types.js","webpack://dark-track-updates/./node_modules/@dark-engine/core/dist/esm/view/view.js","webpack://dark-track-updates/./node_modules/@dark-engine/core/dist/esm/component/component.js","webpack://dark-track-updates/./node_modules/@dark-engine/core/dist/esm/memo/memo.js","webpack://dark-track-updates/./node_modules/@dark-engine/core/dist/esm/ref/ref.js","webpack://dark-track-updates/./node_modules/@dark-engine/core/dist/esm/scope/scope.js","webpack://dark-track-updates/./node_modules/@dark-engine/core/dist/esm/use-effect/use-effect.js","webpack://dark-track-updates/./node_modules/@dark-engine/core/dist/esm/fragment/fragment.js","webpack://dark-track-updates/./node_modules/@dark-engine/core/dist/esm/use-memo/use-memo.js","webpack://dark-track-updates/./node_modules/@dark-engine/core/dist/esm/platform/platform.js","webpack://dark-track-updates/./node_modules/@dark-engine/core/dist/esm/fiber/types.js","webpack://dark-track-updates/./node_modules/@dark-engine/core/dist/esm/use-layout-effect/use-layout-effect.js","webpack://dark-track-updates/./node_modules/@dark-engine/core/dist/esm/use-insertion-effect/use-insertion-effect.js","webpack://dark-track-updates/./node_modules/@dark-engine/core/dist/esm/walk/walk.js","webpack://dark-track-updates/./node_modules/@dark-engine/core/dist/esm/unmount/unmount.js","webpack://dark-track-updates/./node_modules/@dark-engine/core/dist/esm/fiber/fiber.js","webpack://dark-track-updates/./node_modules/@dark-engine/core/dist/esm/use-update/use-update.js","webpack://dark-track-updates/./node_modules/@dark-engine/core/dist/esm/batch/batch.js","webpack://dark-track-updates/./node_modules/@dark-engine/core/dist/esm/context/context.js","webpack://dark-track-updates/./node_modules/@dark-engine/core/dist/esm/use-callback/use-callback.js","webpack://dark-track-updates/./node_modules/@dark-engine/core/dist/esm/split-update/split-update.js","webpack://dark-track-updates/./node_modules/@dark-engine/core/dist/esm/element/element.js","webpack://dark-track-updates/./node_modules/@dark-engine/platform-browser/dist/esm/portal/portal.js","webpack://dark-track-updates/./node_modules/@dark-engine/platform-browser/dist/esm/events/events.js","webpack://dark-track-updates/./node_modules/@dark-engine/platform-browser/dist/esm/dom/dom.js","webpack://dark-track-updates/./node_modules/@dark-engine/platform-browser/dist/esm/constants.js","webpack://dark-track-updates/./node_modules/@dark-engine/platform-browser/dist/esm/scheduler/scheduler.js","webpack://dark-track-updates/./node_modules/@dark-engine/platform-browser/dist/esm/render/render.js","webpack://dark-track-updates/./index.tsx","webpack://dark-track-updates/./node_modules/@dark-engine/platform-browser/dist/esm/create-root/create-root.js"],"sourcesContent":["export const ROOT = 'root';\r\nexport const REPLACER = 'dark:matter';\r\nexport const INDEX_KEY = 'dark:idx';\r\nexport const TYPE = 'type';\r\nexport const ATTR_KEY = 'key';\r\nexport const ATTR_REF = 'ref';\r\nexport const ATTR_FLAG = 'flag';\r\nexport var TaskPriority;\r\n(function (TaskPriority) {\r\n  TaskPriority[(TaskPriority['ANIMATION'] = 3)] = 'ANIMATION';\r\n  TaskPriority[(TaskPriority['HIGH'] = 2)] = 'HIGH';\r\n  TaskPriority[(TaskPriority['NORMAL'] = 1)] = 'NORMAL';\r\n  TaskPriority[(TaskPriority['LOW'] = 0)] = 'LOW';\r\n})(TaskPriority || (TaskPriority = {}));\r\nexport var Flag;\r\n(function (Flag) {\r\n  Flag['HAS_NO_MOVES'] = 'HAS_NO_MOVES';\r\n})(Flag || (Flag = {}));\r\n//# sourceMappingURL=constants.js.map\r\n","const detectIsFunction = o => typeof o === 'function';\r\nconst detectIsUndefined = o => typeof o === 'undefined';\r\nconst detectIsNumber = o => typeof o === 'number';\r\nconst detectIsString = o => typeof o === 'string';\r\nconst detectIsObject = o => typeof o === 'object';\r\nconst detectIsBoolean = o => typeof o === 'boolean';\r\nconst detectIsArray = o => Array.isArray(o);\r\nconst detectIsNull = o => o === null;\r\nconst detectIsEmpty = o => detectIsNull(o) || detectIsUndefined(o);\r\nconst detectIsFalsy = o => detectIsNull(o) || detectIsUndefined(o) || o === false;\r\nconst getTime = () => Date.now();\r\nconst dummyFn = () => {};\r\nfunction error(...args) {\r\n  !detectIsUndefined(console) && console.error(...args);\r\n}\r\nfunction flatten(source) {\r\n  const list = [];\r\n  const levelMap = { 0: { idx: 0, source } };\r\n  let level = 0;\r\n  do {\r\n    const { source, idx } = levelMap[level];\r\n    const item = source[idx];\r\n    if (idx >= source.length) {\r\n      level--;\r\n      levelMap[level].idx++;\r\n      continue;\r\n    }\r\n    if (detectIsArray(item)) {\r\n      level++;\r\n      levelMap[level] = {\r\n        idx: 0,\r\n        source: item,\r\n      };\r\n    } else {\r\n      list.push(item);\r\n      levelMap[level].idx++;\r\n    }\r\n  } while (level > 0 || levelMap[level].idx < levelMap[level].source.length);\r\n  return list;\r\n}\r\nfunction keyBy(list, fn, value = false) {\r\n  return list.reduce((acc, x) => ((acc[fn(x)] = value ? x : true), acc), {});\r\n}\r\nfunction detectIsDepsDifferent(deps, prevDeps) {\r\n  if (!detectIsUndefined(deps) && !detectIsUndefined(prevDeps) && deps.length > 0 && prevDeps.length > 0) {\r\n    for (let i = 0; i < prevDeps.length; i++) {\r\n      if (prevDeps[i] !== deps[i]) {\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n  return false;\r\n}\r\nexport {\r\n  detectIsFunction,\r\n  detectIsUndefined,\r\n  detectIsNumber,\r\n  detectIsString,\r\n  detectIsObject,\r\n  detectIsBoolean,\r\n  detectIsArray,\r\n  detectIsNull,\r\n  detectIsEmpty,\r\n  detectIsFalsy,\r\n  getTime,\r\n  dummyFn,\r\n  error,\r\n  flatten,\r\n  keyBy,\r\n  detectIsDepsDifferent,\r\n};\r\n//# sourceMappingURL=index.js.map\r\n","export var NodeType;\r\n(function (NodeType) {\r\n  NodeType['TAG'] = 'TAG';\r\n  NodeType['TEXT'] = 'TEXT';\r\n  NodeType['COMMENT'] = 'COMMENT';\r\n})(NodeType || (NodeType = {}));\r\n//# sourceMappingURL=types.js.map\r\n","import { REPLACER, ATTR_KEY, ATTR_FLAG, TYPE } from '../constants';\r\nimport { detectIsArray, detectIsEmpty, detectIsFunction } from '../helpers';\r\nimport { NodeType } from './types';\r\nconst $$virtualNode = Symbol('virtual-node');\r\nclass VirtualNode {\r\n  type = null;\r\n  constructor(type) {\r\n    this.type = type;\r\n  }\r\n}\r\nclass TagVirtualNode extends VirtualNode {\r\n  name = null;\r\n  attrs = {};\r\n  children = [];\r\n  constructor(name, attrs, children) {\r\n    super(NodeType.TAG);\r\n    this.name = name || this.name;\r\n    this.attrs = attrs || this.attrs;\r\n    this.children = children || this.children;\r\n  }\r\n}\r\nclass TextVirtualNode extends VirtualNode {\r\n  value = '';\r\n  constructor(text) {\r\n    super(NodeType.TEXT);\r\n    this.value = text;\r\n  }\r\n}\r\nclass CommentVirtualNode extends VirtualNode {\r\n  value = '';\r\n  constructor(text) {\r\n    super(NodeType.COMMENT);\r\n    this.value = text;\r\n  }\r\n}\r\nconst detectIsVirtualNode = vNode => vNode instanceof VirtualNode;\r\nconst detectIsTagVirtualNode = vNode => vNode instanceof TagVirtualNode;\r\nconst detectIsCommentVirtualNode = vNode => vNode instanceof CommentVirtualNode;\r\nconst detectIsTextVirtualNode = vNode => vNode instanceof TextVirtualNode;\r\nconst detectIsVirtualNodeFactory = factory => detectIsFunction(factory) && factory[$$virtualNode] === true;\r\nconst getTagVirtualNodeKey = vNode => (!detectIsEmpty(vNode.attrs[ATTR_KEY]) ? vNode.attrs[ATTR_KEY] : null);\r\nconst getTagVirtualNodeFlag = vNode => vNode.attrs[ATTR_FLAG] || null;\r\nconst getVirtualNodeFactoryKey = factory => (!detectIsEmpty(factory[ATTR_KEY]) ? factory[ATTR_KEY] : null);\r\nconst getVirtualNodeFactoryFlag = factory => factory[ATTR_FLAG] || null;\r\nconst createReplacer = () => new CommentVirtualNode(REPLACER);\r\nconst detectIsPlainVirtualNode = vNode => detectIsTextVirtualNode(vNode) || detectIsCommentVirtualNode(vNode);\r\nfunction View(def) {\r\n  const factory = () => {\r\n    const { as: name, slot, _void = false, ...attrs } = def;\r\n    const children = _void ? [] : detectIsArray(slot) ? slot : slot ? [slot] : [];\r\n    return new TagVirtualNode(name, attrs, children);\r\n  };\r\n  factory[$$virtualNode] = true;\r\n  factory[ATTR_KEY] = def.key;\r\n  factory[ATTR_FLAG] = def.flag;\r\n  factory[TYPE] = def.as;\r\n  return factory;\r\n}\r\nfunction Text(source) {\r\n  return new TextVirtualNode(source + '');\r\n}\r\nText.from = source => (detectIsTextVirtualNode(source) ? source.value : source + '');\r\nfunction Comment(text) {\r\n  const factory = () => new CommentVirtualNode(text);\r\n  factory[$$virtualNode] = true;\r\n  return factory;\r\n}\r\nexport {\r\n  VirtualNode,\r\n  TagVirtualNode,\r\n  TextVirtualNode,\r\n  CommentVirtualNode,\r\n  detectIsVirtualNode,\r\n  detectIsTagVirtualNode,\r\n  detectIsCommentVirtualNode,\r\n  detectIsTextVirtualNode,\r\n  detectIsPlainVirtualNode,\r\n  getTagVirtualNodeKey,\r\n  getTagVirtualNodeFlag,\r\n  getVirtualNodeFactoryKey,\r\n  getVirtualNodeFactoryFlag,\r\n  createReplacer,\r\n  detectIsVirtualNodeFactory,\r\n  View,\r\n  Text,\r\n  Comment,\r\n};\r\n//# sourceMappingURL=view.js.map\r\n","import { ATTR_KEY, ATTR_FLAG } from '../constants';\r\nimport { error, detectIsEmpty } from '../helpers';\r\nconst $$component = Symbol('component');\r\nconst defaultOptions = {\r\n  displayName: '',\r\n  defaultProps: {},\r\n  token: $$component,\r\n};\r\nclass ComponentFactory {\r\n  type;\r\n  token;\r\n  props;\r\n  ref;\r\n  displayName;\r\n  children = [];\r\n  shouldUpdate;\r\n  constructor(type, token, props, ref, shouldUpdate, displayName) {\r\n    this.type = type || null;\r\n    this.token = token || null;\r\n    this.props = props || null;\r\n    this.ref = ref || null;\r\n    this.shouldUpdate = shouldUpdate || null;\r\n    this.displayName = displayName || '';\r\n  }\r\n}\r\nfunction createComponent(type, options = {}) {\r\n  const computedOptions = { ...defaultOptions, ...options };\r\n  const { token, defaultProps, displayName, shouldUpdate } = computedOptions;\r\n  const component = (props = {}, ref) => {\r\n    const mprops = { ...defaultProps, ...props };\r\n    if (mprops.ref) {\r\n      delete mprops.ref;\r\n      if (process.env.NODE_ENV === 'development') {\r\n        error(`[Dark]: To use ref you need to wrap the createComponent with forwardRef!`);\r\n      }\r\n    }\r\n    return new ComponentFactory(type, token, mprops, ref, shouldUpdate, displayName);\r\n  };\r\n  return component;\r\n}\r\nconst detectIsComponentFactory = factory => factory instanceof ComponentFactory;\r\nconst getComponentFactoryKey = factory => (!detectIsEmpty(factory.props[ATTR_KEY]) ? factory.props[ATTR_KEY] : null);\r\nconst getComponentFactoryFlag = factory => factory.props[ATTR_FLAG] || null;\r\nexport { ComponentFactory, createComponent, detectIsComponentFactory, getComponentFactoryKey, getComponentFactoryFlag };\r\n//# sourceMappingURL=component.js.map\r\n","import { createComponent, detectIsComponentFactory } from '../component';\r\nimport { forwardRef } from '../ref';\r\nconst $$memo = Symbol('memo');\r\nconst defaultShouldUpdate = (props, nextProps) => {\r\n  const keys = Object.keys(nextProps);\r\n  for (const key of keys) {\r\n    if (key !== 'slot' && nextProps[key] !== props[key]) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n};\r\nconst detectIsMemo = factory => detectIsComponentFactory(factory) && factory.token === $$memo;\r\nfunction memo(component, shouldUpdate = defaultShouldUpdate) {\r\n  return forwardRef(\r\n    createComponent(\r\n      (props, ref) => {\r\n        ref && (props.ref = ref);\r\n        return component(props);\r\n      },\r\n      { token: $$memo, shouldUpdate },\r\n    ),\r\n  );\r\n}\r\nexport { $$memo, memo, detectIsMemo };\r\n//# sourceMappingURL=memo.js.map\r\n","import { detectIsObject, detectIsNull, detectIsFunction } from '../helpers';\r\nfunction forwardRef(component) {\r\n  return props => {\r\n    const { ref, ...rest } = props || {};\r\n    return component(rest, ref);\r\n  };\r\n}\r\nfunction detectIsMutableRef(ref) {\r\n  if (!detectIsObject(ref) || detectIsNull(ref)) return false;\r\n  const mutableRef = ref;\r\n  for (const key in mutableRef) {\r\n    if (key === 'current' && mutableRef.hasOwnProperty(key)) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\nfunction applyRef(ref, current) {\r\n  if (detectIsFunction(ref)) {\r\n    ref(current);\r\n  } else if (detectIsMutableRef(ref)) {\r\n    ref.current = current;\r\n  }\r\n}\r\nexport { forwardRef, detectIsMutableRef, applyRef };\r\n//# sourceMappingURL=ref.js.map\r\n","let rootId = null;\r\nconst stores = new Map();\r\nclass Store {\r\n  wipRoot = null;\r\n  currentRoot = null;\r\n  nextUnitOfWork = null;\r\n  events = new Map();\r\n  unsubscribers = [];\r\n  deletions = new Set();\r\n  fiberMount = {\r\n    level: 0,\r\n    navigation: {},\r\n    isDeepWalking: true,\r\n  };\r\n  componentFiber = null;\r\n  effects = [];\r\n  layoutEffects = [];\r\n  insertionEffects = [];\r\n  isLayoutEffectsZone = false;\r\n  isInserionEffectsZone = false;\r\n  isUpdateHookZone = false;\r\n  isBatchZone = false;\r\n  isHydrateZone = false;\r\n  lazy = new Set();\r\n}\r\nconst rootStore = {\r\n  set: id => {\r\n    rootId = id;\r\n    !stores.get(rootId) && stores.set(rootId, new Store());\r\n  },\r\n  remove: id => stores.delete(id),\r\n};\r\nconst getRootId = () => rootId;\r\nconst store = {\r\n  get: (id = rootId) => stores.get(id),\r\n};\r\nconst wipRootStore = {\r\n  get: () => store.get()?.wipRoot || null,\r\n  set: fiber => (store.get().wipRoot = fiber),\r\n};\r\nconst currentRootStore = {\r\n  get: id => store.get(id)?.currentRoot || null,\r\n  set: fiber => (store.get().currentRoot = fiber),\r\n};\r\nconst nextUnitOfWorkStore = {\r\n  get: () => store.get()?.nextUnitOfWork || null,\r\n  set: fiber => (store.get().nextUnitOfWork = fiber),\r\n};\r\nconst currentFiberStore = {\r\n  get: () => store.get()?.componentFiber,\r\n  set: fiber => (store.get().componentFiber = fiber),\r\n};\r\nconst eventsStore = {\r\n  get: () => store.get().events,\r\n  addUnsubscriber: fn => store.get().unsubscribers.push(fn),\r\n  unsubscribe: id => store.get(id).unsubscribers.forEach(fn => fn()),\r\n};\r\nconst deletionsStore = {\r\n  get: () => store.get().deletions,\r\n  add: fiber => store.get().deletions.add(fiber),\r\n  has: fiber => store.get().deletions.has(fiber),\r\n  set: deletions => (store.get().deletions = deletions),\r\n  reset: () => (store.get().deletions = new Set()),\r\n};\r\nconst fiberMountStore = {\r\n  reset: () => {\r\n    store.get().fiberMount = {\r\n      level: 0,\r\n      navigation: {},\r\n      isDeepWalking: true,\r\n    };\r\n  },\r\n  getIndex: () => store.get().fiberMount.navigation[store.get().fiberMount.level],\r\n  jumpToChild: () => {\r\n    const { fiberMount } = store.get();\r\n    const level = fiberMount.level;\r\n    const nextLevel = level + 1;\r\n    fiberMount.level = nextLevel;\r\n    fiberMount.navigation[nextLevel] = 0;\r\n  },\r\n  jumpToParent: () => {\r\n    const { fiberMount } = store.get();\r\n    const level = fiberMount.level;\r\n    const nextLevel = level - 1;\r\n    fiberMount.navigation[level] = 0;\r\n    fiberMount.level = nextLevel;\r\n  },\r\n  jumpToSibling: () => {\r\n    const { fiberMount } = store.get();\r\n    const level = fiberMount.level;\r\n    const idx = fiberMount.navigation[level] + 1;\r\n    fiberMount.navigation[level] = idx;\r\n  },\r\n  deepWalking: {\r\n    get: () => store.get().fiberMount.isDeepWalking,\r\n    set: value => (store.get().fiberMount.isDeepWalking = value),\r\n  },\r\n};\r\nconst effectsStore = {\r\n  get: () => store.get().effects,\r\n  reset: () => (store.get().effects = []),\r\n  add: effect => store.get().effects.push(effect),\r\n};\r\nconst layoutEffectsStore = {\r\n  get: () => store.get().layoutEffects,\r\n  reset: () => (store.get().layoutEffects = []),\r\n  add: effect => store.get().layoutEffects.push(effect),\r\n};\r\nconst insertionEffectsStore = {\r\n  get: () => store.get().insertionEffects,\r\n  reset: () => (store.get().insertionEffects = []),\r\n  add: effect => store.get().insertionEffects.push(effect),\r\n};\r\nconst isLayoutEffectsZone = {\r\n  get: () => store.get()?.isLayoutEffectsZone || false,\r\n  set: value => (store.get().isLayoutEffectsZone = value),\r\n};\r\nconst isInsertionEffectsZone = {\r\n  get: id => store.get(id)?.isInserionEffectsZone || false,\r\n  set: value => (store.get().isInserionEffectsZone = value),\r\n};\r\nconst isUpdateHookZone = {\r\n  get: () => store.get()?.isUpdateHookZone || false,\r\n  set: value => (store.get().isUpdateHookZone = value),\r\n};\r\nconst isBatchZone = {\r\n  get: () => store.get()?.isBatchZone || false,\r\n  set: value => (store.get().isBatchZone = value),\r\n};\r\nconst isHydrateZone = {\r\n  get: () => store.get()?.isHydrateZone || false,\r\n  set: value => (store.get().isHydrateZone = value),\r\n};\r\nconst registerLazy = () => {\r\n  const { id } = currentFiberStore.get();\r\n  store.get().lazy.add(id);\r\n  return id;\r\n};\r\nconst unregisterLazy = id => store.get().lazy.delete(id);\r\nconst detectHasRegisteredLazy = () => store.get().lazy.size > 0;\r\nexport {\r\n  getRootId,\r\n  rootStore,\r\n  wipRootStore,\r\n  currentRootStore,\r\n  nextUnitOfWorkStore,\r\n  currentFiberStore,\r\n  eventsStore,\r\n  deletionsStore,\r\n  fiberMountStore,\r\n  effectsStore,\r\n  layoutEffectsStore,\r\n  insertionEffectsStore,\r\n  isLayoutEffectsZone,\r\n  isInsertionEffectsZone,\r\n  isUpdateHookZone,\r\n  isBatchZone,\r\n  isHydrateZone,\r\n  registerLazy,\r\n  unregisterLazy,\r\n  detectHasRegisteredLazy,\r\n};\r\n//# sourceMappingURL=scope.js.map\r\n","import { detectIsUndefined, detectIsFunction, detectIsDepsDifferent } from '../helpers';\r\nimport { currentFiberStore, effectsStore } from '../scope';\r\nconst $$useEffect = Symbol('use-effect');\r\nconst { useEffect, hasEffects, dropEffects } = createEffect($$useEffect, effectsStore);\r\nfunction createEffect(token, store) {\r\n  function useEffect(effect, deps) {\r\n    const fiber = currentFiberStore.get();\r\n    const hook = fiber.hook;\r\n    const { idx, values } = hook;\r\n    const runEffect = () => {\r\n      values[idx] = {\r\n        deps,\r\n        token,\r\n        value: undefined,\r\n      };\r\n      store.add(() => {\r\n        values[idx].value = effect();\r\n      });\r\n    };\r\n    if (detectIsUndefined(values[idx])) {\r\n      runEffect();\r\n    } else {\r\n      const { deps: prevDeps, value: cleanup } = values[idx];\r\n      const isDepsDifferent = deps ? detectIsDepsDifferent(deps, prevDeps) : true;\r\n      if (isDepsDifferent) {\r\n        detectIsFunction(cleanup) && cleanup();\r\n        runEffect();\r\n      }\r\n    }\r\n    hook.idx++;\r\n  }\r\n  function hasEffects(fiber) {\r\n    const { values } = fiber.hook;\r\n    const hasEffect = values.some(x => x?.token === token);\r\n    return hasEffect;\r\n  }\r\n  function dropEffects(hook) {\r\n    const { values } = hook;\r\n    for (const value of values) {\r\n      if (value.token === token) {\r\n        const cleanup = value.value;\r\n        detectIsFunction(cleanup) && cleanup();\r\n      }\r\n    }\r\n  }\r\n  return {\r\n    useEffect,\r\n    hasEffects,\r\n    dropEffects,\r\n  };\r\n}\r\nexport { useEffect, hasEffects, dropEffects, createEffect };\r\n//# sourceMappingURL=use-effect.js.map\r\n","import { createComponent, detectIsComponentFactory } from '../component';\r\nconst $$fragment = Symbol('fragment');\r\nconst Fragment = createComponent(({ slot }) => slot || null, {\r\n  token: $$fragment,\r\n});\r\nconst detectIsFragment = factory => detectIsComponentFactory(factory) && factory.token === $$fragment;\r\nexport { Fragment, detectIsFragment };\r\n//# sourceMappingURL=fragment.js.map\r\n","import { detectIsUndefined, detectIsArray, detectIsDepsDifferent } from '../helpers';\r\nimport { detectIsComponentFactory, createComponent } from '../component';\r\nimport { detectIsVirtualNodeFactory } from '../view';\r\nimport { currentFiberStore } from '../scope';\r\nimport { Fragment } from '../fragment';\r\nimport { $$memo } from '../memo';\r\nconst Memo = createComponent(({ slot }) => slot, { token: $$memo });\r\nfunction wrap(value, isDepsDifferent) {\r\n  const check = value => detectIsVirtualNodeFactory(value) || detectIsComponentFactory(value);\r\n  if (detectIsArray(value) ? check(value[0]) : check(value)) {\r\n    const slot = value;\r\n    const factory = Memo({\r\n      slot: Fragment({ slot }),\r\n    });\r\n    factory.shouldUpdate = () => isDepsDifferent;\r\n    return factory;\r\n  }\r\n  return value;\r\n}\r\nfunction processValue(getValue, isDepsDifferent = false) {\r\n  return wrap(getValue(), isDepsDifferent);\r\n}\r\nfunction useMemo(getValue, deps) {\r\n  const fiber = currentFiberStore.get();\r\n  const { hook } = fiber;\r\n  const { idx, values } = hook;\r\n  if (detectIsUndefined(values[idx])) {\r\n    const value = processValue(getValue);\r\n    values[idx] = {\r\n      deps,\r\n      value,\r\n    };\r\n    hook.idx++;\r\n    return value;\r\n  }\r\n  const hookValue = values[idx];\r\n  const prevDeps = hookValue.deps;\r\n  const isDepsDifferent = detectIsDepsDifferent(deps, prevDeps);\r\n  const computedGetValue = isDepsDifferent ? getValue : () => hookValue.value;\r\n  hookValue.deps = deps;\r\n  hookValue.value = processValue(computedGetValue, isDepsDifferent);\r\n  hook.idx++;\r\n  return hookValue.value;\r\n}\r\nexport { useMemo };\r\n//# sourceMappingURL=use-memo.js.map\r\n","const platform = {\r\n  createNativeElement: () => {\r\n    throw new Error(msg('createNativeElement'));\r\n  },\r\n  requestAnimationFrame: () => {\r\n    throw new Error(msg('requestAnimationFrame'));\r\n  },\r\n  cancelAnimationFrame: () => {\r\n    throw new Error(msg('cancelAnimationFrame'));\r\n  },\r\n  scheduleCallback: () => {\r\n    throw new Error(msg('scheduleCallback'));\r\n  },\r\n  shouldYeildToHost: () => {\r\n    throw new Error(msg('shouldYeildToHost'));\r\n  },\r\n  applyCommit: () => {\r\n    throw new Error(msg('applyCommit'));\r\n  },\r\n  finishCommitWork: () => {\r\n    throw new Error(msg('finishCommitWork'));\r\n  },\r\n  detectIsDynamic: () => {\r\n    throw new Error(msg('detectIsDynamic'));\r\n  },\r\n  detectIsPortal: () => {\r\n    throw new Error(msg('detectIsPortal'));\r\n  },\r\n  unmountPortal: () => {\r\n    throw new Error(msg('unmountPortal'));\r\n  },\r\n  restart: () => {\r\n    throw new Error(msg('restart'));\r\n  },\r\n};\r\nconst msg = x => `${x} not installed by renderer`;\r\nconst detectIsServer = () => !platform.detectIsDynamic();\r\nexport { platform, detectIsServer };\r\n//# sourceMappingURL=platform.js.map\r\n","export var EffectTag;\r\n(function (EffectTag) {\r\n  EffectTag['CREATE'] = 'CREATE';\r\n  EffectTag['UPDATE'] = 'UPDATE';\r\n  EffectTag['DELETE'] = 'DELETE';\r\n  EffectTag['SKIP'] = 'SKIP';\r\n})(EffectTag || (EffectTag = {}));\r\n//# sourceMappingURL=types.js.map\r\n","import { layoutEffectsStore } from '../scope';\r\nimport { createEffect } from '../use-effect';\r\nconst $$useLayoutEffect = Symbol('use-layout-effect');\r\nconst {\r\n  useEffect: useLayoutEffect,\r\n  hasEffects: hasLayoutEffects,\r\n  dropEffects: dropLayoutEffects,\r\n} = createEffect($$useLayoutEffect, layoutEffectsStore);\r\nexport { useLayoutEffect, hasLayoutEffects, dropLayoutEffects };\r\n//# sourceMappingURL=use-layout-effect.js.map\r\n","import { insertionEffectsStore } from '../scope';\r\nimport { createEffect } from '../use-effect';\r\nconst $$useInsertionEffect = Symbol('use-insertion-effect');\r\nconst {\r\n  useEffect: useInsertionEffect,\r\n  hasEffects: hasInsertionEffects,\r\n  dropEffects: dropInsertionEffects,\r\n} = createEffect($$useInsertionEffect, insertionEffectsStore);\r\nexport { useInsertionEffect, hasInsertionEffects, dropInsertionEffects };\r\n//# sourceMappingURL=use-insertion-effect.js.map\r\n","function walkFiber(fiber, onLoop) {\r\n  let nextFiber = fiber;\r\n  let isDeepWalking = true;\r\n  let isReturn = false;\r\n  let isStopped = false;\r\n  const visitedMap = {};\r\n  const detectCanVisit = id => !visitedMap[id];\r\n  const resetIsDeepWalking = () => (isDeepWalking = false);\r\n  const stop = () => (isStopped = true);\r\n  while (nextFiber) {\r\n    onLoop({\r\n      nextFiber: nextFiber,\r\n      isReturn,\r\n      resetIsDeepWalking,\r\n      stop,\r\n    });\r\n    if (isStopped) {\r\n      break;\r\n    }\r\n    if (nextFiber.child && isDeepWalking && detectCanVisit(nextFiber.child.id)) {\r\n      const newFiber = nextFiber.child;\r\n      isReturn = false;\r\n      nextFiber = newFiber;\r\n      visitedMap[newFiber.id] = true;\r\n    } else if (nextFiber.nextSibling && detectCanVisit(nextFiber.nextSibling.id)) {\r\n      const newFiber = nextFiber.nextSibling;\r\n      isDeepWalking = true;\r\n      isReturn = false;\r\n      nextFiber = newFiber;\r\n      visitedMap[newFiber.id] = true;\r\n    } else if (\r\n      nextFiber.parent &&\r\n      nextFiber.parent === fiber &&\r\n      nextFiber.parent.nextSibling &&\r\n      detectCanVisit(nextFiber.parent.nextSibling.id)\r\n    ) {\r\n      const newFiber = nextFiber.parent.nextSibling;\r\n      isDeepWalking = true;\r\n      isReturn = false;\r\n      nextFiber = newFiber;\r\n      visitedMap[newFiber.id] = true;\r\n    } else if (nextFiber.parent && nextFiber.parent !== fiber) {\r\n      isDeepWalking = false;\r\n      isReturn = true;\r\n      nextFiber = nextFiber.parent;\r\n    } else {\r\n      nextFiber = null;\r\n    }\r\n  }\r\n}\r\nexport { walkFiber };\r\n//# sourceMappingURL=walk.js.map\r\n","import { platform } from '../platform';\r\nimport { detectIsComponentFactory } from '../component';\r\nimport { dropEffects } from '../use-effect';\r\nimport { dropLayoutEffects } from '../use-layout-effect';\r\nimport { dropInsertionEffects } from '../use-insertion-effect';\r\nimport { walkFiber } from '../walk';\r\nimport { detectIsUndefined } from '../helpers';\r\nimport { currentRootStore, eventsStore, rootStore } from '../scope';\r\nfunction unmountFiber(fiber) {\r\n  if (!fiber.insertionEffectHost && !fiber.layoutEffectHost && !fiber.effectHost && !fiber.portalHost) return;\r\n  walkFiber(fiber, ({ nextFiber, isReturn, stop }) => {\r\n    if (nextFiber === fiber.nextSibling) return stop();\r\n    if (!isReturn && detectIsComponentFactory(nextFiber.instance)) {\r\n      nextFiber.insertionEffectHost && dropInsertionEffects(nextFiber.hook);\r\n      nextFiber.layoutEffectHost && dropLayoutEffects(nextFiber.hook);\r\n      nextFiber.effectHost && dropEffects(nextFiber.hook);\r\n      nextFiber.portalHost && platform.unmountPortal(nextFiber);\r\n    }\r\n  });\r\n}\r\nfunction unmountRoot(rootId, onComplete) {\r\n  if (detectIsUndefined(rootId)) return;\r\n  unmountFiber(currentRootStore.get(rootId));\r\n  eventsStore.unsubscribe(rootId);\r\n  rootStore.remove(rootId);\r\n  onComplete();\r\n}\r\nexport { unmountFiber, unmountRoot };\r\n//# sourceMappingURL=unmount.js.map\r\n","import {\r\n  flatten,\r\n  error,\r\n  detectIsEmpty,\r\n  detectIsFalsy,\r\n  detectIsArray,\r\n  detectIsString,\r\n  detectIsNumber,\r\n  detectIsFunction,\r\n} from '../helpers';\r\nimport { platform } from '../platform';\r\nimport {\r\n  wipRootStore,\r\n  currentRootStore,\r\n  nextUnitOfWorkStore,\r\n  deletionsStore,\r\n  fiberMountStore,\r\n  currentFiberStore,\r\n  isUpdateHookZone,\r\n  rootStore,\r\n  effectsStore,\r\n  layoutEffectsStore,\r\n  insertionEffectsStore,\r\n  isLayoutEffectsZone,\r\n  isInsertionEffectsZone,\r\n  detectHasRegisteredLazy,\r\n  isHydrateZone,\r\n} from '../scope';\r\nimport { detectIsComponentFactory, getComponentFactoryKey, getComponentFactoryFlag } from '../component';\r\nimport {\r\n  detectIsVirtualNode,\r\n  detectIsTagVirtualNode,\r\n  detectIsVirtualNodeFactory,\r\n  getTagVirtualNodeKey,\r\n  getVirtualNodeFactoryKey,\r\n  getTagVirtualNodeFlag,\r\n  getVirtualNodeFactoryFlag,\r\n  detectIsTextVirtualNode,\r\n  detectIsCommentVirtualNode,\r\n  createReplacer,\r\n} from '../view';\r\nimport { detectIsMemo } from '../memo';\r\nimport { INDEX_KEY, TYPE, Flag } from '../constants';\r\nimport { EffectTag } from './types';\r\nimport { hasEffects } from '../use-effect';\r\nimport { hasLayoutEffects } from '../use-layout-effect';\r\nimport { hasInsertionEffects } from '../use-insertion-effect';\r\nimport { walkFiber } from '../walk';\r\nimport { unmountFiber } from '../unmount';\r\nimport { Text } from '../view';\r\nimport { Fragment, detectIsFragment } from '../fragment';\r\nconst cloneTagMap = {\r\n  [EffectTag.CREATE]: true,\r\n};\r\nclass Fiber {\r\n  id = 0;\r\n  nativeElement = null;\r\n  parent = null;\r\n  child = null;\r\n  nextSibling = null;\r\n  alternate = null;\r\n  move = false;\r\n  effectTag = null;\r\n  instance = null;\r\n  hook = null;\r\n  provider = null;\r\n  effectHost = false;\r\n  layoutEffectHost = false;\r\n  insertionEffectHost = false;\r\n  portalHost = false;\r\n  childrenCount = 0;\r\n  childrenElementsCount = 0;\r\n  marker = '';\r\n  isUsed = false;\r\n  idx = 0;\r\n  elementIdx = 0;\r\n  batched = null;\r\n  catchException;\r\n  static nextId = 0;\r\n  constructor(hook = null, provider = null, idx = 0) {\r\n    this.id = ++Fiber.nextId;\r\n    this.hook = hook;\r\n    this.provider = provider;\r\n    this.idx = idx;\r\n  }\r\n  mutate(options) {\r\n    const keys = Object.keys(options);\r\n    for (const key of keys) {\r\n      this[key] = options[key];\r\n    }\r\n    return this;\r\n  }\r\n  markEffectHost() {\r\n    this.effectHost = true;\r\n    this.parent && !this.parent.effectHost && this.parent.markEffectHost();\r\n  }\r\n  markLayoutEffectHost() {\r\n    this.layoutEffectHost = true;\r\n    this.parent && !this.parent.layoutEffectHost && this.parent.markLayoutEffectHost();\r\n  }\r\n  markInsertionEffectHost() {\r\n    this.insertionEffectHost = true;\r\n    this.parent && !this.parent.insertionEffectHost && this.parent.markInsertionEffectHost();\r\n  }\r\n  markPortalHost() {\r\n    this.portalHost = true;\r\n    this.parent && !this.parent.portalHost && this.parent.markPortalHost();\r\n  }\r\n  incrementChildrenElementsCount(count = 1, force = false) {\r\n    incrementChildrenElementsCount(this, count, force);\r\n  }\r\n  setError(error) {\r\n    if (detectIsFunction(this.catchException)) {\r\n      this.catchException(error);\r\n    } else if (this.parent) {\r\n      this.parent.setError(error);\r\n    }\r\n  }\r\n}\r\nfunction workLoop() {\r\n  const wipFiber = wipRootStore.get();\r\n  let nextUnitOfWork = nextUnitOfWorkStore.get();\r\n  let shouldYield = false;\r\n  let hasMoreWork = Boolean(nextUnitOfWork);\r\n  while (nextUnitOfWork && !shouldYield) {\r\n    nextUnitOfWork = performUnitOfWork(nextUnitOfWork);\r\n    nextUnitOfWorkStore.set(nextUnitOfWork);\r\n    hasMoreWork = Boolean(nextUnitOfWork);\r\n    shouldYield = platform.shouldYeildToHost();\r\n  }\r\n  if (!nextUnitOfWork && wipFiber) {\r\n    commitChanges();\r\n  }\r\n  return hasMoreWork;\r\n}\r\nfunction performUnitOfWork(fiber) {\r\n  let isDeepWalking = true;\r\n  let nextFiber = fiber;\r\n  let instance = fiber.instance;\r\n  while (true) {\r\n    isDeepWalking = fiberMountStore.deepWalking.get();\r\n    nextFiber.hook && (nextFiber.hook.idx = 0);\r\n    if (isDeepWalking) {\r\n      const hasChildren = hasChildrenProp(instance) && instance.children.length > 0;\r\n      if (hasChildren) {\r\n        const { fiber$, instance$ } = performChild(nextFiber, instance);\r\n        nextFiber = fiber$;\r\n        instance = instance$;\r\n        if (fiber$) return fiber$;\r\n      } else {\r\n        const { fiber$$, fiber$, instance$ } = performSibling(nextFiber, instance);\r\n        nextFiber = fiber$;\r\n        instance = instance$;\r\n        if (fiber$$) return fiber$$;\r\n      }\r\n    } else {\r\n      const { fiber$$, fiber$, instance$ } = performSibling(nextFiber, instance);\r\n      nextFiber = fiber$;\r\n      instance = instance$;\r\n      if (fiber$$) return fiber$$;\r\n    }\r\n    if (nextFiber.parent === null) return null;\r\n  }\r\n}\r\nfunction performChild(nextFiber, instance) {\r\n  fiberMountStore.jumpToChild();\r\n  const childrenIdx = 0;\r\n  const alternate = nextFiber.alternate ? nextFiber.alternate.child : null;\r\n  const prevInstance = alternate ? alternate.instance : null;\r\n  const nextInstance = hasChildrenProp(instance) ? instance.children[childrenIdx] : null;\r\n  const hook = getHook(alternate, prevInstance, nextInstance);\r\n  const provider = alternate ? alternate.provider : null;\r\n  const fiber = new Fiber(hook, provider, childrenIdx);\r\n  currentFiberStore.set(fiber);\r\n  fiber.parent = nextFiber;\r\n  nextFiber.child = fiber;\r\n  fiber.elementIdx = nextFiber.nativeElement ? 0 : nextFiber.elementIdx;\r\n  instance = pertformInstance(instance, childrenIdx, fiber);\r\n  alternate && performAlternate(alternate, instance);\r\n  performFiber(fiber, alternate, instance);\r\n  alternate && detectIsMemo(fiber.instance) && performMemo(fiber, alternate, instance);\r\n  return {\r\n    fiber$: fiber,\r\n    instance$: instance,\r\n  };\r\n}\r\nfunction performSibling(nextFiber, instance) {\r\n  fiberMountStore.jumpToSibling();\r\n  const parentInstance = nextFiber.parent.instance;\r\n  const childrenIdx = fiberMountStore.getIndex();\r\n  const hasSibling = hasChildrenProp(parentInstance) && parentInstance.children[childrenIdx];\r\n  if (hasSibling) {\r\n    fiberMountStore.deepWalking.set(true);\r\n    const alternate = nextFiber.alternate ? nextFiber.alternate.nextSibling : null;\r\n    const prevInstance = alternate ? alternate.instance : null;\r\n    const nextInstance = hasChildrenProp(parentInstance) ? parentInstance.children[childrenIdx] : null;\r\n    const hook = getHook(alternate, prevInstance, nextInstance);\r\n    const provider = alternate ? alternate.provider : null;\r\n    const fiber = new Fiber(hook, provider, childrenIdx);\r\n    currentFiberStore.set(fiber);\r\n    fiber.parent = nextFiber.parent;\r\n    nextFiber.nextSibling = fiber;\r\n    fiber.elementIdx = nextFiber.elementIdx + (nextFiber.nativeElement ? 1 : nextFiber.childrenElementsCount);\r\n    instance = pertformInstance(parentInstance, childrenIdx, fiber);\r\n    alternate && performAlternate(alternate, instance);\r\n    performFiber(fiber, alternate, instance);\r\n    alternate && detectIsMemo(fiber.instance) && performMemo(fiber, alternate, instance);\r\n    return {\r\n      fiber$$: fiber,\r\n      fiber$: fiber,\r\n      instance$: instance,\r\n    };\r\n  } else {\r\n    fiberMountStore.jumpToParent();\r\n    fiberMountStore.deepWalking.set(false);\r\n    nextFiber = nextFiber.parent;\r\n    instance = nextFiber.instance;\r\n    if (hasChildrenProp(nextFiber.instance)) {\r\n      nextFiber.instance.children = [];\r\n    }\r\n  }\r\n  return {\r\n    fiber$$: null,\r\n    fiber$: nextFiber,\r\n    instance$: instance,\r\n  };\r\n}\r\nfunction incrementChildrenElementsCount(fiber, count = 1, force = false) {\r\n  if (!fiber.parent) return;\r\n  const fromUpdate = isUpdateHookZone.get();\r\n  const wipFiber = wipRootStore.get();\r\n  const stop = fromUpdate && wipFiber.parent === fiber.parent;\r\n  if (\r\n    detectIsTextVirtualNode(fiber.instance) ||\r\n    detectIsCommentVirtualNode(fiber.instance) ||\r\n    (detectIsTagVirtualNode(fiber.instance) && fiber.instance.children.length === 0)\r\n  ) {\r\n    fiber.childrenElementsCount = 1;\r\n  }\r\n  if (fromUpdate && stop && !force) return;\r\n  fiber.parent.childrenElementsCount += count;\r\n  if (!fiber.parent.nativeElement) {\r\n    fiber.parent.incrementChildrenElementsCount(count);\r\n  }\r\n}\r\nfunction performFiber(fiber, alternate, instance) {\r\n  let isUpdate = false;\r\n  cloneTagMap[fiber.parent.effectTag] && (fiber.effectTag = fiber.parent.effectTag);\r\n  if (fiber.effectTag !== EffectTag.CREATE) {\r\n    const hasAlternate = Boolean(alternate);\r\n    const prevKey = hasAlternate ? getElementKey(alternate.instance) : null;\r\n    const nextKey = hasAlternate ? getElementKey(instance) : null;\r\n    const isSameKeys = prevKey === nextKey;\r\n    const isSameTypes = hasAlternate && getInstanceType(alternate.instance) === getInstanceType(instance);\r\n    isUpdate = isSameTypes && isSameKeys;\r\n  }\r\n  fiber.instance = instance;\r\n  fiber.alternate = alternate || null;\r\n  fiber.nativeElement = isUpdate ? alternate.nativeElement : null;\r\n  fiber.effectTag = isUpdate ? EffectTag.UPDATE : EffectTag.CREATE;\r\n  if (alternate && alternate.move) {\r\n    fiber.move = alternate.move;\r\n    alternate.move = false;\r\n  }\r\n  if (hasChildrenProp(fiber.instance)) {\r\n    fiber.childrenCount = fiber.instance.children.length;\r\n  }\r\n  if (!fiber.nativeElement && detectIsVirtualNode(fiber.instance)) {\r\n    fiber.nativeElement = platform.createNativeElement(fiber.instance);\r\n    fiber.effectTag = EffectTag.CREATE;\r\n  }\r\n  if (fiber.nativeElement) {\r\n    fiber.incrementChildrenElementsCount();\r\n  }\r\n}\r\nfunction insertToFiber(idx, fiber, child) {\r\n  if (idx === 0 || (fiber.child && fiber.child.effectTag === EffectTag.DELETE)) {\r\n    fiber.child = child;\r\n    child.parent = fiber;\r\n  } else {\r\n    fiber.nextSibling = child;\r\n    child.parent = fiber.parent;\r\n  }\r\n  return child;\r\n}\r\nfunction createConditionalFiber(alternate, marker) {\r\n  const vNode = createReplacer();\r\n  return new Fiber().mutate({\r\n    instance: vNode,\r\n    parent: alternate,\r\n    marker: marker + '',\r\n    effectTag: EffectTag.CREATE,\r\n  });\r\n}\r\nfunction canAddToDeletions(fiber) {\r\n  let nextFiber = fiber.parent;\r\n  while (nextFiber) {\r\n    if (nextFiber.effectTag === EffectTag.DELETE) return false;\r\n    nextFiber = nextFiber.parent;\r\n  }\r\n  return true;\r\n}\r\nfunction performAlternate(alternate, instance) {\r\n  const alternateType = getInstanceType(alternate.instance);\r\n  const elementType = getInstanceType(instance);\r\n  const isSameType = elementType === alternateType;\r\n  const flag = getElementFlag(instance);\r\n  const hasNoMovesFlag = flag && flag[Flag.HAS_NO_MOVES];\r\n  alternate.isUsed = true;\r\n  if (!isSameType) {\r\n    if (canAddToDeletions(alternate)) {\r\n      alternate.effectTag = EffectTag.DELETE;\r\n      deletionsStore.add(alternate);\r\n    }\r\n  } else if (\r\n    hasChildrenProp(alternate.instance) &&\r\n    hasChildrenProp(instance) &&\r\n    (hasNoMovesFlag ? alternate.childrenCount !== instance.children.length : true)\r\n  ) {\r\n    const { prevKeys, nextKeys, prevKeysMap, nextKeysMap, keyedFibersMap } = extractKeys(\r\n      alternate.child,\r\n      instance.children,\r\n    );\r\n    let result = [];\r\n    let size = Math.max(prevKeys.length, nextKeys.length);\r\n    let nextFiber = alternate;\r\n    let idx = 0;\r\n    let p = 0;\r\n    let n = 0;\r\n    for (let i = 0; i < size; i++) {\r\n      const nextKey = nextKeys[i - n] ?? null;\r\n      const prevKey = prevKeys[i - p] ?? null;\r\n      const prevKeyFiber = keyedFibersMap[prevKey] || null;\r\n      const nextKeyFiber = keyedFibersMap[nextKey] || createConditionalFiber(alternate, nextKey);\r\n      if (nextKey !== prevKey) {\r\n        if (nextKey !== null && !prevKeysMap[nextKey]) {\r\n          if (prevKey !== null && !nextKeysMap[prevKey]) {\r\n            result.push([[nextKey, prevKey], 'replace']);\r\n            nextKeyFiber.effectTag = EffectTag.CREATE;\r\n            prevKeyFiber.effectTag = EffectTag.DELETE;\r\n            deletionsStore.add(prevKeyFiber);\r\n          } else {\r\n            result.push([nextKey, 'insert']);\r\n            nextKeyFiber.effectTag = EffectTag.CREATE;\r\n            p++;\r\n            size++;\r\n          }\r\n          nextFiber = insertToFiber(i, nextFiber, nextKeyFiber);\r\n        } else if (!nextKeysMap[prevKey]) {\r\n          result.push([prevKey, 'remove']);\r\n          prevKeyFiber.effectTag = EffectTag.DELETE;\r\n          deletionsStore.add(prevKeyFiber);\r\n          n++;\r\n          idx--;\r\n          size++;\r\n        } else if (nextKeysMap[prevKey] && nextKeysMap[nextKey]) {\r\n          result.push([[nextKey, prevKey], 'move']);\r\n          nextKeyFiber.effectTag = EffectTag.UPDATE;\r\n          prevKeyFiber.effectTag = EffectTag.UPDATE;\r\n          nextKeyFiber.move = true;\r\n          nextFiber = insertToFiber(i, nextFiber, nextKeyFiber);\r\n        }\r\n      } else if (nextKey !== null) {\r\n        result.push([nextKey, 'stable']);\r\n        nextKeyFiber.effectTag = EffectTag.UPDATE;\r\n        nextFiber = insertToFiber(i, nextFiber, nextKeyFiber);\r\n      }\r\n      nextKeyFiber.idx = idx;\r\n      idx++;\r\n    }\r\n    result = [];\r\n  }\r\n}\r\nfunction performMemo(fiber, alternate, instance) {\r\n  const prevFactory = alternate.instance;\r\n  const nextFactory = instance;\r\n  if (fiber.move || nextFactory.type !== prevFactory.type) return;\r\n  const prevProps = prevFactory.props;\r\n  const nextProps = nextFactory.props;\r\n  const skip = !nextFactory.shouldUpdate(prevProps, nextProps);\r\n  if (skip) {\r\n    fiberMountStore.deepWalking.set(false);\r\n    const diff = fiber.elementIdx - alternate.elementIdx;\r\n    const deep = diff !== 0;\r\n    fiber.mutate({\r\n      ...alternate,\r\n      alternate,\r\n      id: fiber.id,\r\n      idx: fiber.idx,\r\n      parent: fiber.parent,\r\n      nextSibling: fiber.nextSibling,\r\n      elementIdx: fiber.elementIdx,\r\n      effectTag: EffectTag.SKIP,\r\n    });\r\n    walkFiber(fiber.child, ({ nextFiber, stop }) => {\r\n      if (nextFiber === fiber.nextSibling || nextFiber === fiber.parent) {\r\n        return stop();\r\n      }\r\n      if (nextFiber.parent === alternate) {\r\n        nextFiber.parent = fiber;\r\n      }\r\n      if (deep) {\r\n        nextFiber.elementIdx += diff;\r\n        if (nextFiber.parent !== fiber && nextFiber.nativeElement) return stop();\r\n      } else if (nextFiber === alternate.child.child) return stop();\r\n    });\r\n    fiber.incrementChildrenElementsCount(alternate.childrenElementsCount);\r\n    if (alternate.effectHost) {\r\n      fiber.markEffectHost();\r\n    }\r\n    if (alternate.layoutEffectHost) {\r\n      fiber.markLayoutEffectHost();\r\n    }\r\n    if (alternate.insertionEffectHost) {\r\n      fiber.markInsertionEffectHost();\r\n    }\r\n    if (alternate.portalHost) {\r\n      fiber.markPortalHost();\r\n    }\r\n  }\r\n}\r\nfunction pertformInstance(parentInstance, idx, fiber) {\r\n  let instance = null;\r\n  if (hasChildrenProp(parentInstance)) {\r\n    const elements = detectIsArray(parentInstance.children[idx])\r\n      ? flatten([parentInstance.children[idx]])\r\n      : [parentInstance.children[idx]];\r\n    parentInstance.children.splice(idx, 1, ...elements);\r\n    instance = parentInstance.children[idx];\r\n    instance = mountInstance(fiber, instance);\r\n  }\r\n  if (detectIsComponentFactory(instance)) {\r\n    if (hasEffects(fiber)) {\r\n      fiber.markEffectHost();\r\n    }\r\n    if (hasLayoutEffects(fiber)) {\r\n      fiber.markLayoutEffectHost();\r\n    }\r\n    if (hasInsertionEffects(fiber)) {\r\n      fiber.markInsertionEffectHost();\r\n    }\r\n    if (platform.detectIsPortal(instance)) {\r\n      fiber.markPortalHost();\r\n    }\r\n  }\r\n  return instance;\r\n}\r\nfunction mountInstance(fiber, instance) {\r\n  const isComponentFactory = detectIsComponentFactory(instance);\r\n  const factory = instance;\r\n  if (isComponentFactory) {\r\n    try {\r\n      let result = factory.type(factory.props, factory.ref);\r\n      if (detectIsArray(result) && !detectIsFragment(factory)) {\r\n        result = Fragment({ slot: result });\r\n      } else if (detectIsString(result) || detectIsNumber(result)) {\r\n        result = Text(result);\r\n      }\r\n      factory.children = detectIsArray(result) ? flatten([result]) : [result];\r\n    } catch (err) {\r\n      factory.children = [];\r\n      fiber.setError(err);\r\n      error(err);\r\n    }\r\n  } else if (detectIsVirtualNodeFactory(instance)) {\r\n    instance = instance();\r\n  }\r\n  if (hasChildrenProp(instance)) {\r\n    instance.children = isComponentFactory\r\n      ? instance.children\r\n      : detectIsArray(instance.children)\r\n      ? flatten([instance.children])\r\n      : [instance.children];\r\n    for (let i = 0; i < instance.children.length; i++) {\r\n      if (instance.children[i]) continue;\r\n      instance.children[i] = supportConditional(instance.children[i]);\r\n    }\r\n    if (isComponentFactory && factory.children.length === 0) {\r\n      factory.children.push(createReplacer());\r\n    }\r\n  }\r\n  return instance;\r\n}\r\nfunction extractKeys(alternate, children) {\r\n  let nextFiber = alternate;\r\n  let idx = 0;\r\n  const prevKeys = [];\r\n  const nextKeys = [];\r\n  const prevKeysMap = {};\r\n  const nextKeysMap = {};\r\n  const keyedFibersMap = {};\r\n  const usedKeysMap = {};\r\n  while (nextFiber || idx < children.length) {\r\n    if (nextFiber) {\r\n      const key = getElementKey(nextFiber.instance);\r\n      const prevKey = detectIsEmpty(key) ? createIndexKey(idx) : key;\r\n      prevKeys.push(prevKey);\r\n      prevKeysMap[prevKey] = true;\r\n      keyedFibersMap[prevKey] = nextFiber;\r\n    }\r\n    if (children[idx]) {\r\n      const instance = children[idx];\r\n      const key = getElementKey(instance);\r\n      const nextKey = detectIsEmpty(key) ? createIndexKey(idx) : key;\r\n      if (process.env.NODE_ENV === 'development') {\r\n        if (usedKeysMap[nextKey]) {\r\n          error(`[Dark]: The key of node [${nextKey}] already has been used!`, [instance]);\r\n        }\r\n        usedKeysMap[nextKey] = true;\r\n      }\r\n      nextKeys.push(nextKey);\r\n      nextKeysMap[nextKey] = true;\r\n    }\r\n    nextFiber = nextFiber ? nextFiber.nextSibling : null;\r\n    idx++;\r\n  }\r\n  return {\r\n    prevKeys,\r\n    nextKeys,\r\n    prevKeysMap,\r\n    nextKeysMap,\r\n    keyedFibersMap,\r\n  };\r\n}\r\nfunction createIndexKey(idx) {\r\n  return `${INDEX_KEY}:${idx}`;\r\n}\r\nfunction getElementKey(instance) {\r\n  const key = detectIsComponentFactory(instance)\r\n    ? getComponentFactoryKey(instance)\r\n    : detectIsVirtualNodeFactory(instance)\r\n    ? getVirtualNodeFactoryKey(instance)\r\n    : detectIsTagVirtualNode(instance)\r\n    ? getTagVirtualNodeKey(instance)\r\n    : null;\r\n  return key;\r\n}\r\nfunction getElementFlag(instance) {\r\n  const flag = detectIsComponentFactory(instance)\r\n    ? getComponentFactoryFlag(instance)\r\n    : detectIsVirtualNodeFactory(instance)\r\n    ? getVirtualNodeFactoryFlag(instance)\r\n    : detectIsTagVirtualNode(instance)\r\n    ? getTagVirtualNodeFlag(instance)\r\n    : null;\r\n  return flag;\r\n}\r\nfunction supportConditional(instance) {\r\n  return detectIsFalsy(instance) ? createReplacer() : instance;\r\n}\r\nfunction getInstanceType(instance) {\r\n  return detectIsVirtualNodeFactory(instance)\r\n    ? instance[TYPE]\r\n    : detectIsTagVirtualNode(instance)\r\n    ? instance.name\r\n    : detectIsVirtualNode(instance)\r\n    ? instance.type\r\n    : detectIsComponentFactory(instance)\r\n    ? instance.type\r\n    : null;\r\n}\r\nfunction hasChildrenProp(element) {\r\n  return detectIsTagVirtualNode(element) || detectIsComponentFactory(element);\r\n}\r\nfunction detectIsSameComponentFactoryTypesWithSameKeys(prevInstance, nextInstance) {\r\n  if (\r\n    prevInstance &&\r\n    nextInstance &&\r\n    detectIsComponentFactory(prevInstance) &&\r\n    detectIsComponentFactory(nextInstance) &&\r\n    prevInstance.type === nextInstance.type\r\n  ) {\r\n    const prevKey = prevInstance ? getElementKey(prevInstance) : null;\r\n    const nextKey = nextInstance ? getElementKey(nextInstance) : null;\r\n    return prevKey === nextKey;\r\n  }\r\n  return false;\r\n}\r\nfunction getHook(alternate, prevInstance, nextInstance) {\r\n  if (alternate && detectIsSameComponentFactoryTypesWithSameKeys(prevInstance, nextInstance)) {\r\n    return alternate.hook;\r\n  }\r\n  if (detectIsComponentFactory(nextInstance)) {\r\n    return createHook();\r\n  }\r\n  return null;\r\n}\r\nfunction createHook() {\r\n  return {\r\n    idx: 0,\r\n    values: [],\r\n  };\r\n}\r\nfunction commitChanges() {\r\n  if (isHydrateZone.get() && detectHasRegisteredLazy()) return flush(null);\r\n  const wipFiber = wipRootStore.get();\r\n  const isDynamic = platform.detectIsDynamic();\r\n  const insertionEffects = insertionEffectsStore.get();\r\n  const deletions = deletionsStore.get();\r\n  const fromUpdate = isUpdateHookZone.get();\r\n  for (const fiber of deletions) {\r\n    unmountFiber(fiber);\r\n    platform.applyCommit(fiber);\r\n  }\r\n  isInsertionEffectsZone.set(true);\r\n  isDynamic && insertionEffects.forEach(fn => fn());\r\n  isInsertionEffectsZone.set(false);\r\n  fromUpdate && syncElementIndices(wipFiber);\r\n  commitWork(wipFiber, () => {\r\n    const layoutEffects = layoutEffectsStore.get();\r\n    const effects = effectsStore.get();\r\n    isLayoutEffectsZone.set(true);\r\n    isDynamic && layoutEffects.forEach(fn => fn());\r\n    isLayoutEffectsZone.set(false);\r\n    setTimeout(() => {\r\n      isDynamic && effects.forEach(fn => fn());\r\n    });\r\n    flush(wipFiber);\r\n  });\r\n}\r\nfunction flush(wipFiber) {\r\n  const fromUpdate = isUpdateHookZone.get();\r\n  wipRootStore.set(null);\r\n  deletionsStore.reset();\r\n  insertionEffectsStore.reset();\r\n  layoutEffectsStore.reset();\r\n  effectsStore.reset();\r\n  if (fromUpdate) {\r\n    isUpdateHookZone.set(false);\r\n  } else {\r\n    currentRootStore.set(wipFiber);\r\n  }\r\n}\r\nfunction commitWork(fiber, onComplete) {\r\n  walkFiber(fiber.child, ({ nextFiber, isReturn, resetIsDeepWalking, stop }) => {\r\n    const skip = nextFiber.effectTag === EffectTag.SKIP;\r\n    if (nextFiber === fiber) return stop();\r\n    if (skip) {\r\n      resetIsDeepWalking();\r\n    } else if (!isReturn) {\r\n      platform.applyCommit(nextFiber);\r\n    }\r\n    nextFiber.alternate = null;\r\n  });\r\n  fiber.alternate = null;\r\n  platform.finishCommitWork();\r\n  onComplete();\r\n}\r\nfunction getParentFiberWithNativeElement(fiber) {\r\n  let parentFiber = fiber;\r\n  while (parentFiber) {\r\n    parentFiber = parentFiber.parent;\r\n    if (parentFiber && parentFiber.nativeElement) {\r\n      break;\r\n    }\r\n  }\r\n  return parentFiber;\r\n}\r\nfunction syncElementIndices(fiber) {\r\n  const diff = fiber.childrenElementsCount - fiber.alternate.childrenElementsCount;\r\n  if (diff === 0) return;\r\n  const parentFiber = getParentFiberWithNativeElement(fiber);\r\n  let isRight = false;\r\n  fiber.incrementChildrenElementsCount(diff, true);\r\n  walkFiber(parentFiber.child, ({ nextFiber, resetIsDeepWalking, isReturn, stop }) => {\r\n    if (nextFiber === parentFiber) return stop();\r\n    if (nextFiber === fiber) {\r\n      isRight = true;\r\n      return resetIsDeepWalking();\r\n    }\r\n    if (nextFiber.nativeElement) {\r\n      resetIsDeepWalking();\r\n    }\r\n    if (isRight && !isReturn) {\r\n      nextFiber.elementIdx += diff;\r\n    }\r\n  });\r\n}\r\nfunction createUpdateCallback(options) {\r\n  const { rootId, fiber, forceStart = false, onStart } = options;\r\n  const callback = () => {\r\n    if (fiber.effectTag === EffectTag.DELETE) return;\r\n    forceStart && onStart();\r\n    if (fiber.isUsed) return;\r\n    !forceStart && onStart();\r\n    rootStore.set(rootId);\r\n    isUpdateHookZone.set(true);\r\n    fiberMountStore.reset();\r\n    fiber.alternate = new Fiber().mutate({ ...fiber });\r\n    fiber.marker = '🍒';\r\n    fiber.effectTag = EffectTag.UPDATE;\r\n    fiber.childrenElementsCount = 0;\r\n    fiber.child = null;\r\n    wipRootStore.set(fiber);\r\n    currentFiberStore.set(fiber);\r\n    fiber.instance = mountInstance(fiber, fiber.instance);\r\n    nextUnitOfWorkStore.set(fiber);\r\n  };\r\n  return callback;\r\n}\r\nconst detectIsBusy = () => Boolean(wipRootStore.get());\r\nexport { Fiber, workLoop, createUpdateCallback, detectIsBusy };\r\n//# sourceMappingURL=fiber.js.map\r\n","import { platform } from '../platform';\r\nimport { getRootId, currentFiberStore, isInsertionEffectsZone, isLayoutEffectsZone, isBatchZone } from '../scope';\r\nimport { createUpdateCallback } from '../fiber';\r\nimport { useMemo } from '../use-memo';\r\nimport { dummyFn } from '../helpers';\r\nimport { runBatch as batch } from '../batch';\r\nfunction useUpdate(options) {\r\n  const rootId = getRootId();\r\n  const scope = useMemo(() => ({ fiber: null }), []);\r\n  scope.fiber = currentFiberStore.get();\r\n  const update = onStart => {\r\n    if (isInsertionEffectsZone.get()) return;\r\n    const callback = createUpdateCallback({\r\n      rootId,\r\n      fiber: scope.fiber,\r\n      forceStart: Boolean(options?.timeoutMs),\r\n      onStart: onStart || dummyFn,\r\n    });\r\n    if (isLayoutEffectsZone.get()) {\r\n      options = {\r\n        ...(options || {}),\r\n        forceSync: true,\r\n      };\r\n    }\r\n    if (isBatchZone.get()) {\r\n      batch(scope.fiber, () => platform.scheduleCallback(callback, options));\r\n    } else {\r\n      platform.scheduleCallback(callback, options);\r\n    }\r\n  };\r\n  return update;\r\n}\r\nexport { useUpdate };\r\n//# sourceMappingURL=use-update.js.map\r\n","import { isBatchZone } from '../scope';\r\nfunction batch(callback) {\r\n  isBatchZone.set(true);\r\n  callback();\r\n}\r\nfunction runBatch(fiber, callback) {\r\n  fiber.batched && clearTimeout(fiber.batched);\r\n  fiber.batched = setTimeout(() => {\r\n    isBatchZone.set(false);\r\n    fiber.batched = null;\r\n    callback();\r\n  });\r\n}\r\nexport { batch, runBatch };\r\n//# sourceMappingURL=batch.js.map\r\n","import { detectIsFunction } from '../helpers';\r\nimport { currentFiberStore } from '../scope';\r\nimport { createComponent } from '../component';\r\nimport { useEffect } from '../use-effect';\r\nimport { useMemo } from '../use-memo';\r\nimport { useUpdate } from '../use-update';\r\nfunction createContext(defaultValue, options) {\r\n  const { displayName = 'Context' } = options || {};\r\n  const context = {\r\n    displayName,\r\n    defaultValue,\r\n    Provider: null,\r\n    Consumer: null,\r\n  };\r\n  context.Provider = createProvider(context, defaultValue, displayName);\r\n  context.Consumer = createConsumer(context, displayName);\r\n  return context;\r\n}\r\nfunction createProvider(context, defaultValue, displayName) {\r\n  return createComponent(\r\n    ({ value = defaultValue, slot }) => {\r\n      const fiber = currentFiberStore.get();\r\n      if (!fiber.provider) {\r\n        const providerValue = {\r\n          value,\r\n          subscribers: new Set(),\r\n          subscribe: subscriber => {\r\n            providerValue.subscribers.add(subscriber);\r\n            return () => providerValue.subscribers.delete(subscriber);\r\n          },\r\n        };\r\n        fiber.provider = new Map();\r\n        fiber.provider.set(context, providerValue);\r\n      }\r\n      const provider = fiber.provider.get(context);\r\n      useEffect(() => {\r\n        provider.subscribers.forEach(fn => fn(value));\r\n      }, [value]);\r\n      provider.value = value;\r\n      return slot;\r\n    },\r\n    { displayName: `${displayName}.Provider` },\r\n  );\r\n}\r\nfunction createConsumer(context, displayName) {\r\n  return createComponent(\r\n    ({ slot }) => {\r\n      const value = useContext(context);\r\n      return detectIsFunction(slot) ? slot(value) : null;\r\n    },\r\n    { displayName: `${displayName}.Consumer` },\r\n  );\r\n}\r\nfunction useContext(context) {\r\n  const { defaultValue } = context;\r\n  const fiber = currentFiberStore.get();\r\n  const provider = useMemo(() => getProvider(context, fiber), []);\r\n  const value = provider ? provider.value : defaultValue;\r\n  const update = useUpdate();\r\n  const scope = useMemo(() => ({ value }), []);\r\n  const hasProvider = Boolean(provider);\r\n  useEffect(() => {\r\n    if (!hasProvider) return;\r\n    const unsubscribe = provider.subscribe(value => {\r\n      if (!Object.is(scope.value, value)) {\r\n        update();\r\n      }\r\n    });\r\n    return () => unsubscribe();\r\n  }, [hasProvider]);\r\n  scope.value = value;\r\n  return value;\r\n}\r\nfunction getProvider(context, fiber) {\r\n  let nextFiber = fiber;\r\n  while (nextFiber) {\r\n    if (nextFiber.provider && nextFiber.provider.get(context)) {\r\n      return nextFiber.provider.get(context);\r\n    }\r\n    nextFiber = nextFiber.parent;\r\n  }\r\n  return null;\r\n}\r\nexport { createContext, useContext };\r\n//# sourceMappingURL=context.js.map\r\n","import { useMemo } from '../use-memo';\r\nfunction useCallback(callback, deps) {\r\n  const value = useMemo(() => callback, deps);\r\n  return value;\r\n}\r\nexport { useCallback };\r\n//# sourceMappingURL=use-callback.js.map\r\n","import { createComponent } from '../component';\r\nimport { createContext, useContext } from '../context';\r\nimport { useUpdate } from '../use-update';\r\nimport { useMemo } from '../use-memo';\r\nimport { useEffect } from '../use-effect';\r\nimport { useCallback } from '../use-callback';\r\nimport { memo } from '../memo';\r\nimport { keyBy } from '../helpers';\r\nconst SplitUpdate = createComponent(props => {\r\n  const { list, getKey, slot } = props;\r\n  const scope = useMemo(() => ({ list, subscribers: new Set() }), []);\r\n  const map = useMemo(() => ({ value: keyBy(list, x => getKey(x), true) }), [list, getKey]);\r\n  const canSplit = useMemo(() => {\r\n    if (scope.list.length !== list.length) return false;\r\n    let idx = 0;\r\n    for (const item of list) {\r\n      if (getKey(item) !== getKey(scope.list[idx])) {\r\n        return false;\r\n      }\r\n      idx++;\r\n    }\r\n    return true;\r\n  }, [list]);\r\n  useMemo(() => {\r\n    scope.list = [...list];\r\n  }, [list]);\r\n  useEffect(() => {\r\n    if (!canSplit) return;\r\n    scope.subscribers.forEach(fn => fn(map.value));\r\n  }, [list]);\r\n  const subscribe = useCallback(subscriber => {\r\n    scope.subscribers.add(subscriber);\r\n    return () => scope.subscribers.delete(subscriber);\r\n  }, []);\r\n  const contextValue = useMemo(() => ({ subscribe, map: map.value }), []);\r\n  contextValue.map = map.value;\r\n  return SplitUpdateContext.Provider({\r\n    value: contextValue,\r\n    slot: SplitUpdateGuard({ canSplit, slot }),\r\n  });\r\n});\r\nconst SplitUpdateGuard = memo(\r\n  createComponent(({ slot }) => slot),\r\n  (_, nextProps) => nextProps.canSplit === false,\r\n);\r\nconst SplitUpdateContext = createContext(null);\r\nfunction useSplitUpdate(selector, detectChange) {\r\n  const { subscribe, map } = useContext(SplitUpdateContext);\r\n  const update = useUpdate({ forceSync: true });\r\n  const value = selector(map);\r\n  const detectedChange = detectChange(value);\r\n  const scope = useMemo(() => ({ detectedChange }), []);\r\n  useEffect(() => {\r\n    const unsubscribe = subscribe(map => {\r\n      const detectedChange = detectChange(selector(map));\r\n      if (!Object.is(scope.detectedChange, detectedChange)) {\r\n        update();\r\n      }\r\n      scope.detectedChange = detectedChange;\r\n    });\r\n    return () => unsubscribe();\r\n  }, []);\r\n  scope.detectedChange = detectedChange;\r\n  return value;\r\n}\r\nexport { SplitUpdate, useSplitUpdate };\r\n//# sourceMappingURL=split-update.js.map\r\n","import { detectIsNumber, detectIsString, detectIsFunction } from '../helpers';\r\nimport { View, Text } from '../view';\r\nfunction getChildren(children) {\r\n  children = children.map(x => (detectIsString(x) || detectIsNumber(x) ? Text(x.toString()) : x));\r\n  return children ? (Array.isArray(children) ? [...children] : [children]) : [];\r\n}\r\nfunction createElement(tag, props, ...children) {\r\n  if (detectIsString(tag)) {\r\n    return View({\r\n      ...props,\r\n      as: tag,\r\n      slot: getChildren(children),\r\n    });\r\n  }\r\n  if (detectIsFunction(tag)) {\r\n    let slot = getChildren(children);\r\n    slot = slot.length === 1 ? slot[0] : slot;\r\n    return tag({ ...props, slot });\r\n  }\r\n  return null;\r\n}\r\nexport { createElement, createElement as h };\r\n//# sourceMappingURL=element.js.map\r\n","import { createComponent, detectIsComponentFactory, useMemo } from '@dark-engine/core';\r\nconst $$portal = Symbol('portal');\r\nfunction createPortal(slot, container) {\r\n  if (!(container instanceof Element)) {\r\n    throw new Error(`[Dark]: createPortal receives only Element as container!`);\r\n  }\r\n  return Portal({ [$$portal]: container, slot });\r\n}\r\nconst Portal = createComponent(\r\n  ({ slot, ...rest }) => {\r\n    useMemo(() => (rest[$$portal].innerHTML = ''), []);\r\n    return slot;\r\n  },\r\n  { token: $$portal },\r\n);\r\nconst detectIsPortal = factory => detectIsComponentFactory(factory) && factory.token === $$portal;\r\nconst getPortalContainer = factory => (detectIsPortal(factory) ? factory.props[$$portal] : null);\r\nfunction unmountPortal(fiber) {\r\n  const container = getPortalContainer(fiber.instance);\r\n  if (container) {\r\n    container.innerHTML = '';\r\n  }\r\n}\r\nexport { createPortal, detectIsPortal, getPortalContainer, unmountPortal };\r\n//# sourceMappingURL=portal.js.map\r\n","import { detectIsFunction, eventsStore } from '@dark-engine/core';\r\nclass SyntheticEvent {\r\n  type = '';\r\n  sourceEvent = null;\r\n  target = null;\r\n  propagation = true;\r\n  constructor(options) {\r\n    this.type = options.sourceEvent.type;\r\n    this.sourceEvent = options.sourceEvent;\r\n    this.target = options.target;\r\n  }\r\n  stopPropagation() {\r\n    this.propagation = false;\r\n    this.sourceEvent.stopPropagation();\r\n  }\r\n  preventDefault() {\r\n    this.sourceEvent.preventDefault();\r\n  }\r\n  getPropagation() {\r\n    return this.propagation;\r\n  }\r\n}\r\nfunction delegateEvent(options) {\r\n  const { target, eventName, handler } = options;\r\n  const eventsMap = eventsStore.get();\r\n  const handlerMap = eventsMap.get(eventName);\r\n  if (!handlerMap) {\r\n    const rootHandler = event => {\r\n      const fireEvent = eventsMap.get(eventName).get(event.target);\r\n      const target = event.target;\r\n      let syntheticEvent = null;\r\n      if (detectIsFunction(fireEvent)) {\r\n        syntheticEvent = new SyntheticEvent({\r\n          sourceEvent: event,\r\n          target,\r\n        });\r\n        fireEvent(syntheticEvent);\r\n      }\r\n      if (syntheticEvent ? syntheticEvent.getPropagation() : target.parentElement) {\r\n        target.parentElement.dispatchEvent(new event.constructor(event.type, event));\r\n      }\r\n    };\r\n    eventsMap.set(eventName, new WeakMap([[target, handler]]));\r\n    document.addEventListener(eventName, rootHandler, true);\r\n    eventsStore.addUnsubscriber(() => document.removeEventListener(eventName, rootHandler, true));\r\n  } else {\r\n    handlerMap.set(target, handler);\r\n  }\r\n}\r\nconst detectIsEvent = attrName => attrName.startsWith('on');\r\nconst getEventName = attrName => attrName.slice(2, attrName.length).toLowerCase();\r\nexport { SyntheticEvent, delegateEvent, detectIsEvent, getEventName };\r\n//# sourceMappingURL=events.js.map\r\n","import {\r\n  ATTR_KEY,\r\n  ATTR_REF,\r\n  ATTR_FLAG,\r\n  EffectTag,\r\n  detectIsFunction,\r\n  detectIsUndefined,\r\n  detectIsBoolean,\r\n  keyBy,\r\n  NodeType,\r\n  detectIsVirtualNode,\r\n  detectIsTagVirtualNode,\r\n  detectIsTextVirtualNode,\r\n  walkFiber,\r\n  isHydrateZone,\r\n  applyRef as applyRef$,\r\n} from '@dark-engine/core';\r\nimport { detectIsPortal, getPortalContainer } from '../portal';\r\nimport { delegateEvent, detectIsEvent, getEventName } from '../events';\r\nimport { SVG_TAG_NAMES, VOID_TAG_NAMES } from '../constants';\r\nconst attrBlackListMap = {\r\n  [ATTR_KEY]: true,\r\n  [ATTR_REF]: true,\r\n  [ATTR_FLAG]: true,\r\n};\r\nlet fragmentsMap = new Map();\r\nlet moves = [];\r\nlet trackUpdate = null;\r\nconst svgTagNamesMap = keyBy(SVG_TAG_NAMES.split(','), x => x);\r\nconst voidTagNamesMap = keyBy(VOID_TAG_NAMES.split(','), x => x);\r\nconst createNativeElementMap = {\r\n  [NodeType.TAG]: vNode => {\r\n    const tagNode = vNode;\r\n    const node = detectIsSvgElement(tagNode.name)\r\n      ? document.createElementNS('http://www.w3.org/2000/svg', tagNode.name)\r\n      : document.createElement(tagNode.name);\r\n    return node;\r\n  },\r\n  [NodeType.TEXT]: vNode => {\r\n    const textNode = vNode;\r\n    const node = document.createTextNode(textNode.value);\r\n    return node;\r\n  },\r\n  [NodeType.COMMENT]: vNode => {\r\n    const commentNode = vNode;\r\n    const node = document.createComment(commentNode.value);\r\n    return node;\r\n  },\r\n};\r\nfunction createNativeElement(vNode) {\r\n  return createNativeElementMap[vNode.type](vNode);\r\n}\r\nfunction detectIsSvgElement(tagName) {\r\n  return Boolean(svgTagNamesMap[tagName]);\r\n}\r\nfunction detectIsVoidElement(tagName) {\r\n  return Boolean(voidTagNamesMap[tagName]);\r\n}\r\nfunction applyRef(ref, element) {\r\n  applyRef$(ref, element);\r\n}\r\nfunction addAttributes(element, vNode) {\r\n  if (!detectIsTagVirtualNode(vNode)) return;\r\n  const attrNames = Object.keys(vNode.attrs);\r\n  const tagElement = element;\r\n  for (const attrName of attrNames) {\r\n    const attrValue = vNode.attrs[attrName];\r\n    if (attrName === ATTR_REF) {\r\n      applyRef(attrValue, element);\r\n      continue;\r\n    }\r\n    if (detectIsFunction(attrValue)) {\r\n      if (detectIsEvent(attrName)) {\r\n        delegateEvent({\r\n          target: tagElement,\r\n          handler: attrValue,\r\n          eventName: getEventName(attrName),\r\n        });\r\n      }\r\n    } else if (!detectIsUndefined(attrValue) && !attrBlackListMap[attrName]) {\r\n      const stop = patchProperties({\r\n        tagName: vNode.name,\r\n        element: tagElement,\r\n        attrValue,\r\n        attrName,\r\n      });\r\n      !stop && tagElement.setAttribute(attrName, attrValue);\r\n    }\r\n  }\r\n}\r\nfunction updateAttributes(element, vNode, nextVNode) {\r\n  const attrNames = new Set([...Object.keys(vNode.attrs), ...Object.keys(nextVNode.attrs)]);\r\n  const tagElement = element;\r\n  for (const attrName of attrNames) {\r\n    const prevAttrValue = vNode.attrs[attrName];\r\n    const nextAttrValue = nextVNode.attrs[attrName];\r\n    if (attrName === ATTR_REF) {\r\n      applyRef(prevAttrValue, element);\r\n      continue;\r\n    }\r\n    if (!detectIsUndefined(nextAttrValue)) {\r\n      if (detectIsFunction(prevAttrValue)) {\r\n        if (detectIsEvent(attrName) && prevAttrValue !== nextAttrValue) {\r\n          delegateEvent({\r\n            target: tagElement,\r\n            handler: nextAttrValue,\r\n            eventName: getEventName(attrName),\r\n          });\r\n        }\r\n      } else if (!attrBlackListMap[attrName] && prevAttrValue !== nextAttrValue) {\r\n        const stop = patchProperties({\r\n          tagName: nextVNode.name,\r\n          element: tagElement,\r\n          attrValue: nextAttrValue,\r\n          attrName,\r\n        });\r\n        !stop && tagElement.setAttribute(attrName, nextAttrValue);\r\n      }\r\n    } else {\r\n      tagElement.removeAttribute(attrName);\r\n    }\r\n  }\r\n}\r\nfunction patchProperties(options) {\r\n  const { tagName, element, attrName, attrValue } = options;\r\n  const fn = patchPropertiesSpecialCasesMap[tagName];\r\n  let stop = fn ? fn(element, attrName, attrValue) : false;\r\n  if (canSetProperty(Object.getPrototypeOf(element), attrName)) {\r\n    element[attrName] = attrValue;\r\n  }\r\n  if (!stop && detectIsBoolean(attrValue)) {\r\n    stop = !attrName.includes('-');\r\n  }\r\n  return stop;\r\n}\r\nfunction canSetProperty(prototype, key) {\r\n  return prototype.hasOwnProperty(key) && Boolean(Object.getOwnPropertyDescriptor(prototype, key)?.set);\r\n}\r\nconst patchPropertiesSpecialCasesMap = {\r\n  input: (element, attrName, attrValue) => {\r\n    if (attrName === 'value' && detectIsBoolean(attrValue)) {\r\n      element.checked = attrValue;\r\n    } else if (attrName === 'autoFocus') {\r\n      element.autofocus = Boolean(attrValue);\r\n    }\r\n    return false;\r\n  },\r\n  textarea: (element, attrName, attrValue) => {\r\n    if (attrName === 'value') {\r\n      element.innerHTML = String(attrValue);\r\n      return true;\r\n    }\r\n    return false;\r\n  },\r\n};\r\nfunction getParentFiberWithNativeElement(fiber) {\r\n  let nextFiber = fiber;\r\n  while (nextFiber) {\r\n    nextFiber = nextFiber.parent;\r\n    if (detectIsPortal(nextFiber.instance)) {\r\n      nextFiber.nativeElement = getPortalContainer(nextFiber.instance);\r\n    }\r\n    if (nextFiber.nativeElement) return nextFiber;\r\n  }\r\n  return nextFiber;\r\n}\r\nfunction append(fiber, parentElement) {\r\n  const { fragment } = fragmentsMap.get(parentElement) || {\r\n    fragment: document.createDocumentFragment(),\r\n    callback: () => {},\r\n  };\r\n  fragmentsMap.set(parentElement, {\r\n    fragment,\r\n    callback: () => {\r\n      parentElement.appendChild(fragment);\r\n    },\r\n  });\r\n  fragment.appendChild(fiber.nativeElement);\r\n}\r\nfunction insert(fiber, parentElement) {\r\n  parentElement.insertBefore(fiber.nativeElement, parentElement.childNodes[fiber.elementIdx]);\r\n}\r\nfunction commitCreation(fiber) {\r\n  const parentFiber = getParentFiberWithNativeElement(fiber);\r\n  const parentElement = parentFiber.nativeElement;\r\n  const childNodes = parentElement.childNodes;\r\n  if (isHydrateZone.get()) {\r\n    const nativeElement = childNodes[fiber.elementIdx];\r\n    if (\r\n      detectIsTextVirtualNode(fiber.instance) &&\r\n      nativeElement instanceof Text &&\r\n      fiber.instance.value.length !== nativeElement.length\r\n    ) {\r\n      nativeElement.splitText(fiber.instance.value.length);\r\n    }\r\n    fiber.nativeElement = nativeElement;\r\n  } else {\r\n    if (childNodes.length === 0 || fiber.elementIdx > childNodes.length - 1) {\r\n      const vNode = parentFiber.instance;\r\n      !detectIsVoidElement(vNode.name) && append(fiber, parentElement);\r\n    } else {\r\n      insert(fiber, parentElement);\r\n    }\r\n  }\r\n  addAttributes(fiber.nativeElement, fiber.instance);\r\n}\r\nfunction commitUpdate(fiber) {\r\n  const element = fiber.nativeElement;\r\n  const prevInstance = fiber.alternate.instance;\r\n  const nextInstance = fiber.instance;\r\n  if (\r\n    detectIsTextVirtualNode(prevInstance) &&\r\n    detectIsTextVirtualNode(nextInstance) &&\r\n    prevInstance.value !== nextInstance.value\r\n  ) {\r\n    return (element.textContent = nextInstance.value);\r\n  }\r\n  if (detectIsTagVirtualNode(prevInstance) && detectIsTagVirtualNode(nextInstance)) {\r\n    return updateAttributes(element, prevInstance, nextInstance);\r\n  }\r\n}\r\nfunction commitDeletion(fiber) {\r\n  const parentFiber = getParentFiberWithNativeElement(fiber);\r\n  walkFiber(fiber, ({ nextFiber, isReturn, resetIsDeepWalking, stop }) => {\r\n    if (nextFiber === fiber.nextSibling || nextFiber === fiber.parent) {\r\n      return stop();\r\n    }\r\n    if (!isReturn && nextFiber.nativeElement) {\r\n      !detectIsPortal(nextFiber.instance) && parentFiber.nativeElement.removeChild(nextFiber.nativeElement);\r\n      return resetIsDeepWalking();\r\n    }\r\n  });\r\n}\r\nfunction move(fiber) {\r\n  const sourceNodes = collectElements(fiber);\r\n  const sourceNode = sourceNodes[0];\r\n  const parentElement = sourceNode.parentElement;\r\n  const sourceFragment = new DocumentFragment();\r\n  const elementIdx = fiber.elementIdx;\r\n  let idx = 0;\r\n  const move = () => {\r\n    for (let i = 1; i < sourceNodes.length; i++) {\r\n      parentElement.removeChild(parentElement.childNodes[elementIdx + 1]);\r\n    }\r\n    parentElement.replaceChild(sourceFragment, parentElement.childNodes[elementIdx]);\r\n  };\r\n  for (const node of sourceNodes) {\r\n    parentElement.insertBefore(document.createComment(`${elementIdx}:${idx}`), node);\r\n    sourceFragment.appendChild(node);\r\n    idx++;\r\n  }\r\n  moves.push(move);\r\n}\r\nfunction collectElements(fiber) {\r\n  const store = [];\r\n  walkFiber(fiber, ({ nextFiber, isReturn, resetIsDeepWalking, stop }) => {\r\n    if (nextFiber === fiber.nextSibling || nextFiber === fiber.parent) {\r\n      return stop();\r\n    }\r\n    if (!isReturn && nextFiber.nativeElement) {\r\n      !detectIsPortal(nextFiber.instance) && store.push(nextFiber.nativeElement);\r\n      return resetIsDeepWalking();\r\n    }\r\n  });\r\n  return store;\r\n}\r\nconst applyCommitMap = {\r\n  [EffectTag.CREATE]: fiber => {\r\n    if (fiber.nativeElement === null) return;\r\n    trackUpdate && trackUpdate(fiber.nativeElement);\r\n    commitCreation(fiber);\r\n  },\r\n  [EffectTag.UPDATE]: fiber => {\r\n    if (fiber.move) {\r\n      move(fiber);\r\n      fiber.move = false;\r\n    }\r\n    if (\r\n      fiber.nativeElement === null ||\r\n      !detectIsVirtualNode(fiber.alternate.instance) ||\r\n      !detectIsVirtualNode(fiber.instance)\r\n    ) {\r\n      return;\r\n    }\r\n    trackUpdate && trackUpdate(fiber.nativeElement);\r\n    commitUpdate(fiber);\r\n  },\r\n  [EffectTag.DELETE]: fiber => commitDeletion(fiber),\r\n  [EffectTag.SKIP]: () => {},\r\n};\r\nfunction applyCommit(fiber) {\r\n  applyCommitMap[fiber.effectTag](fiber);\r\n}\r\nfunction finishCommitWork() {\r\n  for (const { callback } of fragmentsMap.values()) {\r\n    callback();\r\n  }\r\n  for (const move of moves) {\r\n    move();\r\n  }\r\n  fragmentsMap = new Map();\r\n  moves = [];\r\n  isHydrateZone.set(false);\r\n}\r\nfunction setTrackUpdate(fn) {\r\n  trackUpdate = fn;\r\n}\r\nexport { createNativeElement, applyCommit, finishCommitWork, setTrackUpdate };\r\n//# sourceMappingURL=dom.js.map\r\n","export const SVG_TAG_NAMES =\r\n  'svg,animate,animateMotion,animateTransform,circle,clipPath,defs,desc,ellipse,feBlend,feColorMatrix,feComponentTransfer,feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,feDistantLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,foreignObject,g,image,line,linearGradient,marker,mask,metadata,mpath,path,pattern,polygon,polyline,radialGradient,rect,stop,switch,symbol,text,textPath,tspan,use,view';\r\nexport const VOID_TAG_NAMES = 'area,base,br,col,embed,hr,img,input,link,meta,param,source,track,wbr';\r\n//# sourceMappingURL=constants.js.map\r\n","import { getTime, workLoop, TaskPriority, detectIsBusy } from '@dark-engine/core';\r\nconst queueByPriority = {\r\n  animations: [],\r\n  hight: [],\r\n  normal: [],\r\n  low1: [],\r\n  low2: [],\r\n};\r\nconst YEILD_INTERVAL = 4;\r\nconst MAX_LOW_PRIORITY_TASKS_LIMIT = 100000;\r\nlet scheduledCallback = null;\r\nlet deadline = 0;\r\nlet isMessageLoopRunning = false;\r\nlet currentTask = null;\r\nclass Task {\r\n  static nextTaskId = 0;\r\n  id;\r\n  time;\r\n  timeoutMs;\r\n  priority;\r\n  forceSync;\r\n  callback;\r\n  constructor(options) {\r\n    this.id = ++Task.nextTaskId;\r\n    this.time = options.time;\r\n    this.timeoutMs = options.timeoutMs;\r\n    this.priority = options.priority;\r\n    this.forceSync = options.forceSync;\r\n    this.callback = options.callback;\r\n  }\r\n}\r\nconst shouldYeildToHost = () => getTime() >= deadline;\r\nfunction scheduleCallback(callback, options) {\r\n  const { priority = TaskPriority.NORMAL, timeoutMs = 0, forceSync = false } = options || {};\r\n  const task = new Task({ time: getTime(), timeoutMs, priority, forceSync, callback });\r\n  const map = {\r\n    [TaskPriority.ANIMATION]: () => queueByPriority.animations.push(task),\r\n    [TaskPriority.HIGH]: () => queueByPriority.hight.push(task),\r\n    [TaskPriority.NORMAL]: () => queueByPriority.normal.push(task),\r\n    [TaskPriority.LOW]: () => (task.timeoutMs > 0 ? queueByPriority.low2.push(task) : queueByPriority.low1.push(task)),\r\n  };\r\n  map[task.priority]();\r\n  executeTasks();\r\n}\r\nfunction pick(queue) {\r\n  if (!queue.length) return false;\r\n  currentTask = queue.shift();\r\n  const isAnimation = currentTask.priority === TaskPriority.ANIMATION;\r\n  currentTask.callback();\r\n  if (currentTask.forceSync || isAnimation) {\r\n    requestCallbackSync(workLoop);\r\n  } else {\r\n    requestCallback(workLoop);\r\n  }\r\n  return true;\r\n}\r\nfunction executeTasks() {\r\n  const isBusy = detectIsBusy();\r\n  if (!isBusy) {\r\n    checkOverdueTasks() ||\r\n      gc() ||\r\n      pick(queueByPriority.animations) ||\r\n      pick(queueByPriority.hight) ||\r\n      pick(queueByPriority.normal) ||\r\n      requestIdleCallback(() => pick(queueByPriority.low1) || pick(queueByPriority.low2));\r\n  }\r\n}\r\nfunction gc() {\r\n  if (queueByPriority.low1.length > MAX_LOW_PRIORITY_TASKS_LIMIT) {\r\n    queueByPriority.low1 = [];\r\n  }\r\n  return false;\r\n}\r\nfunction checkOverdueTasks() {\r\n  const [task] = queueByPriority.low2;\r\n  if (task && getTime() - task.time > task.timeoutMs) {\r\n    pick(queueByPriority.low2);\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\nfunction performWorkUntilDeadline() {\r\n  if (scheduledCallback) {\r\n    deadline = getTime() + YEILD_INTERVAL;\r\n    try {\r\n      const hasMoreWork = scheduledCallback();\r\n      if (!hasMoreWork) {\r\n        currentTask = null;\r\n        isMessageLoopRunning = false;\r\n        scheduledCallback = null;\r\n        executeTasks();\r\n      } else {\r\n        port.postMessage(null);\r\n      }\r\n    } catch (error) {\r\n      port.postMessage(null);\r\n      throw error;\r\n    }\r\n  } else {\r\n    isMessageLoopRunning = false;\r\n  }\r\n}\r\nfunction requestCallback(callback) {\r\n  if (process.env.NODE_ENV === 'test') {\r\n    return requestCallbackSync(callback);\r\n  }\r\n  scheduledCallback = callback;\r\n  if (!isMessageLoopRunning) {\r\n    isMessageLoopRunning = true;\r\n    port.postMessage(null);\r\n  }\r\n}\r\nfunction requestCallbackSync(callback) {\r\n  while (callback()) {}\r\n  executeTasks();\r\n  currentTask = null;\r\n}\r\nlet channel = null;\r\nlet port = null;\r\nfunction setup() {\r\n  if (process.env.NODE_ENV === 'test') {\r\n    return;\r\n  }\r\n  channel = new MessageChannel();\r\n  port = channel.port2;\r\n  channel.port1.onmessage = performWorkUntilDeadline;\r\n}\r\nsetup();\r\nexport { shouldYeildToHost, scheduleCallback };\r\n//# sourceMappingURL=scheduler.js.map\r\n","import {\r\n  ROOT,\r\n  Fiber,\r\n  EffectTag,\r\n  platform,\r\n  flatten,\r\n  detectIsUndefined,\r\n  TagVirtualNode,\r\n  rootStore,\r\n  wipRootStore,\r\n  currentRootStore,\r\n  nextUnitOfWorkStore,\r\n  fiberMountStore,\r\n  TaskPriority,\r\n  createReplacer,\r\n  isInsertionEffectsZone,\r\n  isLayoutEffectsZone,\r\n  isHydrateZone,\r\n} from '@dark-engine/core';\r\nimport { createNativeElement, applyCommit, finishCommitWork } from '../dom';\r\nimport { detectIsPortal, unmountPortal } from '../portal';\r\nimport { scheduleCallback, shouldYeildToHost } from '../scheduler';\r\nlet isInjected = false;\r\nconst roots = new Map();\r\nfunction inject() {\r\n  platform.createNativeElement = createNativeElement;\r\n  platform.requestAnimationFrame = requestAnimationFrame.bind(this);\r\n  platform.cancelAnimationFrame = cancelAnimationFrame.bind(this);\r\n  platform.scheduleCallback = scheduleCallback;\r\n  platform.shouldYeildToHost = shouldYeildToHost;\r\n  platform.applyCommit = applyCommit;\r\n  platform.finishCommitWork = finishCommitWork;\r\n  platform.detectIsDynamic = () => true;\r\n  platform.detectIsPortal = detectIsPortal;\r\n  platform.unmountPortal = unmountPortal;\r\n  platform.restart = () => {};\r\n  isInjected = true;\r\n}\r\nfunction render(element, container, hydrate = false) {\r\n  !isInjected && inject();\r\n  if (!(container instanceof Element)) {\r\n    throw new Error(`[Dark]: render receives only Element as container!`);\r\n  }\r\n  const isMounted = !detectIsUndefined(roots.get(container));\r\n  let rootId = null;\r\n  if (!isMounted) {\r\n    rootId = roots.size;\r\n    roots.set(container, rootId);\r\n    if (!hydrate) {\r\n      container.innerHTML = '';\r\n    }\r\n  } else {\r\n    rootId = roots.get(container);\r\n  }\r\n  if (isInsertionEffectsZone.get(rootId)) return;\r\n  const callback = () => {\r\n    rootStore.set(rootId);\r\n    const currentRoot = currentRootStore.get();\r\n    const isUpdate = Boolean(currentRoot);\r\n    const fiber = new Fiber().mutate({\r\n      nativeElement: container,\r\n      instance: new TagVirtualNode(ROOT, {}, flatten([element || createReplacer()])),\r\n      alternate: currentRoot,\r\n      effectTag: isUpdate ? EffectTag.UPDATE : EffectTag.CREATE,\r\n    });\r\n    fiberMountStore.reset();\r\n    wipRootStore.set(fiber);\r\n    isHydrateZone.set(hydrate);\r\n    nextUnitOfWorkStore.set(fiber);\r\n  };\r\n  platform.scheduleCallback(callback, {\r\n    priority: TaskPriority.NORMAL,\r\n    forceSync: hydrate || isLayoutEffectsZone.get(),\r\n  });\r\n}\r\nexport { render, roots };\r\n//# sourceMappingURL=render.js.map\r\n","import {\r\n  h,\r\n  View,\r\n  Text,\r\n  Fragment,\r\n  createComponent,\r\n  memo,\r\n  useCallback,\r\n  SplitUpdate,\r\n  useSplitUpdate,\r\n} from '@dark-engine/core';\r\nimport { createRoot, setTrackUpdate } from '@dark-engine/platform-browser';\r\n\r\nconst div = (props = {}) => View({ ...props, as: 'div' });\r\nconst button = (props = {}) => View({ ...props, as: 'button' });\r\n\r\nconst createMeasurer = () => {\r\n  let startTime;\r\n  let lastMeasureName: string;\r\n  const start = (name: string) => {\r\n    startTime = performance.now();\r\n    lastMeasureName = name;\r\n  };\r\n  const stop = () => {\r\n    const last = lastMeasureName;\r\n\r\n    if (lastMeasureName) {\r\n      setTimeout(() => {\r\n        lastMeasureName = null;\r\n        const stopTime = performance.now();\r\n        const diff = stopTime - startTime;\r\n\r\n        console.log(`${last}: ${diff}`);\r\n      });\r\n    }\r\n  };\r\n\r\n  return {\r\n    start,\r\n    stop,\r\n  };\r\n};\r\n\r\nconst measurer = createMeasurer();\r\n\r\nlet nextId = 0;\r\nconst buildData = (count, prefix = '') => {\r\n  return Array(count)\r\n    .fill(0)\r\n    .map(() => ({\r\n      id: ++nextId,\r\n      name: `item: ${nextId} ${prefix}`,\r\n      selected: false,\r\n    }));\r\n};\r\n\r\ntype ListItem = { id: number; name: string; selected: boolean };\r\n\r\ntype List = Array<ListItem>;\r\n\r\ntype State = {\r\n  list: List;\r\n};\r\n\r\nconst state: State = {\r\n  list: [],\r\n};\r\n\r\ntype HeaderProps = {\r\n  onCreate: () => void;\r\n  onPrepend: () => void;\r\n  onAppend: () => void;\r\n  onInsertDifferent: () => void;\r\n  onUpdateAll: () => void;\r\n  onSwap: () => void;\r\n  onClear: () => void;\r\n};\r\n\r\nconst Header = createComponent<HeaderProps>(\r\n  ({ onCreate, onPrepend, onAppend, onInsertDifferent, onUpdateAll, onSwap, onClear }) => {\r\n    return div({\r\n      style:\r\n        'width: 100%; height: 64px; background-color: blueviolet; display: flex; align-items: center; padding: 16px;',\r\n      slot: [\r\n        button({\r\n          slot: Text('create 10 rows'),\r\n          onClick: onCreate,\r\n        }),\r\n        button({\r\n          slot: Text('Prepend 2 rows'),\r\n          onClick: onPrepend,\r\n        }),\r\n        button({\r\n          slot: Text('Append 2 rows'),\r\n          onClick: onAppend,\r\n        }),\r\n        button({\r\n          slot: Text('insert different'),\r\n          onClick: onInsertDifferent,\r\n        }),\r\n        button({\r\n          slot: Text('update every 5th row'),\r\n          onClick: onUpdateAll,\r\n        }),\r\n        button({\r\n          slot: Text('swap rows'),\r\n          onClick: onSwap,\r\n        }),\r\n        button({\r\n          slot: Text('clear rows'),\r\n          onClick: onClear,\r\n        }),\r\n        button({\r\n          slot: Text('unmount app'),\r\n          onClick: () => {\r\n            root.unmount();\r\n          },\r\n        }),\r\n      ],\r\n    });\r\n  },\r\n);\r\n\r\nconst MemoHeader = memo<HeaderProps>(Header);\r\n\r\ntype RowProps = {\r\n  id: number;\r\n  onRemove: (id: number) => void;\r\n  onHighlight: (id: number) => void;\r\n};\r\n\r\nconst Row = createComponent<RowProps>(({ id, onRemove, onHighlight }) => {\r\n  const { name, selected } = useSplitUpdate<ListItem>(\r\n    map => map[id],\r\n    x => `${x.name}:${x.selected}`,\r\n  );\r\n  const handleRemove = useCallback(() => onRemove(id), []);\r\n  const handleHighlight = useCallback(() => onHighlight(id), []);\r\n\r\n  return (\r\n    <tr class={selected ? 'selected' : undefined}>\r\n      <td class='cell'>{name}</td>\r\n      <td class='cell'>qqq</td>\r\n      <td class='cell'>xxx</td>\r\n      <td class='cell'>\r\n        <button onClick={handleRemove}>remove</button>\r\n        <button onClick={handleHighlight}>highlight</button>\r\n      </td>\r\n    </tr>\r\n  );\r\n});\r\n\r\nconst MemoRow = memo<RowProps>(Row);\r\n\r\ntype ListProps = {\r\n  items: List;\r\n  onRemove: (id: number) => void;\r\n  onHighlight: (id: number) => void;\r\n};\r\n\r\nconst List = createComponent<ListProps>(({ items, onRemove, onHighlight }) => {\r\n  return (\r\n    <table class='table'>\r\n      <tbody>\r\n        {items.map(item => {\r\n          return (\r\n            <MemoRow\r\n              key={item.id}\r\n              id={item.id}\r\n              onRemove={onRemove}\r\n              onHighlight={onHighlight}\r\n            />\r\n          );\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n});\r\n\r\nconst MemoList = memo(List);\r\n\r\nconst Bench = createComponent(() => {\r\n  const handleCreate = useCallback(() => {\r\n    state.list = buildData(10);\r\n    measurer.start('create');\r\n    forceUpdate();\r\n    measurer.stop();\r\n  }, []);\r\n  const handlePrepend = useCallback(() => {\r\n    state.list.unshift(...buildData(2, '!!!'));\r\n    state.list = [...state.list];\r\n    measurer.start('prepend');\r\n    forceUpdate();\r\n    measurer.stop();\r\n  }, []);\r\n  const handleAppend = useCallback(() => {\r\n    state.list.push(...buildData(2, '!!!'));\r\n    state.list = [...state.list];\r\n    measurer.start('append');\r\n    forceUpdate();\r\n    measurer.stop();\r\n  }, []);\r\n  const handleInsertDifferent = useCallback(() => {\r\n    const [item1, item2, item3, ...rest] = state.list;\r\n\r\n    state.list = [...buildData(5, '***'), item1, item2, item3, ...buildData(2, '***'), ...rest].filter(Boolean);\r\n    measurer.start('insert different');\r\n    forceUpdate();\r\n    measurer.stop();\r\n  }, []);\r\n  const handleUpdateAll = useCallback(() => {\r\n    state.list = state.list.map((x, idx) => ({ ...x, name: (idx + 1) % 5 === 0 ? x.name + '!!!' : x.name }));\r\n    measurer.start('update every 5th');\r\n    forceUpdate();\r\n    measurer.stop();\r\n  }, []);\r\n  const handleRemove = useCallback(id => {\r\n    state.list = state.list.filter(x => x.id !== id);\r\n    measurer.start('remove');\r\n    forceUpdate();\r\n    measurer.stop();\r\n  }, []);\r\n  const handleHightlight = useCallback(id => {\r\n    const idx = state.list.findIndex(x => x.id === id);\r\n    state.list[idx].selected = !state.list[idx].selected;\r\n    state.list = [...state.list];\r\n    measurer.start('highlight');\r\n    forceUpdate();\r\n    measurer.stop();\r\n  }, []);\r\n  const handleSwap = useCallback(() => {\r\n    if (state.list.length === 0) return;\r\n    const temp = state.list[1];\r\n    state.list[1] = state.list[state.list.length - 2];\r\n    state.list[state.list.length - 2] = temp;\r\n    state.list = [...state.list];\r\n    measurer.start('swap');\r\n    forceUpdate();\r\n    measurer.stop();\r\n  }, []);\r\n  const handleClear = useCallback(() => {\r\n    state.list = [];\r\n    measurer.start('clear');\r\n    forceUpdate();\r\n    measurer.stop();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <MemoHeader\r\n        onCreate={handleCreate}\r\n        onPrepend={handlePrepend}\r\n        onAppend={handleAppend}\r\n        onInsertDifferent={handleInsertDifferent}\r\n        onUpdateAll={handleUpdateAll}\r\n        onSwap={handleSwap}\r\n        onClear={handleClear}\r\n      />\r\n      <SplitUpdate list={state.list} getKey={getKey}>\r\n        <MemoList items={state.list} onRemove={handleRemove} onHighlight={handleHightlight} />\r\n      </SplitUpdate>\r\n    </>\r\n  );\r\n});\r\n\r\nconst getKey = (x: ListItem) => x.id;\r\n\r\nconst root = createRoot(document.getElementById('root'));\r\n\r\nfunction forceUpdate() {\r\n  root.render(<Bench />);\r\n}\r\n\r\nsetTrackUpdate((node: Element) => {\r\n  if (!node.tagName) return;\r\n  requestAnimationFrame(() => {\r\n    node.classList.add('updated-node');\r\n\r\n    setTimeout(() => {\r\n      node.classList.remove('updated-node');\r\n    }, 300);\r\n  });\r\n});\r\n\r\nforceUpdate();\r\n","import { unmountRoot } from '@dark-engine/core';\r\nimport { render, roots } from '../render';\r\nfunction createRoot(container) {\r\n  return {\r\n    render: element => render(element, container),\r\n    unmount: () => unmount(container),\r\n  };\r\n}\r\nfunction unmount(container) {\r\n  const rootId = roots.get(container);\r\n  unmountRoot(rootId, () => {\r\n    roots.delete(container);\r\n    container.innerHTML = '';\r\n  });\r\n}\r\nexport { createRoot, unmount };\r\n//# sourceMappingURL=create-root.js.map\r\n"],"names":["TYPE","ATTR_KEY","ATTR_REF","ATTR_FLAG","TaskPriority","Flag","detectIsFunction","o","detectIsUndefined","detectIsNumber","detectIsString","detectIsBoolean","detectIsArray","Array","isArray","detectIsNull","detectIsEmpty","getTime","Date","now","dummyFn","flatten","source","list","levelMap","idx","level","item","length","push","keyBy","fn","value","reduce","acc","x","detectIsDepsDifferent","deps","prevDeps","i","NodeType","$$virtualNode","Symbol","VirtualNode","type","constructor","this","TagVirtualNode","name","attrs","children","super","TAG","TextVirtualNode","text","TEXT","CommentVirtualNode","COMMENT","detectIsVirtualNode","vNode","detectIsTagVirtualNode","detectIsTextVirtualNode","detectIsVirtualNodeFactory","factory","createReplacer","View","def","as","slot","_void","key","flag","from","defaultOptions","displayName","defaultProps","token","ComponentFactory","props","ref","shouldUpdate","createComponent","options","computedOptions","mprops","detectIsComponentFactory","$$memo","defaultShouldUpdate","nextProps","keys","Object","detectIsMemo","memo","component","rest","forwardRef","rootId","stores","Map","Store","wipRoot","currentRoot","nextUnitOfWork","events","unsubscribers","deletions","Set","fiberMount","navigation","isDeepWalking","componentFiber","effects","layoutEffects","insertionEffects","isLayoutEffectsZone","isInserionEffectsZone","isUpdateHookZone","isBatchZone","isHydrateZone","lazy","rootStore","id","get","set","getRootId","store","wipRootStore","fiber","currentRootStore","nextUnitOfWorkStore","currentFiberStore","deletionsStore","add","fiberMountStore","effectsStore","reset","effect","layoutEffectsStore","insertionEffectsStore","isInsertionEffectsZone","$$useEffect","useEffect","hasEffects","dropEffects","createEffect","hook","values","runEffect","undefined","cleanup","some","$$fragment","Fragment","Memo","processValue","getValue","isDepsDifferent","check","wrap","useMemo","hookValue","computedGetValue","platform","createNativeElement","Error","msg","requestAnimationFrame","cancelAnimationFrame","scheduleCallback","shouldYeildToHost","applyCommit","finishCommitWork","detectIsDynamic","detectIsPortal","unmountPortal","restart","EffectTag","$$useLayoutEffect","useLayoutEffect","hasLayoutEffects","dropLayoutEffects","$$useInsertionEffect","useInsertionEffect","hasInsertionEffects","dropInsertionEffects","walkFiber","onLoop","nextFiber","isReturn","isStopped","visitedMap","detectCanVisit","resetIsDeepWalking","stop","child","newFiber","nextSibling","parent","unmountFiber","insertionEffectHost","layoutEffectHost","effectHost","portalHost","instance","cloneTagMap","CREATE","Fiber","nativeElement","alternate","move","effectTag","provider","childrenCount","childrenElementsCount","marker","isUsed","elementIdx","batched","catchException","static","nextId","mutate","markEffectHost","markLayoutEffectHost","markInsertionEffectHost","markPortalHost","incrementChildrenElementsCount","count","force","fromUpdate","wipFiber","setError","error","workLoop","shouldYield","hasMoreWork","Boolean","performUnitOfWork","size","flush","isDynamic","onComplete","forEach","diff","parentFiber","getParentFiberWithNativeElement","isRight","syncElementIndices","setTimeout","skip","SKIP","commitChanges","hasChildrenProp","fiber$","instance$","performChild","fiber$$","performSibling","nextLevel","getHook","pertformInstance","performAlternate","performFiber","performMemo","parentInstance","childrenIdx","isUpdate","hasAlternate","isSameKeys","getElementKey","getInstanceType","UPDATE","insertToFiber","DELETE","createConditionalFiber","alternateType","isSameType","getVirtualNodeFactoryFlag","getElementFlag","hasNoMovesFlag","HAS_NO_MOVES","prevKeys","nextKeys","prevKeysMap","nextKeysMap","keyedFibersMap","prevKey","createIndexKey","nextKey","extractKeys","result","Math","max","p","n","prevKeyFiber","nextKeyFiber","canAddToDeletions","prevFactory","nextFactory","prevProps","deep","elements","splice","mountInstance","isComponentFactory","detectIsFragment","err","args","console","supportConditional","getVirtualNodeFactoryKey","element","prevInstance","nextInstance","detectIsSameComponentFactoryTypesWithSameKeys","useUpdate","scope","onStart","callback","forceStart","createUpdateCallback","timeoutMs","forceSync","clearTimeout","useContext","context","defaultValue","getProvider","update","hasProvider","unsubscribe","subscribe","is","useCallback","SplitUpdate","getKey","subscribers","map","canSplit","subscriber","delete","contextValue","SplitUpdateContext","Provider","SplitUpdateGuard","_","Consumer","providerValue","createProvider","createConsumer","createContext","getChildren","toString","createElement","tag","$$portal","innerHTML","getPortalContainer","container","SyntheticEvent","sourceEvent","target","propagation","stopPropagation","preventDefault","getPropagation","delegateEvent","eventName","handler","eventsMap","handlerMap","rootHandler","event","fireEvent","syntheticEvent","parentElement","dispatchEvent","WeakMap","document","addEventListener","removeEventListener","detectIsEvent","attrName","startsWith","getEventName","slice","toLowerCase","attrBlackListMap","fragmentsMap","moves","trackUpdate","svgTagNamesMap","split","voidTagNamesMap","createNativeElementMap","tagNode","tagName","createElementNS","textNode","createTextNode","commentNode","createComment","current","mutableRef","hasOwnProperty","detectIsMutableRef","applyRef","patchProperties","attrValue","patchPropertiesSpecialCasesMap","prototype","getPrototypeOf","getOwnPropertyDescriptor","includes","input","checked","autofocus","textarea","String","applyCommitMap","childNodes","Text","splitText","fragment","createDocumentFragment","appendChild","append","insertBefore","insert","attrNames","tagElement","setAttribute","addAttributes","commitCreation","sourceNodes","collectElements","sourceFragment","DocumentFragment","node","removeChild","replaceChild","textContent","nextVNode","prevAttrValue","nextAttrValue","removeAttribute","updateAttributes","commitUpdate","commitDeletion","queueByPriority","animations","hight","normal","low1","low2","scheduledCallback","deadline","isMessageLoopRunning","currentTask","Task","time","priority","nextTaskId","NORMAL","task","ANIMATION","HIGH","LOW","executeTasks","pick","queue","shift","isAnimation","requestCallbackSync","port","postMessage","checkOverdueTasks","requestIdleCallback","channel","MessageChannel","port2","port1","onmessage","isInjected","roots","measurer","startTime","lastMeasureName","start","performance","last","log","createMeasurer","buildData","prefix","fill","selected","state","MemoHeader","onCreate","onPrepend","onAppend","onInsertDifferent","onUpdateAll","onSwap","onClear","div","style","onClick","root","unmount","MemoRow","onRemove","onHighlight","selector","detectChange","detectedChange","useSplitUpdate","handleRemove","handleHighlight","class","MemoList","items","Bench","handleCreate","forceUpdate","handlePrepend","unshift","handleAppend","handleInsertDifferent","item1","item2","item3","filter","handleUpdateAll","handleHightlight","findIndex","handleSwap","temp","handleClear","getElementById","render","hydrate","bind","inject","Element","isMounted","unmountRoot","classList","remove"],"sourceRoot":""}